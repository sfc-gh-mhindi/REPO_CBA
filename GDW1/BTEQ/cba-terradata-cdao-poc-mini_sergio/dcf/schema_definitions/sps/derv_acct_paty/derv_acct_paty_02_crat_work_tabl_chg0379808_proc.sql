CREATE OR REPLACE PROCEDURE PS_GDW1_BTEQ.BTEQ_SPS.DERV_ACCT_PATY_02_CRAT_WORK_TABL_CHG0379808_PROC()
RETURNS STRING
LANGUAGE SQL
EXECUTE AS CALLER
AS
$$
DECLARE
  error_code INTEGER DEFAULT 0;
  row_count INTEGER DEFAULT 0;
  table_count INTEGER DEFAULT 0;
BEGIN
  -- DERV_ACCT_PATY_02_CRAT_WORK_TABL.sql
  -- Create work/staging tables for DERV_ACCT_PATY stream
  -- Original Author: Helen Zak
  -- Version: 1.6 (C2039845)
  
  -- Drop all work tables (ignore errors if tables don't exist)
  
  -- 1. Drop ACCT_PATY_REL_THA
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.ACCT_PATY_REL_THA;
  EXCEPTION
    WHEN OTHER THEN
      NULL; -- Ignore drop errors
  END;
  
  -- 2. Drop ACCT_PATY_THA_NEW_RNGE
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.ACCT_PATY_THA_NEW_RNGE;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 3. Drop DERV_ACCT_PATY_CURR
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_CURR;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 4. Drop DERV_PRTF_ACCT_STAG
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_STAG;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 5. Drop DERV_PRTF_PATY_STAG
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_PRTF_PATY_STAG;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 6. Drop DERV_PRTF_ACCT_PATY_STAG
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_PATY_STAG;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 7. Drop DERV_ACCT_PATY_RM
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_RM;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 8. Drop DERV_ACCT_PATY_ADD
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_ADD;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 9. Drop DERV_ACCT_PATY_CHG
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_CHG;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 10. Drop DERV_ACCT_PATY_FLAG
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_FLAG;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 11. Drop ACCT_PATY_REL_WSS
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.ACCT_PATY_REL_WSS;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 12. Drop ACCT_REL_WSS_DITPS
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.ACCT_REL_WSS_DITPS;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 13. Drop GRD_GNRC_MAP_DERV_PATY_HOLD
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLD;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 14. Drop GRD_GNRC_MAP_DERV_UNID_PATY
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATY;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 15. Drop GRD_GNRC_MAP_DERV_PATY_REL
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_REL;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 16. Drop DERV_ACCT_PATY_DEL
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_DEL;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 17. Drop ACCT_PATY_DEDUP
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.ACCT_PATY_DEDUP;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 18. Drop DERV_PRTF_ACCT_PATY_PSST
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_PATY_PSST;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 19. Drop DERV_ACCT_PATY_NON_RM
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_NON_RM;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- 20. Drop DERV_ACCT_PATY_ROW_SECU_FIX
  BEGIN
    DROP ICEBERG TABLE IF EXISTS PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_ROW_SECU_FIX;
  EXCEPTION
    WHEN OTHER THEN
      NULL;
  END;
  
  -- Create new staging tables
  
  -- 1. Create ACCT_PATY_THA_NEW_RNGE
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.ACCT_PATY_THA_NEW_RNGE (
    THA_ACCT_I STRING NOT NULL,
    TRAD_ACCT_I STRING NOT NULL,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    NEW_EXPY_D DATE
  );
  
  -- 2. Create ACCT_PATY_REL_THA
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.ACCT_PATY_REL_THA (
    THA_ACCT_I STRING NOT NULL,
    TRAD_ACCT_I STRING NOT NULL,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL
  );
  
  -- 3. Create DERV_ACCT_PATY_CURR
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_CURR (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 4. Create DERV_PRTF_ACCT_STAG
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_STAG (
    ACCT_I STRING,
    PRTF_CODE_X STRING
  );
  
  -- 5. Create DERV_PRTF_PATY_STAG
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_PRTF_PATY_STAG (
    PATY_I STRING,
    PRTF_CODE_X STRING
  );
  
  -- 6. Create DERV_PRTF_ACCT_PATY_STAG
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_PATY_STAG (
    ACCT_I STRING,
    PATY_I STRING,
    ACCT_PRTF_C STRING,
    PATY_PRTF_C STRING,
    PATY_ACCT_REL_C STRING,
    RANK_I INTEGER
  );
  
  -- 7. Create DERV_ACCT_PATY_RM
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_RM (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 8. Create DERV_ACCT_PATY_NON_RM
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_NON_RM (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER,
    RANK_I INTEGER
  );
  
  -- 9. Create DERV_ACCT_PATY_FLAG
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_FLAG (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 10. Create DERV_ACCT_PATY_ADD
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_ADD (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 11. Create DERV_ACCT_PATY_CHG
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_CHG (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 12. Create DERV_ACCT_PATY_DEL
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_DEL (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 13. Create ACCT_REL_WSS_DITPS
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.ACCT_REL_WSS_DITPS (
    ACCT_I STRING NOT NULL
  );
  
  -- 14. Create ACCT_PATY_DEDUP  
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.ACCT_PATY_DEDUP (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- 15. Create GRD_GNRC_MAP_DERV_PATY_HOLD
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLD (
    MAP_TYPE_C STRING NOT NULL,
    PATY_ACCT_REL_C STRING,
    PATY_ACCT_REL_X STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL
  );
  
  -- 16. Create GRD_GNRC_MAP_DERV_UNID_PATY
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATY (
    MAP_TYPE_C STRING NOT NULL,
    SRCE_SYST_C STRING,
    UNID_PATY_SRCE_SYST_C STRING,
    UNID_PATY_ACCT_REL_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL
  );
  
  -- 17. Create GRD_GNRC_MAP_DERV_PATY_REL
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_REL (
    MAP_TYPE_C STRING NOT NULL,
    SRCE_SYST_C STRING,
    REL_C STRING,
    ACCT_I_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL
  );
  
  -- 18. Create DERV_PRTF_ACCT_PATY_PSST
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_PRTF_ACCT_PATY_PSST (
    ACCT_I STRING,
    PATY_I STRING,
    ACCT_PRTF_C STRING,
    PATY_PRTF_C STRING,
    PATY_ACCT_REL_C STRING,
    RANK_I INTEGER
  );
  
  -- 19. Create DERV_ACCT_PATY_ROW_SECU_FIX
  CREATE ICEBERG TABLE PS_CLD_RW.PDDSTG.DERV_ACCT_PATY_ROW_SECU_FIX (
    ACCT_I STRING NOT NULL,
    PATY_I STRING NOT NULL,
    ASSC_ACCT_I STRING NOT NULL,
    PATY_ACCT_REL_C STRING NOT NULL,
    PRFR_PATY_F STRING,
    SRCE_SYST_C STRING,
    EFFT_D DATE NOT NULL,
    EXPY_D DATE NOT NULL,
    ROW_SECU_ACCS_C INTEGER
  );
  
  -- Populate reference data tables (from VTECH schema)
  
  -- Populate GRD_GNRC_MAP_DERV_PATY_HOLD
  BEGIN
    INSERT INTO PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLD
    SELECT MAP_TYPE_C,
           PATY_ACCT_REL_C,
           PATY_ACCT_REL_X,
           EFFT_D,
           EXPY_D
    FROM ps_gdw1_bteq.PVTECH.GRD_GNRC_MAP_DERV_PATY_HOLD;
    
    row_count := SQLROWCOUNT;
    table_count := table_count + 1;
  EXCEPTION
    WHEN OTHER THEN
      error_code := SQLCODE;
      RETURN 'ERROR: Failed to populate GRD_GNRC_MAP_DERV_PATY_HOLD - ' || SQLERRM;
  END;
  
  -- Populate GRD_GNRC_MAP_DERV_UNID_PATY
  BEGIN
    INSERT INTO PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATY
    SELECT MAP_TYPE_C,
           SRCE_SYST_C,
           UNID_PATY_SRCE_SYST_C,
           UNID_PATY_ACCT_REL_C,
           EFFT_D,
           EXPY_D
    FROM ps_gdw1_bteq.PVTECH.GRD_GNRC_MAP_DERV_UNID_PATY;
    
    row_count := SQLROWCOUNT;
    table_count := table_count + 1;
  EXCEPTION
    WHEN OTHER THEN
      error_code := SQLCODE;
      RETURN 'ERROR: Failed to populate GRD_GNRC_MAP_DERV_UNID_PATY - ' || SQLERRM;
  END;
  
  -- Populate GRD_GNRC_MAP_DERV_PATY_REL
  BEGIN
    INSERT INTO PS_CLD_RW.PDDSTG.GRD_GNRC_MAP_DERV_PATY_REL
    SELECT MAP_TYPE_C,
           SRCE_SYST_C,
           REL_C,
           ACCT_I_C,
           EFFT_D,
           EXPY_D
    FROM ps_gdw1_bteq.PVTECH.GRD_GNRC_MAP_DERV_PATY_REL;
    
    row_count := SQLROWCOUNT;
    table_count := table_count + 1;
  EXCEPTION
    WHEN OTHER THEN
      error_code := SQLCODE;
      RETURN 'ERROR: Failed to populate GRD_GNRC_MAP_DERV_PATY_REL - ' || SQLERRM;
  END;
  
  -- Success completion
  RETURN 'SUCCESS: Work tables created and populated. Tables created: ' || table_count::STRING;
  
EXCEPTION
  WHEN OTHER THEN
    error_code := SQLCODE;
    RETURN 'FATAL ERROR: ' || SQLERRM || ' (Code: ' || error_code::STRING || ')';
END;
$$;