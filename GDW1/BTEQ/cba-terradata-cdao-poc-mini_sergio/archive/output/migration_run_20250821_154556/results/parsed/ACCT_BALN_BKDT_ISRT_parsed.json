{
  "sql_blocks": [
    {
      "sql": "INSERT INTO %%CAD_PROD_DATA%%.ACCT_BALN_BKDT\n(\nACCT_I,                        \nBALN_TYPE_C,                   \nCALC_FUNC_C,                   \nTIME_PERD_C,                   \nBALN_A,                        \nCALC_F,                        \nSRCE_SYST_C,                   \nORIG_SRCE_SYST_C,              \nLOAD_D,                        \nBKDT_EFFT_D,                   \nBKDT_EXPY_D,                  \nPROS_KEY_EFFT_I,               \nPROS_KEY_EXPY_I,               \nBKDT_PROS_KEY_I\n)\nSELECT \nACCT_I,                        \nBALN_TYPE_C,                   \nCALC_FUNC_C,                   \nTIME_PERD_C,                   \nBALN_A,                        \nCALC_F,                        \nSRCE_SYST_C,                   \nORIG_SRCE_SYST_C,              \nLOAD_D,                        \nBKDT_EFFT_D,                   \nBKDT_EXPY_D,                  \nPROS_KEY_EFFT_I,               \nPROS_KEY_EXPY_I,               \nBKDT_PROS_KEY_I\nFROM\nPDDSTG.ACCT_BALN_BKDT_STG2;",
      "start_line": 23,
      "end_line": 57,
      "snowflake_sql": "INSERT INTO %%CAD_PROD_DATA%%.ACCT_BALN_BKDT (ACCT_I, BALN_TYPE_C, CALC_FUNC_C, TIME_PERD_C, BALN_A, CALC_F, SRCE_SYST_C, ORIG_SRCE_SYST_C, LOAD_D, BKDT_EFFT_D, BKDT_EXPY_D, PROS_KEY_EFFT_I, PROS_KEY_EXPY_I, BKDT_PROS_KEY_I) SELECT ACCT_I, BALN_TYPE_C, CALC_FUNC_C, TIME_PERD_C, BALN_A, CALC_F, SRCE_SYST_C, ORIG_SRCE_SYST_C, LOAD_D, BKDT_EFFT_D, BKDT_EXPY_D, PROS_KEY_EFFT_I, PROS_KEY_EXPY_I, BKDT_PROS_KEY_I FROM PDDSTG.ACCT_BALN_BKDT_STG2",
      "error": null,
      "metadata": {
        "tables": [
          "ACCT_BALN_BKDT_STG2",
          "ACCT_BALN_BKDT"
        ],
        "columns": [
          "BKDT_PROS_KEY_I",
          "BKDT_EFFT_D",
          "TIME_PERD_C",
          "CALC_FUNC_C",
          "LOAD_D",
          "PROS_KEY_EXPY_I",
          "ACCT_I",
          "CALC_F",
          "PROS_KEY_EFFT_I",
          "BALN_TYPE_C",
          "BKDT_EXPY_D",
          "SRCE_SYST_C",
          "BALN_A",
          "ORIG_SRCE_SYST_C"
        ],
        "functions": [],
        "window_functions": []
      },
      "complexity_metrics": {
        "total_nodes": 52,
        "select_count": 1,
        "join_count": 0,
        "subquery_count": 0,
        "where_conditions": 0,
        "case_statements": 0,
        "window_functions": 0,
        "aggregate_functions": 0
      },
      "teradata_features": [
        "Variable substitution"
      ],
      "syntax_validation": {
        "valid": true,
        "error": null,
        "ast_type": "Insert"
      },
      "optimized_sql": "INSERT INTO \"%%cad_prod_data%%\".\"acct_baln_bkdt\" (\n  \"acct_i\",\n  \"baln_type_c\",\n  \"calc_func_c\",\n  \"time_perd_c\",\n  \"baln_a\",\n  \"calc_f\",\n  \"srce_syst_c\",\n  \"orig_srce_syst_c\",\n  \"load_d\",\n  \"bkdt_efft_d\",\n  \"bkdt_expy_d\",\n  \"pros_key_efft_i\",\n  \"pros_key_expy_i\",\n  \"bkdt_pros_key_i\"\n)\nSELECT\n  \"acct_baln_bkdt_stg2\".\"acct_i\" AS \"acct_i\",\n  \"acct_baln_bkdt_stg2\".\"baln_type_c\" AS \"baln_type_c\",\n  \"acct_baln_bkdt_stg2\".\"calc_func_c\" AS \"calc_func_c\",\n  \"acct_baln_bkdt_stg2\".\"time_perd_c\" AS \"time_perd_c\",\n  \"acct_baln_bkdt_stg2\".\"baln_a\" AS \"baln_a\",\n  \"acct_baln_bkdt_stg2\".\"calc_f\" AS \"calc_f\",\n  \"acct_baln_bkdt_stg2\".\"srce_syst_c\" AS \"srce_syst_c\",\n  \"acct_baln_bkdt_stg2\".\"orig_srce_syst_c\" AS \"orig_srce_syst_c\",\n  \"acct_baln_bkdt_stg2\".\"load_d\" AS \"load_d\",\n  \"acct_baln_bkdt_stg2\".\"bkdt_efft_d\" AS \"bkdt_efft_d\",\n  \"acct_baln_bkdt_stg2\".\"bkdt_expy_d\" AS \"bkdt_expy_d\",\n  \"acct_baln_bkdt_stg2\".\"pros_key_efft_i\" AS \"pros_key_efft_i\",\n  \"acct_baln_bkdt_stg2\".\"pros_key_expy_i\" AS \"pros_key_expy_i\",\n  \"acct_baln_bkdt_stg2\".\"bkdt_pros_key_i\" AS \"bkdt_pros_key_i\"\nFROM \"pddstg\".\"acct_baln_bkdt_stg2\" AS \"acct_baln_bkdt_stg2\""
    }
  ],
  "controls": [
    {
      "type": "RUN",
      "raw": ".RUN FILE=%%BTEQ_LOGON_SCRIPT%%",
      "args": null,
      "line_no": 1
    },
    {
      "type": "IF_ERRORCODE",
      "raw": ".IF ERRORCODE <> 0 THEN .GOTO EXITERR",
      "args": null,
      "line_no": 2
    },
    {
      "type": "IF_ERRORCODE",
      "raw": ".IF ERRORCODE <> 0 THEN .GOTO EXITERR",
      "args": null,
      "line_no": 58
    },
    {
      "type": "LOGOFF",
      "raw": ".LOGOFF",
      "args": null,
      "line_no": 61
    },
    {
      "type": "LABEL",
      "raw": ".LABEL EXITERR",
      "args": null,
      "line_no": 64
    },
    {
      "type": "LOGOFF",
      "raw": ".LOGOFF",
      "args": null,
      "line_no": 66
    }
  ],
  "errors": []
}