# LLM Response
Interaction ID: 20250821_154833_7a792fbb
Success: True
Processing Time: 22985ms
Quality Score: None

# Response
```sql
{%- set process_name = 'ACCT_BALN_BKDT_RECN' -%}
{%- set stream_name = 'ACCT_BALN_BKDT_RECN_STREAM' -%}

{{
  config(
    materialized='table',
    database=var('target_database'),
    schema='target_schema',
    tags=['reconciliation', 'account_balance'],
    pre_hook=[
        "{{ log_dcf_exec_msg('Reconciliation process started') }}"
    ],
    post_hook=[
        "{{ log_dcf_exec_msg('Reconciliation process ended') }}"
    ]
  )
}}

/*
    Model Documentation
    Purpose: Reconciliation process for account balances
    Business Logic: Reconciles account balances by applying adjustments
    Dependencies: ACCT_BALN_BKDT_STG2, ACCT_BALN, ACCT_BALN_BKDT
*/

WITH qualifying_records AS (
    SELECT 
        B.ACCT_I,
        B.BALN_A
    FROM 
        {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
    INNER JOIN 
        {{ source('vtech', 'ACCT_BALN') }} B
    ON 
        A.ACCT_I = B.ACCT_I
    WHERE 
        B.BALN_TYPE_C = 'BALN'
        AND B.CALC_FUNC_C = 'SPOT'
        AND B.TIME_PERD_C = 'E'
        AND CURRENT_DATE BETWEEN B.EFFT_D AND B.EXPY_D
),

adjusted_records AS (
    SELECT 
        STG.ACCT_I,
        CASE 
            WHEN STG.BKDT_EFFT_D > BKDT.BKDT_EFFT_D THEN STG.BALN_A 
            ELSE BKDT.BALN_A 
        END AS BALN_A
    FROM 
    (
        SELECT 
            A.ACCT_I,
            A.BKDT_EFFT_D,
            A.BKDT_EXPY_D,
            A.BALN_A
        FROM 
            {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
        WHERE 
            A.BALN_TYPE_C = 'BDCL'
            AND A.CALC_FUNC_C = 'SPOT'
            AND A.TIME_PERD_C = 'E'
            AND CURRENT_DATE BETWEEN A.BKDT_EFFT_D AND A.BKDT_EXPY_D
    ) STG
    INNER JOIN 
    (
        SELECT 
            B.ACCT_I,
            B.BKDT_EFFT_D,
            B.BKDT_EXPY_D,
            B.BALN_A
        FROM 
            {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
        INNER JOIN 
            {{ source('vtech', 'ACCT_BALN_BKDT') }} B
        ON 
            A.ACCT_I = B.ACCT_I
        WHERE 
            B.BALN_TYPE_C = 'BDCL'
            AND B.CALC_FUNC_C = 'SPOT'
            AND B.TIME_PERD_C = 'E'
            AND CURRENT_DATE BETWEEN B.BKDT_EFFT_D AND B.BKDT_EXPY_D
    ) BKDT
    ON 
        STG.ACCT_I = BKDT.ACCT_I
),

reconciled_records AS (
    SELECT 
        DT.ACCT_I,
        BAL.EFFT_D,
        BAL.EXPY_D,
        DT.BALN_A,
        NULL AS PROS_KEY_EFFT_I
    FROM 
        (
            SELECT 
                B.ACCT_I,
                B.BALN_A
            FROM 
                {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
            INNER JOIN 
                {{ source('vtech', 'ACCT_BALN') }} B
            ON 
                A.ACCT_I = B.ACCT_I
            WHERE 
                B.BALN_TYPE_C = 'BALN'
                AND B.CALC_FUNC_C = 'SPOT'
                AND B.TIME_PERD_C = 'E'
                AND CURRENT_DATE BETWEEN B.EFFT_D AND B.EXPY_D
        ) DT
    INNER JOIN 
        {{ source('vtech', 'ACCT_BALN') }} BAL
    ON 
        DT.ACCT_I = BAL.ACCT_I
    WHERE 
        BAL.BALN_TYPE_C = 'BDCL'
        AND BAL.CALC_FUNC_C = 'SPOT'
        AND BAL.TIME_PERD_C = 'E'
        AND CURRENT_DATE BETWEEN BAL.EFFT_D AND BAL.EXPY_D
    MINUS
    SELECT 
        STG.ACCT_I,
        STG.BALN_A,
        NULL AS PROS_KEY_EFFT_I
    FROM 
        adjusted_records STG
),

final_reconciled_records AS (
    SELECT 
        DT1.ACCT_I,
        STG.BKDT_EFFT_D,
        STG.BKDT_EXPY_D,
        STG.BALN_A,
        NULL AS PROS_KEY_EFFT_I
    FROM 
    (
        SELECT 
            STG.ACCT_I,
            CASE 
                WHEN STG.BKDT_EFFT_D > BKDT.BKDT_EFFT_D THEN STG.BALN_A 
                ELSE BKDT.BALN_A 
            END AS BALN_A,
            NULL AS PROS_KEY_EFFT_I
        FROM 
        (
            SELECT 
                A.ACCT_I,
                A.BKDT_EFFT_D,
                A.BKDT_EXPY_D,
                A.BALN_A
            FROM 
                {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
            WHERE 
                A.BALN_TYPE_C = 'BDCL'
                AND A.CALC_FUNC_C = 'SPOT'
                AND A.TIME_PERD_C = 'E'
                AND CURRENT_DATE BETWEEN A.BKDT_EFFT_D AND A.BKDT_EXPY_D
        ) STG
        INNER JOIN 
        (
            SELECT 
                B.ACCT_I,
                B.BKDT_EFFT_D,
                B.BKDT_EXPY_D,
                B.BALN_A
            FROM 
                {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} A
            INNER JOIN 
                {{ source('vtech', 'ACCT_BALN_BKDT') }} B
            ON 
                A.ACCT_I = B.ACCT_I
            WHERE 
                B.BALN_TYPE_C = 'BDCL'
                AND B.CALC_FUNC_C = 'SPOT'
                AND B.TIME_PERD_C = 'E'
                AND CURRENT_DATE BETWEEN B.BKDT_EFFT_D AND B.BKDT_EXPY_D
        ) BKDT
        ON 
            STG.ACCT_I = BKDT.ACCT_I
    ) DT1
    INNER JOIN 
        {{ source('ddstg', 'ACCT_BALN_BKDT_STG2') }} STG
    ON 
        DT1.ACCT_I = STG.ACCT_I
    WHERE 
        CURRENT_DATE BETWEEN STG.BKDT_EFFT_D AND STG.BKDT_EXPY_D
    MINUS
    SELECT 
        B.ACCT_I,
        B.BALN_A,
        NULL AS PROS_KEY_EFFT_I
    FROM 
        qualifying_records B
)
SELECT 
    *
FROM 
    final_reconciled_records
```