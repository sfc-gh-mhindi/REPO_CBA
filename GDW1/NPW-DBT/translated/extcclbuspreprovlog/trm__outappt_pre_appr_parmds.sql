{{ config(materialized='view', tags=['ExtCclBusPreprovLog']) }}

WITH Trm__OutAPPT_PRE_APPR_PARMDS AS (
	SELECT
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE) Then 'Y' Else  if trim(OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE = ''), 'Y', 'N')) AS svIsNullSourceCifCode,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_PREAPPR_CRG_MULTIPLIER) THEN 'Y' ELse  if trim(OutCclAppPremapDS.SEC_PREAPPR_CRG_MULTIPLIER) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_CRG_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_CRG_MULTIPLIER) = '', 'Y', 'N')) AS svIsNullSecPreapprCrgMul,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_FORM_MULTIPLER) THEN 'Y' Else  if Trim(OutCclAppPremapDS.SEC_FORM_MULTIPLER) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_FORM_MULTIPLER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_FORM_MULTIPLER) = '', 'Y', 'N')) AS svIsNullSecFormMul,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SECURED_CAP_MAX_ACCF_THRESHOLD) THEN 'Y' Else  if trim(OutCclAppPremapDS.SECURED_CAP_MAX_ACCF_THRESHOLD) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SECURED_CAP_MAX_ACCF_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SECURED_CAP_MAX_ACCF_THRESHOLD) = '', 'Y', 'N')) AS svIsNullSecuredMaxTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_CAP_MAX_THRESHOLD) THEN 'Y' Else  if trim(OutCclAppPremapDS.EF_CAP_MAX_THRESHOLD) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_CAP_MAX_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_CAP_MAX_THRESHOLD) = '', 'Y', 'N')) AS svIsNullEfMaxThsd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.TOTAL_PREAPPR_BUFFER_RATE_PCT) Then 'Y' Else  if trim(OutCclAppPremapDS.TOTAL_PREAPPR_BUFFER_RATE_PCT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPR_BUFFER_RATE_PCT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPR_BUFFER_RATE_PCT = ''), 'Y', 'N')) AS svIsNullTotalBufferRate,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPR_BUFFER_RATE_PCT) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_PREAPPR_BUFFER_RATE_PCT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_BUFFER_RATE_PCT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_BUFFER_RATE_PCT = ''), 'Y', 'N')) AS svIsNullEfBufferRate,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.TOTAL_PREAPPROVAL_AMT) Then 'Y' Else  if trim(OutCclAppPremapDS.TOTAL_PREAPPROVAL_AMT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPROVAL_AMT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPROVAL_AMT = ''), 'Y', 'N')) AS svIsNullTotPreApprovalAmt,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPROVAL_AMT) Then 'Y' ELse  if trim(OutCclAppPremapDS.EF_PREAPPROVAL_AMT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPROVAL_AMT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPROVAL_AMT = ''), 'Y', 'N')) AS svIsNullEfPreApprovalAmt,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_APP_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_APP_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_APP_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_APP_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullSecAppMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_MAA) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_MAA = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_MAA IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_MAA = ''), 'Y', 'N')) AS svIsNullSecMaa,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_MAA) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_MAA = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_MAA IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_MAA = ''), 'Y', 'N')) AS svIsNullEfMaa,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_PREAPPR_HIGHCAP_THRESHOLD) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_PREAPPR_HIGHCAP_THRESHOLD = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_HIGHCAP_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_HIGHCAP_THRESHOLD = ''), 'Y', 'N')) AS svIsNullSecHighcapTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPR_HIGHCAP_THRESHOLD) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_PREAPPR_HIGHCAP_THRESHOLD = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_HIGHCAP_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_HIGHCAP_THRESHOLD = ''), 'Y', 'N')) AS svIsNullEfHighcapTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_APP_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_APP_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_APP_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_APP_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfAppMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_FORM_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_FORM_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_FORM_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_FORM_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfFormMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_CRG_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_CRG_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_CRG_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_CRG_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfCrgMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.MOD_USER_ID) Then 'Y' Else  if trim(OutCclAppPremapDS.MOD_USER_ID = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.MOD_USER_ID IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.MOD_USER_ID = ''), 'Y', 'N')) AS svIsNullModUserId,
		-- *SRC*: 'CSECL' : OutCclAppPremapDS.PREAPPROVAL_CCL_APP_ID,
		CONCAT('CSECL', {{ ref('CpyCclAppSeq') }}.PREAPPROVAL_CCL_APP_ID) AS APPT_I,
		-- *SRC*: 'CSECL' : OutCclAppPremapDS.CCL_PREAPPROVAL_LOG_ID,
		CONCAT('CSECL', {{ ref('CpyCclAppSeq') }}.CCL_PREAPPROVAL_LOG_ID) AS APPT_PRE_APPR_PARM_I,
		{{ ref('CpyCclAppSeq') }}.CCL_PREAPPROVAL_LOG_ID AS SRCE_SYST_PRE_APPR_PARM_I,
		{{ ref('CpyCclAppSeq') }}.OVERDRAFT_INDEX_RATE_PCT AS OVDT_INDX_R,
		{{ ref('CpyCclAppSeq') }}.BUFFER_RATE_PCT AS BUFR_R,
		{{ ref('CpyCclAppSeq') }}.UNSECURED_CAP_MIN_THRESHOLD AS UNSC_CAPL_MIN_TSHD_A,
		{{ ref('CpyCclAppSeq') }}.UNSECURED_CAP_MAX_THRESHOLD AS UNSC_CAPL_MAX_TSHD_A,
		{{ ref('CpyCclAppSeq') }}.WORST_RISK_CRG AS WRST_RISK_CRGD_C,
		{{ ref('CpyCclAppSeq') }}.CRG_MULTIPLIER AS CRGD_MULT_R,
		{{ ref('CpyCclAppSeq') }}.FORM_MULTIPLIER AS FORM_MULT_R,
		{{ ref('CpyCclAppSeq') }}.APP_MULTIPLIER AS APPT_MULT_R,
		{{ ref('CpyCclAppSeq') }}.CRG_MAA AS CRGD_MIN_APLC_A,
		{{ ref('CpyCclAppSeq') }}.CRG_HIGH_CAP_THRESHOLD_AMT AS CRGD_HIGH_CAPL_TSHD_A,
		{{ ref('CpyCclAppSeq') }}.PREAPPROVAL_AMT AS PRE_APPR_A,
		-- *SRC*: StringToDate(ETL_PROCESS_DT, '%yyyy%mm%dd'),
		STRINGTODATE(ETL_PROCESS_DT, '%yyyy%mm%dd') AS EFFT_D,
		0 AS PROS_KEY_EFFT_I,
		-- *SRC*: setnull(),
		SETNULL() AS EROR_SEQN_I,
		-- *SRC*: \(20)If svIsNullSourceCifCode = 'Y' Then SetNull() Else 'CIFPT+' : STR("0", 10 - LEN(OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE)) : OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE,
		IFF(svIsNullSourceCifCode = 'Y', SETNULL(), CONCAT(CONCAT('CIFPT+', STR('0', 10 - LEN({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE))), {{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE)) AS PRE_APPR_SRCE_PATY_I,
		-- *SRC*: \(20)If svIsNullSecPreapprCrgMul = 'Y' Then SetNull() Else OutCclAppPremapDS.SEC_PREAPPR_CRG_MULTIPLIER,
		IFF(svIsNullSecPreapprCrgMul = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_CRG_MULTIPLIER) AS SCRD_CRGD_MULT_R,
		-- *SRC*: \(20)If svIsNullSecFormMul = 'Y' Then SetNull() Else OutCclAppPremapDS.SEC_FORM_MULTIPLER,
		IFF(svIsNullSecFormMul = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SEC_FORM_MULTIPLER) AS SCRD_FORM_MULT_R,
		-- *SRC*: \(20)If svIsNullSecuredMaxTshd = 'Y' Then SetNull() Else OutCclAppPremapDS.SECURED_CAP_MAX_ACCF_THRESHOLD,
		IFF(svIsNullSecuredMaxTshd = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SECURED_CAP_MAX_ACCF_THRESHOLD) AS SCRD_MAX_ACCF_TSHD_A,
		-- *SRC*: \(20)If svIsNullEfMaxThsd = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_CAP_MAX_THRESHOLD,
		IFF(svIsNullEfMaxThsd = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_CAP_MAX_THRESHOLD) AS EQIP_FNCL_MAX_TSHD_A,
		-- *SRC*: \(20)If svIsNullTotalBufferRate = 'Y' Then SetNull() Else OutCclAppPremapDS.TOTAL_PREAPPR_BUFFER_RATE_PCT,
		IFF(svIsNullTotalBufferRate = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPR_BUFFER_RATE_PCT) AS TOTL_PRE_APPR_BUFR_RATE_PERC_V,
		-- *SRC*: \(20)If svIsNullEfBufferRate = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_PREAPPR_BUFFER_RATE_PCT,
		IFF(svIsNullEfBufferRate = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_PREAPPR_BUFFER_RATE_PCT) AS EQIP_FNCL_BUFR_RATE_PERC_V,
		-- *SRC*: \(20)If svIsNullTotPreApprovalAmt = 'Y' Then SetNull() Else OutCclAppPremapDS.TOTAL_PREAPPROVAL_AMT,
		IFF(svIsNullTotPreApprovalAmt = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPROVAL_AMT) AS TOTL_SCRD_PRE_APPR_A,
		-- *SRC*: \(20)If svIsNullEfPreApprovalAmt = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_PREAPPROVAL_AMT,
		IFF(svIsNullEfPreApprovalAmt = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_PREAPPROVAL_AMT) AS EQIP_FNCL_PRE_APPR_A,
		-- *SRC*: \(20)If svIsNullSecAppMult = 'Y' Then SetNull() Else OutCclAppPremapDS.SEC_APP_MULTIPLIER,
		IFF(svIsNullSecAppMult = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SEC_APP_MULTIPLIER) AS SCRD_APPT_MULT_R,
		-- *SRC*: \(20)If svIsNullSecMaa = 'Y' Then SetNull() Else OutCclAppPremapDS.SEC_MAA,
		IFF(svIsNullSecMaa = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SEC_MAA) AS SCRD_MIN_ACPT_A,
		-- *SRC*: \(20)If svIsNullEfMaa = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_MAA,
		IFF(svIsNullEfMaa = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_MAA) AS EQIP_FNCL_MIN_ACPT_A,
		-- *SRC*: \(20)If svIsNullSecHighcapTshd = 'Y' Then SetNull() Else OutCclAppPremapDS.SEC_PREAPPR_HIGHCAP_THRESHOLD,
		IFF(svIsNullSecHighcapTshd = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_HIGHCAP_THRESHOLD) AS SCRD_CAP_MAX_TSHD_A,
		-- *SRC*: \(20)If svIsNullEfHighcapTshd = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_PREAPPR_HIGHCAP_THRESHOLD,
		IFF(svIsNullEfHighcapTshd = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_PREAPPR_HIGHCAP_THRESHOLD) AS EQIP_FNCL_CAP_MAX_TSHD_A,
		-- *SRC*: \(20)If svIsNullEfAppMult = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_APP_MULTIPLIER,
		IFF(svIsNullEfAppMult = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_APP_MULTIPLIER) AS EQIP_FNCL_APPT_MULT_R,
		-- *SRC*: \(20)If svIsNullEfFormMult = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_FORM_MULTIPLIER,
		IFF(svIsNullEfFormMult = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_FORM_MULTIPLIER) AS EQIP_FNCL_FORM_MULT_R,
		-- *SRC*: \(20)If svIsNullEfCrgMult = 'Y' Then SetNull() Else OutCclAppPremapDS.EF_CRG_MULTIPLIER,
		IFF(svIsNullEfCrgMult = 'Y', SETNULL(), {{ ref('CpyCclAppSeq') }}.EF_CRG_MULTIPLIER) AS EQIP_FNCL_CRGD_MULT_R,
		-- *SRC*: \(20)If svIsNullModUserId Then SetNull() Else 'CSEC1' : OutCclAppPremapDS.MOD_USER_ID,
		IFF(svIsNullModUserId, SETNULL(), CONCAT('CSEC1', {{ ref('CpyCclAppSeq') }}.MOD_USER_ID)) AS MODF_USER_I,
		-- *SRC*: StringToTimestamp(OutCclAppPremapDS.MOD_TIMESTAMP, "%yyyy%mm%dd%hh%nn%ss"),
		STRINGTOTIMESTAMP({{ ref('CpyCclAppSeq') }}.MOD_TIMESTAMP, '%yyyy%mm%dd%hh%nn%ss') AS MODF_S
	FROM {{ ref('CpyCclAppSeq') }}
	WHERE 
)

SELECT * FROM Trm__OutAPPT_PRE_APPR_PARMDS