{{ config(materialized='view', tags=['XfmHL_APPFrmExt']) }}

WITH XfmBusinessRules__OutTmpApptPdctDS AS (
	SELECT
		-- *SRC*: \(20)If (Len(Trim(( IF IsNotNull((InXfmBusinessRules.HL_PACKAGE_CAT_ID)) THEN (InXfmBusinessRules.HL_PACKAGE_CAT_ID) ELSE ""))) = 0) Then DEFAULT_NULL_VALUE ELSE InXfmBusinessRules.PDCT_N,
		IFF(LEN(TRIM(IFF({{ ref('ModNullHandling') }}.HL_PACKAGE_CAT_ID IS NOT NULL, {{ ref('ModNullHandling') }}.HL_PACKAGE_CAT_ID, ''))) = 0, DEFAULT_NULL_VALUE, {{ ref('ModNullHandling') }}.PDCT_N) AS svPdctN,
		-- *SRC*: \(20)If (Len(Trim(( IF IsNotNull((InXfmBusinessRules.HL_PACKAGE_CAT_ID)) THEN (InXfmBusinessRules.HL_PACKAGE_CAT_ID) ELSE ""))) = 0) Then 'N' Else 'Y',
		IFF(LEN(TRIM(IFF({{ ref('ModNullHandling') }}.HL_PACKAGE_CAT_ID IS NOT NULL, {{ ref('ModNullHandling') }}.HL_PACKAGE_CAT_ID, ''))) = 0, 'N', 'Y') AS svLoadApptPdct,
		-- *SRC*: \(20)If (Len(Trim(( IF IsNotNull((InXfmBusinessRules.LPC_OFFICE)) THEN (InXfmBusinessRules.LPC_OFFICE) ELSE ""))) = 0) Then 'N' Else 'Y',
		IFF(LEN(TRIM(IFF({{ ref('ModNullHandling') }}.LPC_OFFICE IS NOT NULL, {{ ref('ModNullHandling') }}.LPC_OFFICE, ''))) = 0, 'N', 'Y') AS svLoadApptDept,
		-- *SRC*: \(20)If svPdctN = '800999' Then 'RPR4011' Else '',
		IFF(svPdctN = '800999', 'RPR4011', '') AS svErrorCode1,
		-- *SRC*: \(20)If (svLoadApptDept = 'Y' And InXfmBusinessRules.DEPT_I = '9999') Then 'RPR4012' Else '',
		IFF(svLoadApptDept = 'Y' AND {{ ref('ModNullHandling') }}.DEPT_I = '9999', 'RPR4012', '') AS svErrorCode2,
		-- *SRC*: \(20)If svErrorCode1 <> "" Then svErrorCode1 Else  If svErrorCode2 <> "" Then svErrorCode2 Else '',
		IFF(svErrorCode1 <> '', svErrorCode1, IFF(svErrorCode2 <> '', svErrorCode2, '')) AS svErrorCode,
		-- *SRC*: \(20)If svErrorCode <> "" Then @TRUE Else @FALSE,
		IFF(svErrorCode <> '', @TRUE, @FALSE) AS svRejectFlag,
		'HL' AS svLoadApptFeat,
		99991231 AS svDefaultExpryDt,
		-- *SRC*: \(20)if Trim(( IF IsNotNull((InXfmBusinessRules.ASSESSMENT_DATE)) THEN (InXfmBusinessRules.ASSESSMENT_DATE) ELSE "")) = '' then 'Y' else InXfmBusinessRules.ASSESSMENT_DATE[1, 4] : '-' : InXfmBusinessRules.ASSESSMENT_DATE[5, 2] : '-' : InXfmBusinessRules.ASSESSMENT_DATE[7, 2],
		IFF(
	    TRIM(IFF({{ ref('ModNullHandling') }}.ASSESSMENT_DATE IS NOT NULL, {{ ref('ModNullHandling') }}.ASSESSMENT_DATE, '')) = '', 'Y', 
	    CONCAT(CONCAT(CONCAT(CONCAT(SUBSTRING({{ ref('ModNullHandling') }}.ASSESSMENT_DATE, 1, 4), '-'), SUBSTRING({{ ref('ModNullHandling') }}.ASSESSMENT_DATE, 5, 2)), '-'), SUBSTRING({{ ref('ModNullHandling') }}.ASSESSMENT_DATE, 7, 2))
	) AS svPreAssDt,
		-- *SRC*: \(20)if (Len(Trim(InXfmBusinessRules.HL_APP_PROD_ID)) = 0) Or Trim(InXfmBusinessRules.HL_APP_PROD_ID) = '0' Or (Len(Trim(( IF IsNotNull((InXfmBusinessRules.CR_DATE)) THEN (InXfmBusinessRules.CR_DATE) ELSE ""))) = 0) Or Trim(( IF IsNotNull((InXfmBusinessRules.CR_DATE)) THEN (InXfmBusinessRules.CR_DATE) ELSE "")) = '0' then 'N' else 'Y',
		IFF(LEN(TRIM({{ ref('ModNullHandling') }}.HL_APP_PROD_ID)) = 0 OR TRIM({{ ref('ModNullHandling') }}.HL_APP_PROD_ID) = '0' OR LEN(TRIM(IFF({{ ref('ModNullHandling') }}.CR_DATE IS NOT NULL, {{ ref('ModNullHandling') }}.CR_DATE, ''))) = 0 OR TRIM(IFF({{ ref('ModNullHandling') }}.CR_DATE IS NOT NULL, {{ ref('ModNullHandling') }}.CR_DATE, '')) = '0', 'N', 'Y') AS svApptPdctChkl,
		-- *SRC*: \(20)if Len(Trim(( IF IsNotNull((InXfmBusinessRules.CR_DATE)) THEN (InXfmBusinessRules.CR_DATE) ELSE ""))) = 0 then '' else InXfmBusinessRules.CR_DATE[1, 4] : '-' : InXfmBusinessRules.CR_DATE[5, 2] : '-' : InXfmBusinessRules.CR_DATE[7, 2],
		IFF(LEN(TRIM(IFF({{ ref('ModNullHandling') }}.CR_DATE IS NOT NULL, {{ ref('ModNullHandling') }}.CR_DATE, ''))) = 0, '', CONCAT(CONCAT(CONCAT(CONCAT(SUBSTRING({{ ref('ModNullHandling') }}.CR_DATE, 1, 4), '-'), SUBSTRING({{ ref('ModNullHandling') }}.CR_DATE, 5, 2)), '-'), SUBSTRING({{ ref('ModNullHandling') }}.CR_DATE, 7, 2))) AS svStusd,
		-- *SRC*: \(20)If IsValid('date', svStusd) Then StringToDate(InXfmBusinessRules.CR_DATE, '%yyyy%mm%dd') Else StringToDate(DEFAULT_DT, '%yyyy%mm%dd'),
		IFF(ISVALID('date', svStusd), STRINGTODATE({{ ref('ModNullHandling') }}.CR_DATE, '%yyyy%mm%dd'), STRINGTODATE(DEFAULT_DT, '%yyyy%mm%dd')) AS svStusd1,
		-- *SRC*: \(20)If (Len(Trim(( IF IsNotNull((InXfmBusinessRules.CAMPAIGN_CODE)) THEN (InXfmBusinessRules.CAMPAIGN_CODE) ELSE ""))) = 0) Then 0 ELSE 1,
		IFF(LEN(TRIM(IFF({{ ref('ModNullHandling') }}.CAMPAIGN_CODE IS NOT NULL, {{ ref('ModNullHandling') }}.CAMPAIGN_CODE, ''))) = 0, 0, 1) AS svCampaignCode,
		-- *SRC*: \(20)If Trim(Trim(InXfmBusinessRules.HL_APP_ID, '0')) = '' Then 'N' Else 'Y',
		IFF(TRIM(TRIM({{ ref('ModNullHandling') }}.HL_APP_ID, '0')) = '', 'N', 'Y') AS svApptI,
		-- *SRC*: \(20)If (Trim(( IF IsNotNull((InXfmBusinessRules.HL_APP_PROD_ID)) THEN (InXfmBusinessRules.HL_APP_PROD_ID) ELSE 0)) = 0) Then 'N' else  if Trim(InXfmBusinessRules.HL_APP_PROD_ID) = '' Then 'N' else  if num(InXfmBusinessRules.HL_APP_PROD_ID) then ( if (StringToDecimal(TRIM(InXfmBusinessRules.HL_APP_PROD_ID)) = 0) Then 'N' else 'Y') else 'Y',
		IFF(TRIM(IFF({{ ref('ModNullHandling') }}.HL_APP_PROD_ID IS NOT NULL, {{ ref('ModNullHandling') }}.HL_APP_PROD_ID, 0)) = 0, 'N', IFF(TRIM({{ ref('ModNullHandling') }}.HL_APP_PROD_ID) = '', 'N', IFF(NUM({{ ref('ModNullHandling') }}.HL_APP_PROD_ID), IFF(STRINGTODECIMAL(TRIM({{ ref('ModNullHandling') }}.HL_APP_PROD_ID)) = 0, 'N', 'Y'), 'Y'))) AS svApptPdctIdChk,
		-- *SRC*: \(20)If (Trim(( IF IsNotNull((InXfmBusinessRules.HL_APP_ID)) THEN (InXfmBusinessRules.HL_APP_ID) ELSE 0)) = 0) Then 'N' else  if Trim(InXfmBusinessRules.HL_APP_ID) = '' Then 'N' else  if num(InXfmBusinessRules.HL_APP_ID) then ( if (StringToDecimal(TRIM(InXfmBusinessRules.HL_APP_ID)) = 0) Then 'N' else 'Y') else 'Y',
		IFF(TRIM(IFF({{ ref('ModNullHandling') }}.HL_APP_ID IS NOT NULL, {{ ref('ModNullHandling') }}.HL_APP_ID, 0)) = 0, 'N', IFF(TRIM({{ ref('ModNullHandling') }}.HL_APP_ID) = '', 'N', IFF(NUM({{ ref('ModNullHandling') }}.HL_APP_ID), IFF(STRINGTODECIMAL(TRIM({{ ref('ModNullHandling') }}.HL_APP_ID)) = 0, 'N', 'Y'), 'Y'))) AS svHlAppIdChk,
		-- *SRC*: \(20)if (Len(Trim(( IF IsNotNull((InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT)) THEN (InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT) ELSE ""))) = 0) then 'Y' else  if (Trim(InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT) = '') then 'Y' else  if num(InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT) then ( if (StringToDecimal(TRIM(InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT)) = 0) then 'Y' else 'N') else 'N',
		IFF(
	    LEN(TRIM(IFF({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT IS NOT NULL, {{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT, ''))) = 0, 'Y', 
	    IFF(TRIM({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT) = '', 'Y', IFF(NUM({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT), IFF(STRINGTODECIMAL(TRIM({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT)) = 0, 'Y', 'N'), 'N'))
	) AS svHscaDateChk,
		-- *SRC*: \(20)If svHscaDateChk = 'N' Then ( if IsValid('date', StringToDate(InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT, '%yyyy%mm%dd')) Then StringToDate(InXfmBusinessRules.HSCA_CONVERTED_TO_FULL_AT, '%yyyy%mm%dd') Else StringToDate(DEFAULT_DT, '%yyyy%mm%dd')) else StringToDate(DEFAULT_DT, '%yyyy%mm%dd'),
		IFF(svHscaDateChk = 'N', IFF(ISVALID('date', STRINGTODATE({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT, '%yyyy%mm%dd')), STRINGTODATE({{ ref('ModNullHandling') }}.HSCA_CONVERTED_TO_FULL_AT, '%yyyy%mm%dd'), STRINGTODATE(DEFAULT_DT, '%yyyy%mm%dd')), STRINGTODATE(DEFAULT_DT, '%yyyy%mm%dd')) AS svHscaDtValidChk,
		-- *SRC*: \(20)If (Trim(( IF IsNotNull((InXfmBusinessRules.HSCA_FLAG)) THEN (InXfmBusinessRules.HSCA_FLAG) ELSE 0)) = 0) Then 'N' else  if Trim(InXfmBusinessRules.HSCA_FLAG) = '' Then 'N' else  if num(InXfmBusinessRules.HSCA_FLAG) then ( if (StringToDecimal(TRIM(InXfmBusinessRules.HSCA_FLAG)) = 0) Then 'N' else InXfmBusinessRules.HSCA_FLAG) else InXfmBusinessRules.HSCA_FLAG,
		IFF(
	    TRIM(IFF({{ ref('ModNullHandling') }}.HSCA_FLAG IS NOT NULL, {{ ref('ModNullHandling') }}.HSCA_FLAG, 0)) = 0, 'N', IFF(TRIM({{ ref('ModNullHandling') }}.HSCA_FLAG) = '', 'N', IFF(NUM({{ ref('ModNullHandling') }}.HSCA_FLAG), IFF(STRINGTODECIMAL(TRIM({{ ref('ModNullHandling') }}.HSCA_FLAG)) = 0, 'N', {{ ref('ModNullHandling') }}.HSCA_FLAG), {{ ref('ModNullHandling') }}.HSCA_FLAG))
	) AS svHscaFlagChk,
		-- *SRC*: \(20)If (Trim(( IF IsNotNull((InXfmBusinessRules.PEXA_FLAG)) THEN (InXfmBusinessRules.PEXA_FLAG) ELSE 0)) = 0) Then 'N' else  if Trim(InXfmBusinessRules.PEXA_FLAG) = '' Then 'N' else  if num(InXfmBusinessRules.PEXA_FLAG) then ( if (StringToDecimal(TRIM(InXfmBusinessRules.PEXA_FLAG)) = 0) Then 'N' else 'Y') else 'Y',
		IFF(TRIM(IFF({{ ref('ModNullHandling') }}.PEXA_FLAG IS NOT NULL, {{ ref('ModNullHandling') }}.PEXA_FLAG, 0)) = 0, 'N', IFF(TRIM({{ ref('ModNullHandling') }}.PEXA_FLAG) = '', 'N', IFF(NUM({{ ref('ModNullHandling') }}.PEXA_FLAG), IFF(STRINGTODECIMAL(TRIM({{ ref('ModNullHandling') }}.PEXA_FLAG)) = 0, 'N', 'Y'), 'Y'))) AS svPexaFlagChk,
		-- *SRC*: "CSEHP" : InXfmBusinessRules.HL_APP_ID,
		CONCAT('CSEHP', {{ ref('ModNullHandling') }}.HL_APP_ID) AS APPT_PDCT_I,
		'HP' AS APPT_QLFY_C,
		-- *SRC*: SetNull(),
		SETNULL() AS ACQR_TYPE_C,
		-- *SRC*: SetNull(),
		SETNULL() AS ACQR_ADHC_X,
		-- *SRC*: SetNull(),
		SETNULL() AS ACQR_SRCE_C,
		PDCT_N,
		-- *SRC*: "CSEHL" : InXfmBusinessRules.HL_APP_ID,
		CONCAT('CSEHL', {{ ref('ModNullHandling') }}.HL_APP_ID) AS APPT_I,
		'CSE' AS SRCE_SYST_C,
		{{ ref('ModNullHandling') }}.HL_PACKAGE_CAT_ID AS SRCE_SYST_APPT_PDCT_I,
		-- *SRC*: SetNull(),
		SETNULL() AS LOAN_FNDD_METH_C,
		'N' AS NEW_ACCT_F,
		-- *SRC*: StringToDate(ETL_PROCESS_DT, '%yyyy%mm%dd'),
		STRINGTODATE(ETL_PROCESS_DT, '%yyyy%mm%dd') AS EFFT_D,
		-- *SRC*: SetNull(),
		SETNULL() AS BROK_PATY_I,
		'N' AS COPY_FROM_OTHR_APPT_F,
		-- *SRC*: StringToDate('99991231', '%yyyy%mm%dd'),
		STRINGTODATE('99991231', '%yyyy%mm%dd') AS EXPY_D,
		0 AS PROS_KEY_EFFT_I,
		-- *SRC*: SetNull(),
		SETNULL() AS PROS_KEY_EXPY_I,
		-- *SRC*: SetNull(),
		SETNULL() AS EROR_SEQN_I,
		RUN_STREAM AS RUN_STRM,
		-- *SRC*: SetNull(),
		SETNULL() AS APPT_PDCT_CATG_C,
		-- *SRC*: setnull(),
		SETNULL() AS ASES_D,
		-- *SRC*: SetNull(),
		SETNULL() AS APPT_PDCT_DURT_C
	FROM {{ ref('ModNullHandling') }}
	WHERE svLoadApptPdct = 'Y'
)

SELECT * FROM XfmBusinessRules__OutTmpApptPdctDS