{{ config(materialized='view', tags=['ExtCclBusPreprovLog']) }}

WITH Trm__OutCclApptPatyDS AS (
	SELECT
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE) Then 'Y' Else  if trim(OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE = ''), 'Y', 'N')) AS svIsNullSourceCifCode,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_PREAPPR_CRG_MULTIPLIER) THEN 'Y' ELse  if trim(OutCclAppPremapDS.SEC_PREAPPR_CRG_MULTIPLIER) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_CRG_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_CRG_MULTIPLIER) = '', 'Y', 'N')) AS svIsNullSecPreapprCrgMul,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_FORM_MULTIPLER) THEN 'Y' Else  if Trim(OutCclAppPremapDS.SEC_FORM_MULTIPLER) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_FORM_MULTIPLER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_FORM_MULTIPLER) = '', 'Y', 'N')) AS svIsNullSecFormMul,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SECURED_CAP_MAX_ACCF_THRESHOLD) THEN 'Y' Else  if trim(OutCclAppPremapDS.SECURED_CAP_MAX_ACCF_THRESHOLD) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SECURED_CAP_MAX_ACCF_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SECURED_CAP_MAX_ACCF_THRESHOLD) = '', 'Y', 'N')) AS svIsNullSecuredMaxTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_CAP_MAX_THRESHOLD) THEN 'Y' Else  if trim(OutCclAppPremapDS.EF_CAP_MAX_THRESHOLD) = '' Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_CAP_MAX_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_CAP_MAX_THRESHOLD) = '', 'Y', 'N')) AS svIsNullEfMaxThsd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.TOTAL_PREAPPR_BUFFER_RATE_PCT) Then 'Y' Else  if trim(OutCclAppPremapDS.TOTAL_PREAPPR_BUFFER_RATE_PCT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPR_BUFFER_RATE_PCT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPR_BUFFER_RATE_PCT = ''), 'Y', 'N')) AS svIsNullTotalBufferRate,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPR_BUFFER_RATE_PCT) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_PREAPPR_BUFFER_RATE_PCT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_BUFFER_RATE_PCT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_BUFFER_RATE_PCT = ''), 'Y', 'N')) AS svIsNullEfBufferRate,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.TOTAL_PREAPPROVAL_AMT) Then 'Y' Else  if trim(OutCclAppPremapDS.TOTAL_PREAPPROVAL_AMT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPROVAL_AMT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.TOTAL_PREAPPROVAL_AMT = ''), 'Y', 'N')) AS svIsNullTotPreApprovalAmt,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPROVAL_AMT) Then 'Y' ELse  if trim(OutCclAppPremapDS.EF_PREAPPROVAL_AMT = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPROVAL_AMT IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPROVAL_AMT = ''), 'Y', 'N')) AS svIsNullEfPreApprovalAmt,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_APP_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_APP_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_APP_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_APP_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullSecAppMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_MAA) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_MAA = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_MAA IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_MAA = ''), 'Y', 'N')) AS svIsNullSecMaa,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_MAA) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_MAA = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_MAA IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_MAA = ''), 'Y', 'N')) AS svIsNullEfMaa,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.SEC_PREAPPR_HIGHCAP_THRESHOLD) Then 'Y' Else  if trim(OutCclAppPremapDS.SEC_PREAPPR_HIGHCAP_THRESHOLD = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_HIGHCAP_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.SEC_PREAPPR_HIGHCAP_THRESHOLD = ''), 'Y', 'N')) AS svIsNullSecHighcapTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_PREAPPR_HIGHCAP_THRESHOLD) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_PREAPPR_HIGHCAP_THRESHOLD = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_HIGHCAP_THRESHOLD IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_PREAPPR_HIGHCAP_THRESHOLD = ''), 'Y', 'N')) AS svIsNullEfHighcapTshd,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_APP_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_APP_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_APP_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_APP_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfAppMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_FORM_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_FORM_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_FORM_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_FORM_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfFormMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.EF_CRG_MULTIPLIER) Then 'Y' Else  if trim(OutCclAppPremapDS.EF_CRG_MULTIPLIER = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.EF_CRG_MULTIPLIER IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.EF_CRG_MULTIPLIER = ''), 'Y', 'N')) AS svIsNullEfCrgMult,
		-- *SRC*: \(20)If IsNull(OutCclAppPremapDS.MOD_USER_ID) Then 'Y' Else  if trim(OutCclAppPremapDS.MOD_USER_ID = '') Then 'Y' Else 'N',
		IFF({{ ref('CpyCclAppSeq') }}.MOD_USER_ID IS NULL, 'Y', IFF(TRIM({{ ref('CpyCclAppSeq') }}.MOD_USER_ID = ''), 'Y', 'N')) AS svIsNullModUserId,
		-- *SRC*: 'CSECL' : OutCclAppPremapDS.PREAPPROVAL_CCL_APP_ID,
		CONCAT('CSECL', {{ ref('CpyCclAppSeq') }}.PREAPPROVAL_CCL_APP_ID) AS APPT_I,
		-- *SRC*: 'CIFPT+' : Str("0", 10 - Len(( IF IsNotNull((OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE)) THEN (OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE) ELSE ""))) : ( IF IsNotNull((OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE)) THEN (OutCclAppPremapDS.PREAPPROVAL_SOURCE_CIF_CODE) ELSE ""),
		CONCAT(CONCAT('CIFPT+', STR('0', 10 - LEN(IFF({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE IS NOT NULL, {{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE, '')))), IFF({{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE IS NOT NULL, {{ ref('CpyCclAppSeq') }}.PREAPPROVAL_SOURCE_CIF_CODE, '')) AS PATY_I,
		'INITP' AS REL_C,
		'UNKN' AS REL_REAS_C,
		'U' AS REL_STUS_C,
		'N/A' AS REL_LEVL_C,
		'CSE' AS SRCE_SYST_C,
		'CSE_CCL_BUS_PREAPPROVAL_LOG' AS RUN_STRM
	FROM {{ ref('CpyCclAppSeq') }}
	WHERE 
)

SELECT * FROM Trm__OutCclApptPatyDS