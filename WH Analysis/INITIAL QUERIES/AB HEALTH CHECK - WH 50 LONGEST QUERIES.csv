QUERY_ID,QUERY_ID_INT,QUERY_TEXT,QUERY_EXECUTION_TIME_SECONDS,PARTITIONS_SCANNED,PARTITIONS_TOTAL
01bed107-3204-c555-0000-c71d2c379ade,2587334,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-03','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",14184.133,0,0
01bf1892-3204-ccd0-0000-c71d2e48ba0e,2577712,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-16','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",14183.717,0,0
01bf1892-3204-ccd0-0000-c71d2e48ba12,5154,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-16'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-16', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-16', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",14183.417,104605,200824
01bed107-3204-c555-0000-c71d2c379ae6,5395,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-03'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",14183.345,78432,151915
01bec9f1-3204-c555-0000-c71d2bfc5dde,3315510,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-02','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",14078.223,0,0
01bec9f1-3204-c555-0000-c71d2bfc5de2,5449,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-02'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-02', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-02', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",14077.899,75281,143893
01bef6f2-3204-c93e-0000-c71d2d509f12,4538363,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-10','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13836.229,0,0
01bef6f2-3204-c93e-0000-c71d2d509f16,5290,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-10'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-10', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-10', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",13835.865,90065,172258
01bef145-3204-c93c-0000-c71d2d2882aa,3736783,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-09','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13659.598,0,0
01bef145-3204-c93c-0000-c71d2d2882ae,5308,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-09'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-09', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-09', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",13659.107,87167,166640
01beb371-3204-c1f2-0000-c71d2b62c3e6,4168868,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-08-29','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13458.327,0,0
01beb371-3204-c1f2-0000-c71d2b62c3ea,12148,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-08-29'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-08-29', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-08-29', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",13457.963,69351,132957
01bed150-3204-c553-0000-c71d2c398f76,5319297,"CALL SP_VAR_AGG_520D_10_CBA('NEWYORK','2025-09-03','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13444.265,0,0
01bed150-3204-c553-0000-c71d2c398f7a,5397,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-03'
        AND REGION = 'NEWYORK'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",13443.75,78429,151912
01bf0231-3204-c93b-0000-c71d2da67036,2445025,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-12','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13287.041,0,0
01bf0231-3204-c93b-0000-c71d2da6703e,5179,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-12'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-12', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-12', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",13286.125,98843,189757
01be7e3b-3204-bc96-0000-c71d299fc0e2,4723971,"call MLOP_SP_MODL_RUNR(to_date('2025-08-20','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",13268.932,0,0
01bea2b3-3204-c1f1-0000-c71d2ac09f4a,2066172,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-08-26','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13180.32,0,0
01bea2b3-3204-c1f1-0000-c71d2ac09f4e,15163,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-08-26'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-08-26', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-08-26', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",13179.741,58315,110800
01beadd2-3204-c1f5-0000-c71d2b2dfe6a,2874597,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-08-28','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13154.411,0,0
01beadd2-3204-c1f5-0000-c71d2b2dfe6e,12539,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-08-28'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-08-28', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-08-28', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",13154.123,66519,126770
01befca1-3204-c93f-0000-c71d2d7b5d72,5135902,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-11','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",13135.348,0,0
01befca1-3204-c93f-0000-c71d2d7b5d7a,5268,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-11'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-11', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-11', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",13134.581,93089,178250
01beebcf-3204-c554-0000-c71d2cfbec2a,2306281,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-08','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12970.235,0,0
01beebcf-3204-c554-0000-c71d2cfbec2e,5311,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-08'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-08', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-08', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",12969.946,86897,166662
01becfe8-3204-c558-0000-c71d2c2ca5d2,5841004,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",12750.252,0,0
01bef22e-3204-c93c-0000-c71d2d2e38c6,357,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        * EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
)
;",12635.39,2009742,2009868
01bedac3-3204-c557-0000-c71d2c84453a,1531151,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-05','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12596.615,0,0
01bedac3-3204-c557-0000-c71d2c84453e,5366,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-05'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-05', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-05', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",12595.788,81110,152752
01bf12ec-3204-c93b-0000-c71d2e1be5ea,4389137,"CALL SP_VAR_AGG_520D_1_CBA('ASIA','2025-09-15','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12421.885,0,0
01bf12ec-3204-c93b-0000-c71d2e1be5ee,5178,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-15'
        AND REGION = 'ASIA'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-15', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-15', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",12421.506,98859,189594
01bea831-3204-c1f1-0000-c71d2af9187a,1146620,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-08-27','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12271.313,0,0
01bea831-3204-c1f1-0000-c71d2af9187e,14463,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-08-27'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-08-27', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-08-27', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",12270.947,63617,121115
01bef6ff-3204-c939-0000-c71d2d519592,3863462,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-10','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12244.111,0,0
01bef6ff-3204-c939-0000-c71d2d51959a,5273,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-10'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-10', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-10', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",12243.383,92871,177911
01bec443-3204-c1f2-0000-c71d2bd23e5a,3140610,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-01','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",12226.353,0,0
01bec443-3204-c1f2-0000-c71d2bd23e5e,12080,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-01'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-01', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-01', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",12225.899,69882,133759
01bed525-3204-c556-0000-c71d2c5a4a5e,3656447,"CALL SP_VAR_AGG_520D_1_CBA('SYDNEY','2025-09-04','VAR_AGG_520D_1_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_1_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11978.166,0,0
01bed525-3204-c556-0000-c71d2c5a4a62,5390,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_1_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA
        WHERE BUSN_DATE = '2025-09-04'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-04', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
		LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO WHERE BUSN_DATE = TO_DATE('2025-09-04', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL
       LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_1_CBA V WHERE V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1  ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY,
    STATUS,
    SCENARIOID,
    PORTFOLIO,
    TRANSACTIONGROUP,
    TRADETYPOLOGY,
    DATE1,
    INSTRUMENT,
    TRANSACTIONTYPE,
    TRANSACTIONFAMILY,
    MV_ALL_RF,
    MV_FX,
    MV_IR,
    PL_ALL_Diff,
    PL_FX_Diff,
    PL_IR_Diff,
    PL_CR_Diff,
    PL_FXVOL_Diff,
    PL_IRVOL_Diff,
    PL_COM_Diff,
    PL_COMVOL_Diff,
    PL_CPI_Diff,
    PL_EQD_Diff,
    PL_EQDVOL_Diff,
    PL_SCCYBASIS_Diff,
    PL_XCCYBASIS_Diff,
    BUSN_DATE,
    M_PF_DIV,
    M_MR_DESK,
    M_MR_SUBDESK,
    BUSINESS_UNIT2,
    M_P_OWNER,
    M_CLOSE_ENT,
    M_MRCAP,
    M_ACC_SEC,
    M_PF_BUNIT,
    ROW_SECU_ACCS_C,
    hash_value
)
VALUES (
    S.MVCURRENCY,
    S.STATUS,
    S.SCENARIOID,
    S.PORTFOLIO,
    S.TRANSACTIONGROUP,
    S.TRADETYPOLOGY,
    S.DATE1,
    S.INSTRUMENT,
    S.TRANSACTIONTYPE,
    S.TRANSACTIONFAMILY,
    S.MV_ALL_RF,
    S.MV_FX,
    S.MV_IR,
    S.PL_ALL_Diff,
    S.PL_FX_Diff,
    S.PL_IR_Diff,
    S.PL_CR_Diff,
    S.PL_FXVOL_Diff,
    S.PL_IRVOL_Diff,
    S.PL_COM_Diff,
    S.PL_COMVOL_Diff,
    S.PL_CPI_Diff,
    S.PL_EQD_Diff,
    S.PL_EQDVOL_Diff,
    S.PL_SCCYBASIS_Diff,
    S.PL_XCCYBASIS_Diff,
    S.BUSN_DATE,
    S.M_PF_DIV,
    S.M_MR_DESK,
    S.M_MR_SUBDESK,
    S.BUSINESS_UNIT2,
    S.M_P_OWNER,
    S.M_CLOSE_ENT,
    S.M_MRCAP,
    S.M_ACC_SEC,
    S.M_PF_BUNIT,
    S.ROW_SECU_ACCS_C,
    S.hash_value
)",11977.745,78496,149991
01bef133-3204-c939-0000-c71d2d2787a6,4437823,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-09','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11962.699,0,0
01bef133-3204-c939-0000-c71d2d2787aa,5293,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-09'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-09', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-09', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",11962.235,89773,172066
01bec434-3204-c1f3-0000-c71d2bd2278a,4961533,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-01','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11759.45,0,0
01bec434-3204-c1f3-0000-c71d2bd2278e,11768,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-01'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-01', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-01', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",11758.949,72323,137921
01bed511-3204-c558-0000-c71d2c591e02,1397106,"CALL SP_VAR_AGG_520D_10_CBA('SYDNEY','2025-09-04','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11699.244,0,0
01bed511-3204-c558-0000-c71d2c591e0a,5370,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-04'
        AND REGION = 'SYDNEY'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-04', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-04', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",11698.423,81015,155002
01bf12ec-3204-c93d-0000-c71d2e1ba92e,5380212,"CALL SP_VAR_AGG_520D_10_CBA('ASIA','2025-09-15','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11696.161,0,0
01bf12ec-3204-c93d-0000-c71d2e1ba936,5165,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-15'
        AND REGION = 'ASIA'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-15', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-15', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",11695.774,101642,195393
01beb037-3204-c1f6-0000-c71d2b43c762,21248,"create or replace temporary table Digital_Transactions as
select    
    b.fraudtype,
    b.DETECTION,
    b.case_detection,
    TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00') as _B_ANY_CUST_FTP_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_x_cif_recipient_new_date, 38, 2), '1960-01-01 00:00:00') as _x_cif_recipient_new_date,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_BC_EVENT_DT, 38, 2), '1960-01-01 00:00:00') as _L_BC_EVENT_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_SCM_RSK_HGH_DT, 38, 2), '1960-01-01 00:00:00') as _L_SCM_RSK_HGH_DT,
    _L_NC_RESPONSE_CODE,
    dtl_ex_0_20s_001 AS RECEIPT_NUM,
    (a.dtl_ex_0_n_064 || a.dtl_ex_0_n_065 || a.dtl_ex_0_n_066) as TRAN_ID,
    cmx_tran_id,
    hdr_activity_type,
    ssx_cust_num,
    chl_id_ob_userid,
    chl_id_pb_userid,
    dtl_ex_1_5s_01 as dmx_5byte_string_01,
    _a_cse_chg_dwl_ind AS DWL_change,
    dtl_ex_0_n_006 as Task_ID,
    dtl_ex_0_i_002 AS FTP_Indicator_1,
    rsp_ex_2_i_006 AS FTP_Indicator_2,
    TRY_TO_NUMBER(_X_CIF_RECIPIENT_SUM, 38, 2) as _X_CIF_RECIPIENT_SUM,
    TRY_TO_NUMBER(_X_CIF_RECIPIENT_NEW_SUM, 38, 2) as _X_CIF_RECIPIENT_NEW_SUM,
    TRY_TO_NUMBER(_x_cif_recipient_new_cnt, 38, 2) as _x_cif_recipient_new_cnt,
    TRY_TO_NUMBER(TGX_TRAN_AMT) AS TGX_TRAN_AMT,
    TRY_TO_NUMBER(_A_BTS_CUST_AGE, 38, 2)as _A_BTS_CUST_AGE,
    tgx_bank_name,
    tgx_bank_num,
    tgx_branch_id,
    tgx_acct_num,
    tgx_name,
    _L_ACCT_NUM,
    _L_BANK_NUM,
    _l_branch_id, 
    DTL_EX_3_80S_003 AS pmt_description_1,
    tgx_description AS pmt_description_2,
    TRY_TO_NUMBER(_L_SCM_RSK_HGH_SCR, 38, 2) as _L_SCM_RSK_HGH_SCR,
    TRY_TO_NUMBER(dtl_ex_0_n_034, 38, 4) as CERBERUS_SCORE_1,
    TRY_TO_NUMBER(dtl_ex_0_n_034, 38, 5) as CERBERUS_SCORE_2,
    TRY_TO_NUMBER(_L_CUST_SCAMRISK_SCORE, 38, 2) as _L_CUST_SCAMRISK_SCORE,
    TRY_TO_NUMBER(a._l_se_score, 38, 2) as _L_SE_SCORE,
    TRY_TO_NUMBER(a._l_bc_score, 38, 2) as _L_BC_SCORE,
    TRY_TO_NUMBER(a._l_max_30d_score, 38, 2) as _L_MAX_30D_SCORE,
    TRY_TO_NUMBER(a._l_max_30d_se_score, 38, 2) as _L_MAX_30D_SE_S,
    TRY_TO_NUMBER(_l_max_30d_mule_score, 38, 2) as _l_max_30d_mule_score,
    TRY_TO_NUMBER(_L_NUM_SESS_2H, 38, 2) as _L_NUM_SESS_2H,
    TRY_TO_NUMBER(_L_NUM_SESS_4H, 38, 2) as _L_NUM_SESS_4H,
    TRY_TO_NUMBER(_L_TRUST_NEW_PAYEE,38,2) as _L_TRUST_NEW_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_UNUSED_PAYEE,38,2) as _L_TRUST_UNUSED_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_PAYEE_HIGH_VLOC_IN,38,2) as _L_TRUST_PAYEE_HIGH_VLOC_IN,
	TRY_TO_NUMBER(_L_TRUST_PAYEE_DORM_ACCT,38,2) as _L_TRUST_PAYEE_DORM_ACCT,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_ATO_AS_PAYER,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_SES_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_SES_AS_PAYER,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_MS_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_MS_AS_PAYER,
    TRY_TO_NUMBER(_l_rcnt_hi_scr_on_dev,38,2) as _l_rcnt_hi_scr_on_dev,
    TRY_TO_NUMBER(_B_RECIP_SUM_LONG, 38, 2) as _B_RECIP_SUM_LONG,
    TRY_TO_NUMBER(_B_RECIP_SUM_SHORT, 38, 2) as _B_RECIP_SUM_SHORT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_RECIP_FTP_CNT_DATE, 38, 2), '1960-01-01 00:00:00') as _B_RECIP_FTP_CNT_DATE,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_LONG, 38, 2) as _B_RECIP_FTP_CNT_LONG,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_SHORT, 38, 2) as _B_RECIP_FTP_CNT_SHORT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_RECIP_FTP_SUM_DATE, 38, 2), '1960-01-01 00:00:00') as _B_RECIP_FTP_SUM_DATE,
from LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT a
left join PRD_P01_DMN_FRAUMD.LABMLFRD.DTL_FRAUDMASTER b
    on a.dtl_ex_0_20s_001 = b.rua_20byte_string_001
where mid_event_ts >= '20241201'
and mid_event_ts <= '20241215';",11628.728,17206,674614
01bed187-3204-c553-0000-c71d2c3b74ae,3195302,"CALL SP_VAR_AGG_520D_10_CBA('LONDON','2025-09-03','VAR_AGG_520D_10_CBA','PRD_P01_DMN_MRX', 'LCL', 'PnLVector_520d_10_CBA', 'PRD_P01_DMN_IBMOPS', 'LCL');",11531.346,0,0
01bed187-3204-c553-0000-c71d2c3b74b6,5394,"
MERGE INTO PRD_P01_DMN_MRX.LCL.VAR_AGG_520D_10_CBA T
USING (
    WITH FilteredData AS (
        SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA
        WHERE BUSN_DATE = '2025-09-03'
        AND REGION = 'LONDON'
    ),
    FilteredDataAgg AS (
        SELECT 
            D.MVCURRENCY,
            D.STATUS,
            V.SCENARIOID,
            V.PORTFOLIO,
            D.TRANSACTIONGROUP,
            D.TRADETYPOLOGY,
            V.DATE1,
            D.INSTRUMENT,
            D.TRANSACTIONTYPE,
            D.TRANSACTIONFAMILY,
            SUM(V.MV_ALL_RF) - SUM(V1.MV_ALL_RF) AS MV_ALL_RF,
            SUM(V.MV_FX) - SUM(V1.MV_FX) AS MV_FX,
            SUM(V.MV_IR) - SUM(V1.MV_IR) AS MV_IR,
            SUM(V.PL_ALL_Diff) AS PL_ALL_Diff,
            SUM(V.PL_FX_Diff) AS PL_FX_Diff,
            SUM(V.PL_IR_Diff) AS PL_IR_Diff,
            SUM(V.PL_CR_Diff) AS PL_CR_Diff,
            SUM(V.PL_FXVOL_Diff) AS PL_FXVOL_Diff,
            SUM(V.PL_IRVOL_Diff) AS PL_IRVOL_Diff,
            SUM(V.PL_COM_Diff) AS PL_COM_Diff,
            SUM(V.PL_COMVOL_Diff) AS PL_COMVOL_Diff,
            SUM(V.PL_CPI_Diff) AS PL_CPI_Diff,
            SUM(V.PL_EQD_Diff) AS PL_EQD_Diff,
            SUM(V.PL_EQDVOL_Diff) AS PL_EQDVOL_Diff,
            SUM(V.PL_SCCYBASIS_Diff) AS PL_SCCYBASIS_Diff,
            SUM(V.PL_XCCYBASIS_Diff) AS PL_XCCYBASIS_Diff,
            P.BUSN_DATE,
            P.M_PF_DIV,
            P.M_MR_DESK,
            P.M_MR_SUBDESK,
            P.BUSINESS_UNIT2,
            P.M_P_OWNER,
            P.M_CLOSE_ENT,
            P.M_MRCAP,
            P.M_ACC_SEC,
            P.M_PF_BUNIT,
            MD5(CONCAT(
                COALESCE(D.MVCURRENCY, ''), 
                COALESCE(D.STATUS, ''), 
                COALESCE(V.SCENARIOID, ''), 
                COALESCE(V.PORTFOLIO, ''), 
                COALESCE(D.TRANSACTIONGROUP, ''), 
                COALESCE(D.TRADETYPOLOGY, ''), 
                COALESCE(V.DATE1, '1970-01-01'), 
                COALESCE(D.INSTRUMENT, ''), 
                COALESCE(D.TRANSACTIONTYPE, ''), 
                COALESCE(D.TRANSACTIONFAMILY, ''), 
                COALESCE(P.BUSN_DATE, '1970-01-01'), 
                COALESCE(P.M_PF_DIV, ''), 
                COALESCE(P.M_MR_DESK, ''), 
                COALESCE(P.M_MR_SUBDESK, ''), 
                COALESCE(P.BUSINESS_UNIT2, ''), 
                COALESCE(P.M_P_OWNER, ''), 
                COALESCE(P.M_CLOSE_ENT, ''), 
                COALESCE(P.M_MRCAP, ''), 
                COALESCE(P.M_ACC_SEC, ''), 
                COALESCE(P.M_PF_BUNIT, '')
            )) AS hash_value
        FROM FilteredData V
        LEFT JOIN (SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PORTFOLIO WHERE BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) P ON P.M_LABEL = V.PORTFOLIO
        LEFT JOIN 
            (SELECT 
                    D.MVCURRENCY,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ARCHIVED' ELSE D.STATUS END AS STATUS,
                    D.TRANSACTIONGROUP,
                    CASE WHEN D.TRANSACTIONINTERNAL = 0 THEN 'ArchivedCashDeal0' ELSE D.TRADETYPOLOGY END AS TRADETYPOLOGY,
                    D.INSTRUMENT,
                    D.TRANSACTIONTYPE,
                    D.TRANSACTIONFAMILY,
                    D.PORTFOLIO,
                    D.TRANSACTIONINTERNAL
                FROM 
                   PRD_P01_DMN_MRX.LCL.VW_PLDETAILED_FXO D
                WHERE 
                    D.MVLEGCURRENT = 0 AND D.BUSN_DATE = TO_DATE('2025-09-03', 'YYYY-MM-DD')) D ON V.DEAL = D.TRANSACTIONINTERNAL 
        LEFT JOIN 
		(SELECT * FROM PRD_P01_DMN_MRX.LCL.VW_PnLVector_520d_10_CBA V WHERE  V.SCENARIOID = -1 AND V.RECD_UPDT_DTTS IS NULL) V1 
			ON V1.DEAL = V.DEAL AND V1.PORTFOLIO = V.PORTFOLIO
        GROUP BY 
            V.DATE1, V.SCENARIOID, D.TRANSACTIONFAMILY, D.TRANSACTIONGROUP, D.TRANSACTIONTYPE,
            D.INSTRUMENT, D.STATUS, D.MVCURRENCY, D.TRADETYPOLOGY, V.PORTFOLIO,
            P.BUSN_DATE, P.M_PF_DIV, P.M_MR_DESK, P.M_MR_SUBDESK, P.BUSINESS_UNIT2,
            P.M_P_OWNER, P.M_CLOSE_ENT, P.M_MRCAP, P.M_ACC_SEC, P.M_PF_BUNIT
    )
    SELECT 
        A.*, 
        COALESCE(ercm.ROW_SECU_ACCS_C_REF, 9999) AS ROW_SECU_ACCS_C
    FROM FilteredDataAgg A
    LEFT JOIN (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF FROM (SELECT ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3, ROW_SECU_ACCS_C_REF, 
        RANK() OVER (PARTITION BY ROLESEGMENT1, ROLESEGMENT2, ROLESEGMENT3 ORDER BY UPDATEDDATETIME DESC) AS rnk FROM 
        PRD_P01_DMN_IBMOPS.LCL.ENTITLEMENT_RLS_CODE_MAPPING) ranked WHERE rnk = 1) ercm ON
        A.M_MR_DESK = ercm.ROLESEGMENT1 AND
        A.M_PF_BUNIT = ercm.ROLESEGMENT2 AND
        A.M_PF_DIV = ercm.ROLESEGMENT3
) S
ON (T.hash_value = S.hash_value)
WHEN MATCHED THEN UPDATE SET
    T.MV_ALL_RF = S.MV_ALL_RF,
    T.MV_FX = S.MV_FX,
    T.MV_IR = S.MV_IR,
    T.PL_ALL_Diff = S.PL_ALL_Diff,
    T.PL_FX_Diff = S.PL_FX_Diff,
    T.PL_IR_Diff = S.PL_IR_Diff,
    T.PL_CR_Diff = S.PL_CR_Diff,
    T.PL_FXVOL_Diff = S.PL_FXVOL_Diff,
    T.PL_IRVOL_Diff = S.PL_IRVOL_Diff,
    T.PL_COM_Diff = S.PL_COM_Diff,
    T.PL_COMVOL_Diff = S.PL_COMVOL_Diff,
    T.PL_CPI_Diff = S.PL_CPI_Diff,
    T.PL_EQD_Diff = S.PL_EQD_Diff,
    T.PL_EQDVOL_Diff = S.PL_EQDVOL_Diff,
    T.PL_SCCYBASIS_Diff = S.PL_SCCYBASIS_Diff,
    T.PL_XCCYBASIS_Diff = S.PL_XCCYBASIS_Diff,
    T.BUSN_DATE = S.BUSN_DATE,
    T.M_PF_DIV = S.M_PF_DIV,
    T.M_MR_DESK = S.M_MR_DESK,
    T.M_MR_SUBDESK = S.M_MR_SUBDESK,
    T.BUSINESS_UNIT2 = S.BUSINESS_UNIT2,
    T.M_P_OWNER = S.M_P_OWNER,
    T.M_CLOSE_ENT = S.M_CLOSE_ENT,
    T.M_MRCAP = S.M_MRCAP,
    T.M_ACC_SEC = S.M_ACC_SEC,
    T.M_PF_BUNIT = S.M_PF_BUNIT,
    T.ROW_SECU_ACCS_C = S.ROW_SECU_ACCS_C
WHEN NOT MATCHED THEN INSERT (
    MVCURRENCY, STATUS, SCENARIOID, PORTFOLIO, TRANSACTIONGROUP, TRADETYPOLOGY, DATE1, INSTRUMENT,
    TRANSACTIONTYPE, TRANSACTIONFAMILY, MV_ALL_RF, MV_FX, MV_IR, PL_ALL_Diff, PL_FX_Diff, PL_IR_Diff,
    PL_CR_Diff, PL_FXVOL_Diff, PL_IRVOL_Diff, PL_COM_Diff, PL_COMVOL_Diff, PL_CPI_Diff, PL_EQD_Diff,
    PL_EQDVOL_Diff, PL_SCCYBASIS_Diff, PL_XCCYBASIS_Diff, BUSN_DATE, M_PF_DIV, M_MR_DESK, M_MR_SUBDESK,
    BUSINESS_UNIT2, M_P_OWNER, M_CLOSE_ENT, M_MRCAP, M_ACC_SEC, M_PF_BUNIT, hash_value, ROW_SECU_ACCS_C
)
VALUES (
    S.MVCURRENCY, S.STATUS, S.SCENARIOID, S.PORTFOLIO, S.TRANSACTIONGROUP, S.TRADETYPOLOGY, S.DATE1,
    S.INSTRUMENT, S.TRANSACTIONTYPE, S.TRANSACTIONFAMILY, S.MV_ALL_RF, S.MV_FX, S.MV_IR, S.PL_ALL_Diff,
    S.PL_FX_Diff, S.PL_IR_Diff, S.PL_CR_Diff, S.PL_FXVOL_Diff, S.PL_IRVOL_Diff, S.PL_COM_Diff, S.PL_COMVOL_Diff,
    S.PL_CPI_Diff, S.PL_EQD_Diff, S.PL_EQDVOL_Diff, S.PL_SCCYBASIS_Diff, S.PL_XCCYBASIS_Diff, S.BUSN_DATE,
    S.M_PF_DIV, S.M_MR_DESK, S.M_MR_SUBDESK, S.BUSINESS_UNIT2, S.M_P_OWNER, S.M_CLOSE_ENT, S.M_MRCAP,
    S.M_ACC_SEC, S.M_PF_BUNIT, S.hash_value, S.ROW_SECU_ACCS_C
)",11530.271,78437,151920
