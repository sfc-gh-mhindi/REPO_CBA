QUERY_ID,QUERY_TEXT,USER_NAME,ROLE_NAME,EXECUTION_TIME_MILLISECONDS,EXECUTION_TIME_SECONDS,EXECUTION_TIME_MINUTES,EXECUTION_TIME_HOURS,WAREHOUSE_SIZE,NODES,RELATIVE_PERFORMANCE_COST
01be508e-3204-b365-0000-c71d282f1aea,"WITH pre_rule_version as(
SELECT distinct
    rule_name,
    rule_id,
    rule_id_version,
    alert_id,
    alert_version_nbr,
    max(rule_id_version) over (partition by rule_id) as max_id,
    max(alert_version_nbr) over (partition by ALERT_ID) as max_alert_id
    -- ROW_NUMBER() OVER (PARTITION BY RULE_ID ORDER BY RULE_ID_VERSION DESC) AS RULE_RN
from LCL.FDP_ALERT_EVENTS_SEND_FLAT



) ,

rule_version as(
SELECT distinct
    rule_name,
    rule_id,
    rule_id_version,
    ALERT_ID,
    alert_version_nbr,
    max_id,
    max_alert_id
from pre_rule_version

where 1=1 
    and rule_id_version = max_id
    and alert_version_nbr = max_alert_id
),

PRE_TRF AS(
select distinct
    -- concat(to_decimal(dtl_ex_0_n_064),dtl_ex_0_n_065,dtl_ex_0_n_066) as id_key
    A.rule_name, 
    a.strategy_name,
    tran_timestamp,
    alert_value,
    a.rule_id,
    -- A.,
    ROW_NUMBER() OVER (PARTITION BY A.alert_id  ORDER BY A.alert_version_nbr DESC) AS RN
from LCL.FDP_ALERT_EVENTS_SEND_FLAT A
    INNER JOIN RULE_VERSION B
        ON A.RULE_NAME = B.RULE_NAME AND A.RULE_ID = B.RULE_ID AND A.rule_id_version = B.MAX_ID and a.alert_version_nbr = max_alert_id
where 1=1 
    and tran_timestamp between '01\03\2025' and '31/05/2025'
    and alert_type_name = 'CARD'
    


),

TRF AS (
select 
    rule_name,
    count(distinct alert_value) AS TOP_RULE_FIRES

from PRE_TRF
WHERE RN = 1
group by 1

),

QRG as(
SELECT 
    a.*,
    case 
        when a.""fpr"" = 1000 then 0 
    else TRF.TOP_RULE_FIRES 
    end as top_rule_fires,
    CASE
        WHEN TOP_RULE_FIRES > A.""total fires"" and a.""fpr"" <> 1000 then 1
    ELSE 0
    END AS TOP_GT_TOTAL
FROM PRD_P01_DMN_FRAUMD.LABMLFRD.QRG_CARDS a
    LEFT JOIN TRF 
        ON A.RULE_NAME = TRF.rule_name
)

select * 

from QRG 

where 1=1
and TOP_GT_TOTAL = 1
-- and rule_name = 'CRD_TRG_GBL_ALL_5XA_2WP_MSG'
-- and ""rule_id"" = '56824'",GAREAJU,PUBLIC,14384663,14384.663,239.744383,3.99574,4X-LARGE,128,511.45472
01bdf6d1-3204-aa25-0000-c71d259da6b6,"WITH cleaned_base_data AS (
    -- Clean all the data first and create unique transaction records
    SELECT
        SSX_CUST_NUM,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS transaction_date,
        TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') AS transaction_timestamp,
        
        -- Create unique transaction ID
        CONCAT(SSX_CUST_NUM, '_', TTS_TRAN_DATE_ALT, '_', MID_EVENT_TS) AS transaction_id,
        
        -- Clean the account balance field consistently
        CASE
            WHEN _A_CUST_ACCT_BAL IS NULL OR _A_CUST_ACCT_BAL = '' OR _A_CUST_ACCT_BAL = ' ' THEN NULL
            ELSE TRY_CAST(_A_CUST_ACCT_BAL AS DECIMAL(18,2))
        END AS clean_account_balance,
        
        -- Transaction amount
        TRY_CAST(TGX_TRAN_AMT AS DECIMAL(18,2)) AS transaction_amount,
        
        -- Deduplication
        ROW_NUMBER() OVER (
            PARTITION BY SSX_CUST_NUM, TTS_TRAN_DATE_ALT, MID_EVENT_TS 
            ORDER BY SSX_CUST_NUM
        ) AS row_num
        
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATE_ALT IS NOT NULL
      AND TTS_TRAN_DATE_ALT != ''
      AND LENGTH(TRIM(TTS_TRAN_DATE_ALT)) = 8
      -- Expand window for lookback calculations
      AND TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') >= CURRENT_DATE - INTERVAL '90 days'
),

-- === UNIQUE TRANSACTIONS ===
unique_transactions AS (
    SELECT *
    FROM cleaned_base_data
    WHERE row_num = 1
)

-- === TRANSACTION-LEVEL LOOKBACK FEATURES (AGGREGATED BY TRANSACTION) ===
--transaction_level_features AS (
    SELECT
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount,
        
        -- === 30-DAY LOOKBACK FEATURES (before this transaction) ===
        COUNT(h30.transaction_id) AS total_transactions_30d_lookback,
        COUNT(DISTINCT DATE(h30.transaction_date)) AS active_days_30d_lookback,
        
        -- Amount statistics
        ROUND(SUM(COALESCE(h30.clean_account_balance, 0)), 2) AS total_amount_30d_lookback,
        ROUND(AVG(h30.clean_account_balance), 2) AS avg_transaction_amount_30d_lookback,
        ROUND(MIN(h30.clean_account_balance), 2) AS min_transaction_amount_30d_lookback,
        ROUND(MAX(h30.clean_account_balance), 2) AS max_transaction_amount_30d_lookback,
        ROUND(STDDEV(h30.clean_account_balance), 2) AS stddev_transaction_amount_30d_lookback,
        
        -- === 7-DAY LOOKBACK FEATURES ===
        COUNT(h7.transaction_id) AS transactions_last_7d_lookback,
        ROUND(SUM(COALESCE(h7.clean_account_balance, 0)), 2) AS amount_last_7d_lookback,
        ROUND(AVG(h7.clean_account_balance), 2) AS avg_amount_last_7d_lookback,
        
        -- === 3-DAY LOOKBACK FEATURES ===
        COUNT(h3.transaction_id) AS transactions_last_3d_lookback,
        ROUND(SUM(COALESCE(h3.clean_account_balance, 0)), 2) AS amount_last_3d_lookback,
        
        -- === 1-DAY LOOKBACK FEATURES ===
        COUNT(h1.transaction_id) AS transactions_last_1d_lookback,
        ROUND(SUM(COALESCE(h1.clean_account_balance, 0)), 2) AS amount_last_1d_lookback,
        
        -- === TEMPORAL PATTERNS (30-day lookback) ===
        -- Weekend vs weekday activity
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) IN (1, 7) THEN 1 END) AS weekend_transactions_30d_lookback,
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) BETWEEN 2 AND 6 THEN 1 END) AS weekday_transactions_30d_lookback,
        
        -- Hour patterns
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 0 AND 6 THEN 1 END) AS late_night_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 7 AND 17 THEN 1 END) AS business_hours_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 18 AND 23 THEN 1 END) AS evening_transactions_30d_lookback,
        
        -- === DATE RANGE ===
        MIN(h30.transaction_date) AS first_transaction_date_30d_lookback,
        MAX(h30.transaction_date) AS last_transaction_date_30d_lookback,
        
        -- === CUSTOMER HISTORICAL BASELINE (for anomaly detection) ===
        ROUND(AVG(hist.clean_account_balance), 2) AS customer_historical_avg_amount,
        ROUND(STDDEV(hist.clean_account_balance), 2) AS customer_historical_stddev_amount
        
    FROM unique_transactions t
    
    -- 30-day lookback join
    LEFT JOIN unique_transactions h30 
        ON t.SSX_CUST_NUM = h30.SSX_CUST_NUM 
        AND h30.transaction_timestamp < t.transaction_timestamp
        AND h30.transaction_timestamp >= t.transaction_timestamp - INTERVAL '30 days'
    
    -- 7-day lookback join
    LEFT JOIN unique_transactions h7 
        ON t.SSX_CUST_NUM = h7.SSX_CUST_NUM 
        AND h7.transaction_timestamp < t.transaction_timestamp
        AND h7.transaction_timestamp >= t.transaction_timestamp - INTERVAL '7 days'
    
    -- 3-day lookback join
    LEFT JOIN unique_transactions h3 
        ON t.SSX_CUST_NUM = h3.SSX_CUST_NUM 
        AND h3.transaction_timestamp < t.transaction_timestamp
        AND h3.transaction_timestamp >= t.transaction_timestamp - INTERVAL '3 days'
    
    -- 1-day lookback join
    LEFT JOIN unique_transactions h1 
        ON t.SSX_CUST_NUM = h1.SSX_CUST_NUM 
        AND h1.transaction_timestamp < t.transaction_timestamp
        AND h1.transaction_timestamp >= t.transaction_timestamp - INTERVAL '1 day'
    
    -- All historical data for baseline (before current transaction)
    LEFT JOIN unique_transactions hist 
        ON t.SSX_CUST_NUM = hist.SSX_CUST_NUM 
        AND hist.transaction_timestamp < t.transaction_timestamp
    
    -- ✅ CRITICAL: GROUP BY transaction to get one record per transaction
    GROUP BY 
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount
",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,14332474,14332.474,238.874567,3.981243,4X-LARGE,128,509.599104
01bdf822-3204-abe2-0000-c71d25a808d2,"WITH unique_transactions AS (
    -- Clean all the data first and create unique transaction records
    SELECT
        SSX_CUST_NUM,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS transaction_date,
        TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') AS transaction_timestamp,
        
        -- Create unique transaction ID
        CONCAT(SSX_CUST_NUM, '_', TTS_TRAN_DATE_ALT, '_', MID_EVENT_TS) AS transaction_id,
        
        -- Clean the account balance field consistently
        CASE
            WHEN _A_CUST_ACCT_BAL IS NULL OR _A_CUST_ACCT_BAL = '' OR _A_CUST_ACCT_BAL = ' ' THEN NULL
            ELSE TRY_CAST(_A_CUST_ACCT_BAL AS DECIMAL(18,2))
        END AS clean_account_balance,
        
        -- Transaction amount
        TRY_CAST(TGX_TRAN_AMT AS DECIMAL(18,2)) AS transaction_amount,
        
        -- Deduplication
        ROW_NUMBER() OVER (
            PARTITION BY SSX_CUST_NUM, TTS_TRAN_DATE_ALT, MID_EVENT_TS 
            ORDER BY SSX_CUST_NUM
        ) AS row_num
        
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATE_ALT IS NOT NULL
      AND TTS_TRAN_DATE_ALT != ''
      AND LENGTH(TRIM(TTS_TRAN_DATE_ALT)) = 8
      -- Expand window for lookback calculations
      AND TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') >= CURRENT_DATE - INTERVAL '31 days'
)

-- === UNIQUE TRANSACTIONS ===
--unique_transactions AS (
  --  SELECT *
    --FROM cleaned_base_data
    --WHERE row_num = 1
--)

-- === TRANSACTION-LEVEL LOOKBACK FEATURES (AGGREGATED BY TRANSACTION) ===
--transaction_level_features AS (
SELECT
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount,
        
        -- === 30-DAY LOOKBACK FEATURES (before this transaction) ===
        COUNT(h30.transaction_id) AS total_transactions_30d_lookback,
        COUNT(DISTINCT DATE(h30.transaction_date)) AS active_days_30d_lookback,
        
        -- Amount statistics
        ROUND(SUM(COALESCE(h30.clean_account_balance, 0)), 2) AS total_amount_30d_lookback,
        ROUND(AVG(h30.clean_account_balance), 2) AS avg_transaction_amount_30d_lookback,
        ROUND(MIN(h30.clean_account_balance), 2) AS min_transaction_amount_30d_lookback,
        ROUND(MAX(h30.clean_account_balance), 2) AS max_transaction_amount_30d_lookback,
        ROUND(STDDEV(h30.clean_account_balance), 2) AS stddev_transaction_amount_30d_lookback,
        
        -- === 7-DAY LOOKBACK FEATURES ===
        COUNT(h7.transaction_id) AS transactions_last_7d_lookback,
        ROUND(SUM(COALESCE(h7.clean_account_balance, 0)), 2) AS amount_last_7d_lookback,
        ROUND(AVG(h7.clean_account_balance), 2) AS avg_amount_last_7d_lookback,
        
        -- === 3-DAY LOOKBACK FEATURES ===
        COUNT(h3.transaction_id) AS transactions_last_3d_lookback,
        ROUND(SUM(COALESCE(h3.clean_account_balance, 0)), 2) AS amount_last_3d_lookback,
        
        -- === 1-DAY LOOKBACK FEATURES ===
        COUNT(h1.transaction_id) AS transactions_last_1d_lookback,
        ROUND(SUM(COALESCE(h1.clean_account_balance, 0)), 2) AS amount_last_1d_lookback,
        
        -- === TEMPORAL PATTERNS (30-day lookback) ===
        -- Weekend vs weekday activity
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) IN (1, 7) THEN 1 END) AS weekend_transactions_30d_lookback,
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) BETWEEN 2 AND 6 THEN 1 END) AS weekday_transactions_30d_lookback,
        
        -- Hour patterns
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 0 AND 6 THEN 1 END) AS late_night_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 7 AND 17 THEN 1 END) AS business_hours_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 18 AND 23 THEN 1 END) AS evening_transactions_30d_lookback,
        
        -- === DATE RANGE ===
        MIN(h30.transaction_date) AS first_transaction_date_30d_lookback,
        MAX(h30.transaction_date) AS last_transaction_date_30d_lookback,
        
        -- === CUSTOMER HISTORICAL BASELINE (for anomaly detection) ===
        ROUND(AVG(hist.clean_account_balance), 2) AS customer_historical_avg_amount,
        ROUND(STDDEV(hist.clean_account_balance), 2) AS customer_historical_stddev_amount
        
    FROM unique_transactions t
    
    -- 30-day lookback join
    LEFT JOIN unique_transactions h30 
        ON t.SSX_CUST_NUM = h30.SSX_CUST_NUM 
        AND h30.transaction_timestamp < t.transaction_timestamp
        AND h30.transaction_timestamp >= t.transaction_timestamp - INTERVAL '30 days'
    
    -- 7-day lookback join
    LEFT JOIN unique_transactions h7 
        ON t.SSX_CUST_NUM = h7.SSX_CUST_NUM 
        AND h7.transaction_timestamp < t.transaction_timestamp
        AND h7.transaction_timestamp >= t.transaction_timestamp - INTERVAL '7 days'
    
    -- 3-day lookback join
    LEFT JOIN unique_transactions h3 
        ON t.SSX_CUST_NUM = h3.SSX_CUST_NUM 
        AND h3.transaction_timestamp < t.transaction_timestamp
        AND h3.transaction_timestamp >= t.transaction_timestamp - INTERVAL '3 days'
    
    -- 1-day lookback join
    LEFT JOIN unique_transactions h1 
        ON t.SSX_CUST_NUM = h1.SSX_CUST_NUM 
        AND h1.transaction_timestamp < t.transaction_timestamp
        AND h1.transaction_timestamp >= t.transaction_timestamp - INTERVAL '1 day'
    
    -- All historical data for baseline (before current transaction)
    LEFT JOIN unique_transactions hist 
        ON t.SSX_CUST_NUM = hist.SSX_CUST_NUM 
        AND hist.transaction_timestamp < t.transaction_timestamp
    
    -- ✅ CRITICAL: GROUP BY transaction to get one record per transaction
    GROUP BY 
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount
",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,14308520,14308.52,238.475333,3.974589,4X-LARGE,128,508.747392
01bdf5de-3204-aa23-0000-c71d25975e56,"WITH cleaned_base_data AS (
    -- Clean all the data first and create unique transaction records
    SELECT
        SSX_CUST_NUM,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS transaction_date,
        TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') AS transaction_timestamp,
        
        -- Create unique transaction ID
        CONCAT(SSX_CUST_NUM, '_', TTS_TRAN_DATE_ALT, '_', MID_EVENT_TS) AS transaction_id,
        
        -- Clean the account balance field consistently
        CASE
            WHEN _A_CUST_ACCT_BAL IS NULL OR _A_CUST_ACCT_BAL = '' OR _A_CUST_ACCT_BAL = ' ' THEN NULL
            ELSE TRY_CAST(_A_CUST_ACCT_BAL AS DECIMAL(18,2))
        END AS clean_account_balance,
        
        -- Transaction amount
        TRY_CAST(TGX_TRAN_AMT AS DECIMAL(18,2)) AS transaction_amount,
        
        -- Deduplication
        ROW_NUMBER() OVER (
            PARTITION BY SSX_CUST_NUM, TTS_TRAN_DATE_ALT, MID_EVENT_TS 
            ORDER BY SSX_CUST_NUM
        ) AS row_num
        
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATE_ALT IS NOT NULL
      AND TTS_TRAN_DATE_ALT != ''
      AND LENGTH(TRIM(TTS_TRAN_DATE_ALT)) = 8
      -- Expand window for lookback calculations
      AND TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') >= CURRENT_DATE - INTERVAL '90 days'
),

-- === UNIQUE TRANSACTIONS ===
unique_transactions AS (
    SELECT *
    FROM cleaned_base_data
    WHERE row_num = 1
),

-- === TRANSACTION-LEVEL LOOKBACK FEATURES (AGGREGATED BY TRANSACTION) ===
transaction_level_features AS (
    SELECT
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount,
        
        -- === 30-DAY LOOKBACK FEATURES (before this transaction) ===
        COUNT(h30.transaction_id) AS total_transactions_30d_lookback,
        COUNT(DISTINCT DATE(h30.transaction_date)) AS active_days_30d_lookback,
        
        -- Amount statistics
        ROUND(SUM(COALESCE(h30.clean_account_balance, 0)), 2) AS total_amount_30d_lookback,
        ROUND(AVG(h30.clean_account_balance), 2) AS avg_transaction_amount_30d_lookback,
        ROUND(MIN(h30.clean_account_balance), 2) AS min_transaction_amount_30d_lookback,
        ROUND(MAX(h30.clean_account_balance), 2) AS max_transaction_amount_30d_lookback,
        ROUND(STDDEV(h30.clean_account_balance), 2) AS stddev_transaction_amount_30d_lookback,
        
        -- === 7-DAY LOOKBACK FEATURES ===
        COUNT(h7.transaction_id) AS transactions_last_7d_lookback,
        ROUND(SUM(COALESCE(h7.clean_account_balance, 0)), 2) AS amount_last_7d_lookback,
        ROUND(AVG(h7.clean_account_balance), 2) AS avg_amount_last_7d_lookback,
        
        -- === 3-DAY LOOKBACK FEATURES ===
        COUNT(h3.transaction_id) AS transactions_last_3d_lookback,
        ROUND(SUM(COALESCE(h3.clean_account_balance, 0)), 2) AS amount_last_3d_lookback,
        
        -- === 1-DAY LOOKBACK FEATURES ===
        COUNT(h1.transaction_id) AS transactions_last_1d_lookback,
        ROUND(SUM(COALESCE(h1.clean_account_balance, 0)), 2) AS amount_last_1d_lookback,
        
        -- === TEMPORAL PATTERNS (30-day lookback) ===
        -- Weekend vs weekday activity
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) IN (1, 7) THEN 1 END) AS weekend_transactions_30d_lookback,
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) BETWEEN 2 AND 6 THEN 1 END) AS weekday_transactions_30d_lookback,
        
        -- Hour patterns
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 0 AND 6 THEN 1 END) AS late_night_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 7 AND 17 THEN 1 END) AS business_hours_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 18 AND 23 THEN 1 END) AS evening_transactions_30d_lookback,
        
        -- === DATE RANGE ===
        MIN(h30.transaction_date) AS first_transaction_date_30d_lookback,
        MAX(h30.transaction_date) AS last_transaction_date_30d_lookback,
        
        -- === CUSTOMER HISTORICAL BASELINE (for anomaly detection) ===
        ROUND(AVG(hist.clean_account_balance), 2) AS customer_historical_avg_amount,
        ROUND(STDDEV(hist.clean_account_balance), 2) AS customer_historical_stddev_amount
        
    FROM unique_transactions t
    
    -- 30-day lookback join
    LEFT JOIN unique_transactions h30 
        ON t.SSX_CUST_NUM = h30.SSX_CUST_NUM 
        AND h30.transaction_timestamp < t.transaction_timestamp
        AND h30.transaction_timestamp >= t.transaction_timestamp - INTERVAL '30 days'
    
    -- 7-day lookback join
    LEFT JOIN unique_transactions h7 
        ON t.SSX_CUST_NUM = h7.SSX_CUST_NUM 
        AND h7.transaction_timestamp < t.transaction_timestamp
        AND h7.transaction_timestamp >= t.transaction_timestamp - INTERVAL '7 days'
    
    -- 3-day lookback join
    LEFT JOIN unique_transactions h3 
        ON t.SSX_CUST_NUM = h3.SSX_CUST_NUM 
        AND h3.transaction_timestamp < t.transaction_timestamp
        AND h3.transaction_timestamp >= t.transaction_timestamp - INTERVAL '3 days'
    
    -- 1-day lookback join
    LEFT JOIN unique_transactions h1 
        ON t.SSX_CUST_NUM = h1.SSX_CUST_NUM 
        AND h1.transaction_timestamp < t.transaction_timestamp
        AND h1.transaction_timestamp >= t.transaction_timestamp - INTERVAL '1 day'
    
    -- All historical data for baseline (before current transaction)
    LEFT JOIN unique_transactions hist 
        ON t.SSX_CUST_NUM = hist.SSX_CUST_NUM 
        AND hist.transaction_timestamp < t.transaction_timestamp
    
    -- ✅ CRITICAL: GROUP BY transaction to get one record per transaction
    GROUP BY 
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount
),

-- === DAILY PATTERNS (max daily activity in lookback periods) ===
daily_patterns AS (
    SELECT 
        t.transaction_id,
        
        -- Calculate max daily activity for each transaction's lookback period
        MAX(daily_summary.daily_transactions) AS max_daily_transactions_30d_lookback,
        MAX(daily_summary.daily_amount) AS max_daily_amount_30d_lookback
        
    FROM unique_transactions t
    LEFT JOIN (
        -- Daily aggregations for each customer
        SELECT 
            SSX_CUST_NUM,
            DATE(transaction_date) as txn_date,
            COUNT(*) as daily_transactions,
            SUM(COALESCE(clean_account_balance, 0)) as daily_amount
        FROM unique_transactions
        GROUP BY SSX_CUST_NUM, DATE(transaction_date)
    ) daily_summary 
        ON t.SSX_CUST_NUM = daily_summary.SSX_CUST_NUM
        AND daily_summary.txn_date < DATE(t.transaction_date)
        AND daily_summary.txn_date >= DATE(t.transaction_date) - INTERVAL '30 days'
    
    GROUP BY t.transaction_id
)

-- === FINAL TRANSACTION-LEVEL OUTPUT ===
SELECT
    t.transaction_id,
    t.SSX_CUST_NUM,
    t.transaction_date,
    t.transaction_timestamp,
    t.clean_account_balance AS current_transaction_amount,
    t.transaction_amount,
    
    -- === 30-DAY LOOKBACK STATISTICS ===
    t.total_transactions_30d_lookback,
    t.active_days_30d_lookback,
    t.total_amount_30d_lookback,
    t.avg_transaction_amount_30d_lookback,
    t.min_transaction_amount_30d_lookback,
    t.max_transaction_amount_30d_lookback,
    t.stddev_transaction_amount_30d_lookback,
    
    -- === TIME-BASED PATTERNS ===
    ROUND(t.total_transactions_30d_lookback / NULLIF(t.active_days_30d_lookback, 0), 2) AS avg_transactions_per_active_day_lookback,
    ROUND(t.total_amount_30d_lookback / NULLIF(t.active_days_30d_lookback, 0), 2) AS avg_daily_spend_lookback,
    
    -- === RECENT ACTIVITY PATTERNS ===
    t.transactions_last_7d_lookback,
    t.amount_last_7d_lookback,
    t.avg_amount_last_7d_lookback,
    t.transactions_last_3d_lookback,
    t.amount_last_3d_lookback,
    t.transactions_last_1d_lookback,
    t.amount_last_1d_lookback,
    
    -- === VELOCITY INDICATORS (SCAM PATTERNS) ===
    ROUND(
        t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0), 2
    ) AS pct_transactions_last_7d_lookback,
    
    ROUND(
        t.amount_last_7d_lookback * 100.0 / NULLIF(t.total_amount_30d_lookback, 0), 2
    ) AS pct_amount_last_7d_lookback,
    
    -- === TEMPORAL DISTRIBUTION ===
    t.weekend_transactions_30d_lookback,
    t.weekday_transactions_30d_lookback,
    t.late_night_transactions_30d_lookback,
    t.business_hours_transactions_30d_lookback,
    t.evening_transactions_30d_lookback,
    
    -- === CONSISTENCY INDICATORS ===
    t.first_transaction_date_30d_lookback,
    t.last_transaction_date_30d_lookback,
    DATEDIFF('day', t.first_transaction_date_30d_lookback, t.last_transaction_date_30d_lookback) AS date_span_days_lookback,
    
    -- === SPIKE INDICATORS ===
    COALESCE(dp.max_daily_transactions_30d_lookback, 0) AS max_daily_transactions_30d_lookback,
    ROUND(COALESCE(dp.max_daily_amount_30d_lookback, 0), 2) AS max_daily_amount_30d_lookback,
    
    -- === ANOMALY DETECTION ===
    CASE 
        WHEN t.clean_account_balance > (t.customer_historical_avg_amount + 2 * t.customer_historical_stddev_amount)
        THEN 1 
        ELSE 0 
    END AS is_current_transaction_outlier,
    
    ROUND(
        t.clean_account_balance / NULLIF(t.avg_transaction_amount_30d_lookback, 0), 2
    ) AS current_vs_historical_avg_ratio,
    
    -- === RISK SCORING (Transaction Level) ===
    CASE 
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 80
         AND t.transactions_last_1d_lookback > 15
        THEN 'CRITICAL'
        
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 60
         AND t.late_night_transactions_30d_lookback > t.business_hours_transactions_30d_lookback
        THEN 'HIGH'
        
        WHEN t.clean_account_balance > t.avg_transaction_amount_30d_lookback * 10
        THEN 'MEDIUM'
        
        ELSE 'LOW'
    END as transaction_risk_level,
    
    -- === BEHAVIORAL ANOMALY FLAGS ===
    CASE 
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 90
        THEN 'SUDDEN_BURST'
        ELSE 'NORMAL'
    END as velocity_flag,
    
    CASE 
        WHEN HOUR(t.transaction_timestamp) BETWEEN 0 AND 6
         AND t.late_night_transactions_30d_lookback > t.business_hours_transactions_30d_lookback
        THEN 'UNUSUAL_HOURS'
        ELSE 'NORMAL'
    END as timing_flag

FROM transaction_level_features t
LEFT JOIN daily_patterns dp ON t.transaction_id = dp.transaction_id

-- ✅ FILTER TO YOUR TARGET PERIOD
WHERE t.transaction_timestamp BETWEEN CURRENT_DATE - INTERVAL '31 days' AND CURRENT_DATE

ORDER BY t.SSX_CUST_NUM, t.transaction_timestamp;",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,14190124,14190.124,236.502067,3.941701,4X-LARGE,128,504.537728
01bdf0f5-3204-aa21-0000-c71d2578655a,"WITH cleaned_base_data AS (
    -- Clean all the data first and create unique transaction records
    SELECT
        SSX_CUST_NUM,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS transaction_date,
        TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') AS transaction_timestamp,
        
        -- Create unique transaction ID for each record
        CONCAT(SSX_CUST_NUM, '_', TTS_TRAN_DATE_ALT, '_', MID_EVENT_TS) AS transaction_id,
        
        -- Clean the account balance field consistently
        CASE
            WHEN _A_CUST_ACCT_BAL IS NULL OR _A_CUST_ACCT_BAL = '' OR _A_CUST_ACCT_BAL = ' ' THEN NULL
            ELSE TRY_CAST(_A_CUST_ACCT_BAL AS DECIMAL(18,2))
        END AS clean_account_balance,
        
        -- Keep original transaction amount if available
        TRY_CAST(TGX_TRAN_AMT AS DECIMAL(18,2)) AS transaction_amount,
        
        -- Add row number to handle duplicates
        ROW_NUMBER() OVER (
            PARTITION BY SSX_CUST_NUM, TTS_TRAN_DATE_ALT, MID_EVENT_TS 
            ORDER BY SSX_CUST_NUM
        ) AS row_num
        
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATE_ALT IS NOT NULL
      AND TTS_TRAN_DATE_ALT != ''
      AND LENGTH(TRIM(TTS_TRAN_DATE_ALT)) = 8
      AND TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') BETWEEN '2025-04-01' AND '2025-06-30'
),

-- === DEDUPLICATED BASE DATA ===
unique_transactions AS (
    SELECT 
        SSX_CUST_NUM,
        transaction_date,
        transaction_timestamp,
        transaction_id,
        clean_account_balance,
        transaction_amount
    FROM cleaned_base_data
    WHERE row_num = 1  -- Keep only one record per unique transaction
),

-- === TRANSACTION-LEVEL LOOKBACK FEATURES ===
transaction_level_features AS (
    SELECT
        transaction_id,
        SSX_CUST_NUM,
        transaction_date,
        transaction_timestamp,
        clean_account_balance,
        transaction_amount,
        
        -- === 1 HOUR LOOKBACK ===
        COUNT(*) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '1 hour' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS transactions_last_1h_lookback,
        
        SUM(COALESCE(clean_account_balance, 0)) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '1 hour' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS amount_last_1h_lookback,
        
        -- === 24 HOURS LOOKBACK ===
        COUNT(*) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '24 hours' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS transactions_last_24h_lookback,
        
        SUM(COALESCE(clean_account_balance, 0)) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '24 hours' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS amount_last_24h_lookback,
        
        AVG(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '24 hours' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS avg_amount_last_24h_lookback,
        
        -- === 7 DAYS LOOKBACK ===
        COUNT(*) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS transactions_last_7d_lookback,
        
        SUM(COALESCE(clean_account_balance, 0)) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS amount_last_7d_lookback,
        
        AVG(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS avg_amount_last_7d_lookback,
        
        -- === 30 DAYS LOOKBACK ===
        COUNT(*) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS transactions_last_30d_lookback,
        
        SUM(COALESCE(clean_account_balance, 0)) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS amount_last_30d_lookback,
        
        AVG(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS avg_amount_last_30d_lookback,
        
        STDDEV(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS stddev_amount_last_30d_lookback,
        
        MIN(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS min_amount_last_30d_lookback,
        
        MAX(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS max_amount_last_30d_lookback,
        
        -- === VELOCITY RATIOS ===
        ROUND(
            COUNT(*) OVER (
                PARTITION BY SSX_CUST_NUM 
                ORDER BY transaction_timestamp 
                RANGE BETWEEN INTERVAL '1 hour' PRECEDING AND INTERVAL '1 second' PRECEDING
            ) * 24.0 / NULLIF(
                COUNT(*) OVER (
                    PARTITION BY SSX_CUST_NUM 
                    ORDER BY transaction_timestamp 
                    RANGE BETWEEN INTERVAL '24 hours' PRECEDING AND INTERVAL '1 second' PRECEDING
                ), 0
            ), 2
        ) AS hourly_vs_daily_velocity_ratio,
        
        ROUND(
            COUNT(*) OVER (
                PARTITION BY SSX_CUST_NUM 
                ORDER BY transaction_timestamp 
                RANGE BETWEEN INTERVAL '24 hours' PRECEDING AND INTERVAL '1 second' PRECEDING
            ) * 7.0 / NULLIF(
                COUNT(*) OVER (
                    PARTITION BY SSX_CUST_NUM 
                    ORDER BY transaction_timestamp 
                    RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
                ), 0
            ), 2
        ) AS daily_vs_weekly_velocity_ratio,
        
        ROUND(
            COUNT(*) OVER (
                PARTITION BY SSX_CUST_NUM 
                ORDER BY transaction_timestamp 
                RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
            ) * 30.0 / NULLIF(
                COUNT(*) OVER (
                    PARTITION BY SSX_CUST_NUM 
                    ORDER BY transaction_timestamp 
                    RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
                ), 0
            ), 2
        ) AS weekly_vs_monthly_velocity_ratio,
        
        -- === TEMPORAL PATTERNS ===
        SUM(CASE WHEN HOUR(transaction_timestamp) BETWEEN 0 AND 6 THEN 1 ELSE 0 END) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS late_night_transactions_7d_lookback,
        
        SUM(CASE WHEN HOUR(transaction_timestamp) BETWEEN 7 AND 17 THEN 1 ELSE 0 END) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '7 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS business_hours_transactions_7d_lookback,
        
        SUM(CASE WHEN DAYOFWEEK(transaction_date) IN (1, 7) THEN 1 ELSE 0 END) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            RANGE BETWEEN INTERVAL '30 days' PRECEDING AND INTERVAL '1 second' PRECEDING
        ) AS weekend_transactions_30d_lookback,
        
        -- === CUSTOMER BASELINE (for anomaly detection) ===
        AVG(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
        ) AS customer_historical_avg_amount,
        
        STDDEV(clean_account_balance) OVER (
            PARTITION BY SSX_CUST_NUM 
            ORDER BY transaction_timestamp 
            ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING
        ) AS customer_historical_stddev_amount
        
    FROM unique_transactions
),

-- === ACTIVE DAYS CALCULATION (separate to avoid DISTINCT issues) ===
active_days_calculation AS (
    SELECT 
        curr.SSX_CUST_NUM,
        curr.transaction_id,
        curr.transaction_timestamp,
        
        -- Count unique active days using a different approach
        -- Count how many different dates appear in the lookback window
        COUNT(DISTINCT DATE(hist.transaction_date)) AS active_days_30d_lookback,
        COUNT(DISTINCT DATE(hist7.transaction_date)) AS active_days_7d_lookback,
        COUNT(DISTINCT DATE(hist1.transaction_date)) AS active_days_1d_lookback
        
    FROM unique_transactions curr
    LEFT JOIN unique_transactions hist 
        ON curr.SSX_CUST_NUM = hist.SSX_CUST_NUM 
        AND hist.transaction_timestamp < curr.transaction_timestamp
        AND hist.transaction_timestamp >= curr.transaction_timestamp - INTERVAL '30 days'
    LEFT JOIN unique_transactions hist7 
        ON curr.SSX_CUST_NUM = hist7.SSX_CUST_NUM 
        AND hist7.transaction_timestamp < curr.transaction_timestamp
        AND hist7.transaction_timestamp >= curr.transaction_timestamp - INTERVAL '7 days'  
    LEFT JOIN unique_transactions hist1 
        ON curr.SSX_CUST_NUM = hist1.SSX_CUST_NUM 
        AND hist1.transaction_timestamp < curr.transaction_timestamp
        AND hist1.transaction_timestamp >= curr.transaction_timestamp - INTERVAL '24 hours'
    GROUP BY curr.SSX_CUST_NUM, curr.transaction_id, curr.transaction_timestamp
)

-- === FINAL OUTPUT (DEDUPLICATED) ===
SELECT
    t.transaction_id,
    t.SSX_CUST_NUM,
    t.transaction_date,
    t.transaction_timestamp,
    t.clean_account_balance AS current_transaction_amount,
    t.transaction_amount,
    
    -- === LOOKBACK FEATURES (Multiple Time Windows) ===
    t.transactions_last_1h_lookback,
    ROUND(t.amount_last_1h_lookback, 2) AS amount_last_1h_lookback,
    
    t.transactions_last_24h_lookback,
    ROUND(t.amount_last_24h_lookback, 2) AS amount_last_24h_lookback,
    ROUND(t.avg_amount_last_24h_lookback, 2) AS avg_amount_last_24h_lookback,
    
    t.transactions_last_7d_lookback,
    ROUND(t.amount_last_7d_lookback, 2) AS amount_last_7d_lookback,
    ROUND(t.avg_amount_last_7d_lookback, 2) AS avg_amount_last_7d_lookback,
    
    t.transactions_last_30d_lookback,
    ROUND(t.amount_last_30d_lookback, 2) AS amount_last_30d_lookback,
    ROUND(t.avg_amount_last_30d_lookback, 2) AS avg_amount_last_30d_lookback,
    ROUND(t.stddev_amount_last_30d_lookback, 2) AS stddev_amount_last_30d_lookback,
    ROUND(t.min_amount_last_30d_lookback, 2) AS min_amount_last_30d_lookback,
    ROUND(t.max_amount_last_30d_lookback, 2) AS max_amount_last_30d_lookback,
    
    -- === ACTIVE DAYS ===
    COALESCE(ad.active_days_1d_lookback, 0) AS active_days_1d_lookback,
    COALESCE(ad.active_days_7d_lookback, 0) AS active_days_7d_lookback,
    COALESCE(ad.active_days_30d_lookback, 0) AS active_days_30d_lookback,
    
    -- === VELOCITY RATIOS ===
    t.hourly_vs_daily_velocity_ratio,
    t.daily_vs_weekly_velocity_ratio,
    t.weekly_vs_monthly_velocity_ratio,
    
    -- === INTENSITY RATIOS ===
    ROUND(t.transactions_last_1h_lookback * 100.0 / NULLIF(t.transactions_last_24h_lookback, 0), 2) AS pct_transactions_last_1h,
    ROUND(t.transactions_last_24h_lookback * 100.0 / NULLIF(t.transactions_last_7d_lookback, 0), 2) AS pct_transactions_last_24h,
    ROUND(t.transactions_last_7d_lookback * 100.0 / NULLIF(t.transactions_last_30d_lookback, 0), 2) AS pct_transactions_last_7d,
    
    ROUND(t.amount_last_1h_lookback * 100.0 / NULLIF(t.amount_last_24h_lookback, 0), 2) AS pct_amount_last_1h,
    ROUND(t.amount_last_24h_lookback * 100.0 / NULLIF(t.amount_last_7d_lookback, 0), 2) AS pct_amount_last_24h,
    ROUND(t.amount_last_7d_lookback * 100.0 / NULLIF(t.amount_last_30d_lookback, 0), 2) AS pct_amount_last_7d,
    
    -- === TEMPORAL PATTERNS ===
    t.late_night_transactions_7d_lookback,
    t.business_hours_transactions_7d_lookback,
    t.weekend_transactions_30d_lookback,
    
    -- === TRANSACTION INTENSITY (Transactions per active day) ===
    ROUND(t.transactions_last_24h_lookback / NULLIF(COALESCE(ad.active_days_1d_lookback, 1), 0), 2) AS avg_transactions_per_day_24h,
    ROUND(t.transactions_last_7d_lookback / NULLIF(COALESCE(ad.active_days_7d_lookback, 1), 0), 2) AS avg_transactions_per_day_7d,
    ROUND(t.transactions_last_30d_lookback / NULLIF(COALESCE(ad.active_days_30d_lookback, 1), 0), 2) AS avg_transactions_per_day_30d,
    
    -- === ANOMALY DETECTION ===
    CASE 
        WHEN t.clean_account_balance > (t.customer_historical_avg_amount + 2 * t.customer_historical_stddev_amount)
        THEN 1 
        ELSE 0 
    END AS is_amount_outlier,
    
    ROUND(
        t.clean_account_balance / NULLIF(t.avg_amount_last_30d_lookback, 0), 2
    ) AS current_vs_recent_avg_ratio,
    
    -- === RISK SCORING ===
    CASE 
        WHEN t.hourly_vs_daily_velocity_ratio > 10 AND t.transactions_last_1h_lookback > 20
        THEN 'CRITICAL_BURST'
        
        WHEN t.daily_vs_weekly_velocity_ratio > 5 AND t.transactions_last_24h_lookback > 50
        THEN 'HIGH_DAILY_VELOCITY'
        
        WHEN t.weekly_vs_monthly_velocity_ratio > 3 AND t.transactions_last_7d_lookback > 100  
        THEN 'HIGH_WEEKLY_VELOCITY'
        
        WHEN t.late_night_transactions_7d_lookback > t.business_hours_transactions_7d_lookback
        THEN 'UNUSUAL_TIMING_PATTERN'
        
        ELSE 'NORMAL'
    END as transaction_risk_level,
    
    -- === SCAM PATTERN FLAGS ===
    CASE 
        WHEN t.transactions_last_1h_lookback > 0 AND t.transactions_last_24h_lookback * 100.0 / NULLIF(t.transactions_last_30d_lookback, 0) > 50
        THEN 'SUDDEN_BURST'
        ELSE 'NORMAL_VELOCITY'
    END as velocity_pattern,
    
    CASE 
        WHEN HOUR(t.transaction_timestamp) BETWEEN 0 AND 6 
         AND t.late_night_transactions_7d_lookback > t.business_hours_transactions_7d_lookback
        THEN 'NIGHT_OWL_PATTERN'
        ELSE 'NORMAL_TIMING'
    END as timing_pattern

FROM transaction_level_features t
LEFT JOIN active_days_calculation ad ON t.transaction_id = ad.transaction_id

-- ✅ Filter to your target analysis period
WHERE t.transaction_timestamp BETWEEN '2025-06-01' AND '2025-06-30'

-- ✅ Final deduplication (in case any still exist)
QUALIFY ROW_NUMBER() OVER (PARTITION BY t.transaction_id ORDER BY t.transaction_timestamp) = 1

ORDER BY t.SSX_CUST_NUM, t.transaction_timestamp;",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,13390076,13390.076,223.167933,3.719466,4X-LARGE,128,476.091648
01be4780-3204-b361-0000-c71d27dfdd26,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,7447727,7447.727,124.128783,2.068813,4X-LARGE,128,264.808064
01be603d-3204-b944-0000-c71d28aa584a,"CREATE TABLE LABMLFRD.NT_CARDS_RETRO_SAMPLE AS(
    WITH BASE_TRAN AS (
        select 
            -- identifier columns
            fdp.tran_id, -- use tran_id from the subquery
            SSX_CUST_NUM, -- we don't really need it for modeling, only for diagnostics
            chl_id_card_num,
            chl_ct_term_owner_id,
            chl_ct_acq_id,
            TRANSACTIONDATETIME,
            TRANSACTION_HOUR,
            -- SPLIT as SPLI,
        
            -- numerical UV columns, if missing then -1 as default
            COALESCE(CAST(DTL_CA_CLIENT_AMT AS FLOAT), -1) AS DTL_CA_CLIENT_AMT,
            COALESCE(CAST(_C_CC_GBL_N3D_1D_SUM_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_SUM_1,
            COALESCE(CAST(_c_cc_high_vel_apple_sum_1 AS FLOAT), -1) AS _c_cc_high_vel_apple_sum_1,
            COALESCE(CAST(_c_crd_apay_cnt_1 AS FLOAT), -1) AS _c_crd_apay_cnt_1,
            COALESCE(CAST(_C_CC_GBL_N3D_1D_CNT_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_CNT_1,
            COALESCE(CAST(_C_CC_CNP_VEL_6HR_SUM_1 AS FLOAT), -1) AS _C_CC_CNP_VEL_6HR_SUM_1,
            COALESCE(CAST(_C_CRD_APAY_SUM_1 AS FLOAT), -1) AS _C_CRD_APAY_SUM_1,
            COALESCE(CAST(_C_CRD_SAFE_MERCHANT AS FLOAT), -1) AS _C_CRD_SAFE_MERCHANT,
            COALESCE(CAST(_C_2WAY_CRD_FRD_RULE_FLAG AS FLOAT), -1) AS _C_2WAY_CRD_FRD_RULE_FLAG,
            COALESCE(CAST(_c_cc_cnp_ltrans_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_ltrans_6hr_count_1,
            COALESCE(CAST(_c_cc_cnp_vel_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_vel_6hr_count_1,
            COALESCE(CAST(_l_city_age AS FLOAT), -1) AS _l_city_age,
            COALESCE(CAST(_a_crd_npp_payment_amount AS FLOAT), -1) AS _a_crd_npp_payment_amount,
            COALESCE(CAST(_a_client_country_cnt_3 AS FLOAT), -1) AS _a_client_country_cnt_3,
            COALESCE(CAST(_a_customer_age AS FLOAT), -1) AS _a_customer_age,
            COALESCE(CAST(_a_client_country_cnt_10 AS FLOAT), -1) AS _a_client_country_cnt_10,
            COALESCE(CAST(_a_npp_ftp_sum AS FLOAT), -1) AS _a_npp_ftp_sum,
            COALESCE(CAST(_l_paste_in_login_cnt AS FLOAT), -1) AS _l_paste_in_login_cnt,
            COALESCE(CAST(_a_cust_sum_aaa_long AS FLOAT), -1) AS _a_cust_sum_aaa_long,
            COALESCE(CAST(_l_g_con_dev AS FLOAT), -1) AS _l_g_con_dev,
            COALESCE(CAST(_l_dev_fam_age AS FLOAT), -1) AS _l_dev_fam_age,
            COALESCE(CAST(_l_touch_cnt AS FLOAT), -1) AS _l_touch_cnt,
            COALESCE(CAST(_b_recip_sum_aaa_long AS FLOAT), -1) AS _b_recip_sum_aaa_long,
            COALESCE(CAST(_l_risky_key_combo AS FLOAT), -1) AS _l_risky_key_combo,
            COALESCE(CAST(_a_c_g AS FLOAT), -1) AS _a_c_g,
            COALESCE(CAST(_l_score_4 AS FLOAT), -1) AS _l_score_4,
            COALESCE(CAST(_a_e AS FLOAT), -1) AS _a_e,
            COALESCE(CAST(_a_npp_inb_pmt_val AS FLOAT), -1) AS _a_npp_inb_pmt_val,
            COALESCE(CAST(_a_client_country_cnt_2 AS FLOAT), -1) AS _a_client_country_cnt_2,
            COALESCE(CAST(_a_prof_capp_device_cnt_1 AS FLOAT), -1) AS _a_prof_capp_device_cnt_1,
            COALESCE(CAST(_a_crd_scam_supp_7d_sum_1 AS FLOAT), -1) AS _a_crd_scam_supp_7d_sum_1,
            COALESCE(CAST(_a_client_city_cnt_2 AS FLOAT), -1) AS _a_client_city_cnt_2,
            COALESCE(CAST(_l_uid_age AS FLOAT), -1) AS _l_uid_age,
            COALESCE(CAST(_l_scrn_w AS FLOAT), -1) AS _l_scrn_w,
            COALESCE(CAST(_l_asn_age AS FLOAT), -1) AS _l_asn_age,
            COALESCE(CAST(_l_score_2 AS FLOAT), -1) AS _l_score_2,
            COALESCE(CAST(_a_cust_npp_out_sum_aaa_5 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_5,
            COALESCE(CAST(_l_bc_sess_cnt AS FLOAT), -1) AS _l_bc_sess_cnt,
            COALESCE(CAST(_l_acc_amt_1h AS FLOAT), -1) AS _l_acc_amt_1h,
            COALESCE(CAST(_a_list_wl_scam_drive_license AS FLOAT), -1) AS _a_list_wl_scam_drive_license,
            COALESCE(CAST(_a_cc_cash_advance_amt AS FLOAT), -1) AS _a_cc_cash_advance_amt,
            COALESCE(CAST(_a_cust_sum_aaa_short AS FLOAT), -1) AS _a_cust_sum_aaa_short,
            COALESCE(CAST(_a_p_l_1 AS FLOAT), -1) AS _a_p_l_1,
            COALESCE(CAST(_l_pmt_amt AS FLOAT), -1) AS _l_pmt_amt,
            COALESCE(CAST(_l_isp_age AS FLOAT), -1) AS _l_isp_age,
            COALESCE(CAST(_l_acc_amt_7d AS FLOAT), -1) AS _l_acc_amt_7d,
            COALESCE(CAST(_a_client_country_cnt_7 AS FLOAT), -1) AS _a_client_country_cnt_7,
            COALESCE(CAST(_l_concurrent_sess AS FLOAT), -1) AS _l_concurrent_sess,
            COALESCE(CAST(_a_capp_hce_cnt_1 AS FLOAT), -1) AS _a_capp_hce_cnt_1,
            COALESCE(CAST(_l_score_5 AS FLOAT), -1) AS _l_score_5,
            COALESCE(CAST(_l_muid_age_per_user AS FLOAT), -1) AS _l_muid_age_per_user,
            COALESCE(CAST(_a_cust_acct_bal AS FLOAT), -1) AS _a_cust_acct_bal,
            COALESCE(CAST(_l_cust_scamrisk_score AS FLOAT), -1) AS _l_cust_scamrisk_score,
            COALESCE(CAST(_a_atm_withdrawal_sum_amt AS FLOAT), -1) AS _a_atm_withdrawal_sum_amt,
            COALESCE(CAST(_l_tap_cnt AS FLOAT), -1) AS _l_tap_cnt,
            COALESCE(CAST(_a_list_wl_scam_tp_ip AS FLOAT), -1) AS _a_list_wl_scam_tp_ip,
            COALESCE(CAST(_l_max_30d_score AS FLOAT), -1) AS _l_max_30d_score,
            COALESCE(CAST(_b_recip_sum_aaa_1 AS FLOAT), -1) AS _b_recip_sum_aaa_1,
            COALESCE(CAST(_x_cif_sender_sum AS FLOAT), -1) AS _x_cif_sender_sum,
            COALESCE(CAST(_l_m_l_1 AS FLOAT), -1) AS _l_m_l_1,
            COALESCE(CAST(_l_scrn_h AS FLOAT), -1) AS _l_scrn_h,
            COALESCE(CAST(_a_cust_npp_out_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_2,
            COALESCE(CAST(_a_cust_action_ind AS FLOAT), -1) AS _a_cust_action_ind,
            COALESCE(CAST(_a_p_l_c AS FLOAT), -1) AS _a_p_l_c,
            COALESCE(CAST(_a_cust_avg_acct_bal AS FLOAT), -1) AS _a_cust_avg_acct_bal,
            COALESCE(CAST(_l_and_id_age AS FLOAT), -1) AS _l_and_id_age,
            COALESCE(CAST(_x_cif_rec_sum AS FLOAT), -1) AS _x_cif_rec_sum,
            COALESCE(CAST(_l_sess_cnt_mob_sdk AS FLOAT), -1) AS _l_sess_cnt_mob_sdk,
            COALESCE(CAST(_l_total_sess_cnt AS FLOAT), -1) AS _l_total_sess_cnt,
            COALESCE(CAST(_a_curr_capp_device_nftp_cnt AS FLOAT), -1) AS _a_curr_capp_device_nftp_cnt,
            COALESCE(CAST(_l_nc_acct_num_name_conf AS FLOAT), -1) AS _l_nc_acct_num_name_conf,
            COALESCE(CAST(_a_client_country_cnt_5 AS FLOAT), -1) AS _a_client_country_cnt_5,
            COALESCE(CAST(_a_u AS FLOAT), -1) AS _a_u,
            COALESCE(CAST(_b_recip_sum_aaa_7 AS FLOAT), -1) AS _b_recip_sum_aaa_7,
            COALESCE(CAST(_l_scm_rsk_scr_2 AS FLOAT), -1) AS _l_scm_rsk_scr_2,
            COALESCE(CAST(_b_recip_sum_aaa_4 AS FLOAT), -1) AS _b_recip_sum_aaa_4,
            COALESCE(CAST(_l_bc_score AS FLOAT), -1) AS _l_bc_score,
            COALESCE(CAST(_l_days_lst_dev_and AS FLOAT), -1) AS _l_days_lst_dev_and,
            COALESCE(CAST(_a_prof_capp_device_cnt_3 AS FLOAT), -1) AS _a_prof_capp_device_cnt_3,
            COALESCE(CAST(_l_days_lst_dev_ios AS FLOAT), -1) AS _l_days_lst_dev_ios,
            COALESCE(CAST(_x_last_n_txn_count AS FLOAT), -1) AS _x_last_n_txn_count,
            COALESCE(CAST(_a_t AS FLOAT), -1) AS _a_t,
            COALESCE(CAST(_a_cust_npp_in_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_2,
            COALESCE(CAST(_l_mins_lst_lgn_capped AS FLOAT), -1) AS _l_mins_lst_lgn_capped,
            COALESCE(CAST(_l_acc_amt_2h AS FLOAT), -1) AS _l_acc_amt_2h,
            COALESCE(CAST(_l_acc_amt_4h AS FLOAT), -1) AS _l_acc_amt_4h,
            COALESCE(CAST(_a_list_bl_passport AS FLOAT), -1) AS _a_list_bl_passport,
            COALESCE(CAST(_a_list_wl_scam_passport AS FLOAT), -1) AS _a_list_wl_scam_passport,
            COALESCE(CAST(_a_list_bl_scam_passport AS FLOAT), -1) AS _a_list_bl_scam_passport,
            COALESCE(CAST(_b_recip_sum_aaa_6 AS FLOAT), -1) AS _b_recip_sum_aaa_6,
            COALESCE(CAST(_a_prof_capp_device_cnt_2 AS FLOAT), -1) AS _a_prof_capp_device_cnt_2,
            COALESCE(CAST(_a_client_country_cnt_6 AS FLOAT), -1) AS _a_client_country_cnt_6,
            COALESCE(CAST(_A_BTS_BCH_SUM AS FLOAT), -1) AS _A_BTS_BCH_SUM,
            COALESCE(CAST(_A_BTS_CUST_AGE AS FLOAT), -1) AS _A_BTS_CUST_AGE,
            COALESCE(CAST(_A_CURR_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_CURR_CAPP_DEVICE_CNT,
            COALESCE(CAST(_A_CURR_NB_BROWSER_CNT AS FLOAT), -1) AS _A_CURR_NB_BROWSER_CNT,
            COALESCE(CAST(_A_PREV_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_PREV_CAPP_DEVICE_CNT,
            COALESCE(CAST(_A_Q AS FLOAT), -1) AS _A_Q,
            COALESCE(CAST(_A_R AS FLOAT), -1) AS _A_R,
            COALESCE(CAST(_l_cntry_age AS FLOAT), -1) AS _l_cntry_age,
            COALESCE(CAST(_a_npp_in_unrelated_sum_24_1 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_1,
            COALESCE(CAST(_x_ft_over5k_recip_cnt AS FLOAT), -1) AS _x_ft_over5k_recip_cnt,
            COALESCE(CAST(_x_cif_recipient_new_cnt AS FLOAT), -1) AS _x_cif_recipient_new_cnt,
            COALESCE(CAST(_a_npp_in_unrelated_sum_24_2 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_2,
            COALESCE(CAST(_b_npp_out_sum_1 AS FLOAT), -1) AS _b_npp_out_sum_1,
            COALESCE(CAST(_l_acc_amt_1d AS FLOAT), -1) AS _l_acc_amt_1d,
            COALESCE(CAST(_a_transport_reg_cnt_1 AS FLOAT), -1) AS _a_transport_reg_cnt_1,
            COALESCE(CAST(_a_multi_cnt AS FLOAT), -1) AS _a_multi_cnt,
            COALESCE(CAST(_l_m_l_4 AS FLOAT), -1) AS _l_m_l_4,
            COALESCE(CAST(_a_prof_capp_device_nftp_1 AS FLOAT), -1) AS _a_prof_capp_device_nftp_1,
            COALESCE(CAST(_x_name_match_cnt AS FLOAT), -1) AS _x_name_match_cnt,
            COALESCE(CAST(_a_prof_capp_device_cnt_5 AS FLOAT), -1) AS _a_prof_capp_device_cnt_5,
            COALESCE(CAST(_a_prof_capp_device_cnt_4 AS FLOAT), -1) AS _a_prof_capp_device_cnt_4,
            COALESCE(CAST(_l_sess_cnt_web AS FLOAT), -1) AS _l_sess_cnt_web,
            COALESCE(CAST(_b_recip_sum_aaa_2 AS FLOAT), -1) AS _b_recip_sum_aaa_2,
            COALESCE(CAST(_l_m_l_c AS FLOAT), -1) AS _l_m_l_c,
            COALESCE(CAST(_l_time_zone AS FLOAT), -1) AS _l_time_zone,
            COALESCE(CAST(_a_cust_npp_in_sum_aaa_1 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_1,
            COALESCE(CAST(_l_ip_age AS FLOAT), -1) AS _l_ip_age,
            COALESCE(CAST(_a_npp_inbound_sum_amt AS FLOAT), -1) AS _a_npp_inbound_sum_amt,
            COALESCE(CAST(_x_ft_over5k_recip_sum AS FLOAT), -1) AS _x_ft_over5k_recip_sum,
            COALESCE(CAST(_x_cif_sender_cnt AS FLOAT), -1) AS _x_cif_sender_cnt,
            COALESCE(CAST(_a_nb_logons_cnt_2 AS FLOAT), -1) AS _a_nb_logons_cnt_2,
            COALESCE(CAST(_a_clc_ftp_amt AS FLOAT), -1) AS _a_clc_ftp_amt,
            COALESCE(CAST(_l_trvl_spd AS FLOAT), -1) AS _l_trvl_spd,
            COALESCE(CAST(_b_recip_sum_long AS FLOAT), -1) AS _b_recip_sum_long,
            COALESCE(CAST(_a_crypto_mnthly_sum AS FLOAT), -1) AS _a_crypto_mnthly_sum,
            COALESCE(CAST(_a_gl_trf_acc_bal AS FLOAT), -1) AS _a_gl_trf_acc_bal,
            COALESCE(CAST(_l_sess_cnt_mob_browser AS FLOAT), -1) AS _l_sess_cnt_mob_browser,
            COALESCE(CAST(_l_score_3 AS FLOAT), -1) AS _l_score_3,
            COALESCE(CAST(_a_crd_crypto_proc_flg AS FLOAT), -1) AS _a_crd_crypto_proc_flg,
            COALESCE(CAST(_b_npp_out_cnt_2 AS FLOAT), -1) AS _b_npp_out_cnt_2,
            COALESCE(CAST(_a_npp_out_cnt_2 AS FLOAT), -1) AS _a_npp_out_cnt_2,
            COALESCE(CAST(_a_sch_amt AS FLOAT), -1) AS _a_sch_amt,
            COALESCE(CAST(_a_p_l_3 AS FLOAT), -1) AS _a_p_l_3,
            COALESCE(CAST(_b_npp_out_ftp_sum_1 AS FLOAT), -1) AS _b_npp_out_ftp_sum_1,
            COALESCE(CAST(_l_sdid_cnt_1 AS FLOAT), -1) AS _l_sdid_cnt_1,
            COALESCE(CAST(_a_cust_npp_out_sum_aaa_long AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_long,
            COALESCE(CAST(_a_list_rl1_scam_cust_cif AS FLOAT), -1) AS _a_list_rl1_scam_cust_cif,
            COALESCE(CAST(_l_num_sess_2h AS FLOAT), -1) AS _l_num_sess_2h,
            COALESCE(CAST(_a_vpn_vps_ip_logon_count AS FLOAT), -1) AS _a_vpn_vps_ip_logon_count,
            COALESCE(CAST(_a_geo_distance AS FLOAT), -1) AS _a_geo_distance,
            COALESCE(CAST(_x_name_match_ind AS FLOAT), -1) AS _x_name_match_ind,
            COALESCE(CAST(_a_nb_logons_cnt_3 AS FLOAT), -1) AS _a_nb_logons_cnt_3,
            COALESCE(CAST(_l_days_lst_dev_js AS FLOAT), -1) AS _l_days_lst_dev_js,
            COALESCE(CAST(_a_ftp_sum_1 AS FLOAT), -1) AS _a_ftp_sum_1,
            COALESCE(CAST(_l_num_sess_4h AS FLOAT), -1) AS _l_num_sess_4h,
            COALESCE(CAST(_l_nc_match_name_conf AS FLOAT), -1) AS _l_nc_match_name_conf,
            COALESCE(CAST(_b_recip_sum_aaa_5 AS FLOAT), -1) AS _b_recip_sum_aaa_5,
            COALESCE(CAST(_l_dpi_change AS FLOAT), -1) AS _l_dpi_change,
            COALESCE(CAST(_b_recip_sum_1 AS FLOAT), -1) AS _b_recip_sum_1,
            COALESCE(CAST(_a_scam_risky_mcc_prelead_amt AS FLOAT), -1) AS _a_scam_risky_mcc_prelead_amt,
            COALESCE(CAST(_l_m_l_3 AS FLOAT), -1) AS _l_m_l_3,
            COALESCE(CAST(_x_cif_rec_cnt AS FLOAT), -1) AS _x_cif_rec_cnt,
            COALESCE(CAST(_a_list_bl_scam_tp_ip AS FLOAT), -1) AS _a_list_bl_scam_tp_ip,
            _b_crypto_risk, -- labelled as str but all num values?
            COALESCE(CAST(_a_list_bl_scam_drive_license AS FLOAT), -1) AS _a_list_bl_scam_drive_license,
            COALESCE(CAST(_b_recip_sum_aaa_short AS FLOAT), -1) AS _b_recip_sum_aaa_short,
            COALESCE(CAST(_l_clipb_event_cnt AS FLOAT), -1) AS _l_clipb_event_cnt,
            COALESCE(CAST(_b_list_rl1_scam_tp_cif AS FLOAT), -1) AS _b_list_rl1_scam_tp_cif,
            COALESCE(CAST(_b_npp_blacklist_recip_flag AS FLOAT), -1) AS _b_npp_blacklist_recip_flag,
        
            -- categorical UV columns
            _a_cif_establish_channel, -- customer established channel (if = 'O' then it's electronic)
            _a_ecv_document_ip,
            _a_cust_os_ver,
            _a_cust_os_name,
            _A_2WAY_TYPE,
            _A_CLIENT_CITY_10,
            _L_PUSH_API_1,
            _L_PUSH_API_2,
            _L_PUSH_API_3,
            _L_PUSH_API_4,
            _a_client_city_6,
            _l_nc_winning_alg,
            _l_proxy_type,
            _l_lang_3,
            _l_lang_1,
            _l_lang_2,
            _l_nc_response_code,
            _a_prof_risk_ind,
            _a_latest_ncrg_isp,
            -- _C_CC_N3D_OVS_975_CNT_1,
            chl_ct_term_owner_name,
            -- _c_cc_n3d_dom_999_cnt_1,
            _C_CNP_MER_NM_CURR,
            -- _C_CRD_N3D_SCORE_SUM_1,
            dtl_ex_0_2s_002,
            dtl_ex_3_80s_002,
            case when _a_mrisk_foreign_ip_cntry_code is NULL then 'unknown' else _a_mrisk_foreign_ip_cntry_code || '_v' end as _a_mrisk_foreign_ip_cntry_code,
            case when dtl_ca_auth_sys_dec is NULL then 'unknown' else dtl_ca_auth_sys_dec || '_v' end as dtl_ca_auth_sys_dec,
            chl_ct_mer_mcc,
            -- case when chl_ct_mer_mcc is NULL then 'unknown' else chl_ct_mer_mcc || '_v' end as chl_ct_mer_mcc,
            case when ATH_PC_CUST_PRESENT is NULL then 'unknown' else ATH_PC_CUST_PRESENT || '_v' end as ATH_PC_CUST_PRESENT,
            case when _a_cif_establish_cust_pcode in ('0', null) then 'unknown' else _a_cif_establish_cust_pcode || '_v' end as _a_cif_establish_cust_pcode,
            case when chl_ct_term_cntry_code in ('0', null) then 'unknown' else chl_ct_term_cntry_code || '_v' end as chl_ct_term_cntry_code,
            case when dtl_ca_merch_curr_code in ('0', null) then 'unknown' else dtl_ca_merch_curr_code || '_v' end as dtl_ca_merch_curr_code,
        
            -- features extracted from fingerprints data
            case when substr(_L_FINGERPRINT_1, 1, 1) in('P', 'O') then substr(_L_FINGERPRINT_1, 1, 1) else 'unknown' end as PARTY_TYPE, -- ""P"" for personal, ""O"" for organisations,
            case when substr(_L_FINGERPRINT_1, 2, 1) in('M', 'F') then substr(_L_FINGERPRINT_1, 2, 1) else 'unknown' end as GENDER, -- M or F    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 3, 1) as FLOAT), -1) as DMC_CNT, -- count of scheme debit cards
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 4, 1) as FLOAT), -1) as YCS_CNT, -- count of travel money cards    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 5, 1) as FLOAT), -1) as TRAN_CNT, -- count of personal txn accts   
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 6, 1) as FLOAT), -1) as DPST_CNT, -- count of money management accounts    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 7, 1) as FLOAT), -1) as CC_CNT, -- count of credit cards    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 8, 1) as FLOAT), -1) as TRD_CNT, -- count of trading accounts    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 9, 1) as FLOAT), -1) as PL_CNT, -- count of personal loan accounts 
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 10, 1) as FLOAT), -1) as INVST_CNT, -- count of investment accounts 
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 11, 1) as FLOAT), -1) as MORT_CNT, -- count of mortgage accounts 
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 12, 1) as FLOAT), -1) as INSRNC_CNT, -- count of insurance accounts 
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 13, 1) as FLOAT), -1) as BTA_CNT, -- count of business txn accounts    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 14, 1) as FLOAT), -1) as BUS_LN_CNT, -- count of business loans    
            COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 15, 1) as FLOAT), -1) as OTH_CNT, -- count of other accounts    
            case when substr(_L_FINGERPRINT_1, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 16, 1) || '_v' else 'unknown' end as NTBNK_FAC, -- 1/0 indicator whether the customer has a netbank facility    
            case when substr(_L_FINGERPRINT_1, 17, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 17, 1) || '_v' else 'unknown' end as REL_MNG, -- indicates whether the customer is relationship managed    
            case when substr(_L_FINGERPRINT_2, 1, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 1, 2) || '_v' end as FA_1, -- 1st known foreign association   
            case when substr(_L_FINGERPRINT_2, 3, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 3, 2) || '_v' end as FA_2, -- 2nd known foreign association    
            case when substr(_L_FINGERPRINT_2, 5, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 5, 2) || '_v' end as NO_1, -- name association 1  
            case when substr(_L_FINGERPRINT_2, 7, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 7, 2) || '_v' end as NO_2, -- name association 2  
            case when substr(_L_FINGERPRINT_2, 11, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 11, 2) || '_v' end as FA, -- foreign address    
            case when substr(_L_FINGERPRINT_2, 13, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 13, 2) || '_v' end as FP, -- foreign phone number 
            case when substr(_L_FINGERPRINT_3, 1, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 1, 1) end as GOVT_BENE, -- government benefits code    
            case when substr(_L_FINGERPRINT_3, 2, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 2, 1) || '_v' end as PRVT_CUST, -- private customer flag    
            case when substr(_L_FINGERPRINT_3, 3, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 3, 1) || '_v' else 'unknown' end as HL_ASOC, -- any association with a home loan    
            case when substr(_L_FINGERPRINT_3, 4, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 4, 1) || '_v' else 'unknown' end as CORP_EMPL, -- employed by large corporate  
            case when substr(_L_FINGERPRINT_3, 6, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 6, 1) || '_v' else 'unknown' end as TRUSTEE, -- trustee flag/part of a trust fund    
            case when substr(_L_FINGERPRINT_3, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 16, 1) || '_v' else 'unknown' end as INTL_STU, -- international student flag    
            case when substr(_L_FINGERPRINT_3, 12, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 12, 1) || '_v' end as MAR_STS_ORG_STR, -- marital status/business structure (person/org diff)    
            case when substr(_L_FINGERPRINT_3, 13, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 13, 1) || '_v' end as EMPL_CLAS_LGL_STS, -- employment classification or org status    
            case when substr(_L_FINGERPRINT_3, 14, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 14, 1) || '_v' end as HOME_OWN, -- home ownership status     
        
            -- time differences
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_x_npp_out_sum_date AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) AS _x_npp_out_sum_date_diff,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CC_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CC_DT_DIFF, -- customer recent credit card application datetime
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_ONLINE_PL_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_ONLINE_PL_DT_DIFF, -- customer recent personal loan application datetime
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CIF_ESTABLISH_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CIF_ESTABLISH_DT_DIFF, -- when the customer is established
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_a_ecv_document_dt AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _a_ecv_document_dt_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_AUTO_DEC_CP_PP_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_AUTO_DEC_CP_PP_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CAPP_NOTIFY_OPT_OUT_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP1_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP1_MLW_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP2_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP2_MLW_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP5_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP5_MLW_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP7_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP7_MLW_DT_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_1 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_1_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_2 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_2_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_3 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_3_DIFF,
            COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_4 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_4_DIFF
        from (
            select
                to_number(dtl_ex_0_n_064)||dtl_ex_0_n_065||dtl_ex_0_n_066 as tran_id, -- create tran_id here
                *,
                TO_TIMESTAMP(TTS_TRAN_DATE_ALT || ' ' || TTS_TRAN_TIME_ALT, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
                EXTRACT(HOUR FROM TRANSACTIONDATETIME) + EXTRACT(MINUTE FROM TRANSACTIONDATETIME) / 60.0 as TRANSACTION_HOUR
            from PRD_P01_DMN_FRAUMD.lcl.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT
            where TTS_TRAN_DATE_ALT between '20250206' and '20250207'
              and hdr_activity_type = 'CA'
              and SSX_CUST_NUM <> ''
              and SSX_CUST_NUM IS NOT NULL
              and DTL_CA_CLIENT_AMT IS NOT NULL
            ) fdp
        )
        , date_series AS (
        SELECT DISTINCT
            tran_d
        FROM
            lcl.cust_tran_prfl
        order by tran_d
        )
        , hourly_data_CARD_MERC_CATG_TRAN_PRFL AS (
        SELECT
            card_i,
            merc_catg_c,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F
        FROM
            lcl.CARD_MERC_CATG_TRAN_PRFL
        ),
        all_dates_CARD_MERC_CATG_TRAN_PRFL AS (
        SELECT
            card_i,
            merc_catg_c,
            ds.tran_d
        FROM
            (SELECT DISTINCT card_i, merc_catg_c FROM lcl.CARD_MERC_CATG_TRAN_PRFL) ca
        CROSS JOIN date_series ds
        ),
        daily_data_CARD_MERC_CATG_TRAN_PRFL AS (
        SELECT
            ad.card_i,
            ad.merc_catg_c,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
        FROM
            all_dates_CARD_MERC_CATG_TRAN_PRFL ad
        LEFT JOIN hourly_data_CARD_MERC_CATG_TRAN_PRFL hd
        ON ad.card_i = hd.card_i AND ad.merc_catg_c = hd.merc_catg_c AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.card_i,
            ad.merc_catg_c,
            DATE_TRUNC('day', ad.tran_d)
        )
        , aggregated_data_CARD_MERC_CATG_TRAN_PRFL AS (
        SELECT
            card_i,
            merc_catg_c,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_SUM_N,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            daily_data_CARD_MERC_CATG_TRAN_PRFL
        )
        , AGG_CARD_MERC_CATG_TRAN_PRFL AS (
        SELECT
            card_i, --as chl_id_card_num,
            merc_catg_c,
            window_start_date,
            -- window_start_date + INTERVAL '2 days' AS window_end_date,
            CMC_SUM_TRAN_CNT_Q,
            CMC_SUM_UPST_APRD_TRAN_CNT_Q,
            CMC_SUM_TRAN_SUM_N,
            CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
            CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
            CMC_SUM_FINL_APRD_TRAN_CNT_Q,
            CMC_SUM_UPST_APRD_TRAN_SUM_N,
            CMC_SUM_FINL_APRD_TRAN_SUM_N,
            CMC_SUM_FDP_RULE_TRIG_CNT_Q,
            CMC_SUM_DOMS_TRAN_CNT_Q,
            CMC_SUM_OSEA_TRAN_CNT_Q,
            CMC_SUM_DOMS_TRAN_SUM_N,
            CMC_SUM_OSEA_TRAN_SUM_N,
            CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            CMC_SUM_3DS_TRAN_CNT_Q,
            CMC_SUM_N3D_TRAN_CNT_Q,
            CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            CMC_SUM_3DS_TRAN_SUM_N,
            CMC_SUM_N3D_TRAN_SUM_N,
            CMC_SUM_CARD_PRES_TRAN_CNT_Q,
            CMC_SUM_ATM_TRAN_CNT_Q,
            CMC_SUM_FALL_BACK_TRAN_CNT_Q,
            CMC_SUM_CHIP_TRAN_CNT_Q,
            CMC_SUM_PAY_PASS_TRAN_CNT_Q,
            CMC_SUM_CARD_PRES_TRAN_SUM_N,
            CMC_SUM_ATM_TRAN_SUM_N,
            CMC_SUM_FALL_BACK_TRAN_SUM_N,
            CMC_SUM_CHIP_TRAN_SUM_N,
            CMC_SUM_PAY_PASS_TRAN_SUM_N,
            CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            CMC_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            aggregated_data_CARD_MERC_CATG_TRAN_PRFL
        ORDER BY
            card_i,
            merc_catg_c,
            window_start_date
        )
        , hourly_data_CARD_TRAN_PRFL AS (
            SELECT
                card_i,
                tran_d,
                TRAN_CNT_Q,
                UPST_APRD_TRAN_CNT_Q,
                UPST_DCLN_TRAN_CNT_Q,
                RULE_DCLN_TRAN_CNT_Q,
                FINL_APRD_TRAN_CNT_Q,
                INCO_EXPY_CNT_Q,
                INCO_CVVA_CNT_Q,
                INCO_PIN_CNT_Q,
                OVER_LIMT_DCLN_CNT_Q,
                TRAN_SUM_N,
                UPST_APRD_TRAN_SUM_N,
                UPST_DCLN_TRAN_SUM_N,
                RULE_DCLN_TRAN_SUM_N,
                FINL_APRD_TRAN_SUM_N,
                INCO_EXPY_SUM_N,
                INCO_CVVA_SUM_N,
                INCO_PIN_SUM_N,
                OVER_LIMT_DCLN_SUM_N,
                FDP_RULE_TRIG_CNT_Q,
                DOMS_TRAN_CNT_Q,
                OSEA_TRAN_CNT_Q,
                DOMS_TRAN_SUM_N,
                OSEA_TRAN_SUM_N,
                CARD_NOT_PRES_TRAN_CNT_Q,
                ""3DS_TRAN_CNT_Q"",
                N3D_TRAN_CNT_Q,
                CARD_NOT_PRES_TRAN_SUM_N,
                ""3DS_TRAN_SUM_N"",
                N3D_TRAN_SUM_N,
                CARD_PRES_TRAN_CNT_Q,
                ATM_TRAN_CNT_Q,
                FALL_BACK_TRAN_CNT_Q,
                CHIP_TRAN_CNT_Q,
                PAY_PASS_TRAN_CNT_Q,
                CARD_PRES_TRAN_SUM_N,
                ATM_TRAN_SUM_N,
                FALL_BACK_TRAN_SUM_N,
                CHIP_TRAN_SUM_N,
                PAY_PASS_TRAN_SUM_N,
                CAPP_PSWD_CHNG_CNT_Q,
                CAPP_DVIC_REGR_CNT_Q,
                CAPP_LOGN_CNT_Q,
                NTB_LOGN_CNT_Q,
                VIEW_CARD_DETL_CNT_Q,
                CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                CUV_FRAU_RULE_PUSH_SENT_F,
                CUV_RULE_PUSH_SENT_F,
                CUV_WHLI_F,
                CUV_DO_NOT_CTCT_F
            FROM
                lcl.card_tran_prfl
        ),
        all_dates_CARD_TRAN_PRFL AS (
            SELECT
                card_i,
                ds.tran_d
            FROM
                (SELECT DISTINCT card_i FROM lcl.card_tran_prfl) ca
            CROSS JOIN date_series ds
        ),
        daily_data_CARD_TRAN_PRFL AS (
            SELECT
                ad.card_i,
                DATE_TRUNC('day', ad.tran_d) AS activity_day,
                COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.INCO_EXPY_CNT_Q), 0) AS DAILY_INCO_EXPY_CNT_Q,
                COALESCE(SUM(hd.INCO_CVVA_CNT_Q), 0) AS DAILY_INCO_CVVA_CNT_Q,
                COALESCE(SUM(hd.INCO_PIN_CNT_Q), 0) AS DAILY_INCO_PIN_CNT_Q,
                COALESCE(SUM(hd.OVER_LIMT_DCLN_CNT_Q), 0) AS DAILY_OVER_LIMT_DCLN_CNT_Q,
                COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
                COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.UPST_DCLN_TRAN_SUM_N), 0) AS DAILY_UPST_DCLN_TRAN_SUM_N,
                COALESCE(SUM(hd.RULE_DCLN_TRAN_SUM_N), 0) AS DAILY_RULE_DCLN_TRAN_SUM_N,
                COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.INCO_EXPY_SUM_N), 0) AS DAILY_INCO_EXPY_SUM_N,
                COALESCE(SUM(hd.INCO_CVVA_SUM_N), 0) AS DAILY_INCO_CVVA_SUM_N,
                COALESCE(SUM(hd.INCO_PIN_SUM_N), 0) AS DAILY_INCO_PIN_SUM_N,
                COALESCE(SUM(hd.OVER_LIMT_DCLN_SUM_N), 0) AS DAILY_OVER_LIMT_DCLN_SUM_N,
                COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
                COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
                COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
                COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
                COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
                COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
                COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
                COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
                COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
                COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
                COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
                COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
                COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
                COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
                COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
                COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
                COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_WHLI_F), 0) AS DAILY_CUV_WHLI_F,
                COALESCE(MAX(hd.CUV_DO_NOT_CTCT_F), 0) AS DAILY_CUV_DO_NOT_CTCT_F
        
            FROM
                all_dates_CARD_TRAN_PRFL ad
            LEFT JOIN hourly_data_CARD_TRAN_PRFL hd
            ON ad.card_i = hd.card_i AND ad.tran_d = hd.tran_d
            GROUP BY
                ad.card_i,
                DATE_TRUNC('day', ad.tran_d)
        ),
        aggregated_data_CARD_TRAN_PRFL AS (
            SELECT
                card_i,
                activity_day AS window_start_date,
                SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_CNT_Q,
                SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
                SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
                SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_CNT_Q,
                SUM(DAILY_INCO_EXPY_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_CNT_Q,
                SUM(DAILY_INCO_CVVA_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_CNT_Q,
                SUM(DAILY_INCO_PIN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_CNT_Q,
                SUM(DAILY_OVER_LIMT_DCLN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
                SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_SUM_N,
                SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_SUM_N,
                SUM(DAILY_UPST_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_SUM_N,
                SUM(DAILY_RULE_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_SUM_N,
                SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_SUM_N,
                SUM(DAILY_INCO_EXPY_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_SUM_N,
                SUM(DAILY_INCO_CVVA_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_SUM_N,
                SUM(DAILY_INCO_PIN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_SUM_N,
                SUM(DAILY_OVER_LIMT_DCLN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_SUM_N,
                SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FDP_RULE_TRIG_CNT_Q,
                SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_CNT_Q,
                SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_CNT_Q,
                SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_SUM_N,
                SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_SUM_N,
                SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
                SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_CNT_Q,
                SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_CNT_Q,
                SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
                SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_SUM_N,
                SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_SUM_N,
                SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_CNT_Q,
                SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_CNT_Q,
                SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_CNT_Q,
                SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_CNT_Q,
                SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_CNT_Q,
                SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_SUM_N,
                SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_SUM_N,
                SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_SUM_N,
                SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_SUM_N,
                SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_SUM_N,
                SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
                SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
                SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_LOGN_CNT_Q,
                SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_NTB_LOGN_CNT_Q,
                SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_VIEW_CARD_DETL_CNT_Q,
                MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_WHLI_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_WHLI_F,
                MAX(DAILY_CUV_DO_NOT_CTCT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_DO_NOT_CTCT_F
            FROM
                daily_data_CARD_TRAN_PRFL
        )
        , AGG_CARD_TRAN_PRFL AS (
        SELECT
            card_i, --as chl_id_card_num,
            window_start_date,
            -- window_start_date + INTERVAL '2 days' AS window_end_date,
            CRD_SUM_TRAN_CNT_Q,
            CRD_SUM_UPST_APRD_TRAN_CNT_Q,
            CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
            CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
            CRD_SUM_FINL_APRD_TRAN_CNT_Q,
            CRD_SUM_INCO_EXPY_CNT_Q,
            CRD_SUM_INCO_CVVA_CNT_Q,
            CRD_SUM_INCO_PIN_CNT_Q,
            CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
            CRD_SUM_TRAN_SUM_N,
            CRD_SUM_UPST_APRD_TRAN_SUM_N,
            CRD_SUM_UPST_DCLN_TRAN_SUM_N,
            CRD_SUM_RULE_DCLN_TRAN_SUM_N,
            CRD_SUM_FINL_APRD_TRAN_SUM_N,
            CRD_SUM_INCO_EXPY_SUM_N,
            CRD_SUM_INCO_CVVA_SUM_N,
            CRD_SUM_INCO_PIN_SUM_N,
            CRD_SUM_OVER_LIMT_DCLN_SUM_N,
            CRD_SUM_FDP_RULE_TRIG_CNT_Q,
            CRD_SUM_DOMS_TRAN_CNT_Q,
            CRD_SUM_OSEA_TRAN_CNT_Q,
            CRD_SUM_DOMS_TRAN_SUM_N,
            CRD_SUM_OSEA_TRAN_SUM_N,
            CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            CRD_SUM_3DS_TRAN_CNT_Q,
            CRD_SUM_N3D_TRAN_CNT_Q,
            CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            CRD_SUM_3DS_TRAN_SUM_N,
            CRD_SUM_N3D_TRAN_SUM_N,
            CRD_SUM_CARD_PRES_TRAN_CNT_Q,
            CRD_SUM_ATM_TRAN_CNT_Q,
            CRD_SUM_FALL_BACK_TRAN_CNT_Q,
            CRD_SUM_CHIP_TRAN_CNT_Q,
            CRD_SUM_PAY_PASS_TRAN_CNT_Q,
            CRD_SUM_CARD_PRES_TRAN_SUM_N,
            CRD_SUM_ATM_TRAN_SUM_N,
            CRD_SUM_FALL_BACK_TRAN_SUM_N,
            CRD_SUM_CHIP_TRAN_SUM_N,
            CRD_SUM_PAY_PASS_TRAN_SUM_N,
            CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
            CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
            CRD_SUM_CAPP_LOGN_CNT_Q,
            CRD_SUM_NTB_LOGN_CNT_Q,
            CRD_SUM_VIEW_CARD_DETL_CNT_Q,
            CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            CRD_MAX_CUV_RULE_PUSH_SENT_F,
            CRD_MAX_CUV_WHLI_F,
            CRD_MAX_CUV_DO_NOT_CTCT_F
        FROM
            aggregated_data_CARD_TRAN_PRFL
        ORDER BY
            card_i,
            window_start_date
        )
        , hourly_data_cust_merc_acqr_tran_prfl AS (
            SELECT
                cust_i,
                merc_i,
                acqr_i,
                tran_d,
                TRAN_CNT_Q,
                UPST_APRD_TRAN_CNT_Q,
                UPST_DCLN_TRAN_CNT_Q,
                RULE_DCLN_TRAN_CNT_Q,
                FINL_APRD_TRAN_CNT_Q,
                TRAN_SUM_N,
                UPST_APRD_TRAN_SUM_N,
                FINL_APRD_TRAN_SUM_N,
                FDP_RULE_TRIG_CNT_Q,
                DOMS_TRAN_CNT_Q,
                OSEA_TRAN_CNT_Q,
                DOMS_TRAN_SUM_N,
                OSEA_TRAN_SUM_N,
                CARD_NOT_PRES_TRAN_CNT_Q,
                ""3DS_TRAN_CNT_Q"",
                N3D_TRAN_CNT_Q,
                CARD_NOT_PRES_TRAN_SUM_N,
                ""3DS_TRAN_SUM_N"",
                N3D_TRAN_SUM_N,
                CARD_PRES_TRAN_CNT_Q,
                ATM_TRAN_CNT_Q,
                FALL_BACK_TRAN_CNT_Q,
                CHIP_TRAN_CNT_Q,
                PAY_PASS_TRAN_CNT_Q,
                CARD_PRES_TRAN_SUM_N,
                ATM_TRAN_SUM_N,
                FALL_BACK_TRAN_SUM_N,
                CHIP_TRAN_SUM_N,
                PAY_PASS_TRAN_SUM_N,
                CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                CUV_FRAU_RULE_PUSH_SENT_F,
                CUV_RULE_PUSH_SENT_F
            FROM
                lcl.cust_merc_acqr_tran_prfl
        ),
        all_dates_cust_merc_acqr_tran_prfl AS (
            SELECT
                cust_i,
                merc_i,
                acqr_i,
                ds.tran_d
            FROM
                (SELECT DISTINCT cust_i, merc_i, acqr_i FROM lcl.cust_merc_acqr_tran_prfl) ca
            CROSS JOIN date_series ds
        ),
        daily_data_cust_merc_acqr_tran_prfl AS (
            SELECT
                ad.cust_i,
                ad.merc_i,
                ad.acqr_i,
                DATE_TRUNC('day', ad.tran_d) AS activity_day,
                COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
                COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
                COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
                COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
                COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
                COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
                COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
                COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
                COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
                COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
                COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
                COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
                COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
            FROM
                all_dates_cust_merc_acqr_tran_prfl ad
            LEFT JOIN hourly_data_cust_merc_acqr_tran_prfl hd
            ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
            GROUP BY
                ad.cust_i,
                ad.merc_i,
                ad.acqr_i,
                DATE_TRUNC('day', ad.tran_d)
        ),
        aggregated_data_cust_merc_acqr_tran_prfl AS (
            SELECT
                cust_i,
                merc_i,
                acqr_i,
                activity_day AS window_start_date,
                SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
                SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
                SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
                SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
                SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
                SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
                SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
                SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
                SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
                SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
                SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
                SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
                SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
                SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
                SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
                SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
                SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
                SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
                SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
                SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
                SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
                SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
                SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
                SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
                SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
                SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
                SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
                MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
            FROM
                daily_data_cust_merc_acqr_tran_prfl
        )
        , agg_cust_merc_acqr_tran_prfl as (
        SELECT
            cust_i, -- as ssx_cust_num,
            merc_i,
            acqr_i,
            window_start_date,
            -- window_start_date + INTERVAL '2 days' AS window_end_date,
            CMA_SUM_TRAN_CNT_Q,
            CMA_SUM_UPST_APRD_TRAN_CNT_Q,
            CMA_SUM_TRAN_SUM_N,
            CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
            CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
            CMA_SUM_FINL_APRD_TRAN_CNT_Q,
            CMA_SUM_UPST_APRD_TRAN_SUM_N,
            CMA_SUM_FINL_APRD_TRAN_SUM_N,
            CMA_SUM_FDP_RULE_TRIG_CNT_Q,
            CMA_SUM_DOMS_TRAN_CNT_Q,
            CMA_SUM_OSEA_TRAN_CNT_Q,
            CMA_SUM_DOMS_TRAN_SUM_N,
            CMA_SUM_OSEA_TRAN_SUM_N,
            CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            CMA_SUM_3DS_TRAN_CNT_Q,
            CMA_SUM_N3D_TRAN_CNT_Q,
            CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            CMA_SUM_3DS_TRAN_SUM_N,
            CMA_SUM_N3D_TRAN_SUM_N,
            CMA_SUM_CARD_PRES_TRAN_CNT_Q,
            CMA_SUM_ATM_TRAN_CNT_Q,
            CMA_SUM_FALL_BACK_TRAN_CNT_Q,
            CMA_SUM_CHIP_TRAN_CNT_Q,
            CMA_SUM_PAY_PASS_TRAN_CNT_Q,
            CMA_SUM_CARD_PRES_TRAN_SUM_N,
            CMA_SUM_ATM_TRAN_SUM_N,
            CMA_SUM_FALL_BACK_TRAN_SUM_N,
            CMA_SUM_CHIP_TRAN_SUM_N,
            CMA_SUM_PAY_PASS_TRAN_SUM_N,
            CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            CMA_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            aggregated_data_cust_merc_acqr_tran_prfl
        ORDER BY
            cust_i,
            merc_i,
            acqr_i,
            window_start_date
            )
        , hourly_data_merc_acqr_tran_prfl AS (
            SELECT
                merc_i,
                acqr_i,
                tran_d,
                TRAN_CNT_Q,
                UPST_APRD_TRAN_CNT_Q,
                UPST_DCLN_TRAN_CNT_Q,
                RULE_DCLN_TRAN_CNT_Q,
                FINL_APRD_TRAN_CNT_Q,
                TRAN_SUM_N,
                UPST_APRD_TRAN_SUM_N,
                FINL_APRD_TRAN_SUM_N,
                FDP_RULE_TRIG_CNT_Q,
                DOMS_TRAN_CNT_Q,
                OSEA_TRAN_CNT_Q,
                DOMS_TRAN_SUM_N,
                OSEA_TRAN_SUM_N,
                CARD_NOT_PRES_TRAN_CNT_Q,
                ""3DS_TRAN_CNT_Q"",
                N3D_TRAN_CNT_Q,
                CARD_NOT_PRES_TRAN_SUM_N,
                ""3DS_TRAN_SUM_N"",
                N3D_TRAN_SUM_N,
                CARD_PRES_TRAN_CNT_Q,
                ATM_TRAN_CNT_Q,
                FALL_BACK_TRAN_CNT_Q,
                CHIP_TRAN_CNT_Q,
                PAY_PASS_TRAN_CNT_Q,
                CARD_PRES_TRAN_SUM_N,
                ATM_TRAN_SUM_N,
                FALL_BACK_TRAN_SUM_N,
                CHIP_TRAN_SUM_N,
                PAY_PASS_TRAN_SUM_N
            FROM
                lcl.merc_acqr_tran_prfl
        ),
        all_dates_merc_acqr_tran_prfl AS (
            SELECT
                merc_i,
                acqr_i,
                ds.tran_d
            FROM
                (SELECT DISTINCT merc_i, acqr_i FROM lcl.merc_acqr_tran_prfl) ca
            CROSS JOIN date_series ds
        ),
        daily_data_merc_acqr_tran_prfl AS (
            SELECT
                ad.merc_i,
                ad.acqr_i,
                DATE_TRUNC('day', ad.tran_d) AS activity_day,
                COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
                COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
                COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
                COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
                COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
                COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
                COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
                COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
                COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
                COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
                COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
                COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N
            FROM
                all_dates_merc_acqr_tran_prfl ad
            LEFT JOIN hourly_data_merc_acqr_tran_prfl hd
            ON ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
            GROUP BY
                ad.merc_i,
                ad.acqr_i,
                DATE_TRUNC('day', ad.tran_d)
        ),
        aggregated_data_merc_acqr_tran_prfl AS (
            SELECT
                merc_i,
                acqr_i,
                activity_day AS window_start_date,
                SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
                SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_SUM_N,
                SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
                SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
                SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_SUM_N,
                SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_SUM_N,
                SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
                SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_CNT_Q,
                SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_CNT_Q,
                SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_SUM_N,
                SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_SUM_N,
                SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
                SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_CNT_Q,
                SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_CNT_Q,
                SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
                SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_SUM_N,
                SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_SUM_N,
                SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
                SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_CNT_Q,
                SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
                SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_CNT_Q,
                SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
                SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_SUM_N,
                SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_SUM_N,
                SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_SUM_N,
                SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_SUM_N,
                SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_SUM_N
            FROM
                daily_data_merc_acqr_tran_prfl
        )
        , AGG_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            window_start_date,
            -- window_start_date + INTERVAL '2 days' AS window_end_date,
            MAQ_SUM_TRAN_CNT_Q,
            MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
            MAQ_SUM_TRAN_SUM_N,
            MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
            MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
            MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
            MAQ_SUM_UPST_APRD_TRAN_SUM_N,
            MAQ_SUM_FINL_APRD_TRAN_SUM_N,
            MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
            MAQ_SUM_DOMS_TRAN_CNT_Q,
            MAQ_SUM_OSEA_TRAN_CNT_Q,
            MAQ_SUM_DOMS_TRAN_SUM_N,
            MAQ_SUM_OSEA_TRAN_SUM_N,
            MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            MAQ_SUM_3DS_TRAN_CNT_Q,
            MAQ_SUM_N3D_TRAN_CNT_Q,
            MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            MAQ_SUM_3DS_TRAN_SUM_N,
            MAQ_SUM_N3D_TRAN_SUM_N,
            MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
            MAQ_SUM_ATM_TRAN_CNT_Q,
            MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
            MAQ_SUM_CHIP_TRAN_CNT_Q,
            MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
            MAQ_SUM_CARD_PRES_TRAN_SUM_N,
            MAQ_SUM_ATM_TRAN_SUM_N,
            MAQ_SUM_FALL_BACK_TRAN_SUM_N,
            MAQ_SUM_CHIP_TRAN_SUM_N,
            MAQ_SUM_PAY_PASS_TRAN_SUM_N
        FROM
            aggregated_data_merc_acqr_tran_prfl
        ORDER BY
            merc_i,
            acqr_i,
            window_start_date
        )
        , hourly_data_cust_tran_prfl AS (
            SELECT
                cust_i,
                tran_d,
                TRAN_CNT_Q,
                UPST_APRD_TRAN_CNT_Q,
                TRAN_SUM_N,
                UPST_DCLN_TRAN_CNT_Q,
                RULE_DCLN_TRAN_CNT_Q,
                FINL_APRD_TRAN_CNT_Q,
                UPST_APRD_TRAN_SUM_N,
                FINL_APRD_TRAN_SUM_N,
                FDP_RULE_TRIG_CNT_Q,
                DOMS_TRAN_CNT_Q,
                OSEA_TRAN_CNT_Q,
                DOMS_TRAN_SUM_N,
                OSEA_TRAN_SUM_N,
                CARD_NOT_PRES_TRAN_CNT_Q,
                ""3DS_TRAN_CNT_Q"",
                N3D_TRAN_CNT_Q,
                CARD_NOT_PRES_TRAN_SUM_N,
                ""3DS_TRAN_SUM_N"",
                N3D_TRAN_SUM_N,
                CARD_PRES_TRAN_CNT_Q,
                ATM_TRAN_CNT_Q,
                FALL_BACK_TRAN_CNT_Q,
                CHIP_TRAN_CNT_Q,
                PAY_PASS_TRAN_CNT_Q,
                CARD_PRES_TRAN_SUM_N,
                ATM_TRAN_SUM_N,
                FALL_BACK_TRAN_SUM_N,
                CHIP_TRAN_SUM_N,
                PAY_PASS_TRAN_SUM_N,
                CAPP_PSWD_CHNG_CNT_Q,
                CAPP_DVIC_REGR_CNT_Q,
                CAPP_LOGN_CNT_Q,
                NTB_LOGN_CNT_Q,
                VIEW_CARD_DETL_CNT_Q,
                CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                CUV_FRAU_RULE_PUSH_SENT_F,
                CUV_RULE_PUSH_SENT_F
            FROM
                lcl.cust_tran_prfl
        ),
        all_dates_cust_tran_prfl AS (
            SELECT
                cust_i,
                ds.tran_d
            FROM
                (SELECT DISTINCT cust_i FROM lcl.cust_tran_prfl) ca
            CROSS JOIN date_series ds
        ),
        daily_data_cust_tran_prfl AS (
            SELECT
                ad.cust_i,
                DATE_TRUNC('day', ad.tran_d) AS activity_day,
                COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
                COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
                COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
                COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
                COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
                COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
                COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
                COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
                COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
                COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
                COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
                COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
                COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
                COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
                COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
                COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
                COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
                COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
                COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
                COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
                COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
                COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
                COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
                COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
                COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
                COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
                COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
            FROM
                all_dates_cust_tran_prfl ad
            LEFT JOIN hourly_data_cust_tran_prfl hd
            ON ad.cust_i = hd.cust_i AND ad.tran_d = hd.tran_d
            GROUP BY
                ad.cust_i,
                DATE_TRUNC('day', ad.tran_d)
        ),
        aggregated_data_cust_tran_prfl AS (
            SELECT
                cust_i,
                activity_day AS window_start_date,
                SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_CNT_Q,
                SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_SUM_N,
                SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
                SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
                SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_CNT_Q,
                SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_SUM_N,
                SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_SUM_N,
                SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FDP_RULE_TRIG_CNT_Q,
                SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_CNT_Q,
                SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_CNT_Q,
                SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_SUM_N,
                SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_SUM_N,
                SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
                SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_CNT_Q,
                SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_CNT_Q,
                SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
                SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_SUM_N,
                SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_SUM_N,
                SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_CNT_Q,
                SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_CNT_Q,
                SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_CNT_Q,
                SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_CNT_Q,
                SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_CNT_Q,
                SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_SUM_N,
                SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_SUM_N,
                SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_SUM_N,
                SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_SUM_N,
                SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_SUM_N,
                SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
                SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
                SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_LOGN_CNT_Q,
                SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_NTB_LOGN_CNT_Q,
                SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_VIEW_CARD_DETL_CNT_Q,
                MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
                MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_RULE_PUSH_SENT_F
            FROM
                daily_data_cust_tran_prfl
        )
        , AGG_cust_tran_prfl AS (
        SELECT
            cust_i, -- as ssx_cust_num,
            window_start_date,
            -- window_start_date + INTERVAL '2 days' AS window_end_date,
            CUS_SUM_TRAN_CNT_Q,
            CUS_SUM_UPST_APRD_TRAN_CNT_Q,
            CUS_SUM_TRAN_SUM_N,
            CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
            CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
            CUS_SUM_FINL_APRD_TRAN_CNT_Q,
            CUS_SUM_UPST_APRD_TRAN_SUM_N,
            CUS_SUM_FINL_APRD_TRAN_SUM_N,
            CUS_SUM_FDP_RULE_TRIG_CNT_Q,
            CUS_SUM_DOMS_TRAN_CNT_Q,
            CUS_SUM_OSEA_TRAN_CNT_Q,
            CUS_SUM_DOMS_TRAN_SUM_N,
            CUS_SUM_OSEA_TRAN_SUM_N,
            CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            CUS_SUM_3DS_TRAN_CNT_Q,
            CUS_SUM_N3D_TRAN_CNT_Q,
            CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            CUS_SUM_3DS_TRAN_SUM_N,
            CUS_SUM_N3D_TRAN_SUM_N,
            CUS_SUM_CARD_PRES_TRAN_CNT_Q,
            CUS_SUM_ATM_TRAN_CNT_Q,
            CUS_SUM_FALL_BACK_TRAN_CNT_Q,
            CUS_SUM_CHIP_TRAN_CNT_Q,
            CUS_SUM_PAY_PASS_TRAN_CNT_Q,
            CUS_SUM_CARD_PRES_TRAN_SUM_N,
            CUS_SUM_ATM_TRAN_SUM_N,
            CUS_SUM_FALL_BACK_TRAN_SUM_N,
            CUS_SUM_CHIP_TRAN_SUM_N,
            CUS_SUM_PAY_PASS_TRAN_SUM_N,
            CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
            CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
            CUS_SUM_CAPP_LOGN_CNT_Q,
            CUS_SUM_NTB_LOGN_CNT_Q,
            CUS_SUM_VIEW_CARD_DETL_CNT_Q,
            CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            CUS_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            aggregated_data_cust_tran_prfl
        ORDER BY
            cust_i,
            window_start_date
        )    
    SELECT 
        a.*,
        b.CUS_SUM_TRAN_CNT_Q,
        b.CUS_SUM_UPST_APRD_TRAN_CNT_Q,
        b.CUS_SUM_TRAN_SUM_N,
        b.CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
        b.CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
        b.CUS_SUM_FINL_APRD_TRAN_CNT_Q,
        b.CUS_SUM_UPST_APRD_TRAN_SUM_N,
        b.CUS_SUM_FINL_APRD_TRAN_SUM_N,
        b.CUS_SUM_FDP_RULE_TRIG_CNT_Q,
        b.CUS_SUM_DOMS_TRAN_CNT_Q,
        b.CUS_SUM_OSEA_TRAN_CNT_Q,
        b.CUS_SUM_DOMS_TRAN_SUM_N,
        b.CUS_SUM_OSEA_TRAN_SUM_N,
        b.CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        b.CUS_SUM_3DS_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
        b.CUS_SUM_N3D_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
        b.CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        b.CUS_SUM_3DS_TRAN_SUM_N as CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
        b.CUS_SUM_N3D_TRAN_SUM_N as CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
        b.CUS_SUM_CARD_PRES_TRAN_CNT_Q,
        b.CUS_SUM_ATM_TRAN_CNT_Q,
        b.CUS_SUM_FALL_BACK_TRAN_CNT_Q,
        b.CUS_SUM_CHIP_TRAN_CNT_Q,
        b.CUS_SUM_PAY_PASS_TRAN_CNT_Q,
        b.CUS_SUM_CARD_PRES_TRAN_SUM_N,
        b.CUS_SUM_ATM_TRAN_SUM_N,
        b.CUS_SUM_FALL_BACK_TRAN_SUM_N,
        b.CUS_SUM_CHIP_TRAN_SUM_N,
        b.CUS_SUM_PAY_PASS_TRAN_SUM_N,
        b.CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
        b.CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
        b.CUS_SUM_CAPP_LOGN_CNT_Q,
        b.CUS_SUM_NTB_LOGN_CNT_Q,
        b.CUS_SUM_VIEW_CARD_DETL_CNT_Q,
        b.CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_HR_RULE_FLAG,
        b.CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
        b.CUS_MAX_CUV_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_RULE_FLAG,
        d.CRD_SUM_TRAN_CNT_Q,
        d.CRD_SUM_UPST_APRD_TRAN_CNT_Q,
        d.CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
        d.CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
        d.CRD_SUM_FINL_APRD_TRAN_CNT_Q,
        d.CRD_SUM_INCO_EXPY_CNT_Q,
        d.CRD_SUM_INCO_CVVA_CNT_Q,
        d.CRD_SUM_INCO_PIN_CNT_Q,
        d.CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
        d.CRD_SUM_TRAN_SUM_N,
        d.CRD_SUM_UPST_APRD_TRAN_SUM_N,
        d.CRD_SUM_UPST_DCLN_TRAN_SUM_N,
        d.CRD_SUM_RULE_DCLN_TRAN_SUM_N,
        d.CRD_SUM_FINL_APRD_TRAN_SUM_N,
        d.CRD_SUM_INCO_EXPY_SUM_N,
        d.CRD_SUM_INCO_CVVA_SUM_N,
        d.CRD_SUM_INCO_PIN_SUM_N,
        d.CRD_SUM_OVER_LIMT_DCLN_SUM_N,
        d.CRD_SUM_FDP_RULE_TRIG_CNT_Q,
        d.CRD_SUM_DOMS_TRAN_CNT_Q,
        d.CRD_SUM_OSEA_TRAN_CNT_Q,
        d.CRD_SUM_DOMS_TRAN_SUM_N,
        d.CRD_SUM_OSEA_TRAN_SUM_N,
        d.CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        d.CRD_SUM_3DS_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
        d.CRD_SUM_N3D_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
        d.CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        d.CRD_SUM_3DS_TRAN_SUM_N as CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
        d.CRD_SUM_N3D_TRAN_SUM_N as CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
        d.CRD_SUM_CARD_PRES_TRAN_CNT_Q,
        d.CRD_SUM_ATM_TRAN_CNT_Q,
        d.CRD_SUM_FALL_BACK_TRAN_CNT_Q,
        d.CRD_SUM_CHIP_TRAN_CNT_Q,
        d.CRD_SUM_PAY_PASS_TRAN_CNT_Q,
        d.CRD_SUM_CARD_PRES_TRAN_SUM_N,
        d.CRD_SUM_ATM_TRAN_SUM_N,
        d.CRD_SUM_FALL_BACK_TRAN_SUM_N,
        d.CRD_SUM_CHIP_TRAN_SUM_N,
        d.CRD_SUM_PAY_PASS_TRAN_SUM_N,
        d.CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
        d.CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
        d.CRD_SUM_CAPP_LOGN_CNT_Q,
        d.CRD_SUM_NTB_LOGN_CNT_Q,
        d.CRD_SUM_VIEW_CARD_DETL_CNT_Q,
        d.CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_HIGH_RISK_RULE_PUSH_SENT_F,
        d.CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_FRAU_RULE_PUSH_SENT_F,
        d.CRD_MAX_CUV_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F,
        d.CRD_MAX_CUV_WHLI_F as CRD_MAX_CARD_USER_VARY_WHLI_F,
        d.CRD_MAX_CUV_DO_NOT_CTCT_F as CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F,
        f.CMA_SUM_TRAN_CNT_Q,
        f.CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        f.CMA_SUM_TRAN_SUM_N,
        f.CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        f.CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        f.CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        f.CMA_SUM_UPST_APRD_TRAN_SUM_N,
        f.CMA_SUM_FINL_APRD_TRAN_SUM_N,
        f.CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        f.CMA_SUM_DOMS_TRAN_CNT_Q,
        f.CMA_SUM_OSEA_TRAN_CNT_Q,
        f.CMA_SUM_DOMS_TRAN_SUM_N,
        f.CMA_SUM_OSEA_TRAN_SUM_N,
        f.CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        f.CMA_SUM_3DS_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
        f.CMA_SUM_N3D_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
        f.CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        f.CMA_SUM_3DS_TRAN_SUM_N as CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
        f.CMA_SUM_N3D_TRAN_SUM_N as CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
        f.CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        f.CMA_SUM_ATM_TRAN_CNT_Q,
        f.CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        f.CMA_SUM_CHIP_TRAN_CNT_Q,
        f.CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        f.CMA_SUM_CARD_PRES_TRAN_SUM_N,
        f.CMA_SUM_ATM_TRAN_SUM_N,
        f.CMA_SUM_FALL_BACK_TRAN_SUM_N,
        f.CMA_SUM_CHIP_TRAN_SUM_N,
        f.CMA_SUM_PAY_PASS_TRAN_SUM_N,
        f.CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_HR_RULE_FLAG,
        f.CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
        f.CMA_MAX_CUV_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_RULE_FLAG,
        g.CMC_SUM_TRAN_CNT_Q,
        g.CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        g.CMC_SUM_TRAN_SUM_N,
        g.CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        g.CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        g.CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        g.CMC_SUM_UPST_APRD_TRAN_SUM_N,
        g.CMC_SUM_FINL_APRD_TRAN_SUM_N,
        g.CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        g.CMC_SUM_DOMS_TRAN_CNT_Q,
        g.CMC_SUM_OSEA_TRAN_CNT_Q,
        g.CMC_SUM_DOMS_TRAN_SUM_N,
        g.CMC_SUM_OSEA_TRAN_SUM_N,
        g.CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        g.CMC_SUM_3DS_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
        g.CMC_SUM_N3D_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
        g.CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        g.CMC_SUM_3DS_TRAN_SUM_N as CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
        g.CMC_SUM_N3D_TRAN_SUM_N as CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
        g.CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        g.CMC_SUM_ATM_TRAN_CNT_Q,
        g.CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        g.CMC_SUM_CHIP_TRAN_CNT_Q,
        g.CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        g.CMC_SUM_CARD_PRES_TRAN_SUM_N,
        g.CMC_SUM_ATM_TRAN_SUM_N,
        g.CMC_SUM_FALL_BACK_TRAN_SUM_N,
        g.CMC_SUM_CHIP_TRAN_SUM_N,
        g.CMC_SUM_PAY_PASS_TRAN_SUM_N,
        g.CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_HR_RULE_FLAG,
        g.CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
        g.CMC_MAX_CUV_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_RULE_FLAG,
        h.MAQ_SUM_TRAN_CNT_Q,
        h.MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
        h.MAQ_SUM_TRAN_SUM_N,
        h.MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
        h.MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
        h.MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
        h.MAQ_SUM_UPST_APRD_TRAN_SUM_N,
        h.MAQ_SUM_FINL_APRD_TRAN_SUM_N,
        h.MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
        h.MAQ_SUM_DOMS_TRAN_CNT_Q,
        h.MAQ_SUM_OSEA_TRAN_CNT_Q,
        h.MAQ_SUM_DOMS_TRAN_SUM_N,
        h.MAQ_SUM_OSEA_TRAN_SUM_N,
        h.MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        h.MAQ_SUM_3DS_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
        h.MAQ_SUM_N3D_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
        h.MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        h.MAQ_SUM_3DS_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
        h.MAQ_SUM_N3D_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
        h.MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
        h.MAQ_SUM_ATM_TRAN_CNT_Q,
        h.MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
        h.MAQ_SUM_CHIP_TRAN_CNT_Q,
        h.MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
        h.MAQ_SUM_CARD_PRES_TRAN_SUM_N,
        h.MAQ_SUM_ATM_TRAN_SUM_N,
        h.MAQ_SUM_FALL_BACK_TRAN_SUM_N,
        h.MAQ_SUM_CHIP_TRAN_SUM_N,
        h.MAQ_SUM_PAY_PASS_TRAN_SUM_N
    FROM 
        BASE_TRAN a
    LEFT JOIN 
        AGG_CUST_TRAN_PRFL b
    ON 
        a.ssx_cust_num = b.cust_i
    AND 
        DATE_TRUNC('day', a.TRANSACTIONDATETIME) = b.WINDOW_START_DATE
    LEFT JOIN 
        AGG_CARD_TRAN_PRFL d
    ON 
        a.CHL_ID_CARD_NUM = d.card_i
    AND 
        DATE_TRUNC('day', a.TRANSACTIONDATETIME) = d.WINDOW_START_DATE
    LEFT JOIN 
        agg_cust_merc_acqr_tran_prfl f
    ON 
        a.ssx_cust_num = f.cust_i and a.chl_ct_term_owner_id = f.merc_i and a.chl_ct_acq_id = f.acqr_i
    AND 
        DATE_TRUNC('day', a.TRANSACTIONDATETIME) = f.WINDOW_START_DATE
    LEFT JOIN 
        agg_card_merc_catg_tran_prfl g
    ON 
        a.CHL_ID_CARD_NUM = g.card_i and a.chl_ct_mer_mcc = g.merc_catg_c
    AND 
        DATE_TRUNC('day', a.TRANSACTIONDATETIME) = g.WINDOW_START_DATE
    LEFT JOIN 
       agg_merc_acqr_tran_prfl h
    ON 
        a.chl_ct_term_owner_id = h.merc_i and a.chl_ct_acq_id = h.acqr_i
    AND 
        DATE_TRUNC('day', a.TRANSACTIONDATETIME) = h.WINDOW_START_DATE
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,6674951,6674.951,111.249183,1.854153,4X-LARGE,128,237.331584
01be5c0a-3204-b881-0000-c71d28860686,"WITH BASE_TRAN AS (
    select 
        -- identifier columns
        fdp.tran_id, -- use tran_id from the subquery
        SSX_CUST_NUM, -- we don't really need it for modeling, only for diagnostics
        chl_id_card_num,
        chl_ct_term_owner_id,
        chl_ct_acq_id,
        TRANSACTIONDATETIME,
        TRANSACTION_HOUR,
        -- SPLIT as SPLI,
    
        -- numerical UV columns, if missing then -1 as default
        COALESCE(CAST(DTL_CA_CLIENT_AMT AS FLOAT), -1) AS DTL_CA_CLIENT_AMT,
        COALESCE(CAST(_C_CC_GBL_N3D_1D_SUM_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_SUM_1,
        COALESCE(CAST(_c_cc_high_vel_apple_sum_1 AS FLOAT), -1) AS _c_cc_high_vel_apple_sum_1,
        COALESCE(CAST(_c_crd_apay_cnt_1 AS FLOAT), -1) AS _c_crd_apay_cnt_1,
        COALESCE(CAST(_C_CC_GBL_N3D_1D_CNT_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_CNT_1,
        COALESCE(CAST(_C_CC_CNP_VEL_6HR_SUM_1 AS FLOAT), -1) AS _C_CC_CNP_VEL_6HR_SUM_1,
        COALESCE(CAST(_C_CRD_APAY_SUM_1 AS FLOAT), -1) AS _C_CRD_APAY_SUM_1,
        COALESCE(CAST(_C_CRD_SAFE_MERCHANT AS FLOAT), -1) AS _C_CRD_SAFE_MERCHANT,
        COALESCE(CAST(_C_2WAY_CRD_FRD_RULE_FLAG AS FLOAT), -1) AS _C_2WAY_CRD_FRD_RULE_FLAG,
        COALESCE(CAST(_c_cc_cnp_ltrans_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_ltrans_6hr_count_1,
        COALESCE(CAST(_c_cc_cnp_vel_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_vel_6hr_count_1,
        COALESCE(CAST(_l_city_age AS FLOAT), -1) AS _l_city_age,
        COALESCE(CAST(_a_crd_npp_payment_amount AS FLOAT), -1) AS _a_crd_npp_payment_amount,
        COALESCE(CAST(_a_client_country_cnt_3 AS FLOAT), -1) AS _a_client_country_cnt_3,
        COALESCE(CAST(_a_customer_age AS FLOAT), -1) AS _a_customer_age,
        COALESCE(CAST(_a_client_country_cnt_10 AS FLOAT), -1) AS _a_client_country_cnt_10,
        COALESCE(CAST(_a_npp_ftp_sum AS FLOAT), -1) AS _a_npp_ftp_sum,
        COALESCE(CAST(_l_paste_in_login_cnt AS FLOAT), -1) AS _l_paste_in_login_cnt,
        COALESCE(CAST(_a_cust_sum_aaa_long AS FLOAT), -1) AS _a_cust_sum_aaa_long,
        COALESCE(CAST(_l_g_con_dev AS FLOAT), -1) AS _l_g_con_dev,
        COALESCE(CAST(_l_dev_fam_age AS FLOAT), -1) AS _l_dev_fam_age,
        COALESCE(CAST(_l_touch_cnt AS FLOAT), -1) AS _l_touch_cnt,
        COALESCE(CAST(_b_recip_sum_aaa_long AS FLOAT), -1) AS _b_recip_sum_aaa_long,
        COALESCE(CAST(_l_risky_key_combo AS FLOAT), -1) AS _l_risky_key_combo,
        COALESCE(CAST(_a_c_g AS FLOAT), -1) AS _a_c_g,
        COALESCE(CAST(_l_score_4 AS FLOAT), -1) AS _l_score_4,
        COALESCE(CAST(_a_e AS FLOAT), -1) AS _a_e,
        COALESCE(CAST(_a_npp_inb_pmt_val AS FLOAT), -1) AS _a_npp_inb_pmt_val,
        COALESCE(CAST(_a_client_country_cnt_2 AS FLOAT), -1) AS _a_client_country_cnt_2,
        COALESCE(CAST(_a_prof_capp_device_cnt_1 AS FLOAT), -1) AS _a_prof_capp_device_cnt_1,
        COALESCE(CAST(_a_crd_scam_supp_7d_sum_1 AS FLOAT), -1) AS _a_crd_scam_supp_7d_sum_1,
        COALESCE(CAST(_a_client_city_cnt_2 AS FLOAT), -1) AS _a_client_city_cnt_2,
        COALESCE(CAST(_l_uid_age AS FLOAT), -1) AS _l_uid_age,
        COALESCE(CAST(_l_scrn_w AS FLOAT), -1) AS _l_scrn_w,
        COALESCE(CAST(_l_asn_age AS FLOAT), -1) AS _l_asn_age,
        COALESCE(CAST(_l_score_2 AS FLOAT), -1) AS _l_score_2,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_5 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_5,
        COALESCE(CAST(_l_bc_sess_cnt AS FLOAT), -1) AS _l_bc_sess_cnt,
        COALESCE(CAST(_l_acc_amt_1h AS FLOAT), -1) AS _l_acc_amt_1h,
        COALESCE(CAST(_a_list_wl_scam_drive_license AS FLOAT), -1) AS _a_list_wl_scam_drive_license,
        COALESCE(CAST(_a_cc_cash_advance_amt AS FLOAT), -1) AS _a_cc_cash_advance_amt,
        COALESCE(CAST(_a_cust_sum_aaa_short AS FLOAT), -1) AS _a_cust_sum_aaa_short,
        COALESCE(CAST(_a_p_l_1 AS FLOAT), -1) AS _a_p_l_1,
        COALESCE(CAST(_l_pmt_amt AS FLOAT), -1) AS _l_pmt_amt,
        COALESCE(CAST(_l_isp_age AS FLOAT), -1) AS _l_isp_age,
        COALESCE(CAST(_l_acc_amt_7d AS FLOAT), -1) AS _l_acc_amt_7d,
        COALESCE(CAST(_a_client_country_cnt_7 AS FLOAT), -1) AS _a_client_country_cnt_7,
        COALESCE(CAST(_l_concurrent_sess AS FLOAT), -1) AS _l_concurrent_sess,
        COALESCE(CAST(_a_capp_hce_cnt_1 AS FLOAT), -1) AS _a_capp_hce_cnt_1,
        COALESCE(CAST(_l_score_5 AS FLOAT), -1) AS _l_score_5,
        COALESCE(CAST(_l_muid_age_per_user AS FLOAT), -1) AS _l_muid_age_per_user,
        COALESCE(CAST(_a_cust_acct_bal AS FLOAT), -1) AS _a_cust_acct_bal,
        COALESCE(CAST(_l_cust_scamrisk_score AS FLOAT), -1) AS _l_cust_scamrisk_score,
        COALESCE(CAST(_a_atm_withdrawal_sum_amt AS FLOAT), -1) AS _a_atm_withdrawal_sum_amt,
        COALESCE(CAST(_l_tap_cnt AS FLOAT), -1) AS _l_tap_cnt,
        COALESCE(CAST(_a_list_wl_scam_tp_ip AS FLOAT), -1) AS _a_list_wl_scam_tp_ip,
        COALESCE(CAST(_l_max_30d_score AS FLOAT), -1) AS _l_max_30d_score,
        COALESCE(CAST(_b_recip_sum_aaa_1 AS FLOAT), -1) AS _b_recip_sum_aaa_1,
        COALESCE(CAST(_x_cif_sender_sum AS FLOAT), -1) AS _x_cif_sender_sum,
        COALESCE(CAST(_l_m_l_1 AS FLOAT), -1) AS _l_m_l_1,
        COALESCE(CAST(_l_scrn_h AS FLOAT), -1) AS _l_scrn_h,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_2,
        COALESCE(CAST(_a_cust_action_ind AS FLOAT), -1) AS _a_cust_action_ind,
        COALESCE(CAST(_a_p_l_c AS FLOAT), -1) AS _a_p_l_c,
        COALESCE(CAST(_a_cust_avg_acct_bal AS FLOAT), -1) AS _a_cust_avg_acct_bal,
        COALESCE(CAST(_l_and_id_age AS FLOAT), -1) AS _l_and_id_age,
        COALESCE(CAST(_x_cif_rec_sum AS FLOAT), -1) AS _x_cif_rec_sum,
        COALESCE(CAST(_l_sess_cnt_mob_sdk AS FLOAT), -1) AS _l_sess_cnt_mob_sdk,
        COALESCE(CAST(_l_total_sess_cnt AS FLOAT), -1) AS _l_total_sess_cnt,
        COALESCE(CAST(_a_curr_capp_device_nftp_cnt AS FLOAT), -1) AS _a_curr_capp_device_nftp_cnt,
        COALESCE(CAST(_l_nc_acct_num_name_conf AS FLOAT), -1) AS _l_nc_acct_num_name_conf,
        COALESCE(CAST(_a_client_country_cnt_5 AS FLOAT), -1) AS _a_client_country_cnt_5,
        COALESCE(CAST(_a_u AS FLOAT), -1) AS _a_u,
        COALESCE(CAST(_b_recip_sum_aaa_7 AS FLOAT), -1) AS _b_recip_sum_aaa_7,
        COALESCE(CAST(_l_scm_rsk_scr_2 AS FLOAT), -1) AS _l_scm_rsk_scr_2,
        COALESCE(CAST(_b_recip_sum_aaa_4 AS FLOAT), -1) AS _b_recip_sum_aaa_4,
        COALESCE(CAST(_l_bc_score AS FLOAT), -1) AS _l_bc_score,
        COALESCE(CAST(_l_days_lst_dev_and AS FLOAT), -1) AS _l_days_lst_dev_and,
        COALESCE(CAST(_a_prof_capp_device_cnt_3 AS FLOAT), -1) AS _a_prof_capp_device_cnt_3,
        COALESCE(CAST(_l_days_lst_dev_ios AS FLOAT), -1) AS _l_days_lst_dev_ios,
        COALESCE(CAST(_x_last_n_txn_count AS FLOAT), -1) AS _x_last_n_txn_count,
        COALESCE(CAST(_a_t AS FLOAT), -1) AS _a_t,
        COALESCE(CAST(_a_cust_npp_in_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_2,
        COALESCE(CAST(_l_mins_lst_lgn_capped AS FLOAT), -1) AS _l_mins_lst_lgn_capped,
        COALESCE(CAST(_l_acc_amt_2h AS FLOAT), -1) AS _l_acc_amt_2h,
        COALESCE(CAST(_l_acc_amt_4h AS FLOAT), -1) AS _l_acc_amt_4h,
        COALESCE(CAST(_a_list_bl_passport AS FLOAT), -1) AS _a_list_bl_passport,
        COALESCE(CAST(_a_list_wl_scam_passport AS FLOAT), -1) AS _a_list_wl_scam_passport,
        COALESCE(CAST(_a_list_bl_scam_passport AS FLOAT), -1) AS _a_list_bl_scam_passport,
        COALESCE(CAST(_b_recip_sum_aaa_6 AS FLOAT), -1) AS _b_recip_sum_aaa_6,
        COALESCE(CAST(_a_prof_capp_device_cnt_2 AS FLOAT), -1) AS _a_prof_capp_device_cnt_2,
        COALESCE(CAST(_a_client_country_cnt_6 AS FLOAT), -1) AS _a_client_country_cnt_6,
        COALESCE(CAST(_A_BTS_BCH_SUM AS FLOAT), -1) AS _A_BTS_BCH_SUM,
        COALESCE(CAST(_A_BTS_CUST_AGE AS FLOAT), -1) AS _A_BTS_CUST_AGE,
        COALESCE(CAST(_A_CURR_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_CURR_CAPP_DEVICE_CNT,
        COALESCE(CAST(_A_CURR_NB_BROWSER_CNT AS FLOAT), -1) AS _A_CURR_NB_BROWSER_CNT,
        COALESCE(CAST(_A_PREV_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_PREV_CAPP_DEVICE_CNT,
        COALESCE(CAST(_A_Q AS FLOAT), -1) AS _A_Q,
        COALESCE(CAST(_A_R AS FLOAT), -1) AS _A_R,
        COALESCE(CAST(_l_cntry_age AS FLOAT), -1) AS _l_cntry_age,
        COALESCE(CAST(_a_npp_in_unrelated_sum_24_1 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_1,
        COALESCE(CAST(_x_ft_over5k_recip_cnt AS FLOAT), -1) AS _x_ft_over5k_recip_cnt,
        COALESCE(CAST(_x_cif_recipient_new_cnt AS FLOAT), -1) AS _x_cif_recipient_new_cnt,
        COALESCE(CAST(_a_npp_in_unrelated_sum_24_2 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_2,
        COALESCE(CAST(_b_npp_out_sum_1 AS FLOAT), -1) AS _b_npp_out_sum_1,
        COALESCE(CAST(_l_acc_amt_1d AS FLOAT), -1) AS _l_acc_amt_1d,
        COALESCE(CAST(_a_transport_reg_cnt_1 AS FLOAT), -1) AS _a_transport_reg_cnt_1,
        COALESCE(CAST(_a_multi_cnt AS FLOAT), -1) AS _a_multi_cnt,
        COALESCE(CAST(_l_m_l_4 AS FLOAT), -1) AS _l_m_l_4,
        COALESCE(CAST(_a_prof_capp_device_nftp_1 AS FLOAT), -1) AS _a_prof_capp_device_nftp_1,
        COALESCE(CAST(_x_name_match_cnt AS FLOAT), -1) AS _x_name_match_cnt,
        COALESCE(CAST(_a_prof_capp_device_cnt_5 AS FLOAT), -1) AS _a_prof_capp_device_cnt_5,
        COALESCE(CAST(_a_prof_capp_device_cnt_4 AS FLOAT), -1) AS _a_prof_capp_device_cnt_4,
        COALESCE(CAST(_l_sess_cnt_web AS FLOAT), -1) AS _l_sess_cnt_web,
        COALESCE(CAST(_b_recip_sum_aaa_2 AS FLOAT), -1) AS _b_recip_sum_aaa_2,
        COALESCE(CAST(_l_m_l_c AS FLOAT), -1) AS _l_m_l_c,
        COALESCE(CAST(_l_time_zone AS FLOAT), -1) AS _l_time_zone,
        COALESCE(CAST(_a_cust_npp_in_sum_aaa_1 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_1,
        COALESCE(CAST(_l_ip_age AS FLOAT), -1) AS _l_ip_age,
        COALESCE(CAST(_a_npp_inbound_sum_amt AS FLOAT), -1) AS _a_npp_inbound_sum_amt,
        COALESCE(CAST(_x_ft_over5k_recip_sum AS FLOAT), -1) AS _x_ft_over5k_recip_sum,
        COALESCE(CAST(_x_cif_sender_cnt AS FLOAT), -1) AS _x_cif_sender_cnt,
        COALESCE(CAST(_a_nb_logons_cnt_2 AS FLOAT), -1) AS _a_nb_logons_cnt_2,
        COALESCE(CAST(_a_clc_ftp_amt AS FLOAT), -1) AS _a_clc_ftp_amt,
        COALESCE(CAST(_l_trvl_spd AS FLOAT), -1) AS _l_trvl_spd,
        COALESCE(CAST(_b_recip_sum_long AS FLOAT), -1) AS _b_recip_sum_long,
        COALESCE(CAST(_a_crypto_mnthly_sum AS FLOAT), -1) AS _a_crypto_mnthly_sum,
        COALESCE(CAST(_a_gl_trf_acc_bal AS FLOAT), -1) AS _a_gl_trf_acc_bal,
        COALESCE(CAST(_l_sess_cnt_mob_browser AS FLOAT), -1) AS _l_sess_cnt_mob_browser,
        COALESCE(CAST(_l_score_3 AS FLOAT), -1) AS _l_score_3,
        COALESCE(CAST(_a_crd_crypto_proc_flg AS FLOAT), -1) AS _a_crd_crypto_proc_flg,
        COALESCE(CAST(_b_npp_out_cnt_2 AS FLOAT), -1) AS _b_npp_out_cnt_2,
        COALESCE(CAST(_a_npp_out_cnt_2 AS FLOAT), -1) AS _a_npp_out_cnt_2,
        COALESCE(CAST(_a_sch_amt AS FLOAT), -1) AS _a_sch_amt,
        COALESCE(CAST(_a_p_l_3 AS FLOAT), -1) AS _a_p_l_3,
        COALESCE(CAST(_b_npp_out_ftp_sum_1 AS FLOAT), -1) AS _b_npp_out_ftp_sum_1,
        COALESCE(CAST(_l_sdid_cnt_1 AS FLOAT), -1) AS _l_sdid_cnt_1,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_long AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_long,
        COALESCE(CAST(_a_list_rl1_scam_cust_cif AS FLOAT), -1) AS _a_list_rl1_scam_cust_cif,
        COALESCE(CAST(_l_num_sess_2h AS FLOAT), -1) AS _l_num_sess_2h,
        COALESCE(CAST(_a_vpn_vps_ip_logon_count AS FLOAT), -1) AS _a_vpn_vps_ip_logon_count,
        COALESCE(CAST(_a_geo_distance AS FLOAT), -1) AS _a_geo_distance,
        COALESCE(CAST(_x_name_match_ind AS FLOAT), -1) AS _x_name_match_ind,
        COALESCE(CAST(_a_nb_logons_cnt_3 AS FLOAT), -1) AS _a_nb_logons_cnt_3,
        COALESCE(CAST(_l_days_lst_dev_js AS FLOAT), -1) AS _l_days_lst_dev_js,
        COALESCE(CAST(_a_ftp_sum_1 AS FLOAT), -1) AS _a_ftp_sum_1,
        COALESCE(CAST(_l_num_sess_4h AS FLOAT), -1) AS _l_num_sess_4h,
        COALESCE(CAST(_l_nc_match_name_conf AS FLOAT), -1) AS _l_nc_match_name_conf,
        COALESCE(CAST(_b_recip_sum_aaa_5 AS FLOAT), -1) AS _b_recip_sum_aaa_5,
        COALESCE(CAST(_l_dpi_change AS FLOAT), -1) AS _l_dpi_change,
        COALESCE(CAST(_b_recip_sum_1 AS FLOAT), -1) AS _b_recip_sum_1,
        COALESCE(CAST(_a_scam_risky_mcc_prelead_amt AS FLOAT), -1) AS _a_scam_risky_mcc_prelead_amt,
        COALESCE(CAST(_l_m_l_3 AS FLOAT), -1) AS _l_m_l_3,
        COALESCE(CAST(_x_cif_rec_cnt AS FLOAT), -1) AS _x_cif_rec_cnt,
        COALESCE(CAST(_a_list_bl_scam_tp_ip AS FLOAT), -1) AS _a_list_bl_scam_tp_ip,
        _b_crypto_risk, -- labelled as str but all num values?
        COALESCE(CAST(_a_list_bl_scam_drive_license AS FLOAT), -1) AS _a_list_bl_scam_drive_license,
        COALESCE(CAST(_b_recip_sum_aaa_short AS FLOAT), -1) AS _b_recip_sum_aaa_short,
        COALESCE(CAST(_l_clipb_event_cnt AS FLOAT), -1) AS _l_clipb_event_cnt,
        COALESCE(CAST(_b_list_rl1_scam_tp_cif AS FLOAT), -1) AS _b_list_rl1_scam_tp_cif,
        COALESCE(CAST(_b_npp_blacklist_recip_flag AS FLOAT), -1) AS _b_npp_blacklist_recip_flag,
    
        -- categorical UV columns
        _a_cif_establish_channel, -- customer established channel (if = 'O' then it's electronic)
        _a_ecv_document_ip,
        _a_cust_os_ver,
        _a_cust_os_name,
        _A_2WAY_TYPE,
        _A_CLIENT_CITY_10,
        _L_PUSH_API_1,
        _L_PUSH_API_2,
        _L_PUSH_API_3,
        _L_PUSH_API_4,
        _a_client_city_6,
        _l_nc_winning_alg,
        _l_proxy_type,
        _l_lang_3,
        _l_lang_1,
        _l_lang_2,
        _l_nc_response_code,
        _a_prof_risk_ind,
        _a_latest_ncrg_isp,
        -- _C_CC_N3D_OVS_975_CNT_1,
        chl_ct_term_owner_name,
        -- _c_cc_n3d_dom_999_cnt_1,
        _C_CNP_MER_NM_CURR,
        -- _C_CRD_N3D_SCORE_SUM_1,
        dtl_ex_0_2s_002,
        dtl_ex_3_80s_002,
        case when _a_mrisk_foreign_ip_cntry_code is NULL then 'unknown' else _a_mrisk_foreign_ip_cntry_code || '_v' end as _a_mrisk_foreign_ip_cntry_code,
        case when dtl_ca_auth_sys_dec is NULL then 'unknown' else dtl_ca_auth_sys_dec || '_v' end as dtl_ca_auth_sys_dec,
        chl_ct_mer_mcc,
        -- case when chl_ct_mer_mcc is NULL then 'unknown' else chl_ct_mer_mcc || '_v' end as chl_ct_mer_mcc,
        case when ATH_PC_CUST_PRESENT is NULL then 'unknown' else ATH_PC_CUST_PRESENT || '_v' end as ATH_PC_CUST_PRESENT,
        case when _a_cif_establish_cust_pcode in ('0', null) then 'unknown' else _a_cif_establish_cust_pcode || '_v' end as _a_cif_establish_cust_pcode,
        case when chl_ct_term_cntry_code in ('0', null) then 'unknown' else chl_ct_term_cntry_code || '_v' end as chl_ct_term_cntry_code,
        case when dtl_ca_merch_curr_code in ('0', null) then 'unknown' else dtl_ca_merch_curr_code || '_v' end as dtl_ca_merch_curr_code,
    
        -- features extracted from fingerprints data
        case when substr(_L_FINGERPRINT_1, 1, 1) in('P', 'O') then substr(_L_FINGERPRINT_1, 1, 1) else 'unknown' end as PARTY_TYPE, -- ""P"" for personal, ""O"" for organisations,
        case when substr(_L_FINGERPRINT_1, 2, 1) in('M', 'F') then substr(_L_FINGERPRINT_1, 2, 1) else 'unknown' end as GENDER, -- M or F    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 3, 1) as FLOAT), -1) as DMC_CNT, -- count of scheme debit cards
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 4, 1) as FLOAT), -1) as YCS_CNT, -- count of travel money cards    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 5, 1) as FLOAT), -1) as TRAN_CNT, -- count of personal txn accts   
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 6, 1) as FLOAT), -1) as DPST_CNT, -- count of money management accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 7, 1) as FLOAT), -1) as CC_CNT, -- count of credit cards    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 8, 1) as FLOAT), -1) as TRD_CNT, -- count of trading accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 9, 1) as FLOAT), -1) as PL_CNT, -- count of personal loan accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 10, 1) as FLOAT), -1) as INVST_CNT, -- count of investment accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 11, 1) as FLOAT), -1) as MORT_CNT, -- count of mortgage accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 12, 1) as FLOAT), -1) as INSRNC_CNT, -- count of insurance accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 13, 1) as FLOAT), -1) as BTA_CNT, -- count of business txn accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 14, 1) as FLOAT), -1) as BUS_LN_CNT, -- count of business loans    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 15, 1) as FLOAT), -1) as OTH_CNT, -- count of other accounts    
        case when substr(_L_FINGERPRINT_1, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 16, 1) || '_v' else 'unknown' end as NTBNK_FAC, -- 1/0 indicator whether the customer has a netbank facility    
        case when substr(_L_FINGERPRINT_1, 17, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 17, 1) || '_v' else 'unknown' end as REL_MNG, -- indicates whether the customer is relationship managed    
        case when substr(_L_FINGERPRINT_2, 1, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 1, 2) || '_v' end as FA_1, -- 1st known foreign association   
        case when substr(_L_FINGERPRINT_2, 3, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 3, 2) || '_v' end as FA_2, -- 2nd known foreign association    
        case when substr(_L_FINGERPRINT_2, 5, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 5, 2) || '_v' end as NO_1, -- name association 1  
        case when substr(_L_FINGERPRINT_2, 7, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 7, 2) || '_v' end as NO_2, -- name association 2  
        case when substr(_L_FINGERPRINT_2, 11, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 11, 2) || '_v' end as FA, -- foreign address    
        case when substr(_L_FINGERPRINT_2, 13, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 13, 2) || '_v' end as FP, -- foreign phone number 
        case when substr(_L_FINGERPRINT_3, 1, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 1, 1) end as GOVT_BENE, -- government benefits code    
        case when substr(_L_FINGERPRINT_3, 2, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 2, 1) || '_v' end as PRVT_CUST, -- private customer flag    
        case when substr(_L_FINGERPRINT_3, 3, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 3, 1) || '_v' else 'unknown' end as HL_ASOC, -- any association with a home loan    
        case when substr(_L_FINGERPRINT_3, 4, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 4, 1) || '_v' else 'unknown' end as CORP_EMPL, -- employed by large corporate  
        case when substr(_L_FINGERPRINT_3, 6, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 6, 1) || '_v' else 'unknown' end as TRUSTEE, -- trustee flag/part of a trust fund    
        case when substr(_L_FINGERPRINT_3, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 16, 1) || '_v' else 'unknown' end as INTL_STU, -- international student flag    
        case when substr(_L_FINGERPRINT_3, 12, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 12, 1) || '_v' end as MAR_STS_ORG_STR, -- marital status/business structure (person/org diff)    
        case when substr(_L_FINGERPRINT_3, 13, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 13, 1) || '_v' end as EMPL_CLAS_LGL_STS, -- employment classification or org status    
        case when substr(_L_FINGERPRINT_3, 14, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 14, 1) || '_v' end as HOME_OWN, -- home ownership status     
    
        -- time differences
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_x_npp_out_sum_date AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) AS _x_npp_out_sum_date_diff,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CC_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CC_DT_DIFF, -- customer recent credit card application datetime
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_ONLINE_PL_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_ONLINE_PL_DT_DIFF, -- customer recent personal loan application datetime
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CIF_ESTABLISH_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CIF_ESTABLISH_DT_DIFF, -- when the customer is established
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_a_ecv_document_dt AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _a_ecv_document_dt_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_AUTO_DEC_CP_PP_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_AUTO_DEC_CP_PP_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CAPP_NOTIFY_OPT_OUT_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP1_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP1_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP2_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP2_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP5_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP5_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP7_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP7_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_1 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_1_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_2 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_2_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_3 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_3_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_4 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_4_DIFF
    from (
        select top 10
            to_number(dtl_ex_0_n_064)||dtl_ex_0_n_065||dtl_ex_0_n_066 as tran_id, -- create tran_id here
            *,
            TO_TIMESTAMP(TTS_TRAN_DATE_ALT || ' ' || TTS_TRAN_TIME_ALT, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
            EXTRACT(HOUR FROM TRANSACTIONDATETIME) + EXTRACT(MINUTE FROM TRANSACTIONDATETIME) / 60.0 as TRANSACTION_HOUR
        from PRD_P01_DMN_FRAUMD.lcl.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT
        where TTS_TRAN_DATE_ALT between '20250206' and '20250207'
          and hdr_activity_type = 'CA'
          and SSX_CUST_NUM <> ''
          and SSX_CUST_NUM IS NOT NULL
          and DTL_CA_CLIENT_AMT IS NOT NULL
        ) fdp
    )
    , date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        lcl.cust_tran_prfl
    order by tran_d
    )
    , hourly_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        lcl.CARD_MERC_CATG_TRAN_PRFL
    ),
    all_dates_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        ds.tran_d
    FROM
        (SELECT DISTINCT card_i, merc_catg_c FROM lcl.CARD_MERC_CATG_TRAN_PRFL) ca
    CROSS JOIN date_series ds
    ),
    daily_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates_CARD_MERC_CATG_TRAN_PRFL ad
    LEFT JOIN hourly_data_CARD_MERC_CATG_TRAN_PRFL hd
    ON ad.card_i = hd.card_i AND ad.merc_catg_c = hd.merc_catg_c AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d)
    )
    , aggregated_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data_CARD_MERC_CATG_TRAN_PRFL
    )
    , AGG_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i, --as chl_id_card_num,
        merc_catg_c,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CMC_SUM_TRAN_CNT_Q,
        CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        CMC_SUM_TRAN_SUM_N,
        CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        CMC_SUM_UPST_APRD_TRAN_SUM_N,
        CMC_SUM_FINL_APRD_TRAN_SUM_N,
        CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        CMC_SUM_DOMS_TRAN_CNT_Q,
        CMC_SUM_OSEA_TRAN_CNT_Q,
        CMC_SUM_DOMS_TRAN_SUM_N,
        CMC_SUM_OSEA_TRAN_SUM_N,
        CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CMC_SUM_3DS_TRAN_CNT_Q,
        CMC_SUM_N3D_TRAN_CNT_Q,
        CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CMC_SUM_3DS_TRAN_SUM_N,
        CMC_SUM_N3D_TRAN_SUM_N,
        CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        CMC_SUM_ATM_TRAN_CNT_Q,
        CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        CMC_SUM_CHIP_TRAN_CNT_Q,
        CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        CMC_SUM_CARD_PRES_TRAN_SUM_N,
        CMC_SUM_ATM_TRAN_SUM_N,
        CMC_SUM_FALL_BACK_TRAN_SUM_N,
        CMC_SUM_CHIP_TRAN_SUM_N,
        CMC_SUM_PAY_PASS_TRAN_SUM_N,
        CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CMC_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_CARD_MERC_CATG_TRAN_PRFL
    ORDER BY
        card_i,
        merc_catg_c,
        window_start_date
    )
    , hourly_data_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            INCO_EXPY_CNT_Q,
            INCO_CVVA_CNT_Q,
            INCO_PIN_CNT_Q,
            OVER_LIMT_DCLN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            UPST_DCLN_TRAN_SUM_N,
            RULE_DCLN_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            INCO_EXPY_SUM_N,
            INCO_CVVA_SUM_N,
            INCO_PIN_SUM_N,
            OVER_LIMT_DCLN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CAPP_PSWD_CHNG_CNT_Q,
            CAPP_DVIC_REGR_CNT_Q,
            CAPP_LOGN_CNT_Q,
            NTB_LOGN_CNT_Q,
            VIEW_CARD_DETL_CNT_Q,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F,
            CUV_WHLI_F,
            CUV_DO_NOT_CTCT_F
        FROM
            lcl.card_tran_prfl
    ),
    all_dates_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT card_i FROM lcl.card_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_CARD_TRAN_PRFL AS (
        SELECT
            ad.card_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.INCO_EXPY_CNT_Q), 0) AS DAILY_INCO_EXPY_CNT_Q,
            COALESCE(SUM(hd.INCO_CVVA_CNT_Q), 0) AS DAILY_INCO_CVVA_CNT_Q,
            COALESCE(SUM(hd.INCO_PIN_CNT_Q), 0) AS DAILY_INCO_PIN_CNT_Q,
            COALESCE(SUM(hd.OVER_LIMT_DCLN_CNT_Q), 0) AS DAILY_OVER_LIMT_DCLN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_SUM_N), 0) AS DAILY_UPST_DCLN_TRAN_SUM_N,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_SUM_N), 0) AS DAILY_RULE_DCLN_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.INCO_EXPY_SUM_N), 0) AS DAILY_INCO_EXPY_SUM_N,
            COALESCE(SUM(hd.INCO_CVVA_SUM_N), 0) AS DAILY_INCO_CVVA_SUM_N,
            COALESCE(SUM(hd.INCO_PIN_SUM_N), 0) AS DAILY_INCO_PIN_SUM_N,
            COALESCE(SUM(hd.OVER_LIMT_DCLN_SUM_N), 0) AS DAILY_OVER_LIMT_DCLN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
            COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
            COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
            COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
            COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_WHLI_F), 0) AS DAILY_CUV_WHLI_F,
            COALESCE(MAX(hd.CUV_DO_NOT_CTCT_F), 0) AS DAILY_CUV_DO_NOT_CTCT_F
    
        FROM
            all_dates_CARD_TRAN_PRFL ad
        LEFT JOIN hourly_data_CARD_TRAN_PRFL hd
        ON ad.card_i = hd.card_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.card_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_INCO_EXPY_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_CNT_Q,
            SUM(DAILY_INCO_CVVA_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_CNT_Q,
            SUM(DAILY_INCO_PIN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_CNT_Q,
            SUM(DAILY_OVER_LIMT_DCLN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_SUM_N,
            SUM(DAILY_RULE_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_INCO_EXPY_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_SUM_N,
            SUM(DAILY_INCO_CVVA_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_SUM_N,
            SUM(DAILY_INCO_PIN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_SUM_N,
            SUM(DAILY_OVER_LIMT_DCLN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_SUM_N,
            SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
            SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
            SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_LOGN_CNT_Q,
            SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_NTB_LOGN_CNT_Q,
            SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_VIEW_CARD_DETL_CNT_Q,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_WHLI_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_WHLI_F,
            MAX(DAILY_CUV_DO_NOT_CTCT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_DO_NOT_CTCT_F
        FROM
            daily_data_CARD_TRAN_PRFL
    )
    , AGG_CARD_TRAN_PRFL AS (
    SELECT
        card_i, --as chl_id_card_num,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CRD_SUM_TRAN_CNT_Q,
        CRD_SUM_UPST_APRD_TRAN_CNT_Q,
        CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
        CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
        CRD_SUM_FINL_APRD_TRAN_CNT_Q,
        CRD_SUM_INCO_EXPY_CNT_Q,
        CRD_SUM_INCO_CVVA_CNT_Q,
        CRD_SUM_INCO_PIN_CNT_Q,
        CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
        CRD_SUM_TRAN_SUM_N,
        CRD_SUM_UPST_APRD_TRAN_SUM_N,
        CRD_SUM_UPST_DCLN_TRAN_SUM_N,
        CRD_SUM_RULE_DCLN_TRAN_SUM_N,
        CRD_SUM_FINL_APRD_TRAN_SUM_N,
        CRD_SUM_INCO_EXPY_SUM_N,
        CRD_SUM_INCO_CVVA_SUM_N,
        CRD_SUM_INCO_PIN_SUM_N,
        CRD_SUM_OVER_LIMT_DCLN_SUM_N,
        CRD_SUM_FDP_RULE_TRIG_CNT_Q,
        CRD_SUM_DOMS_TRAN_CNT_Q,
        CRD_SUM_OSEA_TRAN_CNT_Q,
        CRD_SUM_DOMS_TRAN_SUM_N,
        CRD_SUM_OSEA_TRAN_SUM_N,
        CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CRD_SUM_3DS_TRAN_CNT_Q,
        CRD_SUM_N3D_TRAN_CNT_Q,
        CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CRD_SUM_3DS_TRAN_SUM_N,
        CRD_SUM_N3D_TRAN_SUM_N,
        CRD_SUM_CARD_PRES_TRAN_CNT_Q,
        CRD_SUM_ATM_TRAN_CNT_Q,
        CRD_SUM_FALL_BACK_TRAN_CNT_Q,
        CRD_SUM_CHIP_TRAN_CNT_Q,
        CRD_SUM_PAY_PASS_TRAN_CNT_Q,
        CRD_SUM_CARD_PRES_TRAN_SUM_N,
        CRD_SUM_ATM_TRAN_SUM_N,
        CRD_SUM_FALL_BACK_TRAN_SUM_N,
        CRD_SUM_CHIP_TRAN_SUM_N,
        CRD_SUM_PAY_PASS_TRAN_SUM_N,
        CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
        CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
        CRD_SUM_CAPP_LOGN_CNT_Q,
        CRD_SUM_NTB_LOGN_CNT_Q,
        CRD_SUM_VIEW_CARD_DETL_CNT_Q,
        CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_WHLI_F,
        CRD_MAX_CUV_DO_NOT_CTCT_F
    FROM
        aggregated_data_CARD_TRAN_PRFL
    ORDER BY
        card_i,
        window_start_date
    )
    , hourly_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F
        FROM
            lcl.cust_merc_acqr_tran_prfl
    ),
    all_dates_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT cust_i, merc_i, acqr_i FROM lcl.cust_merc_acqr_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            ad.cust_i,
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
        FROM
            all_dates_cust_merc_acqr_tran_prfl ad
        LEFT JOIN hourly_data_cust_merc_acqr_tran_prfl hd
        ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.cust_i,
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            daily_data_cust_merc_acqr_tran_prfl
    )
    , agg_cust_merc_acqr_tran_prfl as (
    SELECT
        cust_i, -- as ssx_cust_num,
        merc_i,
        acqr_i,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CMA_SUM_TRAN_CNT_Q,
        CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        CMA_SUM_TRAN_SUM_N,
        CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        CMA_SUM_UPST_APRD_TRAN_SUM_N,
        CMA_SUM_FINL_APRD_TRAN_SUM_N,
        CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        CMA_SUM_DOMS_TRAN_CNT_Q,
        CMA_SUM_OSEA_TRAN_CNT_Q,
        CMA_SUM_DOMS_TRAN_SUM_N,
        CMA_SUM_OSEA_TRAN_SUM_N,
        CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CMA_SUM_3DS_TRAN_CNT_Q,
        CMA_SUM_N3D_TRAN_CNT_Q,
        CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CMA_SUM_3DS_TRAN_SUM_N,
        CMA_SUM_N3D_TRAN_SUM_N,
        CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        CMA_SUM_ATM_TRAN_CNT_Q,
        CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        CMA_SUM_CHIP_TRAN_CNT_Q,
        CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        CMA_SUM_CARD_PRES_TRAN_SUM_N,
        CMA_SUM_ATM_TRAN_SUM_N,
        CMA_SUM_FALL_BACK_TRAN_SUM_N,
        CMA_SUM_CHIP_TRAN_SUM_N,
        CMA_SUM_PAY_PASS_TRAN_SUM_N,
        CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_cust_merc_acqr_tran_prfl
    ORDER BY
        cust_i,
        merc_i,
        acqr_i,
        window_start_date
        )
    , hourly_data_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N
        FROM
            lcl.merc_acqr_tran_prfl
    ),
    all_dates_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT merc_i, acqr_i FROM lcl.merc_acqr_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_merc_acqr_tran_prfl AS (
        SELECT
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N
        FROM
            all_dates_merc_acqr_tran_prfl ad
        LEFT JOIN hourly_data_merc_acqr_tran_prfl hd
        ON ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_SUM_N
        FROM
            daily_data_merc_acqr_tran_prfl
    )
    , AGG_merc_acqr_tran_prfl AS (
    SELECT
        merc_i,
        acqr_i,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        MAQ_SUM_TRAN_CNT_Q,
        MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
        MAQ_SUM_TRAN_SUM_N,
        MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
        MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
        MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
        MAQ_SUM_UPST_APRD_TRAN_SUM_N,
        MAQ_SUM_FINL_APRD_TRAN_SUM_N,
        MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
        MAQ_SUM_DOMS_TRAN_CNT_Q,
        MAQ_SUM_OSEA_TRAN_CNT_Q,
        MAQ_SUM_DOMS_TRAN_SUM_N,
        MAQ_SUM_OSEA_TRAN_SUM_N,
        MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        MAQ_SUM_3DS_TRAN_CNT_Q,
        MAQ_SUM_N3D_TRAN_CNT_Q,
        MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        MAQ_SUM_3DS_TRAN_SUM_N,
        MAQ_SUM_N3D_TRAN_SUM_N,
        MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
        MAQ_SUM_ATM_TRAN_CNT_Q,
        MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
        MAQ_SUM_CHIP_TRAN_CNT_Q,
        MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
        MAQ_SUM_CARD_PRES_TRAN_SUM_N,
        MAQ_SUM_ATM_TRAN_SUM_N,
        MAQ_SUM_FALL_BACK_TRAN_SUM_N,
        MAQ_SUM_CHIP_TRAN_SUM_N,
        MAQ_SUM_PAY_PASS_TRAN_SUM_N
    FROM
        aggregated_data_merc_acqr_tran_prfl
    ORDER BY
        merc_i,
        acqr_i,
        window_start_date
    )
    , hourly_data_cust_tran_prfl AS (
        SELECT
            cust_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CAPP_PSWD_CHNG_CNT_Q,
            CAPP_DVIC_REGR_CNT_Q,
            CAPP_LOGN_CNT_Q,
            NTB_LOGN_CNT_Q,
            VIEW_CARD_DETL_CNT_Q,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F
        FROM
            lcl.cust_tran_prfl
    ),
    all_dates_cust_tran_prfl AS (
        SELECT
            cust_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT cust_i FROM lcl.cust_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_cust_tran_prfl AS (
        SELECT
            ad.cust_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
            COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
            COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
            COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
            COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
        FROM
            all_dates_cust_tran_prfl ad
        LEFT JOIN hourly_data_cust_tran_prfl hd
        ON ad.cust_i = hd.cust_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.cust_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_cust_tran_prfl AS (
        SELECT
            cust_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_SUM_N,
            SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
            SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
            SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_LOGN_CNT_Q,
            SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_NTB_LOGN_CNT_Q,
            SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_VIEW_CARD_DETL_CNT_Q,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            daily_data_cust_tran_prfl
    )
    , AGG_cust_tran_prfl AS (
    SELECT
        cust_i, -- as ssx_cust_num,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CUS_SUM_TRAN_CNT_Q,
        CUS_SUM_UPST_APRD_TRAN_CNT_Q,
        CUS_SUM_TRAN_SUM_N,
        CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
        CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
        CUS_SUM_FINL_APRD_TRAN_CNT_Q,
        CUS_SUM_UPST_APRD_TRAN_SUM_N,
        CUS_SUM_FINL_APRD_TRAN_SUM_N,
        CUS_SUM_FDP_RULE_TRIG_CNT_Q,
        CUS_SUM_DOMS_TRAN_CNT_Q,
        CUS_SUM_OSEA_TRAN_CNT_Q,
        CUS_SUM_DOMS_TRAN_SUM_N,
        CUS_SUM_OSEA_TRAN_SUM_N,
        CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CUS_SUM_3DS_TRAN_CNT_Q,
        CUS_SUM_N3D_TRAN_CNT_Q,
        CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CUS_SUM_3DS_TRAN_SUM_N,
        CUS_SUM_N3D_TRAN_SUM_N,
        CUS_SUM_CARD_PRES_TRAN_CNT_Q,
        CUS_SUM_ATM_TRAN_CNT_Q,
        CUS_SUM_FALL_BACK_TRAN_CNT_Q,
        CUS_SUM_CHIP_TRAN_CNT_Q,
        CUS_SUM_PAY_PASS_TRAN_CNT_Q,
        CUS_SUM_CARD_PRES_TRAN_SUM_N,
        CUS_SUM_ATM_TRAN_SUM_N,
        CUS_SUM_FALL_BACK_TRAN_SUM_N,
        CUS_SUM_CHIP_TRAN_SUM_N,
        CUS_SUM_PAY_PASS_TRAN_SUM_N,
        CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
        CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
        CUS_SUM_CAPP_LOGN_CNT_Q,
        CUS_SUM_NTB_LOGN_CNT_Q,
        CUS_SUM_VIEW_CARD_DETL_CNT_Q,
        CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CUS_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_cust_tran_prfl
    ORDER BY
        cust_i,
        window_start_date
    )    
SELECT 
    a.*,
    b.CUS_SUM_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_CNT_Q,
    b.CUS_SUM_TRAN_SUM_N,
    b.CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_FINL_APRD_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_SUM_N,
    b.CUS_SUM_FINL_APRD_TRAN_SUM_N,
    b.CUS_SUM_FDP_RULE_TRIG_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_CNT_Q,
    b.CUS_SUM_OSEA_TRAN_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_SUM_N,
    b.CUS_SUM_OSEA_TRAN_SUM_N,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    b.CUS_SUM_3DS_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    b.CUS_SUM_N3D_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    b.CUS_SUM_3DS_TRAN_SUM_N as CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    b.CUS_SUM_N3D_TRAN_SUM_N as CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    b.CUS_SUM_CARD_PRES_TRAN_CNT_Q,
    b.CUS_SUM_ATM_TRAN_CNT_Q,
    b.CUS_SUM_FALL_BACK_TRAN_CNT_Q,
    b.CUS_SUM_CHIP_TRAN_CNT_Q,
    b.CUS_SUM_PAY_PASS_TRAN_CNT_Q,
    b.CUS_SUM_CARD_PRES_TRAN_SUM_N,
    b.CUS_SUM_ATM_TRAN_SUM_N,
    b.CUS_SUM_FALL_BACK_TRAN_SUM_N,
    b.CUS_SUM_CHIP_TRAN_SUM_N,
    b.CUS_SUM_PAY_PASS_TRAN_SUM_N,
    b.CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
    b.CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
    b.CUS_SUM_CAPP_LOGN_CNT_Q,
    b.CUS_SUM_NTB_LOGN_CNT_Q,
    b.CUS_SUM_VIEW_CARD_DETL_CNT_Q,
    b.CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    b.CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    b.CUS_MAX_CUV_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_RULE_FLAG,
    d.CRD_SUM_TRAN_CNT_Q,
    d.CRD_SUM_UPST_APRD_TRAN_CNT_Q,
    d.CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_FINL_APRD_TRAN_CNT_Q,
    d.CRD_SUM_INCO_EXPY_CNT_Q,
    d.CRD_SUM_INCO_CVVA_CNT_Q,
    d.CRD_SUM_INCO_PIN_CNT_Q,
    d.CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
    d.CRD_SUM_TRAN_SUM_N,
    d.CRD_SUM_UPST_APRD_TRAN_SUM_N,
    d.CRD_SUM_UPST_DCLN_TRAN_SUM_N,
    d.CRD_SUM_RULE_DCLN_TRAN_SUM_N,
    d.CRD_SUM_FINL_APRD_TRAN_SUM_N,
    d.CRD_SUM_INCO_EXPY_SUM_N,
    d.CRD_SUM_INCO_CVVA_SUM_N,
    d.CRD_SUM_INCO_PIN_SUM_N,
    d.CRD_SUM_OVER_LIMT_DCLN_SUM_N,
    d.CRD_SUM_FDP_RULE_TRIG_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_CNT_Q,
    d.CRD_SUM_OSEA_TRAN_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_SUM_N,
    d.CRD_SUM_OSEA_TRAN_SUM_N,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    d.CRD_SUM_3DS_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    d.CRD_SUM_N3D_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    d.CRD_SUM_3DS_TRAN_SUM_N as CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    d.CRD_SUM_N3D_TRAN_SUM_N as CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    d.CRD_SUM_CARD_PRES_TRAN_CNT_Q,
    d.CRD_SUM_ATM_TRAN_CNT_Q,
    d.CRD_SUM_FALL_BACK_TRAN_CNT_Q,
    d.CRD_SUM_CHIP_TRAN_CNT_Q,
    d.CRD_SUM_PAY_PASS_TRAN_CNT_Q,
    d.CRD_SUM_CARD_PRES_TRAN_SUM_N,
    d.CRD_SUM_ATM_TRAN_SUM_N,
    d.CRD_SUM_FALL_BACK_TRAN_SUM_N,
    d.CRD_SUM_CHIP_TRAN_SUM_N,
    d.CRD_SUM_PAY_PASS_TRAN_SUM_N,
    d.CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
    d.CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
    d.CRD_SUM_CAPP_LOGN_CNT_Q,
    d.CRD_SUM_NTB_LOGN_CNT_Q,
    d.CRD_SUM_VIEW_CARD_DETL_CNT_Q,
    d.CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_HIGH_RISK_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_FRAU_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_WHLI_F as CRD_MAX_CARD_USER_VARY_WHLI_F,
    d.CRD_MAX_CUV_DO_NOT_CTCT_F as CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F,
    f.CMA_SUM_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    f.CMA_SUM_TRAN_SUM_N,
    f.CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_SUM_N,
    f.CMA_SUM_FINL_APRD_TRAN_SUM_N,
    f.CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_CNT_Q,
    f.CMA_SUM_OSEA_TRAN_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_SUM_N,
    f.CMA_SUM_OSEA_TRAN_SUM_N,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    f.CMA_SUM_3DS_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    f.CMA_SUM_N3D_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    f.CMA_SUM_3DS_TRAN_SUM_N as CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    f.CMA_SUM_N3D_TRAN_SUM_N as CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    f.CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    f.CMA_SUM_ATM_TRAN_CNT_Q,
    f.CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    f.CMA_SUM_CHIP_TRAN_CNT_Q,
    f.CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    f.CMA_SUM_CARD_PRES_TRAN_SUM_N,
    f.CMA_SUM_ATM_TRAN_SUM_N,
    f.CMA_SUM_FALL_BACK_TRAN_SUM_N,
    f.CMA_SUM_CHIP_TRAN_SUM_N,
    f.CMA_SUM_PAY_PASS_TRAN_SUM_N,
    f.CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    f.CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    f.CMA_MAX_CUV_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_RULE_FLAG,
    g.CMC_SUM_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_CNT_Q,
    g.CMC_SUM_TRAN_SUM_N,
    g.CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_FINL_APRD_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_SUM_N,
    g.CMC_SUM_FINL_APRD_TRAN_SUM_N,
    g.CMC_SUM_FDP_RULE_TRIG_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_CNT_Q,
    g.CMC_SUM_OSEA_TRAN_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_SUM_N,
    g.CMC_SUM_OSEA_TRAN_SUM_N,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    g.CMC_SUM_3DS_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    g.CMC_SUM_N3D_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    g.CMC_SUM_3DS_TRAN_SUM_N as CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    g.CMC_SUM_N3D_TRAN_SUM_N as CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    g.CMC_SUM_CARD_PRES_TRAN_CNT_Q,
    g.CMC_SUM_ATM_TRAN_CNT_Q,
    g.CMC_SUM_FALL_BACK_TRAN_CNT_Q,
    g.CMC_SUM_CHIP_TRAN_CNT_Q,
    g.CMC_SUM_PAY_PASS_TRAN_CNT_Q,
    g.CMC_SUM_CARD_PRES_TRAN_SUM_N,
    g.CMC_SUM_ATM_TRAN_SUM_N,
    g.CMC_SUM_FALL_BACK_TRAN_SUM_N,
    g.CMC_SUM_CHIP_TRAN_SUM_N,
    g.CMC_SUM_PAY_PASS_TRAN_SUM_N,
    g.CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    g.CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    g.CMC_MAX_CUV_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_RULE_FLAG,
    h.MAQ_SUM_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_TRAN_SUM_N,
    h.MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FINL_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_CNT_Q,
    h.MAQ_SUM_OSEA_TRAN_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_SUM_N,
    h.MAQ_SUM_OSEA_TRAN_SUM_N,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_3DS_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    h.MAQ_SUM_N3D_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    h.MAQ_SUM_3DS_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    h.MAQ_SUM_N3D_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    h.MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_ATM_TRAN_CNT_Q,
    h.MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
    h.MAQ_SUM_CHIP_TRAN_CNT_Q,
    h.MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_PRES_TRAN_SUM_N,
    h.MAQ_SUM_ATM_TRAN_SUM_N,
    h.MAQ_SUM_FALL_BACK_TRAN_SUM_N,
    h.MAQ_SUM_CHIP_TRAN_SUM_N,
    h.MAQ_SUM_PAY_PASS_TRAN_SUM_N
FROM 
    BASE_TRAN a
LEFT JOIN 
    AGG_CUST_TRAN_PRFL b
ON 
    a.ssx_cust_num = b.cust_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = b.WINDOW_START_DATE
LEFT JOIN 
    AGG_CARD_TRAN_PRFL d
ON 
    a.CHL_ID_CARD_NUM = d.card_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = d.WINDOW_START_DATE
LEFT JOIN 
    agg_cust_merc_acqr_tran_prfl f
ON 
    a.ssx_cust_num = f.cust_i and a.chl_ct_term_owner_id = f.merc_i and a.chl_ct_acq_id = f.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = f.WINDOW_START_DATE
LEFT JOIN 
    agg_card_merc_catg_tran_prfl g
ON 
    a.CHL_ID_CARD_NUM = g.card_i and a.chl_ct_mer_mcc = g.merc_catg_c
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = g.WINDOW_START_DATE
LEFT JOIN 
   agg_merc_acqr_tran_prfl h
ON 
    a.chl_ct_term_owner_id = h.merc_i and a.chl_ct_acq_id = h.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = h.WINDOW_START_DATE
",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,6460206,6460.206,107.6701,1.794502,4X-LARGE,128,229.696256
01be609d-3204-b944-0000-c71d28add9ca,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,5732837,5732.837,95.547283,1.592455,4X-LARGE,128,203.83424
01bdee70-3204-aa22-0000-c71d2567c522,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,5534893,5534.893,92.248217,1.53747,4X-LARGE,128,196.79616
01bdd9e2-3204-a617-0000-c71d24ca5412,"WITH BASE_TRAN AS (
    select 
        -- identifier columns
        fdp.tran_id, -- use tran_id from the subquery
        SSX_CUST_NUM, -- we don't really need it for modeling, only for diagnostics
        chl_id_card_num,
        chl_ct_term_owner_id,
        chl_ct_acq_id,
        TRANSACTIONDATETIME,
        TRANSACTION_HOUR,
        -- SPLIT as SPLI,
    
        -- numerical UV columns, if missing then -1 as default
        COALESCE(CAST(DTL_CA_CLIENT_AMT AS FLOAT), -1) AS DTL_CA_CLIENT_AMT,
        COALESCE(CAST(_C_CC_GBL_N3D_1D_SUM_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_SUM_1,
        COALESCE(CAST(_c_cc_high_vel_apple_sum_1 AS FLOAT), -1) AS _c_cc_high_vel_apple_sum_1,
        COALESCE(CAST(_c_crd_apay_cnt_1 AS FLOAT), -1) AS _c_crd_apay_cnt_1,
        COALESCE(CAST(_C_CC_GBL_N3D_1D_CNT_1 AS FLOAT), -1) AS _C_CC_GBL_N3D_1D_CNT_1,
        COALESCE(CAST(_C_CC_CNP_VEL_6HR_SUM_1 AS FLOAT), -1) AS _C_CC_CNP_VEL_6HR_SUM_1,
        COALESCE(CAST(_C_CRD_APAY_SUM_1 AS FLOAT), -1) AS _C_CRD_APAY_SUM_1,
        COALESCE(CAST(_C_CRD_SAFE_MERCHANT AS FLOAT), -1) AS _C_CRD_SAFE_MERCHANT,
        COALESCE(CAST(_C_2WAY_CRD_FRD_RULE_FLAG AS FLOAT), -1) AS _C_2WAY_CRD_FRD_RULE_FLAG,
        COALESCE(CAST(_c_cc_cnp_ltrans_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_ltrans_6hr_count_1,
        COALESCE(CAST(_c_cc_cnp_vel_6hr_count_1 AS FLOAT), -1) AS _c_cc_cnp_vel_6hr_count_1,
        COALESCE(CAST(_l_city_age AS FLOAT), -1) AS _l_city_age,
        COALESCE(CAST(_a_crd_npp_payment_amount AS FLOAT), -1) AS _a_crd_npp_payment_amount,
        COALESCE(CAST(_a_client_country_cnt_3 AS FLOAT), -1) AS _a_client_country_cnt_3,
        COALESCE(CAST(_a_customer_age AS FLOAT), -1) AS _a_customer_age,
        COALESCE(CAST(_a_client_country_cnt_10 AS FLOAT), -1) AS _a_client_country_cnt_10,
        COALESCE(CAST(_a_npp_ftp_sum AS FLOAT), -1) AS _a_npp_ftp_sum,
        COALESCE(CAST(_l_paste_in_login_cnt AS FLOAT), -1) AS _l_paste_in_login_cnt,
        COALESCE(CAST(_a_cust_sum_aaa_long AS FLOAT), -1) AS _a_cust_sum_aaa_long,
        COALESCE(CAST(_l_g_con_dev AS FLOAT), -1) AS _l_g_con_dev,
        COALESCE(CAST(_l_dev_fam_age AS FLOAT), -1) AS _l_dev_fam_age,
        COALESCE(CAST(_l_touch_cnt AS FLOAT), -1) AS _l_touch_cnt,
        COALESCE(CAST(_b_recip_sum_aaa_long AS FLOAT), -1) AS _b_recip_sum_aaa_long,
        COALESCE(CAST(_l_risky_key_combo AS FLOAT), -1) AS _l_risky_key_combo,
        COALESCE(CAST(_a_c_g AS FLOAT), -1) AS _a_c_g,
        COALESCE(CAST(_l_score_4 AS FLOAT), -1) AS _l_score_4,
        COALESCE(CAST(_a_e AS FLOAT), -1) AS _a_e,
        COALESCE(CAST(_a_npp_inb_pmt_val AS FLOAT), -1) AS _a_npp_inb_pmt_val,
        COALESCE(CAST(_a_client_country_cnt_2 AS FLOAT), -1) AS _a_client_country_cnt_2,
        COALESCE(CAST(_a_prof_capp_device_cnt_1 AS FLOAT), -1) AS _a_prof_capp_device_cnt_1,
        COALESCE(CAST(_a_crd_scam_supp_7d_sum_1 AS FLOAT), -1) AS _a_crd_scam_supp_7d_sum_1,
        COALESCE(CAST(_a_client_city_cnt_2 AS FLOAT), -1) AS _a_client_city_cnt_2,
        COALESCE(CAST(_l_uid_age AS FLOAT), -1) AS _l_uid_age,
        COALESCE(CAST(_l_scrn_w AS FLOAT), -1) AS _l_scrn_w,
        COALESCE(CAST(_l_asn_age AS FLOAT), -1) AS _l_asn_age,
        COALESCE(CAST(_l_score_2 AS FLOAT), -1) AS _l_score_2,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_5 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_5,
        COALESCE(CAST(_l_bc_sess_cnt AS FLOAT), -1) AS _l_bc_sess_cnt,
        COALESCE(CAST(_l_acc_amt_1h AS FLOAT), -1) AS _l_acc_amt_1h,
        COALESCE(CAST(_a_list_wl_scam_drive_license AS FLOAT), -1) AS _a_list_wl_scam_drive_license,
        COALESCE(CAST(_a_cc_cash_advance_amt AS FLOAT), -1) AS _a_cc_cash_advance_amt,
        COALESCE(CAST(_a_cust_sum_aaa_short AS FLOAT), -1) AS _a_cust_sum_aaa_short,
        COALESCE(CAST(_a_p_l_1 AS FLOAT), -1) AS _a_p_l_1,
        COALESCE(CAST(_l_pmt_amt AS FLOAT), -1) AS _l_pmt_amt,
        COALESCE(CAST(_l_isp_age AS FLOAT), -1) AS _l_isp_age,
        COALESCE(CAST(_l_acc_amt_7d AS FLOAT), -1) AS _l_acc_amt_7d,
        COALESCE(CAST(_a_client_country_cnt_7 AS FLOAT), -1) AS _a_client_country_cnt_7,
        COALESCE(CAST(_l_concurrent_sess AS FLOAT), -1) AS _l_concurrent_sess,
        COALESCE(CAST(_a_capp_hce_cnt_1 AS FLOAT), -1) AS _a_capp_hce_cnt_1,
        COALESCE(CAST(_l_score_5 AS FLOAT), -1) AS _l_score_5,
        COALESCE(CAST(_l_muid_age_per_user AS FLOAT), -1) AS _l_muid_age_per_user,
        COALESCE(CAST(_a_cust_acct_bal AS FLOAT), -1) AS _a_cust_acct_bal,
        COALESCE(CAST(_l_cust_scamrisk_score AS FLOAT), -1) AS _l_cust_scamrisk_score,
        COALESCE(CAST(_a_atm_withdrawal_sum_amt AS FLOAT), -1) AS _a_atm_withdrawal_sum_amt,
        COALESCE(CAST(_l_tap_cnt AS FLOAT), -1) AS _l_tap_cnt,
        COALESCE(CAST(_a_list_wl_scam_tp_ip AS FLOAT), -1) AS _a_list_wl_scam_tp_ip,
        COALESCE(CAST(_l_max_30d_score AS FLOAT), -1) AS _l_max_30d_score,
        COALESCE(CAST(_b_recip_sum_aaa_1 AS FLOAT), -1) AS _b_recip_sum_aaa_1,
        COALESCE(CAST(_x_cif_sender_sum AS FLOAT), -1) AS _x_cif_sender_sum,
        COALESCE(CAST(_l_m_l_1 AS FLOAT), -1) AS _l_m_l_1,
        COALESCE(CAST(_l_scrn_h AS FLOAT), -1) AS _l_scrn_h,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_2,
        COALESCE(CAST(_a_cust_action_ind AS FLOAT), -1) AS _a_cust_action_ind,
        COALESCE(CAST(_a_p_l_c AS FLOAT), -1) AS _a_p_l_c,
        COALESCE(CAST(_a_cust_avg_acct_bal AS FLOAT), -1) AS _a_cust_avg_acct_bal,
        COALESCE(CAST(_l_and_id_age AS FLOAT), -1) AS _l_and_id_age,
        COALESCE(CAST(_x_cif_rec_sum AS FLOAT), -1) AS _x_cif_rec_sum,
        COALESCE(CAST(_l_sess_cnt_mob_sdk AS FLOAT), -1) AS _l_sess_cnt_mob_sdk,
        COALESCE(CAST(_l_total_sess_cnt AS FLOAT), -1) AS _l_total_sess_cnt,
        COALESCE(CAST(_a_curr_capp_device_nftp_cnt AS FLOAT), -1) AS _a_curr_capp_device_nftp_cnt,
        COALESCE(CAST(_l_nc_acct_num_name_conf AS FLOAT), -1) AS _l_nc_acct_num_name_conf,
        COALESCE(CAST(_a_client_country_cnt_5 AS FLOAT), -1) AS _a_client_country_cnt_5,
        COALESCE(CAST(_a_u AS FLOAT), -1) AS _a_u,
        COALESCE(CAST(_b_recip_sum_aaa_7 AS FLOAT), -1) AS _b_recip_sum_aaa_7,
        COALESCE(CAST(_l_scm_rsk_scr_2 AS FLOAT), -1) AS _l_scm_rsk_scr_2,
        COALESCE(CAST(_b_recip_sum_aaa_4 AS FLOAT), -1) AS _b_recip_sum_aaa_4,
        COALESCE(CAST(_l_bc_score AS FLOAT), -1) AS _l_bc_score,
        COALESCE(CAST(_l_days_lst_dev_and AS FLOAT), -1) AS _l_days_lst_dev_and,
        COALESCE(CAST(_a_prof_capp_device_cnt_3 AS FLOAT), -1) AS _a_prof_capp_device_cnt_3,
        COALESCE(CAST(_l_days_lst_dev_ios AS FLOAT), -1) AS _l_days_lst_dev_ios,
        COALESCE(CAST(_x_last_n_txn_count AS FLOAT), -1) AS _x_last_n_txn_count,
        COALESCE(CAST(_a_t AS FLOAT), -1) AS _a_t,
        COALESCE(CAST(_a_cust_npp_in_sum_aaa_2 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_2,
        COALESCE(CAST(_l_mins_lst_lgn_capped AS FLOAT), -1) AS _l_mins_lst_lgn_capped,
        COALESCE(CAST(_l_acc_amt_2h AS FLOAT), -1) AS _l_acc_amt_2h,
        COALESCE(CAST(_l_acc_amt_4h AS FLOAT), -1) AS _l_acc_amt_4h,
        COALESCE(CAST(_a_list_bl_passport AS FLOAT), -1) AS _a_list_bl_passport,
        COALESCE(CAST(_a_list_wl_scam_passport AS FLOAT), -1) AS _a_list_wl_scam_passport,
        COALESCE(CAST(_a_list_bl_scam_passport AS FLOAT), -1) AS _a_list_bl_scam_passport,
        COALESCE(CAST(_b_recip_sum_aaa_6 AS FLOAT), -1) AS _b_recip_sum_aaa_6,
        COALESCE(CAST(_a_prof_capp_device_cnt_2 AS FLOAT), -1) AS _a_prof_capp_device_cnt_2,
        COALESCE(CAST(_a_client_country_cnt_6 AS FLOAT), -1) AS _a_client_country_cnt_6,
        COALESCE(CAST(_A_BTS_BCH_SUM AS FLOAT), -1) AS _A_BTS_BCH_SUM,
        COALESCE(CAST(_A_BTS_CUST_AGE AS FLOAT), -1) AS _A_BTS_CUST_AGE,
        COALESCE(CAST(_A_CURR_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_CURR_CAPP_DEVICE_CNT,
        COALESCE(CAST(_A_CURR_NB_BROWSER_CNT AS FLOAT), -1) AS _A_CURR_NB_BROWSER_CNT,
        COALESCE(CAST(_A_PREV_CAPP_DEVICE_CNT AS FLOAT), -1) AS _A_PREV_CAPP_DEVICE_CNT,
        COALESCE(CAST(_A_Q AS FLOAT), -1) AS _A_Q,
        COALESCE(CAST(_A_R AS FLOAT), -1) AS _A_R,
        COALESCE(CAST(_l_cntry_age AS FLOAT), -1) AS _l_cntry_age,
        COALESCE(CAST(_a_npp_in_unrelated_sum_24_1 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_1,
        COALESCE(CAST(_x_ft_over5k_recip_cnt AS FLOAT), -1) AS _x_ft_over5k_recip_cnt,
        COALESCE(CAST(_x_cif_recipient_new_cnt AS FLOAT), -1) AS _x_cif_recipient_new_cnt,
        COALESCE(CAST(_a_npp_in_unrelated_sum_24_2 AS FLOAT), -1) AS _a_npp_in_unrelated_sum_24_2,
        COALESCE(CAST(_b_npp_out_sum_1 AS FLOAT), -1) AS _b_npp_out_sum_1,
        COALESCE(CAST(_l_acc_amt_1d AS FLOAT), -1) AS _l_acc_amt_1d,
        COALESCE(CAST(_a_transport_reg_cnt_1 AS FLOAT), -1) AS _a_transport_reg_cnt_1,
        COALESCE(CAST(_a_multi_cnt AS FLOAT), -1) AS _a_multi_cnt,
        COALESCE(CAST(_l_m_l_4 AS FLOAT), -1) AS _l_m_l_4,
        COALESCE(CAST(_a_prof_capp_device_nftp_1 AS FLOAT), -1) AS _a_prof_capp_device_nftp_1,
        COALESCE(CAST(_x_name_match_cnt AS FLOAT), -1) AS _x_name_match_cnt,
        COALESCE(CAST(_a_prof_capp_device_cnt_5 AS FLOAT), -1) AS _a_prof_capp_device_cnt_5,
        COALESCE(CAST(_a_prof_capp_device_cnt_4 AS FLOAT), -1) AS _a_prof_capp_device_cnt_4,
        COALESCE(CAST(_l_sess_cnt_web AS FLOAT), -1) AS _l_sess_cnt_web,
        COALESCE(CAST(_b_recip_sum_aaa_2 AS FLOAT), -1) AS _b_recip_sum_aaa_2,
        COALESCE(CAST(_l_m_l_c AS FLOAT), -1) AS _l_m_l_c,
        COALESCE(CAST(_l_time_zone AS FLOAT), -1) AS _l_time_zone,
        COALESCE(CAST(_a_cust_npp_in_sum_aaa_1 AS FLOAT), -1) AS _a_cust_npp_in_sum_aaa_1,
        COALESCE(CAST(_l_ip_age AS FLOAT), -1) AS _l_ip_age,
        COALESCE(CAST(_a_npp_inbound_sum_amt AS FLOAT), -1) AS _a_npp_inbound_sum_amt,
        COALESCE(CAST(_x_ft_over5k_recip_sum AS FLOAT), -1) AS _x_ft_over5k_recip_sum,
        COALESCE(CAST(_x_cif_sender_cnt AS FLOAT), -1) AS _x_cif_sender_cnt,
        COALESCE(CAST(_a_nb_logons_cnt_2 AS FLOAT), -1) AS _a_nb_logons_cnt_2,
        COALESCE(CAST(_a_clc_ftp_amt AS FLOAT), -1) AS _a_clc_ftp_amt,
        COALESCE(CAST(_l_trvl_spd AS FLOAT), -1) AS _l_trvl_spd,
        COALESCE(CAST(_b_recip_sum_long AS FLOAT), -1) AS _b_recip_sum_long,
        COALESCE(CAST(_a_crypto_mnthly_sum AS FLOAT), -1) AS _a_crypto_mnthly_sum,
        COALESCE(CAST(_a_gl_trf_acc_bal AS FLOAT), -1) AS _a_gl_trf_acc_bal,
        COALESCE(CAST(_l_sess_cnt_mob_browser AS FLOAT), -1) AS _l_sess_cnt_mob_browser,
        COALESCE(CAST(_l_score_3 AS FLOAT), -1) AS _l_score_3,
        COALESCE(CAST(_a_crd_crypto_proc_flg AS FLOAT), -1) AS _a_crd_crypto_proc_flg,
        COALESCE(CAST(_b_npp_out_cnt_2 AS FLOAT), -1) AS _b_npp_out_cnt_2,
        COALESCE(CAST(_a_npp_out_cnt_2 AS FLOAT), -1) AS _a_npp_out_cnt_2,
        COALESCE(CAST(_a_sch_amt AS FLOAT), -1) AS _a_sch_amt,
        COALESCE(CAST(_a_p_l_3 AS FLOAT), -1) AS _a_p_l_3,
        COALESCE(CAST(_b_npp_out_ftp_sum_1 AS FLOAT), -1) AS _b_npp_out_ftp_sum_1,
        COALESCE(CAST(_l_sdid_cnt_1 AS FLOAT), -1) AS _l_sdid_cnt_1,
        COALESCE(CAST(_a_cust_npp_out_sum_aaa_long AS FLOAT), -1) AS _a_cust_npp_out_sum_aaa_long,
        COALESCE(CAST(_a_list_rl1_scam_cust_cif AS FLOAT), -1) AS _a_list_rl1_scam_cust_cif,
        COALESCE(CAST(_l_num_sess_2h AS FLOAT), -1) AS _l_num_sess_2h,
        COALESCE(CAST(_a_vpn_vps_ip_logon_count AS FLOAT), -1) AS _a_vpn_vps_ip_logon_count,
        COALESCE(CAST(_a_geo_distance AS FLOAT), -1) AS _a_geo_distance,
        COALESCE(CAST(_x_name_match_ind AS FLOAT), -1) AS _x_name_match_ind,
        COALESCE(CAST(_a_nb_logons_cnt_3 AS FLOAT), -1) AS _a_nb_logons_cnt_3,
        COALESCE(CAST(_l_days_lst_dev_js AS FLOAT), -1) AS _l_days_lst_dev_js,
        COALESCE(CAST(_a_ftp_sum_1 AS FLOAT), -1) AS _a_ftp_sum_1,
        COALESCE(CAST(_l_num_sess_4h AS FLOAT), -1) AS _l_num_sess_4h,
        COALESCE(CAST(_l_nc_match_name_conf AS FLOAT), -1) AS _l_nc_match_name_conf,
        COALESCE(CAST(_b_recip_sum_aaa_5 AS FLOAT), -1) AS _b_recip_sum_aaa_5,
        COALESCE(CAST(_l_dpi_change AS FLOAT), -1) AS _l_dpi_change,
        COALESCE(CAST(_b_recip_sum_1 AS FLOAT), -1) AS _b_recip_sum_1,
        COALESCE(CAST(_a_scam_risky_mcc_prelead_amt AS FLOAT), -1) AS _a_scam_risky_mcc_prelead_amt,
        COALESCE(CAST(_l_m_l_3 AS FLOAT), -1) AS _l_m_l_3,
        COALESCE(CAST(_x_cif_rec_cnt AS FLOAT), -1) AS _x_cif_rec_cnt,
        COALESCE(CAST(_a_list_bl_scam_tp_ip AS FLOAT), -1) AS _a_list_bl_scam_tp_ip,
        _b_crypto_risk, -- labelled as str but all num values?
        COALESCE(CAST(_a_list_bl_scam_drive_license AS FLOAT), -1) AS _a_list_bl_scam_drive_license,
        COALESCE(CAST(_b_recip_sum_aaa_short AS FLOAT), -1) AS _b_recip_sum_aaa_short,
        COALESCE(CAST(_l_clipb_event_cnt AS FLOAT), -1) AS _l_clipb_event_cnt,
        COALESCE(CAST(_b_list_rl1_scam_tp_cif AS FLOAT), -1) AS _b_list_rl1_scam_tp_cif,
        COALESCE(CAST(_b_npp_blacklist_recip_flag AS FLOAT), -1) AS _b_npp_blacklist_recip_flag,
    
        -- categorical UV columns
        _a_cif_establish_channel, -- customer established channel (if = 'O' then it's electronic)
        _a_ecv_document_ip,
        _a_cust_os_ver,
        _a_cust_os_name,
        _A_2WAY_TYPE,
        _A_CLIENT_CITY_10,
        _L_PUSH_API_1,
        _L_PUSH_API_2,
        _L_PUSH_API_3,
        _L_PUSH_API_4,
        _a_client_city_6,
        _l_nc_winning_alg,
        _l_proxy_type,
        _l_lang_3,
        _l_lang_1,
        _l_lang_2,
        _l_nc_response_code,
        _a_prof_risk_ind,
        _a_latest_ncrg_isp,
        -- _C_CC_N3D_OVS_975_CNT_1,
        chl_ct_term_owner_name,
        -- _c_cc_n3d_dom_999_cnt_1,
        _C_CNP_MER_NM_CURR,
        -- _C_CRD_N3D_SCORE_SUM_1,
        dtl_ex_0_2s_002,
        dtl_ex_3_80s_002,
        case when _a_mrisk_foreign_ip_cntry_code is NULL then 'unknown' else _a_mrisk_foreign_ip_cntry_code || '_v' end as _a_mrisk_foreign_ip_cntry_code,
        case when dtl_ca_auth_sys_dec is NULL then 'unknown' else dtl_ca_auth_sys_dec || '_v' end as dtl_ca_auth_sys_dec,
        chl_ct_mer_mcc,
        -- case when chl_ct_mer_mcc is NULL then 'unknown' else chl_ct_mer_mcc || '_v' end as chl_ct_mer_mcc,
        case when ATH_PC_CUST_PRESENT is NULL then 'unknown' else ATH_PC_CUST_PRESENT || '_v' end as ATH_PC_CUST_PRESENT,
        case when _a_cif_establish_cust_pcode in ('0', null) then 'unknown' else _a_cif_establish_cust_pcode || '_v' end as _a_cif_establish_cust_pcode,
        case when chl_ct_term_cntry_code in ('0', null) then 'unknown' else chl_ct_term_cntry_code || '_v' end as chl_ct_term_cntry_code,
        case when dtl_ca_merch_curr_code in ('0', null) then 'unknown' else dtl_ca_merch_curr_code || '_v' end as dtl_ca_merch_curr_code,
    
        -- features extracted from fingerprints data
        case when substr(_L_FINGERPRINT_1, 1, 1) in('P', 'O') then substr(_L_FINGERPRINT_1, 1, 1) else 'unknown' end as PARTY_TYPE, -- ""P"" for personal, ""O"" for organisations,
        case when substr(_L_FINGERPRINT_1, 2, 1) in('M', 'F') then substr(_L_FINGERPRINT_1, 2, 1) else 'unknown' end as GENDER, -- M or F    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 3, 1) as FLOAT), -1) as DMC_CNT, -- count of scheme debit cards
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 4, 1) as FLOAT), -1) as YCS_CNT, -- count of travel money cards    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 5, 1) as FLOAT), -1) as TRAN_CNT, -- count of personal txn accts   
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 6, 1) as FLOAT), -1) as DPST_CNT, -- count of money management accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 7, 1) as FLOAT), -1) as CC_CNT, -- count of credit cards    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 8, 1) as FLOAT), -1) as TRD_CNT, -- count of trading accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 9, 1) as FLOAT), -1) as PL_CNT, -- count of personal loan accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 10, 1) as FLOAT), -1) as INVST_CNT, -- count of investment accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 11, 1) as FLOAT), -1) as MORT_CNT, -- count of mortgage accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 12, 1) as FLOAT), -1) as INSRNC_CNT, -- count of insurance accounts 
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 13, 1) as FLOAT), -1) as BTA_CNT, -- count of business txn accounts    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 14, 1) as FLOAT), -1) as BUS_LN_CNT, -- count of business loans    
        COALESCE(TRY_CAST(substr(_L_FINGERPRINT_1, 15, 1) as FLOAT), -1) as OTH_CNT, -- count of other accounts    
        case when substr(_L_FINGERPRINT_1, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 16, 1) || '_v' else 'unknown' end as NTBNK_FAC, -- 1/0 indicator whether the customer has a netbank facility    
        case when substr(_L_FINGERPRINT_1, 17, 1) in('0', '1') then substr(_L_FINGERPRINT_1, 17, 1) || '_v' else 'unknown' end as REL_MNG, -- indicates whether the customer is relationship managed    
        case when substr(_L_FINGERPRINT_2, 1, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 1, 2) || '_v' end as FA_1, -- 1st known foreign association   
        case when substr(_L_FINGERPRINT_2, 3, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 3, 2) || '_v' end as FA_2, -- 2nd known foreign association    
        case when substr(_L_FINGERPRINT_2, 5, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 5, 2) || '_v' end as NO_1, -- name association 1  
        case when substr(_L_FINGERPRINT_2, 7, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 7, 2) || '_v' end as NO_2, -- name association 2  
        case when substr(_L_FINGERPRINT_2, 11, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 11, 2) || '_v' end as FA, -- foreign address    
        case when substr(_L_FINGERPRINT_2, 13, 2) in ('', '##', null) then 'unknown' else substr(_L_FINGERPRINT_2, 13, 2) || '_v' end as FP, -- foreign phone number 
        case when substr(_L_FINGERPRINT_3, 1, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 1, 1) end as GOVT_BENE, -- government benefits code    
        case when substr(_L_FINGERPRINT_3, 2, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 2, 1) || '_v' end as PRVT_CUST, -- private customer flag    
        case when substr(_L_FINGERPRINT_3, 3, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 3, 1) || '_v' else 'unknown' end as HL_ASOC, -- any association with a home loan    
        case when substr(_L_FINGERPRINT_3, 4, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 4, 1) || '_v' else 'unknown' end as CORP_EMPL, -- employed by large corporate  
        case when substr(_L_FINGERPRINT_3, 6, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 6, 1) || '_v' else 'unknown' end as TRUSTEE, -- trustee flag/part of a trust fund    
        case when substr(_L_FINGERPRINT_3, 16, 1) in('0', '1') then substr(_L_FINGERPRINT_3, 16, 1) || '_v' else 'unknown' end as INTL_STU, -- international student flag    
        case when substr(_L_FINGERPRINT_3, 12, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 12, 1) || '_v' end as MAR_STS_ORG_STR, -- marital status/business structure (person/org diff)    
        case when substr(_L_FINGERPRINT_3, 13, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 13, 1) || '_v' end as EMPL_CLAS_LGL_STS, -- employment classification or org status    
        case when substr(_L_FINGERPRINT_3, 14, 1) in ('', '#', null) then 'unknown' else substr(_L_FINGERPRINT_3, 14, 1) || '_v' end as HOME_OWN, -- home ownership status     
    
        -- time differences
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_x_npp_out_sum_date AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) AS _x_npp_out_sum_date_diff,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CC_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CC_DT_DIFF, -- customer recent credit card application datetime
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_ONLINE_PL_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_ONLINE_PL_DT_DIFF, -- customer recent personal loan application datetime
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CIF_ESTABLISH_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CIF_ESTABLISH_DT_DIFF, -- when the customer is established
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_a_ecv_document_dt AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _a_ecv_document_dt_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_AUTO_DEC_CP_PP_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_AUTO_DEC_CP_PP_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_CAPP_NOTIFY_OPT_OUT_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP1_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP1_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP2_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP2_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP5_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP5_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_A_SCAMP7_MLW_DT AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _A_SCAMP7_MLW_DT_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_1 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_1_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_2 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_2_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_3 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_3_DIFF,
        COALESCE(datediff('hour', TIMESTAMPADD(SECOND, CAST(_L_PUSH_API_DT_4 AS FLOAT), '1960-01-01 00:00:00'), TRANSACTIONDATETIME), -1) as _L_PUSH_API_DT_4_DIFF,
    from (
        select 
            to_number(dtl_ex_0_n_064)||dtl_ex_0_n_065||dtl_ex_0_n_066 as tran_id, -- create tran_id here
            *,
            TO_TIMESTAMP(TTS_TRAN_DATE_ALT || ' ' || TTS_TRAN_TIME_ALT, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
            EXTRACT(HOUR FROM TRANSACTIONDATETIME) + EXTRACT(MINUTE FROM TRANSACTIONDATETIME) / 60.0 as TRANSACTION_HOUR
        from PRD_P01_DMN_FRAUMD.lcl.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT
        where TTS_TRAN_DATE_ALT between '20250206' and '20250207'
          and hdr_activity_type = 'CA'
          and SSX_CUST_NUM <> ''
          and SSX_CUST_NUM IS NOT NULL
          and DTL_CA_CLIENT_AMT IS NOT NULL
        ) fdp
    )
    , date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        lcl.cust_tran_prfl
    order by tran_d
    )
    , hourly_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        -- CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        lcl.CARD_MERC_CATG_TRAN_PRFL
    ),
    all_dates_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        ds.tran_d
    FROM
        (SELECT DISTINCT card_i, merc_catg_c FROM lcl.CARD_MERC_CATG_TRAN_PRFL) ca
    CROSS JOIN date_series ds
    ),
    daily_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        -- COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates_CARD_MERC_CATG_TRAN_PRFL ad
    LEFT JOIN hourly_data_CARD_MERC_CATG_TRAN_PRFL hd
    ON ad.card_i = hd.card_i AND ad.merc_catg_c = hd.merc_catg_c AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d)
    )
    , aggregated_data_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i,
        merc_catg_c,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        -- SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data_CARD_MERC_CATG_TRAN_PRFL
    )
    , AGG_CARD_MERC_CATG_TRAN_PRFL AS (
    SELECT
        card_i, --as chl_id_card_num,
        merc_catg_c,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CMC_SUM_TRAN_CNT_Q,
        CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        CMC_SUM_TRAN_SUM_N,
        CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        CMC_SUM_UPST_APRD_TRAN_SUM_N,
        CMC_SUM_FINL_APRD_TRAN_SUM_N,
        CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        CMC_SUM_DOMS_TRAN_CNT_Q,
        CMC_SUM_OSEA_TRAN_CNT_Q,
        CMC_SUM_DOMS_TRAN_SUM_N,
        CMC_SUM_OSEA_TRAN_SUM_N,
        CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CMC_SUM_3DS_TRAN_CNT_Q,
        CMC_SUM_N3D_TRAN_CNT_Q,
        CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CMC_SUM_3DS_TRAN_SUM_N,
        CMC_SUM_N3D_TRAN_SUM_N,
        CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        CMC_SUM_ATM_TRAN_CNT_Q,
        CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        -- CMC_SUM_CHIP_TRAN_CNT_Q,
        CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        CMC_SUM_CARD_PRES_TRAN_SUM_N,
        CMC_SUM_ATM_TRAN_SUM_N,
        CMC_SUM_FALL_BACK_TRAN_SUM_N,
        CMC_SUM_CHIP_TRAN_SUM_N,
        CMC_SUM_PAY_PASS_TRAN_SUM_N,
        CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CMC_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_CARD_MERC_CATG_TRAN_PRFL
    ORDER BY
        card_i,
        merc_catg_c,
        window_start_date
    )
    , hourly_data_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            INCO_EXPY_CNT_Q,
            INCO_CVVA_CNT_Q,
            INCO_PIN_CNT_Q,
            OVER_LIMT_DCLN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            UPST_DCLN_TRAN_SUM_N,
            RULE_DCLN_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            INCO_EXPY_SUM_N,
            INCO_CVVA_SUM_N,
            INCO_PIN_SUM_N,
            OVER_LIMT_DCLN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CAPP_PSWD_CHNG_CNT_Q,
            CAPP_DVIC_REGR_CNT_Q,
            CAPP_LOGN_CNT_Q,
            NTB_LOGN_CNT_Q,
            VIEW_CARD_DETL_CNT_Q,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F,
            CUV_WHLI_F,
            CUV_DO_NOT_CTCT_F
        FROM
            lcl.card_tran_prfl
    ),
    all_dates_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT card_i FROM lcl.card_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_CARD_TRAN_PRFL AS (
        SELECT
            ad.card_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.INCO_EXPY_CNT_Q), 0) AS DAILY_INCO_EXPY_CNT_Q,
            COALESCE(SUM(hd.INCO_CVVA_CNT_Q), 0) AS DAILY_INCO_CVVA_CNT_Q,
            COALESCE(SUM(hd.INCO_PIN_CNT_Q), 0) AS DAILY_INCO_PIN_CNT_Q,
            COALESCE(SUM(hd.OVER_LIMT_DCLN_CNT_Q), 0) AS DAILY_OVER_LIMT_DCLN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_SUM_N), 0) AS DAILY_UPST_DCLN_TRAN_SUM_N,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_SUM_N), 0) AS DAILY_RULE_DCLN_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.INCO_EXPY_SUM_N), 0) AS DAILY_INCO_EXPY_SUM_N,
            COALESCE(SUM(hd.INCO_CVVA_SUM_N), 0) AS DAILY_INCO_CVVA_SUM_N,
            COALESCE(SUM(hd.INCO_PIN_SUM_N), 0) AS DAILY_INCO_PIN_SUM_N,
            COALESCE(SUM(hd.OVER_LIMT_DCLN_SUM_N), 0) AS DAILY_OVER_LIMT_DCLN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
            COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
            COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
            COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
            COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_WHLI_F), 0) AS DAILY_CUV_WHLI_F,
            COALESCE(MAX(hd.CUV_DO_NOT_CTCT_F), 0) AS DAILY_CUV_DO_NOT_CTCT_F
    
        FROM
            all_dates_CARD_TRAN_PRFL ad
        LEFT JOIN hourly_data_CARD_TRAN_PRFL hd
        ON ad.card_i = hd.card_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.card_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_CARD_TRAN_PRFL AS (
        SELECT
            card_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_INCO_EXPY_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_CNT_Q,
            SUM(DAILY_INCO_CVVA_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_CNT_Q,
            SUM(DAILY_INCO_PIN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_CNT_Q,
            SUM(DAILY_OVER_LIMT_DCLN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_UPST_DCLN_TRAN_SUM_N,
            SUM(DAILY_RULE_DCLN_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_RULE_DCLN_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_INCO_EXPY_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_EXPY_SUM_N,
            SUM(DAILY_INCO_CVVA_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_CVVA_SUM_N,
            SUM(DAILY_INCO_PIN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_INCO_PIN_SUM_N,
            SUM(DAILY_OVER_LIMT_DCLN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OVER_LIMT_DCLN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_PAY_PASS_TRAN_SUM_N,
            SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
            SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
            SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_CAPP_LOGN_CNT_Q,
            SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_NTB_LOGN_CNT_Q,
            SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_SUM_VIEW_CARD_DETL_CNT_Q,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_WHLI_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_WHLI_F,
            MAX(DAILY_CUV_DO_NOT_CTCT_F) OVER (PARTITION BY card_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CRD_MAX_CUV_DO_NOT_CTCT_F
        FROM
            daily_data_CARD_TRAN_PRFL
    )
    , AGG_CARD_TRAN_PRFL AS (
    SELECT
        card_i, --as chl_id_card_num,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CRD_SUM_TRAN_CNT_Q,
        CRD_SUM_UPST_APRD_TRAN_CNT_Q,
        CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
        CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
        CRD_SUM_FINL_APRD_TRAN_CNT_Q,
        CRD_SUM_INCO_EXPY_CNT_Q,
        CRD_SUM_INCO_CVVA_CNT_Q,
        CRD_SUM_INCO_PIN_CNT_Q,
        CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
        CRD_SUM_TRAN_SUM_N,
        CRD_SUM_UPST_APRD_TRAN_SUM_N,
        CRD_SUM_UPST_DCLN_TRAN_SUM_N,
        CRD_SUM_RULE_DCLN_TRAN_SUM_N,
        CRD_SUM_FINL_APRD_TRAN_SUM_N,
        CRD_SUM_INCO_EXPY_SUM_N,
        CRD_SUM_INCO_CVVA_SUM_N,
        CRD_SUM_INCO_PIN_SUM_N,
        CRD_SUM_OVER_LIMT_DCLN_SUM_N,
        CRD_SUM_FDP_RULE_TRIG_CNT_Q,
        CRD_SUM_DOMS_TRAN_CNT_Q,
        CRD_SUM_OSEA_TRAN_CNT_Q,
        CRD_SUM_DOMS_TRAN_SUM_N,
        CRD_SUM_OSEA_TRAN_SUM_N,
        CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CRD_SUM_3DS_TRAN_CNT_Q,
        CRD_SUM_N3D_TRAN_CNT_Q,
        CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CRD_SUM_3DS_TRAN_SUM_N,
        CRD_SUM_N3D_TRAN_SUM_N,
        CRD_SUM_CARD_PRES_TRAN_CNT_Q,
        CRD_SUM_ATM_TRAN_CNT_Q,
        CRD_SUM_FALL_BACK_TRAN_CNT_Q,
        CRD_SUM_CHIP_TRAN_CNT_Q,
        CRD_SUM_PAY_PASS_TRAN_CNT_Q,
        CRD_SUM_CARD_PRES_TRAN_SUM_N,
        CRD_SUM_ATM_TRAN_SUM_N,
        CRD_SUM_FALL_BACK_TRAN_SUM_N,
        CRD_SUM_CHIP_TRAN_SUM_N,
        CRD_SUM_PAY_PASS_TRAN_SUM_N,
        CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
        CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
        CRD_SUM_CAPP_LOGN_CNT_Q,
        CRD_SUM_NTB_LOGN_CNT_Q,
        CRD_SUM_VIEW_CARD_DETL_CNT_Q,
        CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_RULE_PUSH_SENT_F,
        CRD_MAX_CUV_WHLI_F,
        CRD_MAX_CUV_DO_NOT_CTCT_F
    FROM
        aggregated_data_CARD_TRAN_PRFL
    ORDER BY
        card_i,
        window_start_date
    )
    , hourly_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            -- CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F
        FROM
            lcl.cust_merc_acqr_tran_prfl
    ),
    all_dates_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT cust_i, merc_i, acqr_i FROM lcl.cust_merc_acqr_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            ad.cust_i,
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            -- COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
        FROM
            all_dates_cust_merc_acqr_tran_prfl ad
        LEFT JOIN hourly_data_cust_merc_acqr_tran_prfl hd
        ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.cust_i,
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_cust_merc_acqr_tran_prfl AS (
        SELECT
            cust_i,
            merc_i,
            acqr_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
            -- SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            daily_data_cust_merc_acqr_tran_prfl
    )
    , agg_cust_merc_acqr_tran_prfl as (
    SELECT
        cust_i, -- as ssx_cust_num,
        merc_i,
        acqr_i,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CMA_SUM_TRAN_CNT_Q,
        CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        CMA_SUM_TRAN_SUM_N,
        CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        CMA_SUM_UPST_APRD_TRAN_SUM_N,
        CMA_SUM_FINL_APRD_TRAN_SUM_N,
        CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        CMA_SUM_DOMS_TRAN_CNT_Q,
        CMA_SUM_OSEA_TRAN_CNT_Q,
        CMA_SUM_DOMS_TRAN_SUM_N,
        CMA_SUM_OSEA_TRAN_SUM_N,
        CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CMA_SUM_3DS_TRAN_CNT_Q,
        CMA_SUM_N3D_TRAN_CNT_Q,
        CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CMA_SUM_3DS_TRAN_SUM_N,
        CMA_SUM_N3D_TRAN_SUM_N,
        CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        CMA_SUM_ATM_TRAN_CNT_Q,
        CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        -- CMA_SUM_CHIP_TRAN_CNT_Q,
        CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        CMA_SUM_CARD_PRES_TRAN_SUM_N,
        CMA_SUM_ATM_TRAN_SUM_N,
        CMA_SUM_FALL_BACK_TRAN_SUM_N,
        CMA_SUM_CHIP_TRAN_SUM_N,
        CMA_SUM_PAY_PASS_TRAN_SUM_N,
        CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_cust_merc_acqr_tran_prfl
    ORDER BY
        cust_i,
        merc_i,
        acqr_i,
        window_start_date
        )
    , hourly_data_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N
        FROM
            lcl.merc_acqr_tran_prfl
    ),
    all_dates_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT merc_i, acqr_i FROM lcl.merc_acqr_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_merc_acqr_tran_prfl AS (
        SELECT
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N
        FROM
            all_dates_merc_acqr_tran_prfl ad
        LEFT JOIN hourly_data_merc_acqr_tran_prfl hd
        ON ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.merc_i,
            ad.acqr_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_merc_acqr_tran_prfl AS (
        SELECT
            merc_i,
            acqr_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS MAQ_SUM_PAY_PASS_TRAN_SUM_N
        FROM
            daily_data_merc_acqr_tran_prfl
    )
    , AGG_merc_acqr_tran_prfl AS (
    SELECT
        merc_i,
        acqr_i,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        MAQ_SUM_TRAN_CNT_Q,
        MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
        MAQ_SUM_TRAN_SUM_N,
        MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
        MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
        MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
        MAQ_SUM_UPST_APRD_TRAN_SUM_N,
        MAQ_SUM_FINL_APRD_TRAN_SUM_N,
        MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
        MAQ_SUM_DOMS_TRAN_CNT_Q,
        MAQ_SUM_OSEA_TRAN_CNT_Q,
        MAQ_SUM_DOMS_TRAN_SUM_N,
        MAQ_SUM_OSEA_TRAN_SUM_N,
        MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        MAQ_SUM_3DS_TRAN_CNT_Q,
        MAQ_SUM_N3D_TRAN_CNT_Q,
        MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        MAQ_SUM_3DS_TRAN_SUM_N,
        MAQ_SUM_N3D_TRAN_SUM_N,
        MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
        MAQ_SUM_ATM_TRAN_CNT_Q,
        MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
        MAQ_SUM_CHIP_TRAN_CNT_Q,
        MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
        MAQ_SUM_CARD_PRES_TRAN_SUM_N,
        MAQ_SUM_ATM_TRAN_SUM_N,
        MAQ_SUM_FALL_BACK_TRAN_SUM_N,
        MAQ_SUM_CHIP_TRAN_SUM_N,
        MAQ_SUM_PAY_PASS_TRAN_SUM_N
    FROM
        aggregated_data_merc_acqr_tran_prfl
    ORDER BY
        merc_i,
        acqr_i,
        window_start_date
    )
    , hourly_data_cust_tran_prfl AS (
        SELECT
            cust_i,
            tran_d,
            TRAN_CNT_Q,
            UPST_APRD_TRAN_CNT_Q,
            TRAN_SUM_N,
            UPST_DCLN_TRAN_CNT_Q,
            RULE_DCLN_TRAN_CNT_Q,
            FINL_APRD_TRAN_CNT_Q,
            UPST_APRD_TRAN_SUM_N,
            FINL_APRD_TRAN_SUM_N,
            FDP_RULE_TRIG_CNT_Q,
            DOMS_TRAN_CNT_Q,
            OSEA_TRAN_CNT_Q,
            DOMS_TRAN_SUM_N,
            OSEA_TRAN_SUM_N,
            CARD_NOT_PRES_TRAN_CNT_Q,
            ""3DS_TRAN_CNT_Q"",
            N3D_TRAN_CNT_Q,
            CARD_NOT_PRES_TRAN_SUM_N,
            ""3DS_TRAN_SUM_N"",
            N3D_TRAN_SUM_N,
            CARD_PRES_TRAN_CNT_Q,
            ATM_TRAN_CNT_Q,
            FALL_BACK_TRAN_CNT_Q,
            CHIP_TRAN_CNT_Q,
            PAY_PASS_TRAN_CNT_Q,
            CARD_PRES_TRAN_SUM_N,
            ATM_TRAN_SUM_N,
            FALL_BACK_TRAN_SUM_N,
            CHIP_TRAN_SUM_N,
            PAY_PASS_TRAN_SUM_N,
            CAPP_PSWD_CHNG_CNT_Q,
            CAPP_DVIC_REGR_CNT_Q,
            CAPP_LOGN_CNT_Q,
            NTB_LOGN_CNT_Q,
            VIEW_CARD_DETL_CNT_Q,
            CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            CUV_FRAU_RULE_PUSH_SENT_F,
            CUV_RULE_PUSH_SENT_F
        FROM
            lcl.cust_tran_prfl
    ),
    all_dates_cust_tran_prfl AS (
        SELECT
            cust_i,
            ds.tran_d
        FROM
            (SELECT DISTINCT cust_i FROM lcl.cust_tran_prfl) ca
        CROSS JOIN date_series ds
    ),
    daily_data_cust_tran_prfl AS (
        SELECT
            ad.cust_i,
            DATE_TRUNC('day', ad.tran_d) AS activity_day,
            COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
            COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
            COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
            COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
            COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
            COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
            COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
            COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
            COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
            COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
            COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
            COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
            COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
            COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
            COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
            COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
            COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
            COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
            COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
            COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
            COALESCE(SUM(hd.CAPP_PSWD_CHNG_CNT_Q), 0) AS DAILY_CAPP_PSWD_CHNG_CNT_Q,
            COALESCE(SUM(hd.CAPP_DVIC_REGR_CNT_Q), 0) AS DAILY_CAPP_DVIC_REGR_CNT_Q,
            COALESCE(SUM(hd.CAPP_LOGN_CNT_Q), 0) AS DAILY_CAPP_LOGN_CNT_Q,
            COALESCE(SUM(hd.NTB_LOGN_CNT_Q), 0) AS DAILY_NTB_LOGN_CNT_Q,
            COALESCE(SUM(hd.VIEW_CARD_DETL_CNT_Q), 0) AS DAILY_VIEW_CARD_DETL_CNT_Q,
            COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
            COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
        FROM
            all_dates_cust_tran_prfl ad
        LEFT JOIN hourly_data_cust_tran_prfl hd
        ON ad.cust_i = hd.cust_i AND ad.tran_d = hd.tran_d
        GROUP BY
            ad.cust_i,
            DATE_TRUNC('day', ad.tran_d)
    ),
    aggregated_data_cust_tran_prfl AS (
        SELECT
            cust_i,
            activity_day AS window_start_date,
            SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_CNT_Q,
            SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_TRAN_SUM_N,
            SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
            SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
            SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_CNT_Q,
            SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_UPST_APRD_TRAN_SUM_N,
            SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FINL_APRD_TRAN_SUM_N,
            SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FDP_RULE_TRIG_CNT_Q,
            SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_CNT_Q,
            SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_CNT_Q,
            SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_DOMS_TRAN_SUM_N,
            SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_OSEA_TRAN_SUM_N,
            SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
            SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_CNT_Q,
            SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_CNT_Q,
            SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
            SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_3DS_TRAN_SUM_N,
            SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_N3D_TRAN_SUM_N,
            SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_CNT_Q,
            SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_CNT_Q,
            SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_CNT_Q,
            SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_CNT_Q,
            SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_CNT_Q,
            SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CARD_PRES_TRAN_SUM_N,
            SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_ATM_TRAN_SUM_N,
            SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_FALL_BACK_TRAN_SUM_N,
            SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CHIP_TRAN_SUM_N,
            SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_PAY_PASS_TRAN_SUM_N,
            SUM(DAILY_CAPP_PSWD_CHNG_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
            SUM(DAILY_CAPP_DVIC_REGR_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
            SUM(DAILY_CAPP_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_CAPP_LOGN_CNT_Q,
            SUM(DAILY_NTB_LOGN_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_NTB_LOGN_CNT_Q,
            SUM(DAILY_VIEW_CARD_DETL_CNT_Q) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_SUM_VIEW_CARD_DETL_CNT_Q,
            MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
            MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CUS_MAX_CUV_RULE_PUSH_SENT_F
        FROM
            daily_data_cust_tran_prfl
    )
    , AGG_cust_tran_prfl AS (
    SELECT
        cust_i, -- as ssx_cust_num,
        window_start_date,
        -- window_start_date + INTERVAL '2 days' AS window_end_date,
        CUS_SUM_TRAN_CNT_Q,
        CUS_SUM_UPST_APRD_TRAN_CNT_Q,
        CUS_SUM_TRAN_SUM_N,
        CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
        CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
        CUS_SUM_FINL_APRD_TRAN_CNT_Q,
        CUS_SUM_UPST_APRD_TRAN_SUM_N,
        CUS_SUM_FINL_APRD_TRAN_SUM_N,
        CUS_SUM_FDP_RULE_TRIG_CNT_Q,
        CUS_SUM_DOMS_TRAN_CNT_Q,
        CUS_SUM_OSEA_TRAN_CNT_Q,
        CUS_SUM_DOMS_TRAN_SUM_N,
        CUS_SUM_OSEA_TRAN_SUM_N,
        CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        CUS_SUM_3DS_TRAN_CNT_Q,
        CUS_SUM_N3D_TRAN_CNT_Q,
        CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        CUS_SUM_3DS_TRAN_SUM_N,
        CUS_SUM_N3D_TRAN_SUM_N,
        CUS_SUM_CARD_PRES_TRAN_CNT_Q,
        CUS_SUM_ATM_TRAN_CNT_Q,
        CUS_SUM_FALL_BACK_TRAN_CNT_Q,
        CUS_SUM_CHIP_TRAN_CNT_Q,
        CUS_SUM_PAY_PASS_TRAN_CNT_Q,
        CUS_SUM_CARD_PRES_TRAN_SUM_N,
        CUS_SUM_ATM_TRAN_SUM_N,
        CUS_SUM_FALL_BACK_TRAN_SUM_N,
        CUS_SUM_CHIP_TRAN_SUM_N,
        CUS_SUM_PAY_PASS_TRAN_SUM_N,
        CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
        CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
        CUS_SUM_CAPP_LOGN_CNT_Q,
        CUS_SUM_NTB_LOGN_CNT_Q,
        CUS_SUM_VIEW_CARD_DETL_CNT_Q,
        CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        CUS_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        aggregated_data_cust_tran_prfl
    ORDER BY
        cust_i,
        window_start_date
    )    
SELECT 
    a.*,
    b.CUS_SUM_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_CNT_Q,
    b.CUS_SUM_TRAN_SUM_N,
    b.CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_FINL_APRD_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_SUM_N,
    b.CUS_SUM_FINL_APRD_TRAN_SUM_N,
    b.CUS_SUM_FDP_RULE_TRIG_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_CNT_Q,
    b.CUS_SUM_OSEA_TRAN_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_SUM_N,
    b.CUS_SUM_OSEA_TRAN_SUM_N,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    b.CUS_SUM_3DS_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    b.CUS_SUM_N3D_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    b.CUS_SUM_3DS_TRAN_SUM_N as CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    b.CUS_SUM_N3D_TRAN_SUM_N as CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    b.CUS_SUM_CARD_PRES_TRAN_CNT_Q,
    b.CUS_SUM_ATM_TRAN_CNT_Q,
    b.CUS_SUM_FALL_BACK_TRAN_CNT_Q,
    b.CUS_SUM_CHIP_TRAN_CNT_Q,
    b.CUS_SUM_PAY_PASS_TRAN_CNT_Q,
    b.CUS_SUM_CARD_PRES_TRAN_SUM_N,
    b.CUS_SUM_ATM_TRAN_SUM_N,
    b.CUS_SUM_FALL_BACK_TRAN_SUM_N,
    b.CUS_SUM_CHIP_TRAN_SUM_N,
    b.CUS_SUM_PAY_PASS_TRAN_SUM_N,
    b.CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
    b.CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
    b.CUS_SUM_CAPP_LOGN_CNT_Q,
    b.CUS_SUM_NTB_LOGN_CNT_Q,
    b.CUS_SUM_VIEW_CARD_DETL_CNT_Q,
    b.CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    b.CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    b.CUS_MAX_CUV_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_RULE_FLAG,
    d.CRD_SUM_TRAN_CNT_Q,
    d.CRD_SUM_UPST_APRD_TRAN_CNT_Q,
    d.CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_FINL_APRD_TRAN_CNT_Q,
    d.CRD_SUM_INCO_EXPY_CNT_Q,
    d.CRD_SUM_INCO_CVVA_CNT_Q,
    d.CRD_SUM_INCO_PIN_CNT_Q,
    d.CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
    d.CRD_SUM_TRAN_SUM_N,
    d.CRD_SUM_UPST_APRD_TRAN_SUM_N,
    d.CRD_SUM_UPST_DCLN_TRAN_SUM_N,
    d.CRD_SUM_RULE_DCLN_TRAN_SUM_N,
    d.CRD_SUM_FINL_APRD_TRAN_SUM_N,
    d.CRD_SUM_INCO_EXPY_SUM_N,
    d.CRD_SUM_INCO_CVVA_SUM_N,
    d.CRD_SUM_INCO_PIN_SUM_N,
    d.CRD_SUM_OVER_LIMT_DCLN_SUM_N,
    d.CRD_SUM_FDP_RULE_TRIG_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_CNT_Q,
    d.CRD_SUM_OSEA_TRAN_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_SUM_N,
    d.CRD_SUM_OSEA_TRAN_SUM_N,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    d.CRD_SUM_3DS_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    d.CRD_SUM_N3D_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    d.CRD_SUM_3DS_TRAN_SUM_N as CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    d.CRD_SUM_N3D_TRAN_SUM_N as CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    d.CRD_SUM_CARD_PRES_TRAN_CNT_Q,
    d.CRD_SUM_ATM_TRAN_CNT_Q,
    d.CRD_SUM_FALL_BACK_TRAN_CNT_Q,
    d.CRD_SUM_CHIP_TRAN_CNT_Q,
    d.CRD_SUM_PAY_PASS_TRAN_CNT_Q,
    d.CRD_SUM_CARD_PRES_TRAN_SUM_N,
    d.CRD_SUM_ATM_TRAN_SUM_N,
    d.CRD_SUM_FALL_BACK_TRAN_SUM_N,
    d.CRD_SUM_CHIP_TRAN_SUM_N,
    d.CRD_SUM_PAY_PASS_TRAN_SUM_N,
    d.CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
    d.CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
    d.CRD_SUM_CAPP_LOGN_CNT_Q,
    d.CRD_SUM_NTB_LOGN_CNT_Q,
    d.CRD_SUM_VIEW_CARD_DETL_CNT_Q,
    d.CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_HIGH_RISK_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_FRAU_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_WHLI_F as CRD_MAX_CARD_USER_VARY_WHLI_F,
    d.CRD_MAX_CUV_DO_NOT_CTCT_F as CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F,
    f.CMA_SUM_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    f.CMA_SUM_TRAN_SUM_N,
    f.CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_SUM_N,
    f.CMA_SUM_FINL_APRD_TRAN_SUM_N,
    f.CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_CNT_Q,
    f.CMA_SUM_OSEA_TRAN_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_SUM_N,
    f.CMA_SUM_OSEA_TRAN_SUM_N,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    f.CMA_SUM_3DS_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    f.CMA_SUM_N3D_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    f.CMA_SUM_3DS_TRAN_SUM_N as CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    f.CMA_SUM_N3D_TRAN_SUM_N as CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    f.CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    f.CMA_SUM_ATM_TRAN_CNT_Q,
    f.CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    -- f.CMA_SUM_CHIP_TRAN_CNT_Q,
    f.CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    f.CMA_SUM_CARD_PRES_TRAN_SUM_N,
    f.CMA_SUM_ATM_TRAN_SUM_N,
    f.CMA_SUM_FALL_BACK_TRAN_SUM_N,
    f.CMA_SUM_CHIP_TRAN_SUM_N,
    f.CMA_SUM_PAY_PASS_TRAN_SUM_N,
    f.CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    f.CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    f.CMA_MAX_CUV_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_RULE_FLAG,
    g.CMC_SUM_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_CNT_Q,
    g.CMC_SUM_TRAN_SUM_N,
    g.CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_FINL_APRD_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_SUM_N,
    g.CMC_SUM_FINL_APRD_TRAN_SUM_N,
    g.CMC_SUM_FDP_RULE_TRIG_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_CNT_Q,
    g.CMC_SUM_OSEA_TRAN_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_SUM_N,
    g.CMC_SUM_OSEA_TRAN_SUM_N,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    g.CMC_SUM_3DS_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    g.CMC_SUM_N3D_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    g.CMC_SUM_3DS_TRAN_SUM_N as CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    g.CMC_SUM_N3D_TRAN_SUM_N as CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    g.CMC_SUM_CARD_PRES_TRAN_CNT_Q,
    g.CMC_SUM_ATM_TRAN_CNT_Q,
    g.CMC_SUM_FALL_BACK_TRAN_CNT_Q,
    -- g.CMC_SUM_CHIP_TRAN_CNT_Q,
    g.CMC_SUM_PAY_PASS_TRAN_CNT_Q,
    g.CMC_SUM_CARD_PRES_TRAN_SUM_N,
    g.CMC_SUM_ATM_TRAN_SUM_N,
    g.CMC_SUM_FALL_BACK_TRAN_SUM_N,
    g.CMC_SUM_CHIP_TRAN_SUM_N,
    g.CMC_SUM_PAY_PASS_TRAN_SUM_N,
    g.CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    g.CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    g.CMC_MAX_CUV_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_RULE_FLAG,
    h.MAQ_SUM_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_TRAN_SUM_N,
    h.MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FINL_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_CNT_Q,
    h.MAQ_SUM_OSEA_TRAN_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_SUM_N,
    h.MAQ_SUM_OSEA_TRAN_SUM_N,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_3DS_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    h.MAQ_SUM_N3D_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    h.MAQ_SUM_3DS_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    h.MAQ_SUM_N3D_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    h.MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_ATM_TRAN_CNT_Q,
    h.MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
    h.MAQ_SUM_CHIP_TRAN_CNT_Q,
    h.MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_PRES_TRAN_SUM_N,
    h.MAQ_SUM_ATM_TRAN_SUM_N,
    h.MAQ_SUM_FALL_BACK_TRAN_SUM_N,
    h.MAQ_SUM_CHIP_TRAN_SUM_N,
    h.MAQ_SUM_PAY_PASS_TRAN_SUM_N
FROM 
    BASE_TRAN a
LEFT JOIN 
    AGG_CUST_TRAN_PRFL b
ON 
    a.ssx_cust_num = b.cust_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = b.WINDOW_START_DATE
LEFT JOIN 
    AGG_CARD_TRAN_PRFL d
ON 
    a.CHL_ID_CARD_NUM = d.card_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = d.WINDOW_START_DATE
LEFT JOIN 
    agg_cust_merc_acqr_tran_prfl f
ON 
    a.ssx_cust_num = f.cust_i and a.chl_ct_term_owner_id = f.merc_i and a.chl_ct_acq_id = f.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = f.WINDOW_START_DATE
LEFT JOIN 
    agg_card_merc_catg_tran_prfl g
ON 
    a.CHL_ID_CARD_NUM = g.card_i and a.chl_ct_mer_mcc = g.merc_catg_c
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = g.WINDOW_START_DATE
LEFT JOIN 
   agg_merc_acqr_tran_prfl h
ON 
    a.chl_ct_term_owner_id = h.merc_i and a.chl_ct_acq_id = h.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = h.WINDOW_START_DATE
",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,5461826,5461.826,91.030433,1.517174,4X-LARGE,128,194.198272
01be4708-3204-b365-0000-c71d27db0f3e,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,4905698,4905.698,81.761633,1.362694,4X-LARGE,128,174.424832
01bdca58-3204-a619-0000-c71d24599646,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,4682646,4682.646,78.0441,1.300735,4X-LARGE,128,166.49408
01bdcbc0-3204-a614-0000-c71d246a3022,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,4607383,4607.383,76.789717,1.279829,4X-LARGE,128,163.818112
01bded80-3204-aa23-0000-c71d255fddae,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,4537238,4537.238,75.620633,1.260344,4X-LARGE,128,161.324032
01bdbe37-3204-a42b-0000-c71d23fec11e,"CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM 
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY 
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S) = 1
            ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S
        ) b ON a.DSPT_CASE_I=b.DSPT_CASE_I
        WHERE a.DSPT_TRAN_I IS NOT NULL
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL)
            AND TO_DATE(LOAD_TS) <= TO_DATE($INPUT_D)
            and b.DSPT_TYPE_X = 'The cardholder did not authorise the transaction'
            and b.DSPT_CASE_USER_STUS_X NOT ILIKE 'Open%'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_TRAN_I ORDER BY a.LOAD_TS DESC) = 1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM DSPT_POST dai
        LEFT JOIN FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (
                PARTITION BY DSPT_TRAN_I
                ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
            ) AS POST_RANK,
            
        FROM POTENTIAL_MATCHES
    )
    SELECT *
    EXCLUDE POST_RANK 
    FROM RANKED_MATCHES
        WHERE POST_RANK=1
        -- Include non-matched when no further possibility of matching
        -- AND (TRAN_I IS NOT NULL
        --     OR (TRAN_I IS NULL AND DSPT_TRAN_D+5 > TO_DATE(LOAD_TS))
        --     )
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,4505907,4505.907,75.09845,1.251641,4X-LARGE,128,160.210048
01bded08-3204-aa21-0000-c71d255a1fa2,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,4388825,4388.825,73.147083,1.219118,4X-LARGE,128,156.047104
01be70f9-3204-bb76-0000-c71d2939c552,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,3811850,3811.85,63.530833,1.058847,4X-LARGE,128,135.532416
01be7231-3204-bb76-0000-c71d2943ba22,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,3792163,3792.163,63.202717,1.053379,4X-LARGE,128,134.832512
01bdc91d-3204-a61b-0000-c71d244f986e,"select	distinct case   when b.fraudtype = 'CVL' then null
                else b.fraudtype
        end as FRAUDTYPE
		,b.detection
		,b.case_detection
        ,TO_TIMESTAMP(a.tts_tran_date_alt || ' ' || a.tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME
		,(a.dtl_ex_0_n_064 || a.dtl_ex_0_n_065 || a.dtl_ex_0_n_066) as TRAN_ID
		,a.tts_tran_date_alt
		,a.tts_tran_time_alt
		,a.dtl_ex_0_20s_001
		,a.dtl_ex_1_5s_01
		,a.ssx_cust_num
		,a.chl_id_ob_userid
		,a.tgx_bank_name
		,a.tgx_bank_num
		,a.tgx_branch_id
		,a.tgx_acct_num
		,a.tgx_name
		,a.tgx_description
		,TRY_TO_NUMBER(a.tgx_tran_amt, 38, 2) as TRAN_AMT
		,a.dtl_ex_0_i_002 as FTP_IND
		
		-- BioCatch UVs
		,TRY_TO_NUMBER(a._l_se_score, 38, 2) as _L_SE_SCORE
		,TRY_TO_NUMBER(a._l_bc_score, 38, 2) as _L_BC_SCORE
		,TRY_TO_NUMBER(a._l_max_30d_score, 38, 2) as _L_MAX_30D_SCORE
		,TRY_TO_NUMBER(a._l_max_30d_se_score, 38, 2) as _L_MAX_30D_SE_SCORE
        ,TRY_TO_NUMBER(a._l_max_30d_mule_score, 38, 2) as _L_MAX_30D_MULE_SCORE
		,TRY_TO_NUMBER(a._l_adv_key_combo, 38, 2) as _L_ADV_KEY_COMBO
		,TRY_TO_NUMBER(a._l_clpbrd_evnt, 38, 2) as _L_CLPBRD_EVNT
		,TRY_TO_NUMBER(a._l_concurrent_sess, 38, 2) as _L_CONCURRENT_SESS
		,TRY_TO_NUMBER(a._l_export_data, 38, 2) as _L_EXPORT_DATA
		,TRY_TO_NUMBER(a._l_import_data, 38, 2) as _L_IMPORT_DATA
		,TRY_TO_NUMBER(a._l_is_rat, 38, 2) as _L_IS_RAT
		,TRY_TO_NUMBER(a._l_is_mob_rat, 38, 2) as _L_IS_MOB_RAT
		,TRY_TO_NUMBER(a._l_rat_in_sess, 38, 2) as _L_RAT_IN_SESS
		,TRY_TO_NUMBER(a._l_is_rcnt_hrisk_sess, 38, 2) as _L_IS_RCNT_HRISK_SESS
		,TRY_TO_NUMBER(a._l_is_rcnt_rat, 38, 2) as _L_IS_RCNT_RAT
		,TRY_TO_NUMBER(a._l_lrg_dist_known_loc, 38, 2) as _L_LRG_DIST_KNOWN_LOC
		,TRY_TO_NUMBER(a._l_rare_scrn_sz, 38, 2) as _L_RARE_SCRN_SZ
		,TRY_TO_NUMBER(a._l_risky_isp, 38, 2) as _L_RISKY_ISP
		,TRY_TO_NUMBER(a._l_risky_key_combo, 38, 2) as _L_RISKY_KEY_COMBO
		,TRY_TO_NUMBER(a._l_tzone_mismatch, 38, 2) as _L_TZONE_MISMATCH
		,TRY_TO_NUMBER(a._l_scm_rsk_hgh_scr, 38, 2) as _L_SCM_RSK_HGH_SCR
		,TRY_TO_NUMBER(a._l_keyb_nav_anom, 38, 2) as _L_KEYB_NAV_ANOM
		,TRY_TO_NUMBER(a._l_scrn_broadcast, 38, 2) as _L_SCRN_BROADCAST
		,TRY_TO_NUMBER(a._l_delay_to_input_pi, 38, 2) as _L_DELAY_TO_INPUT_PI
		,TRY_TO_NUMBER(a._l_input_otp_delay, 38, 2) as _L_INPUT_OTP_DELAY
		,TRY_TO_NUMBER(a._l_active_spoofing, 38, 2) as _L_ACTIVE_SPOOFING
		,TRY_TO_NUMBER(a._l_pmt_vloc_anom, 38, 2) as _L_PMT_VLOC_ANOM
		,TRY_TO_NUMBER(a._l_rcnt_hi_scr_on_dev, 38, 2) as _L_RCNT_HI_SCR_ON_DEV
		,TRY_TO_NUMBER(a._l_accum_amt_anom, 38, 2) as _L_ACCUM_AMT_ANOM
		,TRY_TO_NUMBER(a._l_app_togg, 38, 2) as _l_APP_TOGG
		,TRY_TO_NUMBER(a._l_is_active_call, 38, 2) as _L_IS_ACTIVE_CALL
		,TRY_TO_NUMBER(a._l_is_long_sess, 38, 2) as _L_IS_LONG_SESS
		,TRY_TO_NUMBER(a._l_type_patterns_anomaly, 38, 2) as _L_TYPE_PATTERNS_ANOMALY
		,TRY_TO_NUMBER(a._l_seg_typing_pi, 38, 2) as _L_SEG_TYPING_PI

        --BC Trust
        ,TRY_TO_NUMBER(a._L_TRUST_900, 38, 2) as _L_TRUST_900
        ,TRY_TO_NUMBER(a._L_TRUST_1000, 38, 2) as _L_TRUST_1000
        ,TRY_TO_NUMBER(a._L_TRUST_NEW_PAYEE, 38, 2) as _L_TRUST_NEW_PAYEE
        ,TRY_TO_NUMBER(a._L_TRUST_UNUSED_PAYEE, 38, 2) as _L_TRUST_UNUSED_PAYEE
        ,TRY_TO_NUMBER(a._L_TRUST_PAYEE_HIGH_VLOC_IN, 38, 2) as _L_TRUST_PAYEE_HIGH_VLOC_IN 
        ,TRY_TO_NUMBER(a._L_TRUST_PAYEE_DORM_ACCT, 38, 2) as _L_TRUST_PAYEE_DORM_ACCT
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_ATO_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_ATO_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_ATO_AS_PAYER 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_SES_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_SES_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_SES_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_SES_AS_PAYER 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_MS_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_MS_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_MS_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_MS_AS_PAYER       
        
		-- NameCheck UVs
		,a._l_nc_response_code
		,a._l_nc_match_name_conf
		
		-- H2O Score UVs
		,TRY_TO_NUMBER(a._l_cust_scamrisk_score, 38, 2) as _L_CUST_SCAMRISK_SCORE
		,a.dtl_ex_0_n_029
		,a.dtl_ex_0_n_034 as CERBERUS_SCORE
		
		-- Recipient Level UVs
		,TRY_TO_NUMBER(a._b_recip_sum_aaa_short, 38, 2) as _B_RECIP_SUM_SHORT
		,TRY_TO_NUMBER(a._b_recip_sum_aaa_long, 38, 2) as _B_RECIP_SUM_LONG
		,TRY_TO_NUMBER(a._b_recip_ftp_cnt_short, 38, 2) as _B_RECIP_FTP_CNT_SHORT
		,TRY_TO_NUMBER(a._b_recip_ftp_cnt_long, 38, 2) as _B_RECIP_FTP_CNT_LONG
        ,a._b_list_bl_scam_tp_payid
        ,a._b_list_bl_tp_payid
        ,a._b_list_bl_tp_phone
        ,a._b_list_bl_scam_tp_phone
        ,a._b_list_bl_tp_bpay
        ,a._b_list_bl_scam_tp_bpay
        ,a._b_list_bl_scam_tp_acct
        ,a._b_list_bl_tp_acct
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_any_cust_ftp_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_ANY_CUST_FTP_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_2
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_3
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_4
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_5
		
		-- Customer Level UVs
		,TRY_TO_NUMBER(a._a_customer_age, 38, 2) as _A_CUSTOMER_AGE
		,TRY_TO_NUMBER(a._a_cust_sum_aaa_SHORT, 38, 2) as _A_CUST_SUM_AAA_SHORT
		,TRY_TO_NUMBER(a._a_cust_sum_aaa_LONG, 38, 2) as _A_CUST_SUM_AAA_LONG
		,TRY_TO_NUMBER(a._a_ftp_cnt_1, 38, 2) as _A_FTP_CNT_1
		,TRY_TO_NUMBER(a._a_ftp_cnt_2, 38, 2) as _A_FTP_CNT_2
		,TRY_TO_NUMBER(a._a_ftp_cnt_3, 38, 2) as _A_FTP_CNT_3
		,TRY_TO_NUMBER(a._a_ftp_cnt_4, 38, 2) as _A_FTP_CNT_4
		,TRY_TO_NUMBER(a._a_ftp_cnt_5, 38, 2) as _A_FTP_CNT_5
		,TRY_TO_NUMBER(a._a_ftp_cnt_6, 38, 2) as _A_FTP_CNT_6
		,TRY_TO_NUMBER(a._a_ftp_cnt_7, 38, 2) as _A_FTP_CNT_7
		,TRY_TO_NUMBER(a._a_ftp_sum_1, 38, 2) as _A_FTP_SUM_1
		,TRY_TO_NUMBER(a._a_ftp_sum_2, 38, 2) as _A_FTP_SUM_2
		,TRY_TO_NUMBER(a._a_ftp_sum_3, 38, 2) as _A_FTP_SUM_3
		,TRY_TO_NUMBER(a._a_ftp_sum_4, 38, 2) as _A_FTP_SUM_4
		,TRY_TO_NUMBER(a._a_ftp_sum_5, 38, 2) as _A_FTP_SUM_5
		,TRY_TO_NUMBER(a._a_ftp_sum_6, 38, 2) as _A_FTP_SUM_6
		,TRY_TO_NUMBER(a._a_ftp_sum_7, 38, 2) as _A_FTP_SUM_7
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_2, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_2
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_3, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_3
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_4, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_4
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_5, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_5
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_6, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_6
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_NEW_CAPP_REGO_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_CSE_CHG_DWL_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_CIF_ESTABLISH_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00') as _A_NB_LASTLOGON_DT_1
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00') as _A_CURR_CAPP_DEVICE_DT
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_1, 38, 2) as _A_NB_LOGONS_CNT_1
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_2, 38, 2) as _A_NB_LOGONS_CNT_2
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_3, 38, 2) as _A_NB_LOGONS_CNT_3
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_1, 38, 2) as _A_CAPP_LOGON_CNT_1
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_2, 38, 2) as _A_CAPP_LOGON_CNT_2
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_3, 38, 2) as _A_CAPP_LOGON_CNT_3
		
		-- Customer-Recipient Relationship Level UVs
		,TRY_TO_NUMBER(a._x_cif_recipient_new_sum, 38, 2) + TRY_TO_NUMBER(a.tgx_tran_amt, 38, 2) as _X_CIF_RECIPIENT_NEW_SUM
		,case   when a._x_cif_recipient_new_date = '0' then TO_TIMESTAMP(a.tts_tran_date_alt || ' ' || a.tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF')
                else TIMESTAMPADD(second, TRY_TO_NUMBER(a._x_cif_recipient_new_date, 38, 2), '1960-01-01 00:00:00'::timestamp)
		end as _X_CIF_RECIPIENT_NEW_DATE
		,case   when a._x_cif_recipient_new_cnt = '0' then 1
                else TRY_TO_NUMBER(a._x_cif_recipient_new_cnt, 38, 2) + 1
		end as _X_CIF_RECIPIENT_NEW_CNT
		
		-- Telstra Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_TELSTRA_LONG_CALL
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._x_telstra_last_call_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _X_TELSTRA_LAST_CALL_DT
		,TRY_TO_NUMBER(a._x_telstra_last_call_dur, 38, 2) as _X_TELSTRA_LAST_CALL_DUR
		,TRY_TO_NUMBER(a._x_telstra_max_call_dur, 38, 2) as _X_TELSTRA_MAX_CALL_DUR
        ,a._a_telstra_active_call
        ,a._a_telstra_num_type    
        ,a._a_telstra_num_wl 
        ,a._a_telstra_tp_num_sp
        ,a._a_telstra_tp_num_prefix_type 
        ,a._a_telstra_tp_outbnd_count          
        ,a._a_telstra_tp_outbnd_avg_dur 
        ,a._a_telstra_multi_calls   
		
		-- Crypto UVs
		,TRY_TO_NUMBER(a._a_crypto_mnthly_sum, 38, 2) as _A_CRYPTO_MNTHLY_SUM
		,DATEADD(day, TRY_TO_NUMBER(a._a_crypto_last_pymnt_date, 38, 2), '1960-01-01') as _A_CRYPTO_LAST_PYMNT_DATE
		
		-- M100 Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP1_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP2_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP3_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP4_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP5_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp6_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP6_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP7_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP10_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp11_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP11_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp12_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP12_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp13_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP13_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP20_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP21_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_M100_P8_IND_DT
		
		-- M100 App Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_M100_APP_P1_IND_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00') as _N_M100_APP_P5_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_M100_APP_P8_IND_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00') as _N_M100_APP_P9_DT
 		
		-- CIF Profiling UVs
		,a._l_fingerprint_1
		,a._l_fingerprint_2
		,a._l_fingerprint_3
		,a._l_fingerprint_4
        ,_a_capp_rego_ip_city
,_a_aus_ip_address
,_a_capp_rego_ip_address
,_a_foreign_ip_address
,_a_foreign_ip_cntry_code
,_a_hrisk_foreign_ip_address
,_a_hrisk_foreign_ip_cntry_code
,_a_interstate_ip_address
,_a_mrisk_foreign_ip_address
,_a_scam_foreign_ip_address
,_a_capp_rego_ip_postcode
,_a_foreign_ip_task_id
,_a_hrisk_foreign_ip_task_id
,_a_interstate_ip_task_id
,_a_logon_198_ip_pc
,_a_scam_foreign_ip_cntry_code
,_a_scam_foreign_ip_task_id
,_a_aus_ip_activity
,_a_bond_foreign_ip_ini_dt
,_a_capp_rego_ip_country
,_a_clci_foreign_ip_ini_dt
,_a_clcw_ip_ini_dt
,_a_clcw_ip_rego_dt
,_a_dom_ip_switch_cnt_dt
,_a_mrisk_foreign_ip_activity
,_a_cust_state_ip_activity
,_a_cust_state_ip_address
,_a_foreign_ip_activity
,_a_hr_logon_nb_ip_cntry
,_a_hr_logon_nb_ip_pc
,_a_hrisk_foreign_ip_activity
,_a_interstate_ip_activity
,_a_interstate_ip_state
,_a_is_ip_1
,_a_is_ip_2
,_a_is_ip_3
,_a_is_ip_dt_1
,_a_is_ip_dt_2
,_a_is_ip_dt_3
,_a_vpn_vps_ip_initial_hce_dt
,_a_vpn_vps_ip_latest_hce_dt
,_a_vpn_vps_ip_latest_logon_dt
,_a_logon_198_ip_cntry
,_a_logon_nb_ip_cntry
,_a_logon_nb_ip_pc
,_a_mrisk_foreign_ip_cntry_code
,_a_mrisk_foreign_ip_task_id
,_a_scam_foreign_ip_activity
,_a_vpn_vps_ip_day_hce_count
,_a_vpn_vps_ip_initial_logon_dt
,_a_vpn_vps_ip_day_logon_count
,_a_vpn_vps_ip_hce_count
,_a_vpn_vps_ip_logon_count
,_n_aus_ip_activity
,_n_aus_ip_address
,_n_cc_app_suspicious_ip_dt
,_n_cust_state_ip_activity
,_n_cust_state_ip_address
,_n_foreign_ip_activity
,_n_foreign_ip_address
,_n_foreign_ip_cntry_code
,_n_foreign_ip_task_id
,_n_hrisk_foreign_ip_activity
,_n_hrisk_foreign_ip_address
,_n_hrisk_foreign_ip_cntry_code
,_n_hrisk_foreign_ip_task_id
,_n_interstate_ip_activity
,_n_interstate_ip_address
,_n_interstate_ip_state
,_n_interstate_ip_task_id
,_n_nb_os_ip_dt
,_n_new_ip_logon_cntry
,_n_new_ip_logon_dt
,_n_new_ip_logon_ip
,_n_new_ip_logon_pcode
,_n_os_ip_v2_dt
,_n_rp_ses_ip_1
,_n_rp_ses_ip_2
,_n_total_asn_ip_stored
,_l_ip_age
,_l_ip_city
,_l_ip_cntry_code
,_l_ip_geo_ip
,_l_ip_geo_lat
,_l_ip_geo_long
,_l_ip_geo_state
,_l_ip_mismatch_anomaly
,_l_sim_ip_cntry_mismatch
,_a_curr_cust_lat_long_dt
,_a_curr_cust_latitude
,_a_dtl_uibdelete_msg_latest
,_a_prev_cust_lat_long_dt
,_a_safe_cust_lat_long_dt
,_a_vpn_vps_ip_latest_hce_dt
,_a_vpn_vps_ip_latest_logon_dt
,_a_curr_capp_device_latt
,_a_devcie_geo_lat_avg_excl
,_a_devcie_geo_lat_avg_incl
,_a_prev_capp_device_latt
,_a_prev_cust_latitude
,_a_prof_capp_device_lat_z_1
,_a_prof_capp_device_lat_z_2
,_a_prof_capp_device_lat_z_3
,_a_prof_capp_device_lat_z_4
,_a_prof_capp_device_lat_z_5
,_a_prof_capp_device_latt_1
,_a_prof_capp_device_latt_2
,_a_prof_capp_device_latt_3
,_a_prof_capp_device_latt_4
,_a_prof_capp_device_latt_5
,_a_safe_cust_latitude
,_n_cloud_serv_latest_logon_dt
,_n_lat
,_l_ip_geo_lat
,_l_platform
,_l_flat_phone

from        lcl.fdp_customer_transactions_send_flat a
left join  prd_p01_dmn_fraumd.labmlfrd.dtl_fraudmaster b
on          a.dtl_ex_0_20s_001 = b.rua_20byte_string_001
and b.fraudtype in ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS','BEC')
where   mid_event_ts >= '20250601'
AND     mid_event_ts <  '20250701'
and     a.dtl_ex_1_5s_01 in ('C205N'
							,'C207N'
							,'C242N'
							,'C244N'
							,'C246N'
							,'N205N'
							,'N207N'
							,'N242N'
							,'N244N'
							,'N246N'
							,'X232N'
							,'X243N'
							,'X246N')
and     a.hdr_source = 'NPP OUT'
and     tran_amt > 0
--and b.fraudtype in ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS','BEC') OR b.fraudtype IS NULL;
--and COALESCE(b.fraudtype, 'NULL') IN ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS', 'BEC', 'PHS', 'NULL');
order by    RANDOM()--transactiondatetime;
limit 1000000",DEHURYSK,PUBLIC,3723899,3723.899,62.064983,1.034416,4X-LARGE,128,132.405248
01be7caf-3204-bc98-0000-c71d29949a96,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,3689602,3689.602,61.493367,1.024889,4X-LARGE,128,131.185792
01bdc2d4-3204-a42c-0000-c71d2420ad1a,"CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM 
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY 
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S) = 1
            ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S
        ) b ON a.DSPT_CASE_I=b.DSPT_CASE_I
        WHERE a.DSPT_TRAN_I IS NOT NULL
            AND TO_DATE(LOAD_TS) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(TRAN_S) >= '2024-12-10'
            /* Exdclude if already matched and open cases */
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL)
            AND b.DSPT_TYPE_X = 'The cardholder did not authorise the transaction'
            AND b.DSPT_CASE_USER_STUS_X NOT ILIKE 'Open%'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_TRAN_I ORDER BY a.LOAD_TS DESC) = 1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM DSPT_POST dai
        LEFT JOIN FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (
                PARTITION BY DSPT_TRAN_I
                ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
            ) AS POST_RANK,
            
        FROM POTENTIAL_MATCHES
    )
    SELECT *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN_DAIS_DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM RANKED_MATCHES
        WHERE POST_RANK=1
        -- Don't add when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NULL))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,3675801,3675.801,61.26335,1.021056,4X-LARGE,128,130.695168
01bdcc46-3204-a61b-0000-c71d246d5826,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600690,3600.69,60.0115,1.000192,4X-LARGE,128,128.024576
01bdcdea-3204-a617-0000-c71d247674c2,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600689,3600.689,60.011483,1.000191,4X-LARGE,128,128.024448
01bdc8c1-3204-a61b-0000-c71d244c6df2,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600672,3600.672,60.0112,1.000187,4X-LARGE,128,128.023936
01bdce26-3204-a615-0000-c71d2477891a,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600607,3600.607,60.010117,1.000169,4X-LARGE,128,128.021632
01bdcbce-3204-a61b-0000-c71d246aa382,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600577,3600.577,60.009617,1.00016,4X-LARGE,128,128.02048
01bdcd72-3204-a619-0000-c71d2474417e,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600575,3600.575,60.009583,1.00016,4X-LARGE,128,128.02048
01bdcc82-3204-a616-0000-c71d246ec516,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600538,3600.538,60.008967,1.000149,4X-LARGE,128,128.019072
01bdce62-3204-a616-0000-c71d24789b86,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600516,3600.516,60.0086,1.000143,4X-LARGE,128,128.018304
01bdca66-3204-a616-0000-c71d245af6de,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600516,3600.516,60.0086,1.000143,4X-LARGE,128,128.018304
01bdcb1a-3204-a617-0000-c71d2461cee2,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600508,3600.508,60.008467,1.000141,4X-LARGE,128,128.018048
01bdceda-3204-a614-0000-c71d247ba94e,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600482,3600.482,60.008033,1.000134,4X-LARGE,128,128.017152
01bdce9e-3204-a619-0000-c71d247b406e,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600484,3600.484,60.008067,1.000134,4X-LARGE,128,128.017152
01bdc885-3204-a617-0000-c71d244be0fa,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600479,3600.479,60.007983,1.000133,4X-LARGE,128,128.017024
01bdcade-3204-a619-0000-c71d245f4b42,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600470,3600.47,60.007833,1.000131,4X-LARGE,128,128.016768
01bdcb92-3204-a617-0000-c71d2468555e,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600469,3600.469,60.007817,1.00013,4X-LARGE,128,128.01664
01bdcc0a-3204-a616-0000-c71d246c5c62,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600438,3600.438,60.0073,1.000122,4X-LARGE,128,128.015616
01bdc849-3204-a61b-0000-c71d244a4142,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600431,3600.431,60.007183,1.00012,4X-LARGE,128,128.01536
01bdcdae-3204-a617-0000-c71d2474c7ae,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600427,3600.427,60.007117,1.000119,4X-LARGE,128,128.015232
01bdcaa2-3204-a615-0000-c71d245dc5de,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600411,3600.411,60.00685,1.000114,4X-LARGE,128,128.014592
01bdc9b2-3204-a619-0000-c71d24547462,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600403,3600.403,60.006717,1.000112,4X-LARGE,128,128.014336
01bdc939-3204-a616-0000-c71d244febea,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600393,3600.393,60.00655,1.000109,4X-LARGE,128,128.013952
01bdca2a-3204-a619-0000-c71d24581bba,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600376,3600.376,60.006267,1.000104,4X-LARGE,128,128.013312
01bdc8fd-3204-a614-0000-c71d244f1bc2,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600364,3600.364,60.006067,1.000101,4X-LARGE,128,128.012928
01bdcd36-3204-a616-0000-c71d24720976,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600325,3600.325,60.005417,1.00009,4X-LARGE,128,128.01152
01bdc9ee-3204-a617-0000-c71d24562a1a,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600311,3600.311,60.005183,1.000086,4X-LARGE,128,128.011008
01bdcb56-3204-a61b-0000-c71d2464b602,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3600289,3600.289,60.004817,1.00008,4X-LARGE,128,128.01024
01be9de3-3204-bee3-0000-c71d2a95278a,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_merc_acqr_tran_prfl_agg2d as
(WITH date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-07-01'
    order by tran_d
),
hourly_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-07-01'
),
all_dates AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        ds.tran_d
    FROM
        (SELECT DISTINCT cust_i, merc_i, acqr_i FROM PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl where tran_d between '2025-03-01' and '2025-07-01') ca
    CROSS JOIN date_series ds
),
daily_data AS (
    SELECT
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates ad
    LEFT JOIN hourly_data hd
    ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d)
),
aggregated_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data
)
SELECT
    cust_i, -- as ssx_cust_num,
    merc_i,
    acqr_i,
    window_start_date,
    -- window_start_date + INTERVAL '2 days' AS window_end_date,
    CMA_SUM_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    CMA_SUM_TRAN_SUM_N,
    CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_SUM_N,
    CMA_SUM_FINL_APRD_TRAN_SUM_N,
    CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    CMA_SUM_DOMS_TRAN_CNT_Q,
    CMA_SUM_OSEA_TRAN_CNT_Q,
    CMA_SUM_DOMS_TRAN_SUM_N,
    CMA_SUM_OSEA_TRAN_SUM_N,
    CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    CMA_SUM_3DS_TRAN_CNT_Q,
    CMA_SUM_N3D_TRAN_CNT_Q,
    CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    CMA_SUM_3DS_TRAN_SUM_N,
    CMA_SUM_N3D_TRAN_SUM_N,
    CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    CMA_SUM_ATM_TRAN_CNT_Q,
    CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    CMA_SUM_CHIP_TRAN_CNT_Q,
    CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    CMA_SUM_CARD_PRES_TRAN_SUM_N,
    CMA_SUM_ATM_TRAN_SUM_N,
    CMA_SUM_FALL_BACK_TRAN_SUM_N,
    CMA_SUM_CHIP_TRAN_SUM_N,
    CMA_SUM_PAY_PASS_TRAN_SUM_N,
    CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_RULE_PUSH_SENT_F
FROM
    aggregated_data
ORDER BY
    cust_i,
    merc_i,
    acqr_i,
    window_start_date);",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,14399706,14399.706,239.9951,3.999918,2X-LARGE,32,127.997376
01bdccbe-3204-a616-0000-c71d247040fe,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3599917,3599.917,59.998617,0.999977,4X-LARGE,128,127.997056
01bdccfa-3204-a619-0000-c71d247105da,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3599886,3599.886,59.9981,0.999968,4X-LARGE,128,127.995904
01be5822-3204-b880-0000-c71d286abb6e,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250813123358_scored as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO2('modelname=pipeline_it2_F2_reduce_mojo_863_freeze_70cols_20250813123358.mojo', 
array_construct(
CHL_CT_ACQ_ID, TRANSACTION_HOUR_DECI, TRANSACTION_HOUR_INT, CHL_CT_TERM_OWNER_NAME, _C_CRD_SAFE_MERCHANT, _C_CC_N3D_OVS_975_CNT_1, CHL_CT_TERM_CNTRY_CODE, _C_CC_CNP_VEL_6HR_COUNT_1, _C_CNP_MER_NM_5, _C_CNP_MER_NM_1, _C_CNP_MER_NM_3, _A_CRD_SCAM_SUPP_7D_SUM_1, DTL_CA_MERCH_CURR_CODE, _A_BTS_CUST_AGE, _C_CNP_MER_NM_2, _C_CC_GBL_N3D_1D_CNT_1, _C_CC_N3D_OVS_975_SUM_1, _C_CNP_MER_NM_4, DTL_EX_0_N_009, _C_CRD_N3D_SCORE_SUM_1, _C_CNP_MER_NM_CURR, DTL_CA_AUTH_SYS_DEC, _C_CC_CNP_LTRANS_6HR_COUNT_1, DTL_EX_0_2S_002, _C_CC_IND_TRAN_3D, _C_2WAY_CRD_FRD_RULE_FLAG, _C_CC_CNP_VEL_6HR_SUM_1, _A_PREV_CAPP_DEVICE_CNT, _C_CC_N3D_DOM_999_CNT_1, _C_CRD_APAY_CNT_1, _C_CRD_CNP_TRN_CNT_1, DTL_CA_AUTH_SYS_INFO, _A_CURR_CAPP_DEVICE_CNT, _C_CRD_CNP_TRN_CNT_5, _C_CC_RECOV_TRANS_SUM_1, ATH_PC_CUST_PRESENT, _C_CRD_CNP_TRN_SUM_1, DTL_EX_3_80S_002, _C_CRD_ALL_TRN_CNT_2, _C_N3D_MERC_ID_SUM_1, _C_CC_TRAN_ACCOUNT_BIN, CHL_CT_MER_MCC, _C_N3D_MERC_ID_SUM_2, _C_CC_GBL_N3D_1D_SUM_1, _A_P_L_C, _C_N3D_MERC_ID_1, _A_Q, CHL_CT_CH_POST_CODE, _A_CURR_NB_BROWSER_CNT, SSA_C_CASH_LIMIT, DTL_CA_CLIENT_TRAN_TYPE, _C_N3D_MERC_ID_2, _C_CRD_CNP_TRN_CNT_2, _A_T, _C_CC_GBL_N3D_CNT_2, _A_R, _A_BTS_BCH_SUM, _C_CRD_CNP_TRN_SUM_3, _C_CRD_CNP_TRN_SUM_2, _C_CC_CNP_VEL_6HR_COUNT_2, _C_N3D_MERC_ID_SUM_3, _C_CRD_CNP_TRN_SUM_4, _A_CLIENT_CITY_10, SSA_C_OPEN_TO_BUY, DTL_CA_CLIENT_AMT, DTL_CA_MERCH_AMT)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_VERENIIL_CNP_OOT_20250605
-- where to_date(transactiondatetime) < '2025-05-01'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,14399272,14399.272,239.987867,3.999798,2X-LARGE,32,127.993536
01bdc849-3204-a61b-0000-c71d244a4146,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3599137,3599.137,59.985617,0.99976,4X-LARGE,128,127.96928
01bdc975-3204-a615-0000-c71d24524bd6,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3598216,3598.216,59.970267,0.999504,4X-LARGE,128,127.936512
01bdce9e-3204-a619-0000-c71d247b4072,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3598025,3598.025,59.967083,0.999451,4X-LARGE,128,127.929728
01bdcd36-3204-a616-0000-c71d2472097a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597845,3597.845,59.964083,0.999401,4X-LARGE,128,127.923328
01bdcc46-3204-a61b-0000-c71d246d582a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597806,3597.806,59.963433,0.999391,4X-LARGE,128,127.922048
01bdcc82-3204-a616-0000-c71d246ec51a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597418,3597.418,59.956967,0.999283,4X-LARGE,128,127.908224
01bdcdae-3204-a617-0000-c71d2474c7b2,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597346,3597.346,59.955767,0.999263,4X-LARGE,128,127.905664
01bdcdea-3204-a617-0000-c71d247674ca,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597158,3597.158,59.952633,0.999211,4X-LARGE,128,127.899008
01bdccbe-3204-a616-0000-c71d24704102,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3597150,3597.15,59.9525,0.999208,4X-LARGE,128,127.898624
01bdceda-3204-a614-0000-c71d247ba952,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3596962,3596.962,59.949367,0.999156,4X-LARGE,128,127.891968
01bdccfa-3204-a619-0000-c71d247105de,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3595239,3595.239,59.92065,0.998678,4X-LARGE,128,127.830784
01bdce26-3204-a615-0000-c71d2477891e,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3594955,3594.955,59.915917,0.998599,4X-LARGE,128,127.820672
01bdca2a-3204-a619-0000-c71d24581bbe,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3593807,3593.807,59.896783,0.99828,4X-LARGE,128,127.77984
01bdc939-3204-a616-0000-c71d244febf2,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3593322,3593.322,59.8887,0.998145,4X-LARGE,128,127.76256
01bdcb92-3204-a617-0000-c71d24685562,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3592751,3592.751,59.879183,0.997986,4X-LARGE,128,127.742208
01bdcb1a-3204-a617-0000-c71d2461ceea,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3592544,3592.544,59.875733,0.997929,4X-LARGE,128,127.734912
01bee7b9-3204-c558-0000-c71d2cdc863e,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-32
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,14369846,14369.846,239.497433,3.991624,2X-LARGE,32,127.731968
01bdc8fd-3204-a614-0000-c71d244f1bc6,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3591390,3591.39,59.8565,0.997608,4X-LARGE,128,127.693824
01bdcc0a-3204-a616-0000-c71d246c5c66,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3591053,3591.053,59.850883,0.997515,4X-LARGE,128,127.68192
01bdc9b2-3204-a619-0000-c71d24547466,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3590980,3590.98,59.849667,0.997494,4X-LARGE,128,127.679232
01bdca66-3204-a616-0000-c71d245af712,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3590772,3590.772,59.8462,0.997437,4X-LARGE,128,127.671936
01bdc9ee-3204-a617-0000-c71d24562a1e,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3590766,3590.766,59.8461,0.997435,4X-LARGE,128,127.67168
01bdc8c1-3204-a61b-0000-c71d244c6dfe,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3589828,3589.828,59.830467,0.997174,4X-LARGE,128,127.638272
01bdce62-3204-a616-0000-c71d24789b8a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3588336,3588.336,59.8056,0.99676,4X-LARGE,128,127.58528
01bdcade-3204-a619-0000-c71d245f4b4a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3588314,3588.314,59.805233,0.996754,4X-LARGE,128,127.584512
01bdcaa2-3204-a615-0000-c71d245dc5e2,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3587287,3587.287,59.788117,0.996469,4X-LARGE,128,127.548032
01bdc885-3204-a617-0000-c71d244be0fe,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3587203,3587.203,59.786717,0.996445,4X-LARGE,128,127.54496
01bdcbce-3204-a61b-0000-c71d246aa386,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3585734,3585.734,59.762233,0.996037,4X-LARGE,128,127.492736
01bdc976-3204-a615-0000-c71d24524bfe,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3582476,3582.476,59.707933,0.995132,4X-LARGE,128,127.376896
01bed777-3204-c554-0000-c71d2c6a49ae,"CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM 
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b 
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            -- AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-30
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            -- AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL)
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM DSPT_POST dai
        LEFT JOIN FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM RANKED_MATCHES
        WHERE POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        -- AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NULL))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,14328179,14328.179,238.802983,3.98005,2X-LARGE,32,127.3616
01bdcb56-3204-a61b-0000-c71d2464b61a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3581778,3581.778,59.6963,0.994938,4X-LARGE,128,127.352064
01bdcd72-3204-a619-0000-c71d24744182,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3581456,3581.456,59.690933,0.994849,4X-LARGE,128,127.340672
01bdd56d-3204-a615-0000-c71d24a9fa36,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,3575151,3575.151,59.58585,0.993098,4X-LARGE,128,127.116544
01bdd56d-3204-a615-0000-c71d24a9fa46,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,3574290,3574.29,59.5715,0.992858,4X-LARGE,128,127.085824
01bdcfc0-3204-a615-0000-c71d2481d71e,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3491250,3491.25,58.1875,0.969792,4X-LARGE,128,124.133376
01bdcfc2-3204-a615-0000-c71d2481d7aa,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_Z01_CAH_001,R_BAT_PRD_Z01_CAH,3489228,3489.228,58.1538,0.96923,4X-LARGE,128,124.06144
01be7ce9-3204-bc96-0000-c71d29965102,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM 
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY 
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S) = 1
            ORDER BY DSPT_CASE_I DESC, DSPT_CASE_CLSE_S
        ) b ON a.DSPT_CASE_I=b.DSPT_CASE_I
        WHERE 
            TO_DATE(TRAN_S) >= '2024-12-10'
            AND TO_DATE(LOAD_TS) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(LOAD_TS) > '2025-07-01'
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_X = 'The cardholder did not authorise the transaction'
            -- Exclude if auth made before SF history, previously matched, or from open Daisy case
            
            -- Update Daisy case details if available
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL)
            AND b.DSPT_CASE_USER_STUS_X NOT ILIKE 'Open%'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_TRAN_I ORDER BY a.LOAD_TS DESC) = 1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM DSPT_POST dai
        LEFT JOIN FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (
                PARTITION BY DSPT_TRAN_I
                ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
            ) AS POST_RANK,
            
        FROM POTENTIAL_MATCHES
    )
    SELECT *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM RANKED_MATCHES
        WHERE POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NULL))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,3477454,3477.454,57.957567,0.965959,4X-LARGE,128,123.642752
01be4a97-3204-b371-0000-c71d27f90586,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,20)",ACOE_CDL_PRD_Z01_CBIRBS_001,R_BAT_PRD_Z01_CBIRBS,13875229,13875.229,231.253817,3.85423,2X-LARGE,32,123.33536
01be7e3b-3204-bc96-0000-c71d299fc0e2,"call MLOP_SP_MODL_RUNR(to_date('2025-08-20','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,13268529,13268.529,221.14215,3.685703,2X-LARGE,32,117.942496
01be1558-3204-ae4f-0000-c71d267fe08a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,3283131,3283.131,54.71885,0.911981,4X-LARGE,128,116.733568
01be15d0-3204-ae4c-0000-c71d26834b12,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,3176745,3176.745,52.94575,0.882429,4X-LARGE,128,112.950912
01bef22e-3204-c93c-0000-c71d2d2e38c6,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        * EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
)
;",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,12493532,12493.532,208.225533,3.470426,2X-LARGE,32,111.053632
01be71a2-3204-bb9c-0000-c71d293ebe1a,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_dehurysk_digital_retro_scam_20250814202111_scor_itr2 as -- test data result
(select
tran_id,
TRAN_AMT,
ssx_snap_d,
ssx_cust_num,
dtl_ex_0_20s_001,
-- CERBERUS_SCORE,
-- DTL_EX_0_N_029,
fraudtype,
PRD_P01_DMN_FRAUMD.LABMLFRD.SCAM_RETRO_TEST_MOJO1('modelname=pipeline_Retro_scam_model_20250817232954.mojo', -- model name
array_construct(
C_HOUR, C_DAY_OF_MONTH, CLEAN_TRANSACTION_AMOUNT, _A_SCAM_VICTIM_FLAG, _B_CRYPTO_RISK, _B_LIST_BL_SCAM_TP_ACCT, _B_LIST_BL_SCAM_TP_PAYID, _B_LIST_RL1_SCAM_TP_CIF, _B_NB_HRISK_BILLER_CNT_1, _B_NB_HRISK_BILLER_SUM_1, _B_NPP_BLACKLIST_RECIP_FLAG, _B_NPP_OUT_CNT_1, _B_NPP_OUT_CNT_2, _B_NPP_OUT_SUM_1, _B_NPP_OUT_SUM_2, _B_NPP_OUT_FTP_CNT_1, _B_NPP_OUT_FTP_SUM_1, _B_OPEN_LISTED_LAST_CIF_2, _B_RECIP_FTP_SUM_1, _B_RECIP_FTP_SUM_LONG, _B_RECIP_LINK_SUM_AAA_LONG, _B_RECIP_LINK_SUM_LONG, _B_RECIP_LINK_SUM_SHORT, _B_RECIP_SUM_TODAY, _B_RECIP_SUM_AAA_1, _B_RECIP_SUM_AAA_4, _B_RECIP_SUM_AAA_LONG, _B_RFM_WHITELIST_IND, _A_NPP_VELOCITY_1D_OUT, TOTAL_SCAM_VICTIM_CONNECTIONS_HISTORICAL, AVG_TRANSACTIONS_PER_SENDER_D_HISTORICAL, MAX_DAILY_TRANSACTIONS_HISTORICAL, SENDER_DIVERSITY_FLAG, _L_MAX_30D_SCORE, _L_BC_SCORE, _L_MAX_30D_MULE_SCORE, _L_ADV_KEY_COMBO, _L_CLPBRD_EVNT, _L_CONCURRENT_SESS, _L_EXPORT_DATA, _L_IMPORT_DATA, _L_RAT_IN_SESS, _L_IS_RCNT_HRISK_SESS, _L_LRG_DIST_KNOWN_LOC, _L_RARE_SCRN_SZ, _L_SCRN_BROADCAST, _L_ACTIVE_SPOOFING, _L_PMT_VLOC_ANOM, _L_RCNT_HI_SCR_ON_DEV, _L_ACCUM_AMT_ANOM, _L_IS_ACTIVE_CALL, _L_IS_LONG_SESS, _L_TRUST_900, _L_TRUST_1000, _L_TRUST_NEW_PAYEE, _L_TRUST_UNUSED_PAYEE, _L_TRUST_PAYEE_HIGH_VLOC_IN, _L_TRUST_PAYEE_DORM_ACCT, _L_TRUST_RCNT_HI_ATO_AS_PAYER, _L_TRUST_RCNT_HI_SES_AS_PAYEE, _L_TRUST_RCNT_HI_SES_AS_PAYER, _L_TRUST_RCNT_HI_MS_AS_PAYEE, _L_TRUST_RCNT_HI_MS_AS_PAYER, _L_CUST_SCAMRISK_SCORE, _B_RECIP_SUM_SHORT, _B_RECIP_SUM_LONG, _A_CUSTOMER_AGE, _A_CUST_SUM_AAA_SHORT, _A_CUST_SUM_AAA_LONG, FTP_CNT_7DAYS, FTP_SUM_7DAYS, NB_LOGONS_CNT_3M, CAPP_LOGONS_CNT_3M, _X_CIF_RECIPIENT_NEW_SUM, _A_CUST_LINK_SUM_AAA_3, _B_CLIENT_POSTCODE_CNT_3, _L_PMT_AMT, _X_NPP_OUT_SUM_DATE, _L_ACC_AMT_1D, _L_SCORE_3, _B_RECIP_SUM_AAA_6, _A_CLIENT_CITY_7, _L_ACC_AMT_1H, _A_BTS_WDL_SUM_LONG, _L_SCORE_4, _L_NEW_PAYEE_PER_USER, _A_CLIENT_CITY_2, _B_CLIENT_POSTCODE_SUM_2, _L_BC_SESS_CNT, _A_CSE_CHG_DWL_NEW_AMT, _A_CLIENT_CITY_1, _B_CLIENT_POSTCODE_CNT_5, _L_MINS_LST_LGN_CAPPED, _B_RECIP_SUM_AAA_7, _B_CLIENT_POSTCODE_CNT_2, _A_CLIENT_CITY_10, _L_NUM_SESS_2H, _L_NEW_PAYEE, _N_CUST_TXN_COUNT, _B_CLIENT_POSTCODE_SUM_3, _A_PROF_CAPP_DEVICE_NFTP_1, _A_CURR_CAPP_DEVICE_VENDOR, _A_NPP_FTP_SUM2, _A_CLIENT_CITY_6, _B_CLIENT_POSTCODE_CNT_1, _A_CURR_CAPP_DEVICE_NFTP_CNT, _A_NPP_OUT_SUM_1, _A_CLIENT_CITY_8, _N_CRYPTO_RECIPIENT_CNT, _N_H_2, _A_GEO_DISTANCE, _N_CAPP_LOGONS_CNT_1, _N_CAPP_LINKED_CNT_2, _B_CLIENT_POSTCODE_SUM_4, _X_CIF_REC_SUM, _L_M_L_C, _A_MULTI_CNT, _A_PROF_CAPP_DEVICE_NFTP_3, _N_CUST_STATE_IP_ACTIVITY, _A_MRISK_FOREIGN_IP_ACTIVITY, _A_PROF_CAPP_DEVICE_LATT_3, _A_CUST_STATE_IP_ACTIVITY, _A_LOGON_NB_IP_CNTRY, _A_MRISK_FOREIGN_IP_TASK_ID, _A_DEVCIE_GEO_LAT_AVG_INCL, _N_INTERSTATE_IP_ACTIVITY, _N_INTERSTATE_IP_STATE, _N_FOREIGN_IP_ACTIVITY, _A_INTERSTATE_IP_STATE, _A_INTERSTATE_IP_ACTIVITY, _A_IS_IP_DT_2, _A_INTERSTATE_IP_TASK_ID, _A_IS_IP_DT_1, _A_SAFE_CUST_LATITUDE, _A_CURR_CAPP_DEVICE_LATT, _A_FOREIGN_IP_ACTIVITY, _N_HRISK_FOREIGN_IP_ACTIVITY, _A_IS_IP_DT_3, _A_CURR_CUST_LATITUDE, _N_CLOUD_SERV_LATEST_LOGON_DT, _A_PROF_CAPP_DEVICE_LATT_1, _A_PROF_CAPP_DEVICE_LATT_2, _A_FOREIGN_IP_TASK_ID, _A_PREV_CUST_LATITUDE, _L_RISKY_KEY_COMBO, _L_KEYB_NAV_ANOM, _X_CIF_RECIPIENT_NEW_CNT, _X_TELSTRA_LAST_CALL_DUR, _B_CLIENT_POSTCODE_3, _B_CLIENT_POSTCODE_2, _B_CLIENT_POSTCODE_4, _A_MRISK_FOREIGN_IP_CNTRY_CODE, _N_NEW_IP_LOGON_PCODE, _A_LOGON_198_IP_PC, _A_LOGON_NB_IP_PC, _X_LAST_N_TXN_COUNT, _A_TELSTRA_TP_OUTBND_COUNT, _B_OPEN_LAST_PAYER_CIF_DT_2, _B_OPEN_LAST_PAYER_CIF_DT_3, _B_OPEN_LAST_PAYER_CIF_DT_4, _B_OPEN_LAST_PAYER_CIF_DT_5, _A_NEW_CAPP_REGO_DT, _A_CSE_CHG_DWL_DT, _A_CIF_ESTABLISH_DT, _A_NB_LASTLOGON_DT_1, _A_CURR_CAPP_DEVICE_DT, _A_TELSTRA_LONG_CALL, _A_CRYPTO_LAST_PYMNT_DATE, _N_SCAMP1_MLW_DT, _N_SCAMP3_MLW_DT, _N_SCAMP4_MLW_DT, _N_SCAMP5_MLW_DT, _N_SCAMP7_MLW_DT, _N_SCAMP10_MLW_DT, _N_SCAMP20_MLW_DT, _N_SCAMP21_MLW_DT, _N_M100_P8_IND_DT, _A_M100_APP_P1_IND_DT, _N_M100_APP_P5_DT, _A_M100_APP_P8_IND_DT, _N_M100_APP_P9_DT, _X_TELSTRA_MAX_CALL_DUR, _A_TELSTRA_MULTI_CALLS, _A_CRYPTO_MNTHLY_SUM, GENDER, TRAN_ACCT_COUNT, MORT_ACCT_COUNT, BUSI_TRAN_COUNT, DMC_COUNT, DEPOSIT_ACCT_COUNT, TRADE_ACCT_COUNT, NAME_ORIG_ASSOC, MAIN_FOREIGN_ASSOC, GOVT_BENEFITS, BAL_LAST_MON, BAL_TWO_MON_AGO, GAMBLING_SPEND_LAST_YEAR, GAMBLING_SPEND_THREE_MON, GAMBLING_SPEND_ONE_MON, DPAT_TOTL_DPAT_30D_BPAY_TRAN_A, DPAT_TOTL_DPAT_LAST_30D_BANK_INIT_TRAN_A, DPAT_TOTL_DPAT_LAST_30D_PENS_TRAN_A, DPAT_TOTL_PRSL_TRAN_FOOT_A, DPAT_TOTL_TD_FOOT_A, DPAT_TOTL_DPAT_LAST_30D_AVRG_FOOT_A, DPAT_TOTL_PRSL_TRAN_BALN_A, AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_1, AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_30, DPAT_TOTL_DPAT_LAST_30D_BPY_DIGT_DR_Q, DIGT_INTA_LAST_1_30_DAY_STMT_VIEW_Q, DIGT_INTA_LAST_1_30_DAY_GENL_HL_INTA_Q, DIGT_EVNT_DETL_LAST_1D_PAYT_PAGE_VSIT_Q, DIGT_EVNT_DETL_LAST_30D_PAYT_PAGE_VSIT_Q)) as target_0,
1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_DEHURYSK_SCAM_RETRO_TESTSET_13082025 -- name of OOT data
where to_date(ssx_snap_d) >= '2025-07-01'
and to_date(ssx_snap_d) <= '2025-07-16'-- filter on test data on dates
-- limit 10
);",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,3081986,3081.986,51.366433,0.856107,4X-LARGE,128,109.581696
01be081b-3204-aca9-0000-c71d2615ccb6,"call MLOP_SP_MODL_RUNR(to_date('2025-07-30','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,3081814,3081.814,51.363567,0.856059,4X-LARGE,128,109.575552
01be7625-3204-bb76-0000-c71d2965bb1a,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,3038729,3038.729,50.645483,0.844091,4X-LARGE,128,108.043648
01be351b-3204-b35e-0000-c71d275de45e,"call MLOP_SP_MODL_RUNR(to_date('2025-08-07','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2974132,2974.132,49.568867,0.826148,4X-LARGE,128,105.746944
01bde0bb-3204-a616-0000-c71d24faf5ee,"call MLOP_SP_MODL_RUNR(to_date('2025-07-23','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2968033,2968.033,49.467217,0.824454,4X-LARGE,128,105.530112
01bde65c-3204-aa25-0000-c71d25268f5a,"call MLOP_SP_MODL_RUNR(to_date('2025-07-24','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2962609,2962.609,49.376817,0.822947,4X-LARGE,128,105.337216
01be29dc-3204-b1ec-0000-c71d270e3bbe,"call MLOP_SP_MODL_RUNR(to_date('2025-08-05','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2926841,2926.841,48.780683,0.813011,4X-LARGE,128,104.065408
01be5811-3204-b881-0000-c71d286a527e,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250813122145_scored as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO1('modelname=pipeline_it1_F2_reduce_mojo_freeze_70cols_20250813122145.mojo', 
array_construct(
CHL_CT_TERM_OWNER_ID, TRANSACTION_HOUR_DECI, TRANSACTION_HOUR_INT, CHL_CT_TERM_OWNER_NAME, _C_CRD_SAFE_MERCHANT, CHL_CT_TERM_CNTRY_CODE, _C_CC_CNP_VEL_6HR_COUNT_1, _C_CNP_MER_NM_5, _C_CNP_MER_NM_1, _C_CNP_MER_NM_3, _A_CRD_SCAM_SUPP_7D_SUM_1, _A_BTS_CUST_AGE, _C_CNP_MER_NM_2, _C_CC_GBL_N3D_1D_CNT_1, _C_CNP_MER_NM_4, DTL_EX_0_N_009, _C_CNP_MER_NM_CURR, DTL_CA_AUTH_SYS_DEC, _C_CC_CNP_LTRANS_6HR_COUNT_1, _C_CC_IND_TRAN_3D, _C_2WAY_CRD_FRD_RULE_FLAG, _C_CC_CNP_VEL_6HR_SUM_1, _A_PREV_CAPP_DEVICE_CNT, _C_CRD_APAY_CNT_1, _C_CRD_APAY_SUM_1, _C_CRD_CNP_TRN_CNT_1, DTL_CA_AUTH_SYS_INFO, _A_CURR_CAPP_DEVICE_CNT, _C_CRD_CNP_TRN_CNT_5, _C_CC_RECOV_TRANS_SUM_1, ATH_PC_CUST_PRESENT, _C_CC_HIGH_VEL_APPLE_SUM_1, _C_CRD_CNP_TRN_SUM_1, _C_CRD_ALL_TRN_CNT_2, _C_N3D_MERC_ID_SUM_1, CHL_CT_MER_MCC, _C_N3D_MERC_ID_SUM_2, _C_CC_GBL_N3D_1D_SUM_1, _A_P_L_C, _C_N3D_MERC_ID_1, _A_Q, _A_CURR_NB_BROWSER_CNT, SSA_C_CASH_LIMIT, _C_N3D_MERC_ID_2, _A_CRD_NPP_PAYMENT_AMOUNT, _C_CRD_CNP_TRN_CNT_2, _A_T, _C_CC_GBL_N3D_CNT_2, _A_R, _A_BTS_BCH_SUM, _C_CRD_CNP_TRN_SUM_3, _C_CRD_CNP_TRN_SUM_2, _C_CC_CNP_VEL_6HR_COUNT_2, _C_N3D_MERC_ID_SUM_3, _C_CRD_CNP_TRN_SUM_4, _A_CLIENT_CITY_10, _C_CC_SFW_MICROSOFT_CNT_1, SSA_C_OPEN_TO_BUY, DTL_CA_CLIENT_AMT, DTL_CA_MERCH_AMT)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_VERENIIL_CNP_OOT_20250605
-- where to_date(transactiondatetime) >= '2025-05-11'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,11637316,11637.316,193.955267,3.232588,2X-LARGE,32,103.442816
01bdcb48-3204-a617-0000-c71d2463e68a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2906008,2906.008,48.433467,0.807224,4X-LARGE,128,103.324672
01be135b-3204-ae4f-0000-c71d266de456,"call MLOP_SP_MODL_RUNR(to_date('2025-08-01','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2895525,2895.525,48.25875,0.804313,4X-LARGE,128,102.952064
01be3abb-3204-b361-0000-c71d27870146,"call MLOP_SP_MODL_RUNR(to_date('2025-08-08','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2859882,2859.882,47.6647,0.794412,4X-LARGE,128,101.684736
01bdc9e0-3204-a616-0000-c71d2455c1ba,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2856596,2856.596,47.609933,0.793499,4X-LARGE,128,101.567872
01bddb1b-3204-a619-0000-c71d24d2a67e,"call MLOP_SP_MODL_RUNR(to_date('2025-07-22','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2817695,2817.695,46.961583,0.782693,4X-LARGE,128,100.184704
01bdf3f1-3204-aa1e-0000-c71d258de062,"WITH cleaned_base_data AS (
    -- Clean all the data first and create unique transaction records
    SELECT
        SSX_CUST_NUM,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS transaction_date,
        TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') AS transaction_timestamp,
        
        -- Create unique transaction ID
        CONCAT(SSX_CUST_NUM, '_', TTS_TRAN_DATE_ALT, '_', MID_EVENT_TS) AS transaction_id,
        
        -- Clean the account balance field consistently
        CASE
            WHEN _A_CUST_ACCT_BAL IS NULL OR _A_CUST_ACCT_BAL = '' OR _A_CUST_ACCT_BAL = ' ' THEN NULL
            ELSE TRY_CAST(_A_CUST_ACCT_BAL AS DECIMAL(18,2))
        END AS clean_account_balance,
        
        -- Transaction amount
        TRY_CAST(TGX_TRAN_AMT AS DECIMAL(18,2)) AS transaction_amount,
        
        -- Deduplication
        ROW_NUMBER() OVER (
            PARTITION BY SSX_CUST_NUM, TTS_TRAN_DATE_ALT, MID_EVENT_TS 
            ORDER BY SSX_CUST_NUM
        ) AS row_num
        
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATE_ALT IS NOT NULL
      AND TTS_TRAN_DATE_ALT != ''
      AND LENGTH(TRIM(TTS_TRAN_DATE_ALT)) = 8
      -- Expand window for lookback calculations
      AND TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') >= CURRENT_DATE - INTERVAL '90 days'
),

-- === UNIQUE TRANSACTIONS ===
unique_transactions AS (
    SELECT *
    FROM cleaned_base_data
    WHERE row_num = 1
),

-- === TRANSACTION-LEVEL LOOKBACK FEATURES (AGGREGATED BY TRANSACTION) ===
transaction_level_features AS (
    SELECT
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount,
        
        -- === 30-DAY LOOKBACK FEATURES (before this transaction) ===
        COUNT(h30.transaction_id) AS total_transactions_30d_lookback,
        COUNT(DISTINCT DATE(h30.transaction_date)) AS active_days_30d_lookback,
        
        -- Amount statistics
        ROUND(SUM(COALESCE(h30.clean_account_balance, 0)), 2) AS total_amount_30d_lookback,
        ROUND(AVG(h30.clean_account_balance), 2) AS avg_transaction_amount_30d_lookback,
        ROUND(MIN(h30.clean_account_balance), 2) AS min_transaction_amount_30d_lookback,
        ROUND(MAX(h30.clean_account_balance), 2) AS max_transaction_amount_30d_lookback,
        ROUND(STDDEV(h30.clean_account_balance), 2) AS stddev_transaction_amount_30d_lookback,
        
        -- === 7-DAY LOOKBACK FEATURES ===
        COUNT(h7.transaction_id) AS transactions_last_7d_lookback,
        ROUND(SUM(COALESCE(h7.clean_account_balance, 0)), 2) AS amount_last_7d_lookback,
        ROUND(AVG(h7.clean_account_balance), 2) AS avg_amount_last_7d_lookback,
        
        -- === 3-DAY LOOKBACK FEATURES ===
        COUNT(h3.transaction_id) AS transactions_last_3d_lookback,
        ROUND(SUM(COALESCE(h3.clean_account_balance, 0)), 2) AS amount_last_3d_lookback,
        
        -- === 1-DAY LOOKBACK FEATURES ===
        COUNT(h1.transaction_id) AS transactions_last_1d_lookback,
        ROUND(SUM(COALESCE(h1.clean_account_balance, 0)), 2) AS amount_last_1d_lookback,
        
        -- === TEMPORAL PATTERNS (30-day lookback) ===
        -- Weekend vs weekday activity
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) IN (1, 7) THEN 1 END) AS weekend_transactions_30d_lookback,
        COUNT(CASE WHEN DAYOFWEEK(h30.transaction_date) BETWEEN 2 AND 6 THEN 1 END) AS weekday_transactions_30d_lookback,
        
        -- Hour patterns
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 0 AND 6 THEN 1 END) AS late_night_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 7 AND 17 THEN 1 END) AS business_hours_transactions_30d_lookback,
        COUNT(CASE WHEN HOUR(h30.transaction_timestamp) BETWEEN 18 AND 23 THEN 1 END) AS evening_transactions_30d_lookback,
        
        -- === DATE RANGE ===
        MIN(h30.transaction_date) AS first_transaction_date_30d_lookback,
        MAX(h30.transaction_date) AS last_transaction_date_30d_lookback,
        
        -- === CUSTOMER HISTORICAL BASELINE (for anomaly detection) ===
        ROUND(AVG(hist.clean_account_balance), 2) AS customer_historical_avg_amount,
        ROUND(STDDEV(hist.clean_account_balance), 2) AS customer_historical_stddev_amount
        
    FROM unique_transactions t
    
    -- 30-day lookback join
    LEFT JOIN unique_transactions h30 
        ON t.SSX_CUST_NUM = h30.SSX_CUST_NUM 
        AND h30.transaction_timestamp < t.transaction_timestamp
        AND h30.transaction_timestamp >= t.transaction_timestamp - INTERVAL '30 days'
    
    -- 7-day lookback join
    LEFT JOIN unique_transactions h7 
        ON t.SSX_CUST_NUM = h7.SSX_CUST_NUM 
        AND h7.transaction_timestamp < t.transaction_timestamp
        AND h7.transaction_timestamp >= t.transaction_timestamp - INTERVAL '7 days'
    
    -- 3-day lookback join
    LEFT JOIN unique_transactions h3 
        ON t.SSX_CUST_NUM = h3.SSX_CUST_NUM 
        AND h3.transaction_timestamp < t.transaction_timestamp
        AND h3.transaction_timestamp >= t.transaction_timestamp - INTERVAL '3 days'
    
    -- 1-day lookback join
    LEFT JOIN unique_transactions h1 
        ON t.SSX_CUST_NUM = h1.SSX_CUST_NUM 
        AND h1.transaction_timestamp < t.transaction_timestamp
        AND h1.transaction_timestamp >= t.transaction_timestamp - INTERVAL '1 day'
    
    -- All historical data for baseline (before current transaction)
    LEFT JOIN unique_transactions hist 
        ON t.SSX_CUST_NUM = hist.SSX_CUST_NUM 
        AND hist.transaction_timestamp < t.transaction_timestamp
    
    -- ✅ CRITICAL: GROUP BY transaction to get one record per transaction
    GROUP BY 
        t.transaction_id,
        t.SSX_CUST_NUM,
        t.transaction_date,
        t.transaction_timestamp,
        t.clean_account_balance,
        t.transaction_amount
),

-- === DAILY PATTERNS (max daily activity in lookback periods) ===
daily_patterns AS (
    SELECT 
        t.transaction_id,
        
        -- Calculate max daily activity for each transaction's lookback period
        MAX(daily_summary.daily_transactions) AS max_daily_transactions_30d_lookback,
        MAX(daily_summary.daily_amount) AS max_daily_amount_30d_lookback
        
    FROM unique_transactions t
    LEFT JOIN (
        -- Daily aggregations for each customer
        SELECT 
            SSX_CUST_NUM,
            DATE(transaction_date) as txn_date,
            COUNT(*) as daily_transactions,
            SUM(COALESCE(clean_account_balance, 0)) as daily_amount
        FROM unique_transactions
        GROUP BY SSX_CUST_NUM, DATE(transaction_date)
    ) daily_summary 
        ON t.SSX_CUST_NUM = daily_summary.SSX_CUST_NUM
        AND daily_summary.txn_date < DATE(t.transaction_date)
        AND daily_summary.txn_date >= DATE(t.transaction_date) - INTERVAL '30 days'
    
    GROUP BY t.transaction_id
)

-- === FINAL TRANSACTION-LEVEL OUTPUT ===
SELECT
    t.transaction_id,
    t.SSX_CUST_NUM,
    t.transaction_date,
    t.transaction_timestamp,
    t.clean_account_balance AS current_transaction_amount,
    t.transaction_amount,
    
    -- === 30-DAY LOOKBACK STATISTICS ===
    t.total_transactions_30d_lookback,
    t.active_days_30d_lookback,
    t.total_amount_30d_lookback,
    t.avg_transaction_amount_30d_lookback,
    t.min_transaction_amount_30d_lookback,
    t.max_transaction_amount_30d_lookback,
    t.stddev_transaction_amount_30d_lookback,
    
    -- === TIME-BASED PATTERNS ===
    ROUND(t.total_transactions_30d_lookback / NULLIF(t.active_days_30d_lookback, 0), 2) AS avg_transactions_per_active_day_lookback,
    ROUND(t.total_amount_30d_lookback / NULLIF(t.active_days_30d_lookback, 0), 2) AS avg_daily_spend_lookback,
    
    -- === RECENT ACTIVITY PATTERNS ===
    t.transactions_last_7d_lookback,
    t.amount_last_7d_lookback,
    t.avg_amount_last_7d_lookback,
    t.transactions_last_3d_lookback,
    t.amount_last_3d_lookback,
    t.transactions_last_1d_lookback,
    t.amount_last_1d_lookback,
    
    -- === VELOCITY INDICATORS (SCAM PATTERNS) ===
    ROUND(
        t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0), 2
    ) AS pct_transactions_last_7d_lookback,
    
    ROUND(
        t.amount_last_7d_lookback * 100.0 / NULLIF(t.total_amount_30d_lookback, 0), 2
    ) AS pct_amount_last_7d_lookback,
    
    -- === TEMPORAL DISTRIBUTION ===
    t.weekend_transactions_30d_lookback,
    t.weekday_transactions_30d_lookback,
    t.late_night_transactions_30d_lookback,
    t.business_hours_transactions_30d_lookback,
    t.evening_transactions_30d_lookback,
    
    -- === CONSISTENCY INDICATORS ===
    t.first_transaction_date_30d_lookback,
    t.last_transaction_date_30d_lookback,
    DATEDIFF('day', t.first_transaction_date_30d_lookback, t.last_transaction_date_30d_lookback) AS date_span_days_lookback,
    
    -- === SPIKE INDICATORS ===
    COALESCE(dp.max_daily_transactions_30d_lookback, 0) AS max_daily_transactions_30d_lookback,
    ROUND(COALESCE(dp.max_daily_amount_30d_lookback, 0), 2) AS max_daily_amount_30d_lookback,
    
    -- === ANOMALY DETECTION ===
    CASE 
        WHEN t.clean_account_balance > (t.customer_historical_avg_amount + 2 * t.customer_historical_stddev_amount)
        THEN 1 
        ELSE 0 
    END AS is_current_transaction_outlier,
    
    ROUND(
        t.clean_account_balance / NULLIF(t.avg_transaction_amount_30d_lookback, 0), 2
    ) AS current_vs_historical_avg_ratio,
    
    -- === RISK SCORING (Transaction Level) ===
    CASE 
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 80
         AND t.transactions_last_1d_lookback > 15
        THEN 'CRITICAL'
        
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 60
         AND t.late_night_transactions_30d_lookback > t.business_hours_transactions_30d_lookback
        THEN 'HIGH'
        
        WHEN t.clean_account_balance > t.avg_transaction_amount_30d_lookback * 10
        THEN 'MEDIUM'
        
        ELSE 'LOW'
    END as transaction_risk_level,
    
    -- === BEHAVIORAL ANOMALY FLAGS ===
    CASE 
        WHEN t.transactions_last_7d_lookback * 100.0 / NULLIF(t.total_transactions_30d_lookback, 0) > 90
        THEN 'SUDDEN_BURST'
        ELSE 'NORMAL'
    END as velocity_flag,
    
    CASE 
        WHEN HOUR(t.transaction_timestamp) BETWEEN 0 AND 6
         AND t.late_night_transactions_30d_lookback > t.business_hours_transactions_30d_lookback
        THEN 'UNUSUAL_HOURS'
        ELSE 'NORMAL'
    END as timing_flag

FROM transaction_level_features t
LEFT JOIN daily_patterns dp ON t.transaction_id = dp.transaction_id

-- ✅ FILTER TO YOUR TARGET PERIOD
WHERE t.transaction_timestamp BETWEEN CURRENT_DATE - INTERVAL '31 days' AND CURRENT_DATE

ORDER BY t.SSX_CUST_NUM, t.transaction_timestamp;",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,2813962,2813.962,46.899367,0.781656,4X-LARGE,128,100.051968
01bdebfb-3204-aa25-0000-c71d2551c312,"call MLOP_SP_MODL_RUNR(to_date('2025-07-25','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2806207,2806.207,46.770117,0.779502,4X-LARGE,128,99.776256
01be405b-3204-b365-0000-c71d27acb186,"call MLOP_SP_MODL_RUNR(to_date('2025-08-09','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2768727,2768.727,46.14545,0.769091,4X-LARGE,128,98.443648
01bdc968-3204-a616-0000-c71d245178ca,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2747861,2747.861,45.797683,0.763295,4X-LARGE,128,97.70176
01be709f-3204-bb31-0000-c71d293636a6,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,2731580,2731.58,45.526333,0.758772,4X-LARGE,128,97.122816
01be0dbb-3204-aa1e-0000-c71d263f9ef2,"call MLOP_SP_MODL_RUNR(to_date('2025-07-31','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2715011,2715.011,45.250183,0.75417,4X-LARGE,128,96.53376
01bdca3b-3204-a616-0000-c71d245876a6,"call MLOP_SP_MODL_RUNR(to_date('2025-07-19','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2702752,2702.752,45.045867,0.750764,4X-LARGE,128,96.097792
01be243b-3204-afee-0000-c71d26e4aa52,"call MLOP_SP_MODL_RUNR(to_date('2025-08-04','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2701419,2701.419,45.02365,0.750394,4X-LARGE,128,96.050432
01bdf19b-3204-aa1f-0000-c71d257c770a,"call MLOP_SP_MODL_RUNR(to_date('2025-07-26','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2683669,2683.669,44.727817,0.745464,4X-LARGE,128,95.419392
01bdd988-3204-a614-0000-c71d24c80242,"select	distinct 
        TO_TIMESTAMP(a.tts_tran_date_alt || ' ' || a.tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME
		,(a.dtl_ex_0_n_064 || a.dtl_ex_0_n_065 || a.dtl_ex_0_n_066) as TRAN_ID
		,a.tts_tran_date_alt
		,a.tts_tran_time_alt
		,a.dtl_ex_0_20s_001
		,a.dtl_ex_1_5s_01
		,a.ssx_cust_num
		,a.chl_id_ob_userid
		,a.tgx_bank_name
		,a.tgx_bank_num
		,a.tgx_branch_id
		,a.tgx_acct_num
		,a.tgx_name
		,a.tgx_description
		,TRY_TO_NUMBER(a.tgx_tran_amt, 38, 2) as TRAN_AMT
		,a.dtl_ex_0_i_002 as FTP_IND
        
		,a._A_CUST_ACCT_BAL, --RM2a
        a._A_CUST_AVG_ACCT_BAL, --RM3
        a._A_CAPP_REGISTRATIONS_CNT_1, --RM5
        a._A_APP_CC_MODEL_PROB_SCR, --RM6
        --_A_CAPP_LOGON_CNT_1, --RM8
        	
		a._A_CUST_NPP_OUT_SUM_AAA_SHORT, --RM12
        --_A_CUST_SUM_AAA_LONG, --RM13
		
        a._A_MONTHLY_TRANSFER_COUNT_1, --RM16
		a._A_MONTHLY_TRANSFER_SUM_1, --RM17
		
        a._A_SCAM_VICTIM_FLAG,--RM20 
        a._n_client_sess_exist_open_sum
		-- BioCatch UVs
		,TRY_TO_NUMBER(a._l_se_score, 38, 2) as _L_SE_SCORE
		,TRY_TO_NUMBER(a._l_bc_score, 38, 2) as _L_BC_SCORE
		,TRY_TO_NUMBER(a._l_max_30d_score, 38, 2) as _L_MAX_30D_SCORE
		,TRY_TO_NUMBER(a._l_max_30d_se_score, 38, 2) as _L_MAX_30D_SE_SCORE
        ,TRY_TO_NUMBER(a._l_max_30d_mule_score, 38, 2) as _L_MAX_30D_MULE_SCORE
		,TRY_TO_NUMBER(a._l_adv_key_combo, 38, 2) as _L_ADV_KEY_COMBO
		,TRY_TO_NUMBER(a._l_clpbrd_evnt, 38, 2) as _L_CLPBRD_EVNT
		,TRY_TO_NUMBER(a._l_concurrent_sess, 38, 2) as _L_CONCURRENT_SESS
		,TRY_TO_NUMBER(a._l_export_data, 38, 2) as _L_EXPORT_DATA
		,TRY_TO_NUMBER(a._l_import_data, 38, 2) as _L_IMPORT_DATA
		,TRY_TO_NUMBER(a._l_is_rat, 38, 2) as _L_IS_RAT
		,TRY_TO_NUMBER(a._l_is_mob_rat, 38, 2) as _L_IS_MOB_RAT
		,TRY_TO_NUMBER(a._l_rat_in_sess, 38, 2) as _L_RAT_IN_SESS
		,TRY_TO_NUMBER(a._l_is_rcnt_hrisk_sess, 38, 2) as _L_IS_RCNT_HRISK_SESS
		,TRY_TO_NUMBER(a._l_is_rcnt_rat, 38, 2) as _L_IS_RCNT_RAT
		,TRY_TO_NUMBER(a._l_lrg_dist_known_loc, 38, 2) as _L_LRG_DIST_KNOWN_LOC
		,TRY_TO_NUMBER(a._l_rare_scrn_sz, 38, 2) as _L_RARE_SCRN_SZ
		,TRY_TO_NUMBER(a._l_risky_isp, 38, 2) as _L_RISKY_ISP
		,TRY_TO_NUMBER(a._l_risky_key_combo, 38, 2) as _L_RISKY_KEY_COMBO
		,TRY_TO_NUMBER(a._l_tzone_mismatch, 38, 2) as _L_TZONE_MISMATCH
		,TRY_TO_NUMBER(a._l_scm_rsk_hgh_scr, 38, 2) as _L_SCM_RSK_HGH_SCR
		,TRY_TO_NUMBER(a._l_keyb_nav_anom, 38, 2) as _L_KEYB_NAV_ANOM
		,TRY_TO_NUMBER(a._l_scrn_broadcast, 38, 2) as _L_SCRN_BROADCAST
		,TRY_TO_NUMBER(a._l_delay_to_input_pi, 38, 2) as _L_DELAY_TO_INPUT_PI
		,TRY_TO_NUMBER(a._l_input_otp_delay, 38, 2) as _L_INPUT_OTP_DELAY
		,TRY_TO_NUMBER(a._l_active_spoofing, 38, 2) as _L_ACTIVE_SPOOFING
		,TRY_TO_NUMBER(a._l_pmt_vloc_anom, 38, 2) as _L_PMT_VLOC_ANOM
		,TRY_TO_NUMBER(a._l_rcnt_hi_scr_on_dev, 38, 2) as _L_RCNT_HI_SCR_ON_DEV
		,TRY_TO_NUMBER(a._l_accum_amt_anom, 38, 2) as _L_ACCUM_AMT_ANOM
		,TRY_TO_NUMBER(a._l_app_togg, 38, 2) as _l_APP_TOGG
		,TRY_TO_NUMBER(a._l_is_active_call, 38, 2) as _L_IS_ACTIVE_CALL
		,TRY_TO_NUMBER(a._l_is_long_sess, 38, 2) as _L_IS_LONG_SESS
		,TRY_TO_NUMBER(a._l_type_patterns_anomaly, 38, 2) as _L_TYPE_PATTERNS_ANOMALY
		,TRY_TO_NUMBER(a._l_seg_typing_pi, 38, 2) as _L_SEG_TYPING_PI

        --BC Trust
        ,TRY_TO_NUMBER(a._L_TRUST_900, 38, 2) as _L_TRUST_900
        ,TRY_TO_NUMBER(a._L_TRUST_1000, 38, 2) as _L_TRUST_1000
        ,TRY_TO_NUMBER(a._L_TRUST_NEW_PAYEE, 38, 2) as _L_TRUST_NEW_PAYEE
        ,TRY_TO_NUMBER(a._L_TRUST_UNUSED_PAYEE, 38, 2) as _L_TRUST_UNUSED_PAYEE
        ,TRY_TO_NUMBER(a._L_TRUST_PAYEE_HIGH_VLOC_IN, 38, 2) as _L_TRUST_PAYEE_HIGH_VLOC_IN 
        ,TRY_TO_NUMBER(a._L_TRUST_PAYEE_DORM_ACCT, 38, 2) as _L_TRUST_PAYEE_DORM_ACCT
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_ATO_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_ATO_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_ATO_AS_PAYER 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_SES_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_SES_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_SES_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_SES_AS_PAYER 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_MS_AS_PAYEE, 38, 2) as _L_TRUST_RCNT_HI_MS_AS_PAYEE 
        ,TRY_TO_NUMBER(a._L_TRUST_RCNT_HI_MS_AS_PAYER, 38, 2) as _L_TRUST_RCNT_HI_MS_AS_PAYER       
        
		-- NameCheck UVs
		,a._l_nc_response_code
		,a._l_nc_match_name_conf
		
		-- H2O Score UVs
		,TRY_TO_NUMBER(a._l_cust_scamrisk_score, 38, 2) as _L_CUST_SCAMRISK_SCORE
		,a.dtl_ex_0_n_029
		,a.dtl_ex_0_n_034 as CERBERUS_SCORE
		
		-- Recipient Level UVs
		,TRY_TO_NUMBER(a._b_recip_sum_aaa_short, 38, 2) as _B_RECIP_SUM_SHORT
		,TRY_TO_NUMBER(a._b_recip_sum_aaa_long, 38, 2) as _B_RECIP_SUM_LONG
		,TRY_TO_NUMBER(a._b_recip_ftp_cnt_short, 38, 2) as _B_RECIP_FTP_CNT_SHORT
		,TRY_TO_NUMBER(a._b_recip_ftp_cnt_long, 38, 2) as _B_RECIP_FTP_CNT_LONG
        ,a._b_list_bl_scam_tp_payid
        ,a._b_list_bl_tp_payid
        ,a._b_list_bl_tp_phone
        ,a._b_list_bl_scam_tp_phone
        ,a._b_list_bl_tp_bpay
        ,a._b_list_bl_scam_tp_bpay
        ,a._b_list_bl_scam_tp_acct
        ,a._b_list_bl_tp_acct
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_any_cust_ftp_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_ANY_CUST_FTP_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_2
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_3
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_4
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp) as _B_OPEN_LAST_PAYER_CIF_DT_5
		
		-- Customer Level UVs
		,TRY_TO_NUMBER(a._a_customer_age, 38, 2) as _A_CUSTOMER_AGE
		,TRY_TO_NUMBER(a._a_cust_sum_aaa_SHORT, 38, 2) as _A_CUST_SUM_AAA_SHORT
		,TRY_TO_NUMBER(a._a_cust_sum_aaa_LONG, 38, 2) as _A_CUST_SUM_AAA_LONG
		,TRY_TO_NUMBER(a._a_ftp_cnt_1, 38, 2) as _A_FTP_CNT_1
		,TRY_TO_NUMBER(a._a_ftp_cnt_2, 38, 2) as _A_FTP_CNT_2
		,TRY_TO_NUMBER(a._a_ftp_cnt_3, 38, 2) as _A_FTP_CNT_3
		,TRY_TO_NUMBER(a._a_ftp_cnt_4, 38, 2) as _A_FTP_CNT_4
		,TRY_TO_NUMBER(a._a_ftp_cnt_5, 38, 2) as _A_FTP_CNT_5
		,TRY_TO_NUMBER(a._a_ftp_cnt_6, 38, 2) as _A_FTP_CNT_6
		,TRY_TO_NUMBER(a._a_ftp_cnt_7, 38, 2) as _A_FTP_CNT_7
		,TRY_TO_NUMBER(a._a_ftp_sum_1, 38, 2) as _A_FTP_SUM_1
		,TRY_TO_NUMBER(a._a_ftp_sum_2, 38, 2) as _A_FTP_SUM_2
		,TRY_TO_NUMBER(a._a_ftp_sum_3, 38, 2) as _A_FTP_SUM_3
		,TRY_TO_NUMBER(a._a_ftp_sum_4, 38, 2) as _A_FTP_SUM_4
		,TRY_TO_NUMBER(a._a_ftp_sum_5, 38, 2) as _A_FTP_SUM_5
		,TRY_TO_NUMBER(a._a_ftp_sum_6, 38, 2) as _A_FTP_SUM_6
		,TRY_TO_NUMBER(a._a_ftp_sum_7, 38, 2) as _A_FTP_SUM_7
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_2, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_2
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_3, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_3
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_4, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_4
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_5, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_5
		,TRY_TO_NUMBER(a._a_cust_npp_out_sum_aaa_6, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_6
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_NEW_CAPP_REGO_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_CSE_CHG_DWL_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_CIF_ESTABLISH_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00') as _A_NB_LASTLOGON_DT_1
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00') as _A_CURR_CAPP_DEVICE_DT
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_1, 38, 2) as _A_NB_LOGONS_CNT_1
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_2, 38, 2) as _A_NB_LOGONS_CNT_2
		,TRY_TO_NUMBER(a._a_nb_logons_cnt_3, 38, 2) as _A_NB_LOGONS_CNT_3
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_1, 38, 2) as _A_CAPP_LOGON_CNT_1
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_2, 38, 2) as _A_CAPP_LOGON_CNT_2
		,TRY_TO_NUMBER(a._a_capp_logon_cnt_3, 38, 2) as _A_CAPP_LOGON_CNT_3
		
		-- Customer-Recipient Relationship Level UVs
		,TRY_TO_NUMBER(a._x_cif_recipient_new_sum, 38, 2) + TRY_TO_NUMBER(a.tgx_tran_amt, 38, 2) as _X_CIF_RECIPIENT_NEW_SUM
		,case   when a._x_cif_recipient_new_date = '0' then TO_TIMESTAMP(a.tts_tran_date_alt || ' ' || a.tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF')
                else TIMESTAMPADD(second, TRY_TO_NUMBER(a._x_cif_recipient_new_date, 38, 2), '1960-01-01 00:00:00'::timestamp)
		end as _X_CIF_RECIPIENT_NEW_DATE
		,case   when a._x_cif_recipient_new_cnt = '0' then 1
                else TRY_TO_NUMBER(a._x_cif_recipient_new_cnt, 38, 2) + 1
		end as _X_CIF_RECIPIENT_NEW_CNT
		
		-- Telstra Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_TELSTRA_LONG_CALL
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._x_telstra_last_call_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _X_TELSTRA_LAST_CALL_DT
		,TRY_TO_NUMBER(a._x_telstra_last_call_dur, 38, 2) as _X_TELSTRA_LAST_CALL_DUR
		,TRY_TO_NUMBER(a._x_telstra_max_call_dur, 38, 2) as _X_TELSTRA_MAX_CALL_DUR
        ,a._a_telstra_active_call
        ,a._a_telstra_num_type    
        ,a._a_telstra_num_wl 
        ,a._a_telstra_tp_num_sp
        ,a._a_telstra_tp_num_prefix_type 
        ,a._a_telstra_tp_outbnd_count          
        ,a._a_telstra_tp_outbnd_avg_dur 
        ,a._a_telstra_multi_calls   
		
		-- Crypto UVs
		,TRY_TO_NUMBER(a._a_crypto_mnthly_sum, 38, 2) as _A_CRYPTO_MNTHLY_SUM
		,DATEADD(day, TRY_TO_NUMBER(a._a_crypto_last_pymnt_date, 38, 2), '1960-01-01') as _A_CRYPTO_LAST_PYMNT_DATE
		
		-- M100 Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP1_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP2_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP3_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP4_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP5_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp6_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP6_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP7_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP10_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp11_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP11_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp12_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP12_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp13_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP13_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP20_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_SCAMP21_MLW_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _N_M100_P8_IND_DT
		
		-- M100 App Indicators
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_M100_APP_P1_IND_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00') as _N_M100_APP_P5_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) as _A_M100_APP_P8_IND_DT
		,TIMESTAMPADD(second, TRY_TO_NUMBER(a._n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00') as _N_M100_APP_P9_DT
 		
		-- CIF Profiling UVs
		,a._l_fingerprint_1
		,a._l_fingerprint_2
		,a._l_fingerprint_3
		,a._l_fingerprint_4
        ,a._a_capp_rego_ip_city
,a._a_aus_ip_address
,a._a_capp_rego_ip_address
,a._a_foreign_ip_address
,a._a_foreign_ip_cntry_code
,a._a_hrisk_foreign_ip_address
,a._a_hrisk_foreign_ip_cntry_code
,a._a_interstate_ip_address
,a._a_mrisk_foreign_ip_address
,a._a_scam_foreign_ip_address
,a._a_capp_rego_ip_postcode
,a._a_foreign_ip_task_id
,a._a_hrisk_foreign_ip_task_id
,a._a_interstate_ip_task_id
,a._a_logon_198_ip_pc
,a._a_scam_foreign_ip_cntry_code
,a._a_scam_foreign_ip_task_id
,a._a_aus_ip_activity
,a._a_bond_foreign_ip_ini_dt
,a._a_capp_rego_ip_country
,a._a_clci_foreign_ip_ini_dt
,a._a_clcw_ip_ini_dt
,a._a_clcw_ip_rego_dt
,a._a_dom_ip_switch_cnt_dt
,a._a_mrisk_foreign_ip_activity
,a._a_cust_state_ip_activity
,a._a_cust_state_ip_address
,a._a_foreign_ip_activity
,a._a_hr_logon_nb_ip_cntry
,a._a_hr_logon_nb_ip_pc
,a._a_hrisk_foreign_ip_activity
,a._a_interstate_ip_activity
,a._a_interstate_ip_state
,a._a_is_ip_1
,a._a_is_ip_2
,a._a_is_ip_3
,a._a_is_ip_dt_1
,a._a_is_ip_dt_2
,a._a_is_ip_dt_3
,a._a_vpn_vps_ip_initial_hce_dt
,a._a_vpn_vps_ip_latest_hce_dt
,a._a_vpn_vps_ip_latest_logon_dt
,a._a_logon_198_ip_cntry
,a._a_logon_nb_ip_cntry
,a._a_logon_nb_ip_pc
,a._a_mrisk_foreign_ip_cntry_code
,a._a_mrisk_foreign_ip_task_id
,a._a_scam_foreign_ip_activity
,a._a_vpn_vps_ip_day_hce_count
,a._a_vpn_vps_ip_initial_logon_dt
,a._a_vpn_vps_ip_day_logon_count
,a._a_vpn_vps_ip_hce_count
,a._a_vpn_vps_ip_logon_count
,a._n_aus_ip_activity
,a._n_aus_ip_address
,a._n_cc_app_suspicious_ip_dt
,a._n_cust_state_ip_activity
,a._n_cust_state_ip_address
,a._n_foreign_ip_activity
,a._n_foreign_ip_address
,a._n_foreign_ip_cntry_code
,a._n_foreign_ip_task_id
,a._n_hrisk_foreign_ip_activity
,a._n_hrisk_foreign_ip_address
,a._n_hrisk_foreign_ip_cntry_code
,a._n_hrisk_foreign_ip_task_id
,a._n_interstate_ip_activity
,a._n_interstate_ip_address
,a._n_interstate_ip_state
,a._n_interstate_ip_task_id
,a._n_nb_os_ip_dt
,a._n_new_ip_logon_cntry
,a._n_new_ip_logon_dt
,a._n_new_ip_logon_ip
,a._n_new_ip_logon_pcode
,a._n_os_ip_v2_dt
,a._n_rp_ses_ip_1
,a._n_rp_ses_ip_2
,a._n_total_asn_ip_stored
,a._l_ip_age
,a._l_ip_city
,a._l_ip_cntry_code
,a._l_ip_geo_ip
,a._l_ip_geo_lat
,a._l_ip_geo_long
,a._l_ip_geo_state
,a._l_ip_mismatch_anomaly
,a._l_sim_ip_cntry_mismatch
,a._a_curr_cust_lat_long_dt
,a._a_curr_cust_latitude
,a._a_dtl_uibdelete_msg_latest
,a._a_prev_cust_lat_long_dt
,a._a_safe_cust_lat_long_dt
,a._a_vpn_vps_ip_latest_hce_dt
,a._a_vpn_vps_ip_latest_logon_dt
,a._a_curr_capp_device_latt
,a._a_devcie_geo_lat_avg_excl
,a._a_devcie_geo_lat_avg_incl
,a._a_prev_capp_device_latt
,a._a_prev_cust_latitude
,a._a_prof_capp_device_lat_z_1
,a._a_prof_capp_device_lat_z_2
,a._a_prof_capp_device_lat_z_3
,a._a_prof_capp_device_lat_z_4
,a._a_prof_capp_device_lat_z_5
,a._a_prof_capp_device_latt_1
,a._a_prof_capp_device_latt_2
,a._a_prof_capp_device_latt_3
,a._a_prof_capp_device_latt_4
,a._a_prof_capp_device_latt_5
,a._a_safe_cust_latitude
,a._n_cloud_serv_latest_logon_dt
,a._n_lat
,a._l_ip_geo_lat
,a._l_platform
,a._l_flat_phone,
a._n_crypto_recipient_sum,
a._b_recip_sum_aaa_short,
a._a_listing_safelist_open_flag,
a._x_npp_out_sum_1,
a._b_rfm_whitelist_ind,
a._n_cust_txn_count,
a._b_recip_sum_aaa_2,
a._a_p_l_c,
a._n_crypto_recipient_cnt,
a._b_npp_blacklist_recip_flag,
a._b_recip_sum_aaa_long,
a._n_open_ftp_sum_1,
a._x_t_1,
a._x_t_5,
a._x_t_2,
a._a_npp_out_all_ftp_ind,
a._a_curr_capp_device_nftp_cnt,
a._b_recip_sum_aaa_7,
a._x_last_n_txn_count,
a._b_recip_sum_1,
a._b_client_postcode_sum_2,
a._x_npp_out_sum_date,
a._a_client_city_6,
a._a_prof_capp_device_nftp_1,
a._n_open_ftp_cnt_7d,
a._b_client_postcode_cnt_2,
a._b_client_postcode_cnt_3,
a._b_client_postcode_sum_3,
a._b_recip_sum_aaa_6,
a._a_cust_npp_in_sum_aaa_1,
a._b_npp_out_sum_1,
a._b_npp_out_ftp_sum_1,
a._a_client_country_cnt_7,
a._a_cif_establish_cust_pcode,
a._b_recip_sum_aaa_5,
a._a_list_rl1_scam_cust_cif,
a._a_sch_amt,
a._a_prof_capp_device_cnt_4,
a._a_agg_stage_flag,
a._b_client_postcode_cnt_1,
a._a_ca_op_sum_fn_6,
a._b_recip_sum_aaa_4,
a._a_all_bpay_acct_cnt_2,
a._b_npp_out_ftp_cnt_2,
a._a_prof_capp_device_cnt_5,
a._a_multi_cnt,
a._a_capp_rego_1d_ind,
a._a_cust_npp_in_sum_aaa_2,
a._b_npp_out_cnt_1,
a._b_npp_out_cnt_2,
a._b_npp_blacklist_sender_flag,
a._n_open_ftp_cnt_1,
a._a_sms_netcode_1,
a._n_open_ftp_cnt_2,
a._a_npp_out_ofi_bsb_ind,
a._a_nb_retrieve_details_cnt_1,
a._a_sch_cnt,
a._a_npp_out_cnt_1,
a._n_rp_nb_logon_cnt,
a._a_npp_out_ofi_payid_ind,
a._a_npp_out_cnt_2,

from        lcl.fdp_customer_transactions_send_flat a
--left join  prd_p01_dmn_fraumd.labmlfrd.dtl_fraudmaster b
--on          a.dtl_ex_0_20s_001 = b.rua_20byte_string_001
--and b.fraudtype in ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS','BEC')
where   mid_event_ts >= '20250601'
AND     mid_event_ts <  '20250701'
and     a.dtl_ex_1_5s_01 in ('C205N'
							,'C207N'
							,'C242N'
							,'C244N'
							,'C246N'
							,'N205N'
							,'N207N'
							,'N242N'
							,'N244N'
							,'N246N'
							,'X232N'
							,'X243N'
							,'X246N')
and     a.hdr_source = 'NPP OUT'
and     tran_amt > 0
--and b.fraudtype in ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS','BEC') OR b.fraudtype IS NULL;
--and COALESCE(b.fraudtype, 'NULL') IN ('ITS', 'RSS', 'JIS', 'JSM', 'ISM', 'BSS', 'UMS', 'TPS', 'BEC', 'PHS', 'NULL');
order by transactiondatetime    --RANDOM()--transactiondatetime;
limit 1000000
",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,2679840,2679.84,44.664,0.7444,4X-LARGE,128,95.2832
01beefcf-3204-c93a-0000-c71d2d1d3b32,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250905163819_scored_1 as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO1('modelname=pipeline_it3_F2_xval_2day_all_20250905163819.mojo', 
array_construct(
TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N3D_1D_SUM_1, _C_CC_HIGH_VEL_APPLE_SUM_1, _C_CC_GBL_N3D_1D_CNT_1, _C_CC_CNP_VEL_6HR_SUM_1, _C_CRD_APAY_SUM_1, _C_CRD_SAFE_MERCHANT, _C_CC_CNP_LTRANS_6HR_COUNT_1, _C_CC_CNP_VEL_6HR_COUNT_1, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_10, _A_NPP_FTP_SUM, _L_PASTE_IN_LOGIN_CNT, _A_CUST_SUM_AAA_LONG, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _L_SCORE_4, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _A_CRD_SCAM_SUPP_7D_SUM_1, _A_CLIENT_CITY_CNT_2, _L_UID_AGE, _L_SCRN_W, _L_ASN_AGE, _L_SCORE_2, _A_CUST_NPP_OUT_SUM_AAA_5, _L_BC_SESS_CNT, _L_ACC_AMT_1H, _A_CC_CASH_ADVANCE_AMT, _A_CUST_SUM_AAA_SHORT, _A_P_L_1, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_7D, _A_CLIENT_COUNTRY_CNT_7, _A_CAPP_HCE_CNT_1, _L_SCORE_5, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _L_MAX_30D_SCORE, _L_M_L_1, _L_SCRN_H, _A_CUST_ACTION_IND, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_AND_ID_AGE, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _L_NC_ACCT_NUM_NAME_CONF, _A_CLIENT_COUNTRY_CNT_5, _A_U, _L_SCM_RSK_SCR_2, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_3, _L_DAYS_LST_DEV_IOS, _A_T, _A_CUST_NPP_IN_SUM_AAA_2, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_2, _A_CLIENT_COUNTRY_CNT_6, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_R, _L_CNTRY_AGE, _L_ACC_AMT_1D, _A_TRANSPORT_REG_CNT_1, _A_MULTI_CNT, _L_M_L_4, _A_PROF_CAPP_DEVICE_NFTP_1, _A_PROF_CAPP_DEVICE_CNT_5, _A_PROF_CAPP_DEVICE_CNT_4, _L_SESS_CNT_WEB, _L_M_L_C, _L_TIME_ZONE, _L_IP_AGE, _A_NPP_INBOUND_SUM_AMT, _A_NB_LOGONS_CNT_2, _A_CLC_FTP_AMT, _L_TRVL_SPD, _A_CRYPTO_MNTHLY_SUM, _A_GL_TRF_ACC_BAL, _L_SESS_CNT_MOB_BROWSER, _L_SCORE_3, _A_CRD_CRYPTO_PROC_FLG, _A_NPP_OUT_CNT_2, _A_SCH_AMT, _A_P_L_3, _L_SDID_CNT_1, _A_CUST_NPP_OUT_SUM_AAA_LONG, _A_LIST_RL1_SCAM_CUST_CIF, _A_VPN_VPS_IP_LOGON_COUNT, _A_GEO_DISTANCE, _A_NB_LOGONS_CNT_3, _L_DAYS_LST_DEV_JS, _A_FTP_SUM_1, _L_NUM_SESS_4H, _L_NC_MATCH_NAME_CONF, _A_SCAM_RISKY_MCC_PRELEAD_AMT, _L_M_L_3, _A_CIF_ESTABLISH_CHANNEL, _A_CUST_OS_VER, _A_CUST_OS_NAME, _A_CLIENT_CITY_10, _L_PUSH_API_1, _L_PUSH_API_2, _L_PUSH_API_3, _L_PUSH_API_4, _A_CLIENT_CITY_6, _L_NC_WINNING_ALG, _L_PROXY_TYPE, _L_LANG_3, _L_LANG_1, _L_LANG_2, _A_PROF_RISK_IND, _A_LATEST_NCRG_ISP, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_EX_3_80S_002, _A_MRISK_FOREIGN_IP_CNTRY_CODE, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, _A_CIF_ESTABLISH_CUST_PCODE, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, GENDER, DMC_CNT, YCS_CNT, TRAN_CNT, DPST_CNT, CC_CNT, TRD_CNT, PL_CNT, MORT_CNT, INSRNC_CNT, BTA_CNT, REL_MNG, FA_1, NO_1, FP, GOVT_BENE, HL_ASOC, CORP_EMPL, INTL_STU, MAR_STS_ORG_STR, EMPL_CLAS_LGL_STS, HOME_OWN, _X_NPP_OUT_SUM_DATE_DIFF, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF, _A_SCAMP1_MLW_DT_DIFF, _A_SCAMP2_MLW_DT_DIFF, _A_SCAMP5_MLW_DT_DIFF, _A_SCAMP7_MLW_DT_DIFF, _L_PUSH_API_DT_1_DIFF, _L_PUSH_API_DT_2_DIFF, _L_PUSH_API_DT_3_DIFF, _L_PUSH_API_DT_4_DIFF, CUS_SUM_TRAN_CNT_Q, CUS_SUM_UPST_APRD_TRAN_CNT_Q, CUS_SUM_TRAN_SUM_N, CUS_SUM_UPST_DCLN_TRAN_CNT_Q, CUS_SUM_RULE_DCLN_TRAN_CNT_Q, CUS_SUM_UPST_APRD_TRAN_SUM_N, CUS_SUM_FINL_APRD_TRAN_SUM_N, CUS_SUM_FDP_RULE_TRIG_CNT_Q, CUS_SUM_DOMS_TRAN_CNT_Q, CUS_SUM_OSEA_TRAN_CNT_Q, CUS_SUM_DOMS_TRAN_SUM_N, CUS_SUM_OSEA_TRAN_SUM_N, CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N, CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CUS_SUM_CARD_PRES_TRAN_CNT_Q, CUS_SUM_PAY_PASS_TRAN_CNT_Q, CUS_SUM_CARD_PRES_TRAN_SUM_N, CUS_SUM_CHIP_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_SUM_N, CUS_SUM_CAPP_LOGN_CNT_Q, CUS_SUM_NTB_LOGN_CNT_Q, CUS_SUM_VIEW_CARD_DETL_CNT_Q, CUS_MAX_C_2WAY_CRD_RULE_FLAG, CRD_SUM_TRAN_CNT_Q, CRD_SUM_UPST_APRD_TRAN_CNT_Q, CRD_SUM_UPST_DCLN_TRAN_CNT_Q, CRD_SUM_RULE_DCLN_TRAN_CNT_Q, CRD_SUM_FINL_APRD_TRAN_CNT_Q, CRD_SUM_TRAN_SUM_N, CRD_SUM_UPST_APRD_TRAN_SUM_N, CRD_SUM_UPST_DCLN_TRAN_SUM_N, CRD_SUM_RULE_DCLN_TRAN_SUM_N, CRD_SUM_FINL_APRD_TRAN_SUM_N, CRD_SUM_INCO_CVVA_SUM_N, CRD_SUM_FDP_RULE_TRIG_CNT_Q, CRD_SUM_DOMS_TRAN_CNT_Q, CRD_SUM_OSEA_TRAN_CNT_Q, CRD_SUM_DOMS_TRAN_SUM_N, CRD_SUM_OSEA_TRAN_SUM_N, CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N, CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CRD_SUM_CARD_PRES_TRAN_CNT_Q, CRD_SUM_PAY_PASS_TRAN_CNT_Q, CRD_SUM_CARD_PRES_TRAN_SUM_N, CRD_SUM_CHIP_TRAN_SUM_N, CRD_SUM_PAY_PASS_TRAN_SUM_N, CRD_SUM_CAPP_LOGN_CNT_Q, CRD_SUM_VIEW_CARD_DETL_CNT_Q, CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F, CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F, CMA_SUM_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_CNT_Q, CMA_SUM_TRAN_SUM_N, CMA_SUM_UPST_DCLN_TRAN_CNT_Q, CMA_SUM_RULE_DCLN_TRAN_CNT_Q, CMA_SUM_FINL_APRD_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_SUM_N, CMA_SUM_FINL_APRD_TRAN_SUM_N, CMA_SUM_FDP_RULE_TRIG_CNT_Q, CMA_SUM_DOMS_TRAN_CNT_Q, CMA_SUM_OSEA_TRAN_CNT_Q, CMA_SUM_DOMS_TRAN_SUM_N, CMA_SUM_OSEA_TRAN_SUM_N, CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_CNT_Q, CMA_SUM_CARD_PRES_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_SUM_N, CMC_SUM_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_CNT_Q, CMC_SUM_TRAN_SUM_N, CMC_SUM_RULE_DCLN_TRAN_CNT_Q, CMC_SUM_FINL_APRD_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_SUM_N, CMC_SUM_FDP_RULE_TRIG_CNT_Q, CMC_SUM_DOMS_TRAN_CNT_Q, CMC_SUM_OSEA_TRAN_CNT_Q, CMC_SUM_DOMS_TRAN_SUM_N, CMC_SUM_OSEA_TRAN_SUM_N, CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMC_SUM_CARD_PRES_TRAN_CNT_Q, CMC_SUM_PAY_PASS_TRAN_CNT_Q, CMC_SUM_CARD_PRES_TRAN_SUM_N, CMC_SUM_PAY_PASS_TRAN_SUM_N, MAQ_SUM_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_CNT_Q, MAQ_SUM_TRAN_SUM_N, MAQ_SUM_UPST_DCLN_TRAN_CNT_Q, MAQ_SUM_RULE_DCLN_TRAN_CNT_Q, MAQ_SUM_FINL_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_SUM_N, MAQ_SUM_FINL_APRD_TRAN_SUM_N, MAQ_SUM_FDP_RULE_TRIG_CNT_Q, MAQ_SUM_DOMS_TRAN_CNT_Q, MAQ_SUM_OSEA_TRAN_CNT_Q, MAQ_SUM_DOMS_TRAN_SUM_N, MAQ_SUM_OSEA_TRAN_SUM_N, MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N, MAQ_SUM_CARD_PRES_TRAN_CNT_Q, MAQ_SUM_PAY_PASS_TRAN_CNT_Q, MAQ_SUM_CARD_PRES_TRAN_SUM_N, MAQ_SUM_PAY_PASS_TRAN_SUM_N)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG2D_OOT
where to_date(transactiondatetime) > '2025-06-07'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,10561528,10561.528,176.025467,2.933758,2X-LARGE,32,93.880256
01bdc49b-3204-a42b-0000-c71d242e2466,"call MLOP_SP_MODL_RUNR(to_date('2025-07-18','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2637909,2637.909,43.96515,0.732753,4X-LARGE,128,93.792384
01bdf73b-3204-aa23-0000-c71d25a008e2,"call MLOP_SP_MODL_RUNR(to_date('2025-07-27','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2635042,2635.042,43.917367,0.731956,4X-LARGE,128,93.690368
01bdd62a-3204-a615-0000-c71d24af85de,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,2634421,2634.421,43.907017,0.731784,4X-LARGE,128,93.668352
01bdd62a-3204-a615-0000-c71d24af85ea,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,2632735,2632.735,43.878917,0.731315,4X-LARGE,128,93.60832
01bdfcdc-3204-ac07-0000-c71d25c68f6e,"call MLOP_SP_MODL_RUNR(to_date('2025-07-28','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2626320,2626.32,43.772,0.729533,4X-LARGE,128,93.380224
01be027c-3204-aa20-0000-c71d25f082ca,"call MLOP_SP_MODL_RUNR(to_date('2025-07-29','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2622870,2622.87,43.7145,0.728575,4X-LARGE,128,93.2576
01be5fdf-3204-b944-0000-c71d28a781fe,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,2612161,2612.161,43.536017,0.7256,4X-LARGE,128,92.8768
01bdd57c-3204-a61b-0000-c71d24ab300e,"call MLOP_SP_MODL_RUNR(to_date('2025-07-21','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2609285,2609.285,43.488083,0.724801,4X-LARGE,128,92.774528
01be1e9b-3204-aff0-0000-c71d26bdfbfa,"call MLOP_SP_MODL_RUNR(to_date('2025-08-03','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2605404,2605.404,43.4234,0.723723,4X-LARGE,128,92.636544
01bdbefc-3204-a42b-0000-c71d24026eee,"call MLOP_SP_MODL_RUNR(to_date('2025-07-17','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2593668,2593.668,43.2278,0.720463,4X-LARGE,128,92.219264
01be7bbf-3204-bc98-0000-c71d298e5182,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,2589787,2589.787,43.163117,0.719385,4X-LARGE,128,92.08128
01beefce-3204-c939-0000-c71d2d1d48aa,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250905163819_scored_0 as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO1('modelname=pipeline_it3_F2_xval_2day_all_20250905163819.mojo', 
array_construct(
TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N3D_1D_SUM_1, _C_CC_HIGH_VEL_APPLE_SUM_1, _C_CC_GBL_N3D_1D_CNT_1, _C_CC_CNP_VEL_6HR_SUM_1, _C_CRD_APAY_SUM_1, _C_CRD_SAFE_MERCHANT, _C_CC_CNP_LTRANS_6HR_COUNT_1, _C_CC_CNP_VEL_6HR_COUNT_1, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_10, _A_NPP_FTP_SUM, _L_PASTE_IN_LOGIN_CNT, _A_CUST_SUM_AAA_LONG, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _L_SCORE_4, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _A_CRD_SCAM_SUPP_7D_SUM_1, _A_CLIENT_CITY_CNT_2, _L_UID_AGE, _L_SCRN_W, _L_ASN_AGE, _L_SCORE_2, _A_CUST_NPP_OUT_SUM_AAA_5, _L_BC_SESS_CNT, _L_ACC_AMT_1H, _A_CC_CASH_ADVANCE_AMT, _A_CUST_SUM_AAA_SHORT, _A_P_L_1, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_7D, _A_CLIENT_COUNTRY_CNT_7, _A_CAPP_HCE_CNT_1, _L_SCORE_5, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _L_MAX_30D_SCORE, _L_M_L_1, _L_SCRN_H, _A_CUST_ACTION_IND, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_AND_ID_AGE, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _L_NC_ACCT_NUM_NAME_CONF, _A_CLIENT_COUNTRY_CNT_5, _A_U, _L_SCM_RSK_SCR_2, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_3, _L_DAYS_LST_DEV_IOS, _A_T, _A_CUST_NPP_IN_SUM_AAA_2, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_2, _A_CLIENT_COUNTRY_CNT_6, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_R, _L_CNTRY_AGE, _L_ACC_AMT_1D, _A_TRANSPORT_REG_CNT_1, _A_MULTI_CNT, _L_M_L_4, _A_PROF_CAPP_DEVICE_NFTP_1, _A_PROF_CAPP_DEVICE_CNT_5, _A_PROF_CAPP_DEVICE_CNT_4, _L_SESS_CNT_WEB, _L_M_L_C, _L_TIME_ZONE, _L_IP_AGE, _A_NPP_INBOUND_SUM_AMT, _A_NB_LOGONS_CNT_2, _A_CLC_FTP_AMT, _L_TRVL_SPD, _A_CRYPTO_MNTHLY_SUM, _A_GL_TRF_ACC_BAL, _L_SESS_CNT_MOB_BROWSER, _L_SCORE_3, _A_CRD_CRYPTO_PROC_FLG, _A_NPP_OUT_CNT_2, _A_SCH_AMT, _A_P_L_3, _L_SDID_CNT_1, _A_CUST_NPP_OUT_SUM_AAA_LONG, _A_LIST_RL1_SCAM_CUST_CIF, _A_VPN_VPS_IP_LOGON_COUNT, _A_GEO_DISTANCE, _A_NB_LOGONS_CNT_3, _L_DAYS_LST_DEV_JS, _A_FTP_SUM_1, _L_NUM_SESS_4H, _L_NC_MATCH_NAME_CONF, _A_SCAM_RISKY_MCC_PRELEAD_AMT, _L_M_L_3, _A_CIF_ESTABLISH_CHANNEL, _A_CUST_OS_VER, _A_CUST_OS_NAME, _A_CLIENT_CITY_10, _L_PUSH_API_1, _L_PUSH_API_2, _L_PUSH_API_3, _L_PUSH_API_4, _A_CLIENT_CITY_6, _L_NC_WINNING_ALG, _L_PROXY_TYPE, _L_LANG_3, _L_LANG_1, _L_LANG_2, _A_PROF_RISK_IND, _A_LATEST_NCRG_ISP, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_EX_3_80S_002, _A_MRISK_FOREIGN_IP_CNTRY_CODE, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, _A_CIF_ESTABLISH_CUST_PCODE, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, GENDER, DMC_CNT, YCS_CNT, TRAN_CNT, DPST_CNT, CC_CNT, TRD_CNT, PL_CNT, MORT_CNT, INSRNC_CNT, BTA_CNT, REL_MNG, FA_1, NO_1, FP, GOVT_BENE, HL_ASOC, CORP_EMPL, INTL_STU, MAR_STS_ORG_STR, EMPL_CLAS_LGL_STS, HOME_OWN, _X_NPP_OUT_SUM_DATE_DIFF, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF, _A_SCAMP1_MLW_DT_DIFF, _A_SCAMP2_MLW_DT_DIFF, _A_SCAMP5_MLW_DT_DIFF, _A_SCAMP7_MLW_DT_DIFF, _L_PUSH_API_DT_1_DIFF, _L_PUSH_API_DT_2_DIFF, _L_PUSH_API_DT_3_DIFF, _L_PUSH_API_DT_4_DIFF, CUS_SUM_TRAN_CNT_Q, CUS_SUM_UPST_APRD_TRAN_CNT_Q, CUS_SUM_TRAN_SUM_N, CUS_SUM_UPST_DCLN_TRAN_CNT_Q, CUS_SUM_RULE_DCLN_TRAN_CNT_Q, CUS_SUM_UPST_APRD_TRAN_SUM_N, CUS_SUM_FINL_APRD_TRAN_SUM_N, CUS_SUM_FDP_RULE_TRIG_CNT_Q, CUS_SUM_DOMS_TRAN_CNT_Q, CUS_SUM_OSEA_TRAN_CNT_Q, CUS_SUM_DOMS_TRAN_SUM_N, CUS_SUM_OSEA_TRAN_SUM_N, CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N, CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CUS_SUM_CARD_PRES_TRAN_CNT_Q, CUS_SUM_PAY_PASS_TRAN_CNT_Q, CUS_SUM_CARD_PRES_TRAN_SUM_N, CUS_SUM_CHIP_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_SUM_N, CUS_SUM_CAPP_LOGN_CNT_Q, CUS_SUM_NTB_LOGN_CNT_Q, CUS_SUM_VIEW_CARD_DETL_CNT_Q, CUS_MAX_C_2WAY_CRD_RULE_FLAG, CRD_SUM_TRAN_CNT_Q, CRD_SUM_UPST_APRD_TRAN_CNT_Q, CRD_SUM_UPST_DCLN_TRAN_CNT_Q, CRD_SUM_RULE_DCLN_TRAN_CNT_Q, CRD_SUM_FINL_APRD_TRAN_CNT_Q, CRD_SUM_TRAN_SUM_N, CRD_SUM_UPST_APRD_TRAN_SUM_N, CRD_SUM_UPST_DCLN_TRAN_SUM_N, CRD_SUM_RULE_DCLN_TRAN_SUM_N, CRD_SUM_FINL_APRD_TRAN_SUM_N, CRD_SUM_INCO_CVVA_SUM_N, CRD_SUM_FDP_RULE_TRIG_CNT_Q, CRD_SUM_DOMS_TRAN_CNT_Q, CRD_SUM_OSEA_TRAN_CNT_Q, CRD_SUM_DOMS_TRAN_SUM_N, CRD_SUM_OSEA_TRAN_SUM_N, CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N, CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CRD_SUM_CARD_PRES_TRAN_CNT_Q, CRD_SUM_PAY_PASS_TRAN_CNT_Q, CRD_SUM_CARD_PRES_TRAN_SUM_N, CRD_SUM_CHIP_TRAN_SUM_N, CRD_SUM_PAY_PASS_TRAN_SUM_N, CRD_SUM_CAPP_LOGN_CNT_Q, CRD_SUM_VIEW_CARD_DETL_CNT_Q, CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F, CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F, CMA_SUM_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_CNT_Q, CMA_SUM_TRAN_SUM_N, CMA_SUM_UPST_DCLN_TRAN_CNT_Q, CMA_SUM_RULE_DCLN_TRAN_CNT_Q, CMA_SUM_FINL_APRD_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_SUM_N, CMA_SUM_FINL_APRD_TRAN_SUM_N, CMA_SUM_FDP_RULE_TRIG_CNT_Q, CMA_SUM_DOMS_TRAN_CNT_Q, CMA_SUM_OSEA_TRAN_CNT_Q, CMA_SUM_DOMS_TRAN_SUM_N, CMA_SUM_OSEA_TRAN_SUM_N, CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_CNT_Q, CMA_SUM_CARD_PRES_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_SUM_N, CMC_SUM_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_CNT_Q, CMC_SUM_TRAN_SUM_N, CMC_SUM_RULE_DCLN_TRAN_CNT_Q, CMC_SUM_FINL_APRD_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_SUM_N, CMC_SUM_FDP_RULE_TRIG_CNT_Q, CMC_SUM_DOMS_TRAN_CNT_Q, CMC_SUM_OSEA_TRAN_CNT_Q, CMC_SUM_DOMS_TRAN_SUM_N, CMC_SUM_OSEA_TRAN_SUM_N, CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMC_SUM_CARD_PRES_TRAN_CNT_Q, CMC_SUM_PAY_PASS_TRAN_CNT_Q, CMC_SUM_CARD_PRES_TRAN_SUM_N, CMC_SUM_PAY_PASS_TRAN_SUM_N, MAQ_SUM_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_CNT_Q, MAQ_SUM_TRAN_SUM_N, MAQ_SUM_UPST_DCLN_TRAN_CNT_Q, MAQ_SUM_RULE_DCLN_TRAN_CNT_Q, MAQ_SUM_FINL_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_SUM_N, MAQ_SUM_FINL_APRD_TRAN_SUM_N, MAQ_SUM_FDP_RULE_TRIG_CNT_Q, MAQ_SUM_DOMS_TRAN_CNT_Q, MAQ_SUM_OSEA_TRAN_CNT_Q, MAQ_SUM_DOMS_TRAN_SUM_N, MAQ_SUM_OSEA_TRAN_SUM_N, MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N, MAQ_SUM_CARD_PRES_TRAN_CNT_Q, MAQ_SUM_PAY_PASS_TRAN_CNT_Q, MAQ_SUM_CARD_PRES_TRAN_SUM_N, MAQ_SUM_PAY_PASS_TRAN_SUM_N)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG2D_OOT
where to_date(transactiondatetime) <= '2025-06-07'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,10330236,10330.236,172.1706,2.86951,2X-LARGE,32,91.82432
01bdf758-3204-aa23-0000-c71d25a1e1ee,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2571357,2571.357,42.85595,0.714266,4X-LARGE,128,91.426048
01be45fc-3204-b364-0000-c71d27d4913e,"call MLOP_SP_MODL_RUNR(to_date('2025-08-10','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2558779,2558.779,42.646317,0.710772,4X-LARGE,128,90.978816
01be18fc-3204-afeb-0000-c71d26984a62,"call MLOP_SP_MODL_RUNR(to_date('2025-08-02','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2526339,2526.339,42.10565,0.701761,4X-LARGE,128,89.825408
01be8a32-3204-bee3-0000-c71d2a00252e,"SELECT DISTINCT
TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME
,(dtl_ex_0_n_064 || dtl_ex_0_n_065 || dtl_ex_0_n_066) as TRAN_ID
,TO_DATE(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') as SSX_SNAP_D
        ,CONCAT(TGX_BANK_NUM,'~',TGX_BRANCH_ID,'~',TGX_ACCT_NUM) AS RCPI_ACCT_I
        ,CONCAT('SAP~PT~+', LPAD(SSX_CUST_NUM, 10, 0)) as SSX_PATY_IDNN_BK
        ,TO_DATE(SUBSTR(TTS_TRAN_DATE_ALT, 1, 8), 'YYYYMMDD') AS tran_d
,dtl_ex_0_20s_001
,SSX_CUST_NUM
,COALESCE(TRY_TO_NUMBER(tgx_tran_amt, 38, 2), -1) as TRAN_AMT
,COALESCE(TRY_TO_NUMBER(_l_max_30d_score, 38, 2), -1) as _L_MAX_30D_SCORE
,COALESCE(TRY_TO_NUMBER(_l_bc_score, 38, 2), -1) as _L_BC_SCORE
,COALESCE(TRY_TO_NUMBER(_l_max_30d_mule_score, 38, 2), -1) as _L_MAX_30D_MULE_SCORE

,COALESCE(TRY_TO_NUMBER(_l_adv_key_combo, 38, 2), -1) as _L_ADV_KEY_COMBO
,COALESCE(TRY_TO_NUMBER(_l_clpbrd_evnt, 38, 2), -1) as _L_CLPBRD_EVNT
,COALESCE(TRY_TO_NUMBER(_l_concurrent_sess, 38, 2), -1) as _L_CONCURRENT_SESS
,COALESCE(TRY_TO_NUMBER(_l_export_data, 38, 2), -1) as _L_EXPORT_DATA
,COALESCE(TRY_TO_NUMBER(_l_import_data, 38, 2), -1) as _L_IMPORT_DATA
,COALESCE(TRY_TO_NUMBER(_l_rat_in_sess, 38, 2), -1) as _L_RAT_IN_SESS
,COALESCE(TRY_TO_NUMBER(_l_is_rcnt_hrisk_sess, 38, 2), -1) as _L_IS_RCNT_HRISK_SESS
,COALESCE(TRY_TO_NUMBER(_l_scrn_broadcast, 38, 2), -1) as _L_SCRN_BROADCAST
,COALESCE(TRY_TO_NUMBER(_l_delay_to_input_pi, 38, 2), -1) as _L_DELAY_TO_INPUT_PI
,COALESCE(TRY_TO_NUMBER(_l_active_spoofing, 38, 2), -1) as _L_ACTIVE_SPOOFING
,COALESCE(TRY_TO_NUMBER(_l_pmt_vloc_anom, 38, 2), -1) as _L_PMT_VLOC_ANOM
,COALESCE(TRY_TO_NUMBER(_l_accum_amt_anom, 38, 2), -1) as _L_ACCUM_AMT_ANOM
,COALESCE(TRY_TO_NUMBER(_l_is_long_sess, 38, 2), -1) as _L_IS_LONG_SESS
,COALESCE(TRY_TO_NUMBER(_L_TRUST_900, 38, 2), -1) as _L_TRUST_900
,COALESCE(TRY_TO_NUMBER(_L_TRUST_NEW_PAYEE, 38, 2), -1) as _L_TRUST_NEW_PAYEE
,COALESCE(TRY_TO_NUMBER(_L_TRUST_PAYEE_DORM_ACCT, 38, 2), -1) as _L_TRUST_PAYEE_DORM_ACCT
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYEE, 38, 2), -1) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYER, 38, 2), -1) as _L_TRUST_RCNT_HI_ATO_AS_PAYER
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYEE, 38, 2), -1) as _L_TRUST_RCNT_HI_SES_AS_PAYEE
,COALESCE(TRY_TO_NUMBER(_l_cust_scamrisk_score, 38, 2), -1) as _L_CUST_SCAMRISK_SCORE
,COALESCE(TRY_TO_NUMBER(_b_recip_sum_short, 38, 2), -1) as _B_RECIP_SUM_SHORT
,COALESCE(TRY_TO_NUMBER(_b_recip_sum_long, 38, 2), -1) as _B_RECIP_SUM_LONG
,COALESCE(TRY_TO_NUMBER(_a_customer_age, 38, 2), -1) as _A_CUSTOMER_AGE
,COALESCE(TRY_TO_NUMBER(_a_cust_sum_aaa_short, 38, 2), -1) as _A_CUST_SUM_AAA_SHORT
,COALESCE(TRY_TO_NUMBER(_a_cust_sum_aaa_long, 38, 2), -1) as _A_CUST_SUM_AAA_LONG
,COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_3, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_4, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_5, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_6, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_7, 38, 2),0) as FTP_CNT_7DAYS
,COALESCE(TRY_TO_NUMBER(_a_ftp_sum_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_3, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_4, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_5, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_6, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_7, 38, 2),0) as FTP_SUM_7DAYS
,COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_3, 38, 2),0) as NB_LOGONS_CNT_3M
,COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_3, 38, 2),0) as CAPP_LOGONS_CNT_3M
,COALESCE(TRY_TO_NUMBER(_x_cif_recipient_new_sum, 38, 2),0) as _X_CIF_RECIPIENT_NEW_SUM,
------------------
-- Keep other columns as VARCHAR (mostly text)
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_crypto_risk, '[^0-9.-]', '')), -1) as _b_crypto_risk,
        -- Blacklist and scam indicators
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_list_bl_scam_tp_acct, '[^0-9.-]', '')), -1) as _b_list_bl_scam_tp_acct,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_list_rl1_scam_tp_cif, '[^0-9.-]', '')), -1) as _b_list_rl1_scam_tp_cif,
        -- High-risk biller metrics
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_nb_hrisk_biller_cnt_1, '[^0-9.-]', '')), -1) as _b_nb_hrisk_biller_cnt_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_nb_hrisk_biller_sum_1, '[^0-9.-]', '')), -1) as _b_nb_hrisk_biller_sum_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_blacklist_recip_flag, '[^0-9.-]', '')), -1) as _b_npp_blacklist_recip_flag,
        -- NPP outbound transaction metrics
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_cnt_1, '[^0-9.-]', '')), -1) as _b_npp_out_cnt_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_cnt_2, '[^0-9.-]', '')), -1) as _b_npp_out_cnt_2,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_sum_1, '[^0-9.-]', '')), -1) as _b_npp_out_sum_1,
        -- NPP first-time payer metrics
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_ftp_cnt_2, '[^0-9.-]', '')), -1) as _b_npp_out_ftp_cnt_2,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_ftp_sum_1, '[^0-9.-]', '')), -1) as _b_npp_out_ftp_sum_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_npp_out_ftp_sum_2, '[^0-9.-]', '')), -1) as _b_npp_out_ftp_sum_2,
        -- Other risk indicators
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_open_listed_last_cif_2, '[^0-9.-]', '')), -1) as _b_open_listed_last_cif_2,
        -- Recipient first-time payer metrics
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_ftp_sum_1, '[^0-9.-]', '')), -1) as _b_recip_ftp_sum_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_ftp_sum_long, '[^0-9.-]', '')), -1) as _b_recip_ftp_sum_long,
        -- Recipient link sums
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_link_sum_aaa_long, '[^0-9.-]', '')), -1) as _b_recip_link_sum_aaa_long,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_link_sum_long, '[^0-9.-]', '')), -1) as _b_recip_link_sum_long,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_link_sum_short, '[^0-9.-]', '')), -1) as _b_recip_link_sum_short,
        -- Recipient transaction sums (various time periods)
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_4, '[^0-9.-]', '')), -1) as _b_recip_sum_4,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_7, '[^0-9.-]', '')), -1) as _b_recip_sum_7,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_today, '[^0-9.-]', '')), -1) as _b_recip_sum_today,
        -- Recipient AAA transaction sums
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_aaa_1, '[^0-9.-]', '')), -1) as _b_recip_sum_aaa_1,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_aaa_4, '[^0-9.-]', '')), -1) as _b_recip_sum_aaa_4,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_aaa_long, '[^0-9.-]', '')), -1) as _b_recip_sum_aaa_long,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_recip_sum_aaa_short, '[^0-9.-]', '')), -1) as _b_recip_sum_aaa_short,
        -- Fixed: _b_rfm_whitelist_ind (was incorrectly aliased)
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_b_rfm_whitelist_ind, '[^0-9.-]', '')), -1) as _b_rfm_whitelist_ind,
        COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_a_npp_velocity_1d_out, '[^0-9.-]', '')), -1) as _a_npp_velocity_1d_out,
        
COALESCE(CAST(_A_CUST_LINK_SUM_AAA_3 AS VARCHAR(50)), '-1') as _A_CUST_LINK_SUM_AAA_3,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_3 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_3,
COALESCE(CAST(_A_CAPP_REGO_1D_IND AS VARCHAR(50)), '-1') as _A_CAPP_REGO_1D_IND,
COALESCE(CAST(_L_PMT_AMT AS VARCHAR(50)), '-1') as _L_PMT_AMT,
COALESCE(CAST(_X_NPP_OUT_SUM_DATE AS VARCHAR(50)), '-1') as _X_NPP_OUT_SUM_DATE,
COALESCE(CAST(_B_NB_HRISK_BILLER_SUM_1 AS VARCHAR(50)), '-1') as _B_NB_HRISK_BILLER_SUM_1,
COALESCE(CAST(_L_ACC_AMT_1D AS VARCHAR(50)), '-1') as _L_ACC_AMT_1D,
COALESCE(CAST(_L_SCORE_3 AS VARCHAR(50)), '-1') as _L_SCORE_3,
COALESCE(CAST(_B_RECIP_SUM_AAA_6 AS VARCHAR(50)), '-1') as _B_RECIP_SUM_AAA_6,
COALESCE(CAST(_A_CLIENT_CITY_7 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_7,
COALESCE(CAST(_L_ACC_AMT_1H AS VARCHAR(50)), '-1') as _L_ACC_AMT_1H,
COALESCE(CAST(_A_BTS_WDL_SUM_LONG AS VARCHAR(50)), '-1') as _A_BTS_WDL_SUM_LONG,
COALESCE(CAST(_L_SCORE_4 AS VARCHAR(50)), '-1') as _L_SCORE_4,
COALESCE(CAST(_L_NEW_PAYEE_PER_USER AS VARCHAR(50)), '-1') as _L_NEW_PAYEE_PER_USER,
COALESCE(CAST(_A_CLIENT_CITY_2 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_2,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_2 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_2,
COALESCE(CAST(_L_BC_SESS_CNT AS VARCHAR(50)), '-1') as _L_BC_SESS_CNT,
COALESCE(CAST(_A_CSE_CHG_DWL_NEW_AMT AS VARCHAR(50)), '-1') as _A_CSE_CHG_DWL_NEW_AMT,
COALESCE(CAST(_A_CLIENT_CITY_1 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_1,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_5 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_5,
COALESCE(CAST(_L_MINS_LST_LGN_CAPPED AS VARCHAR(50)), '-1') as _L_MINS_LST_LGN_CAPPED,
COALESCE(CAST(_B_RECIP_SUM_AAA_7 AS VARCHAR(50)), '-1') as _B_RECIP_SUM_AAA_7,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_2 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_2,
COALESCE(CAST(_A_CLIENT_CITY_10 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_10,
COALESCE(CAST(_L_NUM_SESS_2H AS VARCHAR(50)), '-1') as _L_NUM_SESS_2H,
COALESCE(CAST(_N_CUST_TXN_COUNT AS VARCHAR(50)), '-1') as _N_CUST_TXN_COUNT,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_3 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_3,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_NFTP_1 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_NFTP_1,
COALESCE(CAST(_A_NPP_FTP_SUM2 AS VARCHAR(50)), '-1') as _A_NPP_FTP_SUM2,
COALESCE(CAST(_A_CLIENT_CITY_6 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_6,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_1 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_1,
COALESCE(CAST(_A_CURR_CAPP_DEVICE_NFTP_CNT AS VARCHAR(50)), '-1') as _A_CURR_CAPP_DEVICE_NFTP_CNT,
COALESCE(CAST(_A_NPP_OUT_SUM_1 AS VARCHAR(50)), '-1') as _A_NPP_OUT_SUM_1,
COALESCE(CAST(_A_CLIENT_CITY_8 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_8,
COALESCE(CAST(_N_CRYPTO_RECIPIENT_CNT AS VARCHAR(50)), '-1') as _N_CRYPTO_RECIPIENT_CNT,
COALESCE(CAST(_N_H_2 AS VARCHAR(50)), '-1') as _N_H_2,
COALESCE(CAST(_A_GEO_DISTANCE AS VARCHAR(50)), '-1') as _A_GEO_DISTANCE,
COALESCE(CAST(_N_CAPP_LOGONS_CNT_1 AS VARCHAR(50)), '-1') as _N_CAPP_LOGONS_CNT_1,
COALESCE(CAST(_N_CAPP_LINKED_CNT_2 AS VARCHAR(50)), '-1') as _N_CAPP_LINKED_CNT_2,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_4 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_4,
COALESCE(CAST(_X_CIF_REC_SUM AS VARCHAR(50)), '-1') as _X_CIF_REC_SUM,
COALESCE(CAST(_L_M_L_C AS VARCHAR(50)), '-1') as _L_M_L_C,
COALESCE(CAST(_A_MULTI_CNT AS VARCHAR(50)), '-1') as _A_MULTI_CNT,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_NFTP_3 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_NFTP_3,
COALESCE(CAST(_N_CUST_STATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_CUST_STATE_IP_ACTIVITY,
COALESCE(CAST(_A_MRISK_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_MRISK_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_3 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_3,
COALESCE(CAST(_N_RP_SES_IP_1 AS VARCHAR(50)), '-1') as _N_RP_SES_IP_1,
COALESCE(CAST(_A_CAPP_REGO_IP_COUNTRY AS VARCHAR(50)), '-1') as _A_CAPP_REGO_IP_COUNTRY,
COALESCE(CAST(_A_CUST_STATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_CUST_STATE_IP_ACTIVITY,
COALESCE(CAST(_A_LOGON_NB_IP_CNTRY AS VARCHAR(50)), '-1') as _A_LOGON_NB_IP_CNTRY,
COALESCE(CAST(_A_MRISK_FOREIGN_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_MRISK_FOREIGN_IP_TASK_ID,
COALESCE(CAST(_A_DEVCIE_GEO_LAT_AVG_INCL AS VARCHAR(50)), '-1') as _A_DEVCIE_GEO_LAT_AVG_INCL,
COALESCE(CAST(_N_INTERSTATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_INTERSTATE_IP_ACTIVITY,
COALESCE(CAST(_N_INTERSTATE_IP_STATE AS VARCHAR(50)), '-1') as _N_INTERSTATE_IP_STATE,
COALESCE(CAST(_N_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_INTERSTATE_IP_STATE AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_STATE,
COALESCE(CAST(_A_INTERSTATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_ACTIVITY,
COALESCE(CAST(_A_IS_IP_DT_2 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_2,
COALESCE(CAST(_A_INTERSTATE_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_TASK_ID,
COALESCE(CAST(_A_IS_IP_DT_1 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_1,
COALESCE(CAST(_A_SAFE_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_SAFE_CUST_LATITUDE,
COALESCE(CAST(_A_CURR_CAPP_DEVICE_LATT AS VARCHAR(50)), '-1') as _A_CURR_CAPP_DEVICE_LATT,
COALESCE(CAST(_A_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_N_HRISK_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_HRISK_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_IS_IP_DT_3 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_3,
COALESCE(CAST(_A_CURR_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_CURR_CUST_LATITUDE,
COALESCE(CAST(_N_CLOUD_SERV_LATEST_LOGON_DT AS VARCHAR(50)), '-1') as _N_CLOUD_SERV_LATEST_LOGON_DT,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_1 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_1,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_2 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_2,
COALESCE(CAST(_A_FOREIGN_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_FOREIGN_IP_TASK_ID,
COALESCE(CAST(_A_PREV_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_PREV_CUST_LATITUDE
--newly added

,COALESCE(TRY_TO_NUMBER(_x_cif_recipient_new_cnt, 38, 2), -1) as _X_CIF_RECIPIENT_NEW_CNT
,COALESCE(TRY_TO_NUMBER(_x_telstra_last_call_dur, 38, 2),-1) as _X_TELSTRA_LAST_CALL_DUR
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_3, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_3
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_2, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_2
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_4, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_4
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_MRISK_FOREIGN_IP_CNTRY_CODE, '[^0-9.-]', '')), -1) as _A_MRISK_FOREIGN_IP_CNTRY_CODE,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_N_NEW_IP_LOGON_PCODE, '[^0-9.-]', '')), -1) as _N_NEW_IP_LOGON_PCODE,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_LOGON_198_IP_PC, '[^0-9.-]', '')), -1) as _A_LOGON_198_IP_PC,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_LOGON_NB_IP_PC, '[^0-9.-]', '')), -1) as _A_LOGON_NB_IP_PC,
COALESCE(CAST(_X_LAST_N_TXN_COUNT AS VARCHAR(50)), '-1') as _X_LAST_N_TXN_COUNT,

COALESCE(TRY_TO_NUMBER(_a_telstra_tp_outbnd_count, 38, 2), -1) as _A_TELSTRA_TP_OUTBND_COUNT

-------------------
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_2
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_3
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_4
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_5
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_NEW_CAPP_REGO_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CSE_CHG_DWL_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CIF_ESTABLISH_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_NB_LASTLOGON_DT_1
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CURR_CAPP_DEVICE_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_TELSTRA_LONG_CALL

,case when TIMESTAMPADD(day, TRY_TO_NUMBER(_a_crypto_last_pymnt_date, 38, 2), '1960-01-01'::date) > '2000-01-01'::date
      then datediff('day', TIMESTAMPADD(day, TRY_TO_NUMBER(_a_crypto_last_pymnt_date, 38, 2), '1960-01-01'::date),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))
      else -1
end as _A_CRYPTO_LAST_PYMNT_DATE
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP1_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP2_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP3_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP4_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP5_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP7_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP10_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP20_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP21_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_P8_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_M100_APP_P1_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_APP_P5_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_M100_APP_P8_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_APP_P9_DT

,COALESCE(TRY_TO_NUMBER(_x_telstra_max_call_dur, 38, 2),-1) as _X_TELSTRA_MAX_CALL_DUR
,COALESCE(TRY_TO_NUMBER(_a_telstra_tp_outbnd_avg_dur, 38, 2),-1) as _A_TELSTRA_TP_OUTBND_AVG_DUR
,COALESCE(TRY_TO_NUMBER(_a_telstra_multi_calls,38,2),-1) as _A_TELSTRA_MULTI_CALLS
,COALESCE(TRY_TO_NUMBER(_a_crypto_mnthly_sum, 38, 2),-1) as _A_CRYPTO_MNTHLY_SUM
,substr(_l_fingerprint_1,2,1) as GENDER
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,5,1),1.),-1) as TRAN_ACCT_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,13,1),1.),-1) as BUSI_TRAN_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_Fingerprint_1,3,1),1.),-1) as DMC_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,6,1),1.),-1) as DEPOSIT_ACCT_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,8,1),1.),-1) as TRADE_ACCT_COUNT
,substr(_l_fingerprint_2,5,2) as NAME_ORIG_ASSOC
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(substr(_l_fingerprint_2,1,2), '[^0-9.-]', '')), -1) as MAIN_FOREIGN_ASSOC
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(substr(_l_fingerprint_3,1,1), '[^0-9.-]', '')), -1) as GOVT_BENEFITS
,POWER(COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_3,12,2)),-1)/10,10) as BAL_LAST_MON
,POWER(COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_3,14,2)), -1)/10,10) as BAL_TWO_MON_AGO
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,1,3)),-1)/100) as GAMBLING_SPEND_LAST_YEAR
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,4,3)), -1)/100) as GAMBLING_SPEND_THREE_MON
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,7,3)), -1)/100) as GAMBLING_SPEND_ONE_MON

from        lcl.fdp_customer_transactions_send_flat
where   mid_event_ts >= '20241001'
and  mid_event_ts < '20250716'
and     hdr_source = 'NPP OUT'
and SSX_CUST_NUM <> ''
and SSX_CUST_NUM IS NOT NULL
and SSX_CUST_NUM <> 'Not Available'
and     tran_amt > 0
order by    transactiondatetime",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,10103908,10103.908,168.398467,2.806641,2X-LARGE,32,89.812512
01bdcfdb-3204-a615-0000-c71d2481dd5e,"call MLOP_SP_MODL_RUNR(to_date('2025-07-20','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2513035,2513.035,41.883917,0.698065,4X-LARGE,128,89.35232
01be14e0-3204-ae4f-0000-c71d267be33e,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2476448,2476.448,41.274133,0.687902,4X-LARGE,128,88.051456
01bdf1b8-3204-aa25-0000-c71d257dc0b2,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2453550,2453.55,40.8925,0.681542,4X-LARGE,128,87.237376
01beec16-3204-c558-0000-c71d2cfdc962,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,9715742,9715.742,161.929033,2.698817,2X-LARGE,32,86.362144
01be061f-3204-aca9-0000-c71d2609d136,"CREATE  OR  REPLACE    TABLE  LABMLFRD.TECHDS_CCA_TRANSACTIONS_FRAUD_DEPLOY10_V3_TEST_FIRES_ONLY(""CMX_TRAN_ID"" STRING(134217728), ""SSX_CUST_NUM"" STRING(16777216), ""TTS_TRAN_DATE_ALT"" STRING(16777216), ""DTL_EX_0_20S_001"" STRING(16777216), ""DTL_EX_1_5S_01"" STRING(16777216), ""TGX_TRAN_AMT"" STRING(16777216), ""HOUR"" BIGINT, ""_A_MARVIN_DIGI_DECISION_NUM"" STRING(16777216), ""LAG_A_MARVIN_DIGI_DECISION_NUM"" STRING(16777216), ""TRANSACTIONDATETIME"" TIMESTAMP_NTZ, ""_A_BTS_MAX_SE_DT"" BIGINT, ""_A_DTL_ACTIONCODE_DT_1"" BIGINT, ""_A_CRD_ACTIONCODE_DT_1"" BIGINT, ""_A_NPP_INBOUND_DATETIME"" BIGINT, ""_A_LO_DT"" BIGINT, ""_A_CC_DT"" BIGINT, ""_A_CAPP_NOTIFY_OPT_OUT_DT"" BIGINT, ""_A_CD_RTR_DT_1"" BIGINT, ""_A_CD_RTR_DT_3"" BIGINT, ""_A_IVR_LOGON_DT"" BIGINT, ""_A_NPP_FTP_DATE2"" BIGINT, ""_A_P_P_3"" BIGINT, ""_A_CRD_NPP_PAYMENT_DT"" BIGINT, ""_A_IS_IP_DT_3"" BIGINT, ""_A_CAPP_DEV_RETR_DT"" BIGINT, ""_A_5_2"" BIGINT, ""_A_ONLINE_PL_DT"" BIGINT, ""_A_DTL_CAPP_NBANK_SSO_DT"" BIGINT, ""_A_DTL_HID_UNHID_ACCT_DT_PREV"" BIGINT, ""_A_CLIENT_DETAILS_VIEW"" BIGINT, ""_A_MANUAL_NB_LOCK_DT"" BIGINT, ""_A_CUST_BROWSER_PREV_DT_2"" BIGINT, ""_A_SCAMP1_MLW_DT"" BIGINT, ""_A_SCAMP2_MLW_DT"" BIGINT, ""_A_SCAMP5_MLW_DT"" BIGINT, ""_A_SCAMP7_MLW_DT"" BIGINT, ""_A_REVERSE_IND_SCAMP4_DT"" BIGINT, ""_A_NB_LASTLOGON_DT_3"" BIGINT, ""_A_AUTO_DEC_CP_PP_DT"" BIGINT, ""_A_NPP_OUT_PAYID_DT"" BIGINT, ""_A_NPP_INB_ALL_DT"" BIGINT, ""_A_NPP_OUT_HOLD_COMMSEE_DT"" BIGINT, ""_A_PROF_CAPP_DEVICE_DT_1"" BIGINT, ""_A_RETRIEVE_STMT_DETAILS_DT"" BIGINT, ""_A_CAPP_REGO_DT"" BIGINT, ""_A_NPP_WHITELIST_CUS_ACCT_DT"" BIGINT, ""_A_NPP_WHITELIST_PAYID_DT"" BIGINT, ""_A_NB_BPAY_ACCT_FTP_DT_1"" BIGINT, ""_A_NPP_BLACKLIST_PAYID_DT"" BIGINT, ""_A_NPP_INB_OFI_PAYID_DT"" BIGINT, ""_A_NPP_OUT_CBA_PAYID_DT"" BIGINT, ""_A_AUS_IP_ACTIVITY"" BIGINT, ""_A_CIF_ESTABLISH_DT"" BIGINT, ""_A_ECV_DOCUMENT_DT"" BIGINT, ""_A_NB_GROUP_DT_2"" BIGINT, ""_A_CLIENT_POSTCODE_DT_2"" BIGINT, ""_A_CLIENT_PORT_DATE_1"" BIGINT, ""_A_LAST_NB_LOGIN_DT_1"" BIGINT, ""_A_CLIENT_COUNTRY_DATE_1"" BIGINT, ""_B_OPEN_LAST_PAYER_CIF_DT_10"" BIGINT, ""_B_NPP_WHITELIST_SENDER_DT"" BIGINT, ""_B_ANY_CUST_FTP_DT"" BIGINT, ""_B_NPP_OUT_CNT_DATE"" BIGINT, ""_I_ALL_LOGONS_FDT"" BIGINT, ""_L_PUSH_API_DT_1"" BIGINT, ""_L_PUSH_API_DT_2"" BIGINT, ""_L_PUSH_API_DT_3"" BIGINT, ""_L_PUSH_API_DT_4"" BIGINT, ""_L_FIRST_RAT_DT"" BIGINT, ""_L_M_C_5"" BIGINT, ""_L_M_F_2"" BIGINT, ""_L_M_F_C"" BIGINT, ""_L_IS_MOB_RAT_DT"" BIGINT, ""_L_IS_RAT_DT"" BIGINT, ""_N_2WP_SNT_TRAN_HOLD_END_DT"" BIGINT, ""_N_1701_DT_1"" BIGINT, ""_N_D_P_C"" BIGINT, ""_N_T_3"" BIGINT, ""_N_1601_DT"" BIGINT, ""_N_F_3"" BIGINT, ""_N_NB_MEDIUM_PRIORITY_FIRE"" BIGINT, ""_N_CUST_BROWSER_FIRST_DT_2"" BIGINT, ""_N_CUST_NB_DEVICE_DT"" BIGINT, ""_N_CUST_NB_FIRST_DEVICE_DT"" BIGINT, ""_N_HCE_ADD_CARD"" BIGINT, ""_N_MALWARE_DT"" BIGINT, ""_N_CAPP_REG_DT_2"" BIGINT, ""_N_CAPP_REG_DT_3"" BIGINT, ""_N_CAPP_REG_DT_5"" BIGINT, ""_N_CLIENT_IDTO_PW"" BIGINT, ""_N_CLIENT_LOGON_FINEST"" BIGINT, ""_N_CLIENT_PASSWORD_TEMP"" BIGINT, ""_X_D_2"" BIGINT, ""_A_BTS_BIO_SE"" NUMBER(38, 2), ""_A_BTS_BNFT"" STRING(16777216), ""_A_ECV_COMMSEC_FLAG"" NUMBER(38, 2), ""_A_NPP_INB_PMT_VAL"" NUMBER(38, 2), ""_A_PROF_RISK_IND"" STRING(16777216), ""_A_CUST_ACTIONCODE_1"" NUMBER(38, 2), ""_A_DTL_ACTIONCODE_1"" NUMBER(38, 2), ""_A_DTL_ACTIONCODE_2"" NUMBER(38, 2), ""_A_ATM_WITHDRAWAL_SUM_AMT"" NUMBER(38, 2), ""_A_NPP_INBOUND_SUM_AMT"" NUMBER(38, 2), ""_A_TELSTRA_ACTIVE_CALL"" STRING(16777216), ""_A_TELSTRA_API_EVENT_ID"" STRING(16777216), ""_A_TELSTRA_EXISTING_RELATION"" NUMBER(38, 2), ""_A_LATEST_NCRG_ISP"" STRING(16777216), ""_A_GEO_DISTANCE"" NUMBER(38, 2), ""_A_P_N_H"" STRING(16777216), ""_A_FTP_SUM_1"" NUMBER(38, 2), ""_A_MULTI_CNT"" NUMBER(38, 2), ""_A_CRD_SCAM_SUPP_7D_SUM_1"" NUMBER(38, 2), ""_A_BTS_CUST_AGE"" NUMBER(38, 2), ""_A_P_L_1"" NUMBER(38, 2), ""_A_P_L_3"" NUMBER(38, 2), ""_A_P_L_C"" NUMBER(38, 2), ""_A_P_N_3"" STRING(16777216), ""_A_P_N_C"" STRING(16777216), ""_A_CRD_NPP_PAYMENT_AMOUNT"" NUMBER(38, 2), ""_A_CURR_CAPP_DEVICE_NFTP_CNT"" NUMBER(38, 2), ""_A_2WAY_TYPE"" STRING(16777216), ""_A_CUST_ACCT_BAL"" NUMBER(38, 2), ""_A_CUST_AVG_ACCT_BAL"" NUMBER(38, 2), ""_A_E"" NUMBER(38, 2), ""_A_R"" NUMBER(38, 2), ""_A_T"" NUMBER(38, 2), ""_A_U"" NUMBER(38, 2), ""_A_CAPP_LOGON_CNT_2"" NUMBER(38, 2), ""_A_CAPP_LOGON_CNT_3"" NUMBER(38, 2), ""_A_CAPP_REGISTRATIONS_CNT_3"" NUMBER(38, 2), ""_A_NB_LOGONS_CNT_2"" NUMBER(38, 2), ""_A_NB_LOGONS_CNT_3"" NUMBER(38, 2), ""_A_CUST_BROWSER_VER"" STRING(16777216), ""_A_CUST_DEVICE_BROWSER_VER"" STRING(16777216), ""_A_CUST_OS_NAME"" STRING(16777216), ""_A_CUST_OS_VER"" STRING(16777216), ""_A_CURR_NB_BROWSER_CNT"" NUMBER(38, 2), ""_A_CIF_ESTABLISH_CUST_PCODE"" STRING(16777216), ""_A_LIST_RL1_SCAM_CUST_CIF"" NUMBER(38, 2), ""_A_LOGON_NB_IP_PC"" STRING(16777216), ""_A_CURR_CAPP_DEVICE_CNT"" NUMBER(38, 2), ""_A_PREV_CAPP_DEVICE"" STRING(16777216), ""_A_PREV_CAPP_DEVICE_CNT"" NUMBER(38, 2), ""_A_PREV_CAPP_DEVICE_MODEL"" STRING(16777216), ""_A_PROF_CAPP_DEVICE_2"" STRING(16777216), ""_A_PROF_CAPP_DEVICE_CNT_1"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_2"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_3"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_5"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_MODEL_1"" STRING(16777216), ""_A_VPN_VPS_IP_LOGON_COUNT"" NUMBER(38, 2), ""_A_CC_CASH_ADVANCE_AMT"" NUMBER(38, 2), ""_A_MRISK_FOREIGN_IP_CNTRY_CODE"" STRING(16777216), ""_A_ALL_BPAY_ACCT_2"" STRING(16777216), ""_A_ALL_BPAY_ACCT_SUM_1"" NUMBER(38, 2), ""_A_NB_BPAY_ACCT_CNT_2"" NUMBER(38, 2), ""_A_NB_BPAY_ACCT_SUM_1"" NUMBER(38, 2), ""_A_NPP_FTP_SUM"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_1"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_2"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_5"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_LONG"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_7"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_LONG"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_SHORT"" NUMBER(38, 2), ""_A_CIF_ESTABLISH_CHANNEL"" STRING(16777216), ""_A_CIF_ESTABLISH_EMAIL"" STRING(16777216), ""_A_CIF_ESTABLISH_PHONE"" STRING(16777216), ""_A_ECV_DOCUMENT_IP"" STRING(16777216), ""_A_CLIENT_POSTCODE_FTP_SUM_3"" NUMBER(38, 2), ""_A_BTS_BCH_SUM"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_2"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_3"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_4"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_SUM_4"" NUMBER(38, 2), ""_A_CLIENT_CITY_10"" STRING(16777216), ""_A_CLIENT_CITY_6"" STRING(16777216), ""_A_CLIENT_CITY_CNT_1"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_1"" STRING(16777216), ""_A_CLIENT_COUNTRY_3"" STRING(16777216), ""_A_CLIENT_COUNTRY_8"" STRING(16777216), ""_A_CLIENT_COUNTRY_CNT_2"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_3"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_5"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_6"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_7"" NUMBER(38, 2), ""_B_RECIP_PROFILE_GLOB_ERROR"" STRING(16777216), ""_B_BVT_NUMERIC_1"" NUMBER(38, 2), ""_B_RECIP_SUM_TODAY"" NUMBER(38, 2), ""_B_CRYPTO_RISK"" STRING(16777216), ""_B_OPEN_LAST_PAYER_CIF_10"" STRING(16777216), ""_B_LIST_RL1_SCAM_TP_CIF"" NUMBER(38, 2), ""_B_NPP_OUT_FTP_SUM_1"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_1"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_2"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_4"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_5"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_6"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_7"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_LONG"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_1"" STRING(16777216), ""_B_CLIENT_POSTCODE_2"" STRING(16777216), ""_B_CLIENT_POSTCODE_3"" STRING(16777216), ""_B_CLIENT_POSTCODE_CNT_1"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_2"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_3"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_4"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_1"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_2"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_3"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_5"" NUMBER(38, 2), ""_B_RECIP_SUM_1"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_1"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_2"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_3"" NUMBER(38, 2), ""_I_ALL_LOGONS_CNT_1"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_1"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_2"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_3"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_3M"" NUMBER(38, 2), ""_I_CUST_NET_L_CNT_1"" NUMBER(38, 2), ""_I_CUST_NET_CNT_4"" NUMBER(38, 2), ""_I_CUST_NET_CNT_LONG"" NUMBER(38, 2), ""_L_SCM_RSK_SCR_2"" NUMBER(38, 2), ""_L_PAYTO_MANDATE_ID"" STRING(16777216), ""_L_PUSH_API_1"" STRING(16777216), ""_L_PUSH_API_2"" STRING(16777216), ""_L_PUSH_API_3"" STRING(16777216), ""_L_PUSH_API_4"" STRING(16777216), ""_L_BC_CONTEXT"" STRING(16777216), ""_L_DPI_CHANGE"" NUMBER(38, 2), ""_L_MUID_AGE_PER_USER"" NUMBER(38, 2), ""_L_PLUGIN_CNT"" NUMBER(38, 2), ""_L_RARE_SIM_CNTRY_CODE"" NUMBER(38, 2), ""_L_ROOTED_DEV"" NUMBER(38, 2), ""_L_SDID_1"" STRING(16777216), ""_L_SDID_CNT_1"" NUMBER(38, 2), ""_L_SDID_CNT_3"" NUMBER(38, 2), ""_L_NC_ACCT_NUM"" STRING(16777216), ""_L_NC_MATCH_NAME"" STRING(16777216), ""_L_NC_RESPONSE_CODE"" STRING(16777216), ""_L_NC_WINNING_ALG"" STRING(16777216), ""_L_BC_AO_SCORE"" NUMBER(38, 2), ""_L_BRANCH_ID"" STRING(16777216), ""_L_DRAG_N_DROP"" NUMBER(38, 2), ""_L_PMT_AMT"" NUMBER(38, 2), ""_L_PMT_DESCR"" STRING(16777216), ""_L_RCNT_HI_SCR_ON_DEV"" NUMBER(38, 2), ""_L_SE_SCORE"" NUMBER(38, 2), ""_L_SE_SCORE_1"" NUMBER(38, 2), ""_L_SE_SESS_CNT"" NUMBER(38, 2), ""_L_ACCUM_AMT_ANOM"" NUMBER(38, 2), ""_L_FRST_PROXY"" NUMBER(38, 2), ""_L_NEW_LANG"" NUMBER(38, 2), ""_L_SCRN_RES_ANOM"" NUMBER(38, 2), ""_L_FINGERPRINT_1"" STRING(16777216), ""_L_FINGERPRINT_2"" STRING(16777216), ""_L_FINGERPRINT_3"" STRING(16777216), ""_L_FINGERPRINT_4"" STRING(16777216), ""_L_FINGERPRINT_5"" STRING(16777216), ""_L_SCORE_1"" NUMBER(38, 2), ""_L_SCORE_2"" NUMBER(38, 2), ""_L_SCORE_3"" NUMBER(38, 2), ""_L_SCORE_4"" NUMBER(38, 2), ""_L_SCORE_5"" NUMBER(38, 2), ""_L_RAT_CHECK"" NUMBER(38, 2), ""_L_M_L_1"" NUMBER(38, 2), ""_L_M_L_4"" NUMBER(38, 2), ""_L_M_L_C"" NUMBER(38, 2), ""_L_BC_SESS_CNT"" NUMBER(38, 2), ""_L_BC_SESS_ID"" STRING(16777216), ""_L_ACC_AMT_1D"" NUMBER(38, 2), ""_L_ACC_AMT_1H"" NUMBER(38, 2), ""_L_AND_ID_AGE"" NUMBER(38, 2), ""_L_BC_SCORE"" NUMBER(38, 2), ""_L_BROWSER_AGE"" NUMBER(38, 2), ""_L_CITY_AGE"" NUMBER(38, 2), ""_L_CLIPB_EVENT_CNT"" NUMBER(38, 2), ""_L_DAYS_LST_DEV_IOS"" NUMBER(38, 2), ""_L_DAYS_LST_DEV_JS"" NUMBER(38, 2), ""_L_DEV_FAM"" STRING(16777216), ""_L_DEV_FAM_AGE"" NUMBER(38, 2), ""_L_DOM_HAND_CH_ANOMALY"" NUMBER(38, 2), ""_L_FT_RAT_APP_INST"" NUMBER(38, 2), ""_L_G_CON_DEV"" NUMBER(38, 2), ""_L_IP_AGE"" NUMBER(38, 2), ""_L_IS_ACTIVE_CALL"" NUMBER(38, 2), ""_L_ISP_AGE"" NUMBER(38, 2), ""_L_KEY_MOUSE_ANOMALY"" NUMBER(38, 2), ""_L_LANG_1"" STRING(16777216), ""_L_LANG_2"" STRING(16777216), ""_L_LANG_3"" STRING(16777216), ""_L_LGN_IMPORT_ANOMALY"" NUMBER(38, 2), ""_L_MAX_30D_SCORE"" NUMBER(38, 2), ""_L_MINS_LST_LGN_CAPPED"" NUMBER(38, 2), ""_L_MOUSE_CNT"" NUMBER(38, 2), ""_L_MOUSE_DOODL"" NUMBER(38, 2), ""_L_NEW_BROWSER"" NUMBER(38, 2), ""_L_NEW_BROWSER_ANOMALY"" NUMBER(38, 2), ""_L_NEW_MOB_APP_USER"" NUMBER(38, 2), ""_L_NEW_MOB_BROWSER_USER"" NUMBER(38, 2), ""_L_NUM_SESS_2H"" NUMBER(38, 2), ""_L_NUM_SESS_4H"" NUMBER(38, 2), ""_L_ORIENT_EVENT_CNT"" NUMBER(38, 2), ""_L_OS_CH_ANOMALY"" NUMBER(38, 2), ""_L_POLICY_NM"" STRING(16777216), ""_L_PRIV_BROWSING_ANOMALY"" NUMBER(38, 2), ""_L_PROXY_TYPE"" STRING(16777216), ""_L_SCRN_H"" NUMBER(38, 2), ""_L_SCRN_W"" NUMBER(38, 2), ""_L_SESS_CNT_MOB_BROWSER"" NUMBER(38, 2), ""_L_SESS_CNT_MOB_SDK"" NUMBER(38, 2), ""_L_SESS_CNT_WEB"" NUMBER(38, 2), ""_L_SESS_ID"" STRING(16777216), ""_L_SIM_IP_CNTRY_MISMATCH"" NUMBER(38, 2), ""_L_TAP_CNT"" NUMBER(38, 2), ""_L_TOTAL_SESS_CNT"" NUMBER(38, 2), ""_L_TOUCH_CNT"" NUMBER(38, 2), ""_L_TYPE_PATTERNS_ANOMALY"" NUMBER(38, 2), ""_L_UID_AGE"" NUMBER(38, 2), ""_N_BC_CR_BC_1"" NUMBER(38, 2), ""_N_FTP_CNT_1"" NUMBER(38, 2), ""_N_5_RCNT_M100S_1"" STRING(16777216), ""_N_5_RCNT_M100S_2"" STRING(16777216), ""_N_MPS_MNDT_CNT_24H_1"" NUMBER(38, 2), ""_N_MOB_OTH_TRAN_SUM_1"" NUMBER(38, 2), ""_N_NB_LOGON_USER_AGENT"" STRING(16777216), ""_N_CA_DEVICE_PROFILE_1"" NUMBER(38, 2), ""_N_CA_DEVICE_PROFILE_3"" NUMBER(38, 2), ""_N_P20_7D_CNT_1"" NUMBER(38, 2), ""_N_CA_LGN_CNT_24H_1"" NUMBER(38, 2), ""_N_NMCHK_CNT"" NUMBER(38, 2), ""_N_NMCHK_RECIP_CNT_1"" STRING(16777216), ""_N_2WP_TRAN_IND_1"" NUMBER(38, 2), ""_N_CA_DEV_BL_FLAG_2"" NUMBER(38, 2), ""_N_CLIENT_SSID_NAME_1"" STRING(16777216), ""_N_CUST_TXN_COUNT"" NUMBER(38, 2), ""_N_CRYPTO_RECIPIENT_SUM"" NUMBER(38, 2), ""_N_RP_SES_IP_1"" NUMBER(38, 2), ""_N_MULTI_AMT_1"" NUMBER(38, 2), ""_N_NB_RECIPIENT_AMT_1"" NUMBER(38, 2), ""_N_NB_RECIPIENT_AMT_3"" NUMBER(38, 2), ""_N_NB_SUM_TPT_4"" NUMBER(38, 2), ""_N_D_D_3"" STRING(16777216), ""_N_H_1"" NUMBER(38, 2), ""_N_CUST_NB_DEVICE_CNT"" NUMBER(38, 2), ""_N_OPEN_FTP_SUM_7D"" NUMBER(38, 2), ""_N_CAPP_BPAY_CNT_1"" NUMBER(38, 2), ""_N_CAPP_LINKED_CNT_1"" NUMBER(38, 2), ""_N_CAPP_LINKED_CNT_2"" NUMBER(38, 2), ""_N_ESTAB_SCHEDULE_2"" STRING(16777216), ""_N_LOG_SCR_CONS_2"" NUMBER(38, 2), ""_N_LINKED_RECIP"" STRING(16777216), ""_N_CLIENT_IDCHNG_NB"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_1"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_2"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_3"" STRING(16777216), ""_X_CIF_SENDER_CNT"" NUMBER(38, 2), ""_X_CIF_SENDER_SUM"" NUMBER(38, 2), ""_X_NAME_MATCH_CNT"" NUMBER(38, 2), ""_X_NAME_MATCH_IND"" NUMBER(38, 2), ""_X_FT_OVER5K_RECIP_CNT"" NUMBER(38, 2), ""_X_LAST_N_TXN_COUNT"" NUMBER(38, 2), ""_X_T_1"" NUMBER(38, 2), ""_X_T_2"" NUMBER(38, 2), ""_X_T_3"" NUMBER(38, 2), ""_X_T_5"" NUMBER(38, 2), ""_X_NPP_OUT_SUM_1"" NUMBER(38, 2), ""_X_NPP_OUT_SUM_3"" NUMBER(38, 2))    AS  SELECT  *  FROM (
        SELECT
            TO_NUMBER(DTL_EX_0_N_064)||DTL_EX_0_N_065||DTL_EX_0_N_066 AS CMX_TRAN_ID,
            SSX_CUST_NUM,
            TTS_TRAN_DATE_ALT,
            DTL_EX_0_20S_001,
            DTL_EX_1_5S_01,
            TGX_TRAN_AMT,
            TRY_CAST(SUBSTR(TTS_TRAN_TIME_ALT, 1, 2) AS NUMBER) AS HOUR,
            _A_MARVIN_DIGI_DECISION_NUM,
            LAG(_A_MARVIN_DIGI_DECISION_NUM) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') DESC) AS LAG_A_MARVIN_DIGI_DECISION_NUM,
            	TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME, 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_BTS_MAX_SE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_BTS_MAX_SE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_BTS_MAX_SE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_ACTIONCODE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CRD_ACTIONCODE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INBOUND_DATETIME, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INBOUND_DATETIME, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INBOUND_DATETIME
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_LO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CC_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CC_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CC_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_NOTIFY_OPT_OUT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_NOTIFY_OPT_OUT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_NOTIFY_OPT_OUT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CD_RTR_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CD_RTR_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IVR_LOGON_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IVR_LOGON_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_IVR_LOGON_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_FTP_DATE2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_FTP_DATE2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_FTP_DATE2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_P_P_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_P_P_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_P_P_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_NPP_PAYMENT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_NPP_PAYMENT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CRD_NPP_PAYMENT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IS_IP_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IS_IP_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_IS_IP_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_DEV_RETR_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_DEV_RETR_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_DEV_RETR_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_5_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_5_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_5_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ONLINE_PL_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ONLINE_PL_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_ONLINE_PL_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_CAPP_NBANK_SSO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_CAPP_NBANK_SSO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_CAPP_NBANK_SSO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_HID_UNHID_ACCT_DT_PREV, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_HID_UNHID_ACCT_DT_PREV, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_HID_UNHID_ACCT_DT_PREV
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_DETAILS_VIEW, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_DETAILS_VIEW, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_DETAILS_VIEW
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_MANUAL_NB_LOCK_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_MANUAL_NB_LOCK_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_MANUAL_NB_LOCK_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CUST_BROWSER_PREV_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CUST_BROWSER_PREV_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CUST_BROWSER_PREV_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP1_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP2_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP5_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP7_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP4_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP4_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_REVERSE_IND_SCAMP4_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_LASTLOGON_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_LASTLOGON_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_LASTLOGON_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUTO_DEC_CP_PP_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUTO_DEC_CP_PP_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_AUTO_DEC_CP_PP_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_ALL_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_ALL_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INB_ALL_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_HOLD_COMMSEE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_HOLD_COMMSEE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_HOLD_COMMSEE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_PROF_CAPP_DEVICE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_PROF_CAPP_DEVICE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_PROF_CAPP_DEVICE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_RETRIEVE_STMT_DETAILS_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_RETRIEVE_STMT_DETAILS_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_RETRIEVE_STMT_DETAILS_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_REGO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_REGO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_REGO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_CUS_ACCT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_CUS_ACCT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_WHITELIST_CUS_ACCT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_WHITELIST_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_BPAY_ACCT_FTP_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_BPAY_ACCT_FTP_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_BPAY_ACCT_FTP_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_BLACKLIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_BLACKLIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_BLACKLIST_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_OFI_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_OFI_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INB_OFI_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_CBA_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_CBA_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_CBA_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUS_IP_ACTIVITY, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUS_IP_ACTIVITY, 38, 2), '1960-01-01 00:00:00'))
            END as _A_AUS_IP_ACTIVITY
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CIF_ESTABLISH_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CIF_ESTABLISH_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CIF_ESTABLISH_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ECV_DOCUMENT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ECV_DOCUMENT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_ECV_DOCUMENT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_GROUP_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_GROUP_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_GROUP_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_POSTCODE_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_POSTCODE_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_POSTCODE_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_PORT_DATE_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_PORT_DATE_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_PORT_DATE_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LAST_NB_LOGIN_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LAST_NB_LOGIN_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_LAST_NB_LOGIN_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_COUNTRY_DATE_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_COUNTRY_DATE_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_COUNTRY_DATE_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_OPEN_LAST_PAYER_CIF_DT_10, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_OPEN_LAST_PAYER_CIF_DT_10, 38, 2), '1960-01-01 00:00:00'))
            END as _B_OPEN_LAST_PAYER_CIF_DT_10
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_WHITELIST_SENDER_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_WHITELIST_SENDER_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _B_NPP_WHITELIST_SENDER_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _B_ANY_CUST_FTP_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_OUT_CNT_DATE, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_OUT_CNT_DATE, 38, 2), '1960-01-01 00:00:00'))
            END as _B_NPP_OUT_CNT_DATE
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_I_ALL_LOGONS_FDT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_I_ALL_LOGONS_FDT, 38, 2), '1960-01-01 00:00:00'))
            END as _I_ALL_LOGONS_FDT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_4, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_4, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_4
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_FIRST_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_FIRST_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_FIRST_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_C_5, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_C_5, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_C_5
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_2, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_F_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_C, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_C, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_F_C
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_MOB_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_MOB_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_IS_MOB_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_IS_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_2WP_SNT_TRAN_HOLD_END_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_2WP_SNT_TRAN_HOLD_END_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_2WP_SNT_TRAN_HOLD_END_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1701_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1701_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _N_1701_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_D_P_C, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_D_P_C, 38, 2), '1960-01-01 00:00:00'))
            END as _N_D_P_C
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_T_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_T_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_T_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1601_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1601_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_1601_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_F_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_F_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_F_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_NB_MEDIUM_PRIORITY_FIRE, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_NB_MEDIUM_PRIORITY_FIRE, 38, 2), '1960-01-01 00:00:00'))
            END as _N_NB_MEDIUM_PRIORITY_FIRE
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_BROWSER_FIRST_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_BROWSER_FIRST_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_BROWSER_FIRST_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_DEVICE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_DEVICE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_NB_DEVICE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_FIRST_DEVICE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_FIRST_DEVICE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_NB_FIRST_DEVICE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_HCE_ADD_CARD, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_HCE_ADD_CARD, 38, 2), '1960-01-01 00:00:00'))
            END as _N_HCE_ADD_CARD
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MALWARE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MALWARE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_MALWARE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_5, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_5, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_5
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_IDTO_PW, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_IDTO_PW, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_IDTO_PW
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_LOGON_FINEST, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_LOGON_FINEST, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_LOGON_FINEST
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_PASSWORD_TEMP, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_PASSWORD_TEMP, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_PASSWORD_TEMP
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_X_D_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_X_D_2, 38, 2), '1960-01-01 00:00:00'))
            END as _X_D_2
        
            ,             try_to_number(_a_bts_bio_se, 38, 2) as _a_bts_bio_se
            ,_A_BTS_BNFT
            ,try_to_number(_a_ecv_commsec_flag, 38, 2) as _a_ecv_commsec_flag
            ,try_to_number(_a_npp_inb_pmt_val, 38, 2) as _a_npp_inb_pmt_val
            ,_A_PROF_RISK_IND
            ,try_to_number(_a_cust_actioncode_1, 38, 2) as _a_cust_actioncode_1
            ,try_to_number(_a_dtl_actioncode_1, 38, 2) as _a_dtl_actioncode_1
            ,try_to_number(_a_dtl_actioncode_2, 38, 2) as _a_dtl_actioncode_2
            ,try_to_number(_a_atm_withdrawal_sum_amt, 38, 2) as _a_atm_withdrawal_sum_amt
            ,try_to_number(_a_npp_inbound_sum_amt, 38, 2) as _a_npp_inbound_sum_amt
            ,_A_TELSTRA_ACTIVE_CALL
            ,_A_TELSTRA_API_EVENT_ID
            ,try_to_number(_a_telstra_existing_relation, 38, 2) as _a_telstra_existing_relation
            ,_A_LATEST_NCRG_ISP
            ,try_to_number(_a_geo_distance, 38, 2) as _a_geo_distance
            ,_A_P_N_H
            ,try_to_number(_a_ftp_sum_1, 38, 2) as _a_ftp_sum_1
            ,try_to_number(_a_multi_cnt, 38, 2) as _a_multi_cnt
            ,try_to_number(_a_crd_scam_supp_7d_sum_1, 38, 2) as _a_crd_scam_supp_7d_sum_1
            ,try_to_number(_a_bts_cust_age, 38, 2) as _a_bts_cust_age
            ,try_to_number(_a_p_l_1, 38, 2) as _a_p_l_1
            ,try_to_number(_a_p_l_3, 38, 2) as _a_p_l_3
            ,try_to_number(_a_p_l_c, 38, 2) as _a_p_l_c
            ,_A_P_N_3
            ,_A_P_N_C
            ,try_to_number(_a_crd_npp_payment_amount, 38, 2) as _a_crd_npp_payment_amount
            ,try_to_number(_a_curr_capp_device_nftp_cnt, 38, 2) as _a_curr_capp_device_nftp_cnt
            ,_A_2WAY_TYPE
            ,try_to_number(_a_cust_acct_bal, 38, 2) as _a_cust_acct_bal
            ,try_to_number(_a_cust_avg_acct_bal, 38, 2) as _a_cust_avg_acct_bal
            ,try_to_number(_a_e, 38, 2) as _a_e
            ,try_to_number(_a_r, 38, 2) as _a_r
            ,try_to_number(_a_t, 38, 2) as _a_t
            ,try_to_number(_a_u, 38, 2) as _a_u
            ,try_to_number(_a_capp_logon_cnt_2, 38, 2) as _a_capp_logon_cnt_2
            ,try_to_number(_a_capp_logon_cnt_3, 38, 2) as _a_capp_logon_cnt_3
            ,try_to_number(_a_capp_registrations_cnt_3, 38, 2) as _a_capp_registrations_cnt_3
            ,try_to_number(_a_nb_logons_cnt_2, 38, 2) as _a_nb_logons_cnt_2
            ,try_to_number(_a_nb_logons_cnt_3, 38, 2) as _a_nb_logons_cnt_3
            ,_A_CUST_BROWSER_VER
            ,_A_CUST_DEVICE_BROWSER_VER
            ,_A_CUST_OS_NAME
            ,_A_CUST_OS_VER
            ,try_to_number(_a_curr_nb_browser_cnt, 38, 2) as _a_curr_nb_browser_cnt
            ,_A_CIF_ESTABLISH_CUST_PCODE
            ,try_to_number(_a_list_rl1_scam_cust_cif, 38, 2) as _a_list_rl1_scam_cust_cif
            ,_A_LOGON_NB_IP_PC
            ,try_to_number(_a_curr_capp_device_cnt, 38, 2) as _a_curr_capp_device_cnt
            ,_A_PREV_CAPP_DEVICE
            ,try_to_number(_a_prev_capp_device_cnt, 38, 2) as _a_prev_capp_device_cnt
            ,_A_PREV_CAPP_DEVICE_MODEL
            ,_A_PROF_CAPP_DEVICE_2
            ,try_to_number(_a_prof_capp_device_cnt_1, 38, 2) as _a_prof_capp_device_cnt_1
            ,try_to_number(_a_prof_capp_device_cnt_2, 38, 2) as _a_prof_capp_device_cnt_2
            ,try_to_number(_a_prof_capp_device_cnt_3, 38, 2) as _a_prof_capp_device_cnt_3
            ,try_to_number(_a_prof_capp_device_cnt_5, 38, 2) as _a_prof_capp_device_cnt_5
            ,_A_PROF_CAPP_DEVICE_MODEL_1
            ,try_to_number(_a_vpn_vps_ip_logon_count, 38, 2) as _a_vpn_vps_ip_logon_count
            ,try_to_number(_a_cc_cash_advance_amt, 38, 2) as _a_cc_cash_advance_amt
            ,_A_MRISK_FOREIGN_IP_CNTRY_CODE
            ,_A_ALL_BPAY_ACCT_2
            ,try_to_number(_a_all_bpay_acct_sum_1, 38, 2) as _a_all_bpay_acct_sum_1
            ,try_to_number(_a_nb_bpay_acct_cnt_2, 38, 2) as _a_nb_bpay_acct_cnt_2
            ,try_to_number(_a_nb_bpay_acct_sum_1, 38, 2) as _a_nb_bpay_acct_sum_1
            ,try_to_number(_a_npp_ftp_sum, 38, 2) as _a_npp_ftp_sum
            ,try_to_number(_a_cust_npp_out_sum_aaa_1, 38, 2) as _a_cust_npp_out_sum_aaa_1
            ,try_to_number(_a_cust_npp_out_sum_aaa_2, 38, 2) as _a_cust_npp_out_sum_aaa_2
            ,try_to_number(_a_cust_npp_out_sum_aaa_5, 38, 2) as _a_cust_npp_out_sum_aaa_5
            ,try_to_number(_a_cust_npp_out_sum_aaa_long, 38, 2) as _a_cust_npp_out_sum_aaa_long
            ,try_to_number(_a_cust_sum_aaa_7, 38, 2) as _a_cust_sum_aaa_7
            ,try_to_number(_a_cust_sum_aaa_long, 38, 2) as _a_cust_sum_aaa_long
            ,try_to_number(_a_cust_sum_aaa_short, 38, 2) as _a_cust_sum_aaa_short
            ,_A_CIF_ESTABLISH_CHANNEL
            ,_A_CIF_ESTABLISH_EMAIL
            ,_A_CIF_ESTABLISH_PHONE
            ,_A_ECV_DOCUMENT_IP
            ,try_to_number(_a_client_postcode_ftp_sum_3, 38, 2) as _a_client_postcode_ftp_sum_3
            ,try_to_number(_a_bts_bch_sum, 38, 2) as _a_bts_bch_sum
            ,try_to_number(_a_monthly_transfer_count_2, 38, 2) as _a_monthly_transfer_count_2
            ,try_to_number(_a_monthly_transfer_count_3, 38, 2) as _a_monthly_transfer_count_3
            ,try_to_number(_a_monthly_transfer_count_4, 38, 2) as _a_monthly_transfer_count_4
            ,try_to_number(_a_monthly_transfer_sum_4, 38, 2) as _a_monthly_transfer_sum_4
            ,_A_CLIENT_CITY_10
            ,_A_CLIENT_CITY_6
            ,try_to_number(_a_client_city_cnt_1, 38, 2) as _a_client_city_cnt_1
            ,_A_CLIENT_COUNTRY_1
            ,_A_CLIENT_COUNTRY_3
            ,_A_CLIENT_COUNTRY_8
            ,try_to_number(_a_client_country_cnt_2, 38, 2) as _a_client_country_cnt_2
            ,try_to_number(_a_client_country_cnt_3, 38, 2) as _a_client_country_cnt_3
            ,try_to_number(_a_client_country_cnt_5, 38, 2) as _a_client_country_cnt_5
            ,try_to_number(_a_client_country_cnt_6, 38, 2) as _a_client_country_cnt_6
            ,try_to_number(_a_client_country_cnt_7, 38, 2) as _a_client_country_cnt_7
            ,_B_RECIP_PROFILE_GLOB_ERROR
            ,try_to_number(_b_bvt_numeric_1, 38, 2) as _b_bvt_numeric_1
            ,try_to_number(_b_recip_sum_today, 38, 2) as _b_recip_sum_today
            ,_B_CRYPTO_RISK
            ,_B_OPEN_LAST_PAYER_CIF_10
            ,try_to_number(_b_list_rl1_scam_tp_cif, 38, 2) as _b_list_rl1_scam_tp_cif
            ,try_to_number(_b_npp_out_ftp_sum_1, 38, 2) as _b_npp_out_ftp_sum_1
            ,try_to_number(_b_recip_sum_aaa_1, 38, 2) as _b_recip_sum_aaa_1
            ,try_to_number(_b_recip_sum_aaa_2, 38, 2) as _b_recip_sum_aaa_2
            ,try_to_number(_b_recip_sum_aaa_4, 38, 2) as _b_recip_sum_aaa_4
            ,try_to_number(_b_recip_sum_aaa_5, 38, 2) as _b_recip_sum_aaa_5
            ,try_to_number(_b_recip_sum_aaa_6, 38, 2) as _b_recip_sum_aaa_6
            ,try_to_number(_b_recip_sum_aaa_7, 38, 2) as _b_recip_sum_aaa_7
            ,try_to_number(_b_recip_sum_aaa_long, 38, 2) as _b_recip_sum_aaa_long
            ,_B_CLIENT_POSTCODE_1
            ,_B_CLIENT_POSTCODE_2
            ,_B_CLIENT_POSTCODE_3
            ,try_to_number(_b_client_postcode_cnt_1, 38, 2) as _b_client_postcode_cnt_1
            ,try_to_number(_b_client_postcode_cnt_2, 38, 2) as _b_client_postcode_cnt_2
            ,try_to_number(_b_client_postcode_cnt_3, 38, 2) as _b_client_postcode_cnt_3
            ,try_to_number(_b_client_postcode_cnt_4, 38, 2) as _b_client_postcode_cnt_4
            ,try_to_number(_b_client_postcode_sum_1, 38, 2) as _b_client_postcode_sum_1
            ,try_to_number(_b_client_postcode_sum_2, 38, 2) as _b_client_postcode_sum_2
            ,try_to_number(_b_client_postcode_sum_3, 38, 2) as _b_client_postcode_sum_3
            ,try_to_number(_b_client_postcode_sum_5, 38, 2) as _b_client_postcode_sum_5
            ,try_to_number(_b_recip_sum_1, 38, 2) as _b_recip_sum_1
            ,try_to_number(_i_cust_tran_sum_1, 38, 2) as _i_cust_tran_sum_1
            ,try_to_number(_i_cust_tran_sum_2, 38, 2) as _i_cust_tran_sum_2
            ,try_to_number(_i_cust_tran_sum_3, 38, 2) as _i_cust_tran_sum_3
            ,try_to_number(_i_all_logons_cnt_1, 38, 2) as _i_all_logons_cnt_1
            ,try_to_number(_i_capp_logons_perc_1, 38, 2) as _i_capp_logons_perc_1
            ,try_to_number(_i_capp_logons_perc_2, 38, 2) as _i_capp_logons_perc_2
            ,try_to_number(_i_capp_logons_perc_3, 38, 2) as _i_capp_logons_perc_3
            ,try_to_number(_i_capp_logons_perc_3m, 38, 2) as _i_capp_logons_perc_3m
            ,try_to_number(_i_cust_net_l_cnt_1, 38, 2) as _i_cust_net_l_cnt_1
            ,try_to_number(_i_cust_net_cnt_4, 38, 2) as _i_cust_net_cnt_4
            ,try_to_number(_i_cust_net_cnt_long, 38, 2) as _i_cust_net_cnt_long
            ,try_to_number(_l_scm_rsk_scr_2, 38, 2) as _l_scm_rsk_scr_2
            ,_L_PAYTO_MANDATE_ID
            ,_L_PUSH_API_1
            ,_L_PUSH_API_2
            ,_L_PUSH_API_3
            ,_L_PUSH_API_4
            ,_L_BC_CONTEXT
            ,try_to_number(_l_dpi_change, 38, 2) as _l_dpi_change
            ,try_to_number(_l_muid_age_per_user, 38, 2) as _l_muid_age_per_user
            ,try_to_number(_l_plugin_cnt, 38, 2) as _l_plugin_cnt
            ,try_to_number(_l_rare_sim_cntry_code, 38, 2) as _l_rare_sim_cntry_code
            ,try_to_number(_l_rooted_dev, 38, 2) as _l_rooted_dev
            ,_L_SDID_1
            ,try_to_number(_l_sdid_cnt_1, 38, 2) as _l_sdid_cnt_1
            ,try_to_number(_l_sdid_cnt_3, 38, 2) as _l_sdid_cnt_3
            ,_L_NC_ACCT_NUM
            ,_L_NC_MATCH_NAME
            ,_L_NC_RESPONSE_CODE
            ,_L_NC_WINNING_ALG
            ,try_to_number(_l_bc_ao_score, 38, 2) as _l_bc_ao_score
            ,_L_BRANCH_ID
            ,try_to_number(_l_drag_n_drop, 38, 2) as _l_drag_n_drop
            ,try_to_number(_l_pmt_amt, 38, 2) as _l_pmt_amt
            ,_L_PMT_DESCR
            ,try_to_number(_l_rcnt_hi_scr_on_dev, 38, 2) as _l_rcnt_hi_scr_on_dev
            ,try_to_number(_l_se_score, 38, 2) as _l_se_score
            ,try_to_number(_l_se_score_1, 38, 2) as _l_se_score_1
            ,try_to_number(_l_se_sess_cnt, 38, 2) as _l_se_sess_cnt
            ,try_to_number(_l_accum_amt_anom, 38, 2) as _l_accum_amt_anom
            ,try_to_number(_l_frst_proxy, 38, 2) as _l_frst_proxy
            ,try_to_number(_l_new_lang, 38, 2) as _l_new_lang
            ,try_to_number(_l_scrn_res_anom, 38, 2) as _l_scrn_res_anom
            ,_L_FINGERPRINT_1
            ,_L_FINGERPRINT_2
            ,_L_FINGERPRINT_3
            ,_L_FINGERPRINT_4
            ,_L_FINGERPRINT_5
            ,try_to_number(_l_score_1, 38, 2) as _l_score_1
            ,try_to_number(_l_score_2, 38, 2) as _l_score_2
            ,try_to_number(_l_score_3, 38, 2) as _l_score_3
            ,try_to_number(_l_score_4, 38, 2) as _l_score_4
            ,try_to_number(_l_score_5, 38, 2) as _l_score_5
            ,try_to_number(_l_rat_check, 38, 2) as _l_rat_check
            ,try_to_number(_l_m_l_1, 38, 2) as _l_m_l_1
            ,try_to_number(_l_m_l_4, 38, 2) as _l_m_l_4
            ,try_to_number(_l_m_l_c, 38, 2) as _l_m_l_c
            ,try_to_number(_l_bc_sess_cnt, 38, 2) as _l_bc_sess_cnt
            ,_L_BC_SESS_ID
            ,try_to_number(_l_acc_amt_1d, 38, 2) as _l_acc_amt_1d
            ,try_to_number(_l_acc_amt_1h, 38, 2) as _l_acc_amt_1h
            ,try_to_number(_l_and_id_age, 38, 2) as _l_and_id_age
            ,try_to_number(_l_bc_score, 38, 2) as _l_bc_score
            ,try_to_number(_l_browser_age, 38, 2) as _l_browser_age
            ,try_to_number(_l_city_age, 38, 2) as _l_city_age
            ,try_to_number(_l_clipb_event_cnt, 38, 2) as _l_clipb_event_cnt
            ,try_to_number(_l_days_lst_dev_ios, 38, 2) as _l_days_lst_dev_ios
            ,try_to_number(_l_days_lst_dev_js, 38, 2) as _l_days_lst_dev_js
            ,_L_DEV_FAM
            ,try_to_number(_l_dev_fam_age, 38, 2) as _l_dev_fam_age
            ,try_to_number(_l_dom_hand_ch_anomaly, 38, 2) as _l_dom_hand_ch_anomaly
            ,try_to_number(_l_ft_rat_app_inst, 38, 2) as _l_ft_rat_app_inst
            ,try_to_number(_l_g_con_dev, 38, 2) as _l_g_con_dev
            ,try_to_number(_l_ip_age, 38, 2) as _l_ip_age
            ,try_to_number(_l_is_active_call, 38, 2) as _l_is_active_call
            ,try_to_number(_l_isp_age, 38, 2) as _l_isp_age
            ,try_to_number(_l_key_mouse_anomaly, 38, 2) as _l_key_mouse_anomaly
            ,_L_LANG_1
            ,_L_LANG_2
            ,_L_LANG_3
            ,try_to_number(_l_lgn_import_anomaly, 38, 2) as _l_lgn_import_anomaly
            ,try_to_number(_l_max_30d_score, 38, 2) as _l_max_30d_score
            ,try_to_number(_l_mins_lst_lgn_capped, 38, 2) as _l_mins_lst_lgn_capped
            ,try_to_number(_l_mouse_cnt, 38, 2) as _l_mouse_cnt
            ,try_to_number(_l_mouse_doodl, 38, 2) as _l_mouse_doodl
            ,try_to_number(_l_new_browser, 38, 2) as _l_new_browser
            ,try_to_number(_l_new_browser_anomaly, 38, 2) as _l_new_browser_anomaly
            ,try_to_number(_l_new_mob_app_user, 38, 2) as _l_new_mob_app_user
            ,try_to_number(_l_new_mob_browser_user, 38, 2) as _l_new_mob_browser_user
            ,try_to_number(_l_num_sess_2h, 38, 2) as _l_num_sess_2h
            ,try_to_number(_l_num_sess_4h, 38, 2) as _l_num_sess_4h
            ,try_to_number(_l_orient_event_cnt, 38, 2) as _l_orient_event_cnt
            ,try_to_number(_l_os_ch_anomaly, 38, 2) as _l_os_ch_anomaly
            ,_L_POLICY_NM
            ,try_to_number(_l_priv_browsing_anomaly, 38, 2) as _l_priv_browsing_anomaly
            ,_L_PROXY_TYPE
            ,try_to_number(_l_scrn_h, 38, 2) as _l_scrn_h
            ,try_to_number(_l_scrn_w, 38, 2) as _l_scrn_w
            ,try_to_number(_l_sess_cnt_mob_browser, 38, 2) as _l_sess_cnt_mob_browser
            ,try_to_number(_l_sess_cnt_mob_sdk, 38, 2) as _l_sess_cnt_mob_sdk
            ,try_to_number(_l_sess_cnt_web, 38, 2) as _l_sess_cnt_web
            ,_L_SESS_ID
            ,try_to_number(_l_sim_ip_cntry_mismatch, 38, 2) as _l_sim_ip_cntry_mismatch
            ,try_to_number(_l_tap_cnt, 38, 2) as _l_tap_cnt
            ,try_to_number(_l_total_sess_cnt, 38, 2) as _l_total_sess_cnt
            ,try_to_number(_l_touch_cnt, 38, 2) as _l_touch_cnt
            ,try_to_number(_l_type_patterns_anomaly, 38, 2) as _l_type_patterns_anomaly
            ,try_to_number(_l_uid_age, 38, 2) as _l_uid_age
            ,try_to_number(_n_bc_cr_bc_1, 38, 2) as _n_bc_cr_bc_1
            ,try_to_number(_n_ftp_cnt_1, 38, 2) as _n_ftp_cnt_1
            ,_N_5_RCNT_M100S_1
            ,_N_5_RCNT_M100S_2
            ,try_to_number(_n_mps_mndt_cnt_24h_1, 38, 2) as _n_mps_mndt_cnt_24h_1
            ,try_to_number(_n_mob_oth_tran_sum_1, 38, 2) as _n_mob_oth_tran_sum_1
            ,_N_NB_LOGON_USER_AGENT
            ,try_to_number(_n_ca_device_profile_1, 38, 2) as _n_ca_device_profile_1
            ,try_to_number(_n_ca_device_profile_3, 38, 2) as _n_ca_device_profile_3
            ,try_to_number(_n_p20_7d_cnt_1, 38, 2) as _n_p20_7d_cnt_1
            ,try_to_number(_n_ca_lgn_cnt_24h_1, 38, 2) as _n_ca_lgn_cnt_24h_1
            ,try_to_number(_n_nmchk_cnt, 38, 2) as _n_nmchk_cnt
            ,_N_NMCHK_RECIP_CNT_1
            ,try_to_number(_n_2wp_tran_ind_1, 38, 2) as _n_2wp_tran_ind_1
            ,try_to_number(_n_ca_dev_bl_flag_2, 38, 2) as _n_ca_dev_bl_flag_2
            ,_N_CLIENT_SSID_NAME_1
            ,try_to_number(_n_cust_txn_count, 38, 2) as _n_cust_txn_count
            ,try_to_number(_n_crypto_recipient_sum, 38, 2) as _n_crypto_recipient_sum
            ,try_to_number(_n_rp_ses_ip_1, 38, 2) as _n_rp_ses_ip_1
            ,try_to_number(_n_multi_amt_1, 38, 2) as _n_multi_amt_1
            ,try_to_number(_n_nb_recipient_amt_1, 38, 2) as _n_nb_recipient_amt_1
            ,try_to_number(_n_nb_recipient_amt_3, 38, 2) as _n_nb_recipient_amt_3
            ,try_to_number(_n_nb_sum_tpt_4, 38, 2) as _n_nb_sum_tpt_4
            ,_N_D_D_3
            ,try_to_number(_n_h_1, 38, 2) as _n_h_1
            ,try_to_number(_n_cust_nb_device_cnt, 38, 2) as _n_cust_nb_device_cnt
            ,try_to_number(_n_open_ftp_sum_7d, 38, 2) as _n_open_ftp_sum_7d
            ,try_to_number(_n_capp_bpay_cnt_1, 38, 2) as _n_capp_bpay_cnt_1
            ,try_to_number(_n_capp_linked_cnt_1, 38, 2) as _n_capp_linked_cnt_1
            ,try_to_number(_n_capp_linked_cnt_2, 38, 2) as _n_capp_linked_cnt_2
            ,_N_ESTAB_SCHEDULE_2
            ,try_to_number(_n_log_scr_cons_2, 38, 2) as _n_log_scr_cons_2
            ,_N_LINKED_RECIP
            ,_N_CLIENT_IDCHNG_NB
            ,_N_CLIENT_NEW_PAYEE_1
            ,_N_CLIENT_NEW_PAYEE_2
            ,_N_CLIENT_NEW_PAYEE_3
            ,try_to_number(_x_cif_sender_cnt, 38, 2) as _x_cif_sender_cnt
            ,try_to_number(_x_cif_sender_sum, 38, 2) as _x_cif_sender_sum
            ,try_to_number(_x_name_match_cnt, 38, 2) as _x_name_match_cnt
            ,try_to_number(_x_name_match_ind, 38, 2) as _x_name_match_ind
            ,try_to_number(_x_ft_over5k_recip_cnt, 38, 2) as _x_ft_over5k_recip_cnt
            ,try_to_number(_x_last_n_txn_count, 38, 2) as _x_last_n_txn_count
            ,try_to_number(_x_t_1, 38, 2) as _x_t_1
            ,try_to_number(_x_t_2, 38, 2) as _x_t_2
            ,try_to_number(_x_t_3, 38, 2) as _x_t_3
            ,try_to_number(_x_t_5, 38, 2) as _x_t_5
            ,try_to_number(_x_npp_out_sum_1, 38, 2) as _x_npp_out_sum_1
            ,try_to_number(_x_npp_out_sum_3, 38, 2) as _x_npp_out_sum_3
        FROM
            LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
        WHERE
            TTS_TRAN_DATE_ALT BETWEEN 20250724 AND 20250729
            AND COALESCE(TRY_CAST(TGX_TRAN_AMT AS DECIMAL(14,2)), 0) > 0 -- Exclude non-mon txns 
            AND DTL_EX_1_5S_01 IN ('C205N','C207N','C242N','C244N','C246N','N205N','N207N','N244N','N246N')-- NPP Outbound txn only
            AND SSX_CUST_NUM <> 'Not Available'
    )",BROOKSOW,R_USR_FRAUMD_LABMLFRD_RW,9594506,9594.506,159.908433,2.665141,2X-LARGE,32,85.284512
01be05cd-3204-abe2-0000-c71d2606fada,"CREATE  OR  REPLACE    TABLE  LABMLFRD.TECHDS_CCA_TRANSACTIONS_FRAUD_DEPLOY10_V3_TEST_FIRES_ONLY(""CMX_TRAN_ID"" STRING(134217728), ""SSX_CUST_NUM"" STRING(16777216), ""TTS_TRAN_DATE_ALT"" STRING(16777216), ""DTL_EX_0_20S_001"" STRING(16777216), ""DTL_EX_1_5S_01"" STRING(16777216), ""TGX_TRAN_AMT"" STRING(16777216), ""HOUR"" BIGINT, ""_A_MARVIN_DIGI_DECISION_NUM"" STRING(16777216), ""LAG_A_MARVIN_DIGI_DECISION_NUM"" STRING(16777216), ""TRANSACTIONDATETIME"" TIMESTAMP_NTZ, ""_A_BTS_MAX_SE_DT"" BIGINT, ""_A_DTL_ACTIONCODE_DT_1"" BIGINT, ""_A_CRD_ACTIONCODE_DT_1"" BIGINT, ""_A_NPP_INBOUND_DATETIME"" BIGINT, ""_A_LO_DT"" BIGINT, ""_A_CC_DT"" BIGINT, ""_A_CAPP_NOTIFY_OPT_OUT_DT"" BIGINT, ""_A_CD_RTR_DT_1"" BIGINT, ""_A_CD_RTR_DT_3"" BIGINT, ""_A_IVR_LOGON_DT"" BIGINT, ""_A_NPP_FTP_DATE2"" BIGINT, ""_A_P_P_3"" BIGINT, ""_A_CRD_NPP_PAYMENT_DT"" BIGINT, ""_A_IS_IP_DT_3"" BIGINT, ""_A_CAPP_DEV_RETR_DT"" BIGINT, ""_A_5_2"" BIGINT, ""_A_ONLINE_PL_DT"" BIGINT, ""_A_DTL_CAPP_NBANK_SSO_DT"" BIGINT, ""_A_DTL_HID_UNHID_ACCT_DT_PREV"" BIGINT, ""_A_CLIENT_DETAILS_VIEW"" BIGINT, ""_A_MANUAL_NB_LOCK_DT"" BIGINT, ""_A_CUST_BROWSER_PREV_DT_2"" BIGINT, ""_A_SCAMP1_MLW_DT"" BIGINT, ""_A_SCAMP2_MLW_DT"" BIGINT, ""_A_SCAMP5_MLW_DT"" BIGINT, ""_A_SCAMP7_MLW_DT"" BIGINT, ""_A_REVERSE_IND_SCAMP4_DT"" BIGINT, ""_A_NB_LASTLOGON_DT_3"" BIGINT, ""_A_AUTO_DEC_CP_PP_DT"" BIGINT, ""_A_NPP_OUT_PAYID_DT"" BIGINT, ""_A_NPP_INB_ALL_DT"" BIGINT, ""_A_NPP_OUT_HOLD_COMMSEE_DT"" BIGINT, ""_A_PROF_CAPP_DEVICE_DT_1"" BIGINT, ""_A_RETRIEVE_STMT_DETAILS_DT"" BIGINT, ""_A_CAPP_REGO_DT"" BIGINT, ""_A_NPP_WHITELIST_CUS_ACCT_DT"" BIGINT, ""_A_NPP_WHITELIST_PAYID_DT"" BIGINT, ""_A_NB_BPAY_ACCT_FTP_DT_1"" BIGINT, ""_A_NPP_BLACKLIST_PAYID_DT"" BIGINT, ""_A_NPP_INB_OFI_PAYID_DT"" BIGINT, ""_A_NPP_OUT_CBA_PAYID_DT"" BIGINT, ""_A_AUS_IP_ACTIVITY"" BIGINT, ""_A_CIF_ESTABLISH_DT"" BIGINT, ""_A_ECV_DOCUMENT_DT"" BIGINT, ""_A_NB_GROUP_DT_2"" BIGINT, ""_A_CLIENT_POSTCODE_DT_2"" BIGINT, ""_A_CLIENT_PORT_DATE_1"" BIGINT, ""_A_LAST_NB_LOGIN_DT_1"" BIGINT, ""_A_CLIENT_COUNTRY_DATE_1"" BIGINT, ""_B_OPEN_LAST_PAYER_CIF_DT_10"" BIGINT, ""_B_NPP_WHITELIST_SENDER_DT"" BIGINT, ""_B_ANY_CUST_FTP_DT"" BIGINT, ""_B_NPP_OUT_CNT_DATE"" BIGINT, ""_I_ALL_LOGONS_FDT"" BIGINT, ""_L_PUSH_API_DT_1"" BIGINT, ""_L_PUSH_API_DT_2"" BIGINT, ""_L_PUSH_API_DT_3"" BIGINT, ""_L_PUSH_API_DT_4"" BIGINT, ""_L_FIRST_RAT_DT"" BIGINT, ""_L_M_C_5"" BIGINT, ""_L_M_F_2"" BIGINT, ""_L_M_F_C"" BIGINT, ""_L_IS_MOB_RAT_DT"" BIGINT, ""_L_IS_RAT_DT"" BIGINT, ""_N_2WP_SNT_TRAN_HOLD_END_DT"" BIGINT, ""_N_1701_DT_1"" BIGINT, ""_N_D_P_C"" BIGINT, ""_N_T_3"" BIGINT, ""_N_1601_DT"" BIGINT, ""_N_F_3"" BIGINT, ""_N_NB_MEDIUM_PRIORITY_FIRE"" BIGINT, ""_N_CUST_BROWSER_FIRST_DT_2"" BIGINT, ""_N_CUST_NB_DEVICE_DT"" BIGINT, ""_N_CUST_NB_FIRST_DEVICE_DT"" BIGINT, ""_N_HCE_ADD_CARD"" BIGINT, ""_N_MALWARE_DT"" BIGINT, ""_N_CAPP_REG_DT_2"" BIGINT, ""_N_CAPP_REG_DT_3"" BIGINT, ""_N_CAPP_REG_DT_5"" BIGINT, ""_N_CLIENT_IDTO_PW"" BIGINT, ""_N_CLIENT_LOGON_FINEST"" BIGINT, ""_N_CLIENT_PASSWORD_TEMP"" BIGINT, ""_X_D_2"" BIGINT, ""_A_BTS_BIO_SE"" NUMBER(38, 2), ""_A_BTS_BNFT"" STRING(16777216), ""_A_ECV_COMMSEC_FLAG"" NUMBER(38, 2), ""_A_NPP_INB_PMT_VAL"" NUMBER(38, 2), ""_A_PROF_RISK_IND"" STRING(16777216), ""_A_CUST_ACTIONCODE_1"" NUMBER(38, 2), ""_A_DTL_ACTIONCODE_1"" NUMBER(38, 2), ""_A_DTL_ACTIONCODE_2"" NUMBER(38, 2), ""_A_ATM_WITHDRAWAL_SUM_AMT"" NUMBER(38, 2), ""_A_NPP_INBOUND_SUM_AMT"" NUMBER(38, 2), ""_A_TELSTRA_ACTIVE_CALL"" STRING(16777216), ""_A_TELSTRA_API_EVENT_ID"" STRING(16777216), ""_A_TELSTRA_EXISTING_RELATION"" NUMBER(38, 2), ""_A_LATEST_NCRG_ISP"" STRING(16777216), ""_A_GEO_DISTANCE"" NUMBER(38, 2), ""_A_P_N_H"" STRING(16777216), ""_A_FTP_SUM_1"" NUMBER(38, 2), ""_A_MULTI_CNT"" NUMBER(38, 2), ""_A_CRD_SCAM_SUPP_7D_SUM_1"" NUMBER(38, 2), ""_A_BTS_CUST_AGE"" NUMBER(38, 2), ""_A_P_L_1"" NUMBER(38, 2), ""_A_P_L_3"" NUMBER(38, 2), ""_A_P_L_C"" NUMBER(38, 2), ""_A_P_N_3"" STRING(16777216), ""_A_P_N_C"" STRING(16777216), ""_A_CRD_NPP_PAYMENT_AMOUNT"" NUMBER(38, 2), ""_A_CURR_CAPP_DEVICE_NFTP_CNT"" NUMBER(38, 2), ""_A_2WAY_TYPE"" STRING(16777216), ""_A_CUST_ACCT_BAL"" NUMBER(38, 2), ""_A_CUST_AVG_ACCT_BAL"" NUMBER(38, 2), ""_A_E"" NUMBER(38, 2), ""_A_R"" NUMBER(38, 2), ""_A_T"" NUMBER(38, 2), ""_A_U"" NUMBER(38, 2), ""_A_CAPP_LOGON_CNT_2"" NUMBER(38, 2), ""_A_CAPP_LOGON_CNT_3"" NUMBER(38, 2), ""_A_CAPP_REGISTRATIONS_CNT_3"" NUMBER(38, 2), ""_A_NB_LOGONS_CNT_2"" NUMBER(38, 2), ""_A_NB_LOGONS_CNT_3"" NUMBER(38, 2), ""_A_CUST_BROWSER_VER"" STRING(16777216), ""_A_CUST_DEVICE_BROWSER_VER"" STRING(16777216), ""_A_CUST_OS_NAME"" STRING(16777216), ""_A_CUST_OS_VER"" STRING(16777216), ""_A_CURR_NB_BROWSER_CNT"" NUMBER(38, 2), ""_A_CIF_ESTABLISH_CUST_PCODE"" STRING(16777216), ""_A_LIST_RL1_SCAM_CUST_CIF"" NUMBER(38, 2), ""_A_LOGON_NB_IP_PC"" STRING(16777216), ""_A_CURR_CAPP_DEVICE_CNT"" NUMBER(38, 2), ""_A_PREV_CAPP_DEVICE"" STRING(16777216), ""_A_PREV_CAPP_DEVICE_CNT"" NUMBER(38, 2), ""_A_PREV_CAPP_DEVICE_MODEL"" STRING(16777216), ""_A_PROF_CAPP_DEVICE_2"" STRING(16777216), ""_A_PROF_CAPP_DEVICE_CNT_1"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_2"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_3"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_CNT_5"" NUMBER(38, 2), ""_A_PROF_CAPP_DEVICE_MODEL_1"" STRING(16777216), ""_A_VPN_VPS_IP_LOGON_COUNT"" NUMBER(38, 2), ""_A_CC_CASH_ADVANCE_AMT"" NUMBER(38, 2), ""_A_MRISK_FOREIGN_IP_CNTRY_CODE"" STRING(16777216), ""_A_ALL_BPAY_ACCT_2"" STRING(16777216), ""_A_ALL_BPAY_ACCT_SUM_1"" NUMBER(38, 2), ""_A_NB_BPAY_ACCT_CNT_2"" NUMBER(38, 2), ""_A_NB_BPAY_ACCT_SUM_1"" NUMBER(38, 2), ""_A_NPP_FTP_SUM"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_1"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_2"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_5"" NUMBER(38, 2), ""_A_CUST_NPP_OUT_SUM_AAA_LONG"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_7"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_LONG"" NUMBER(38, 2), ""_A_CUST_SUM_AAA_SHORT"" NUMBER(38, 2), ""_A_CIF_ESTABLISH_CHANNEL"" STRING(16777216), ""_A_CIF_ESTABLISH_EMAIL"" STRING(16777216), ""_A_CIF_ESTABLISH_PHONE"" STRING(16777216), ""_A_ECV_DOCUMENT_IP"" STRING(16777216), ""_A_CLIENT_POSTCODE_FTP_SUM_3"" NUMBER(38, 2), ""_A_BTS_BCH_SUM"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_2"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_3"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_COUNT_4"" NUMBER(38, 2), ""_A_MONTHLY_TRANSFER_SUM_4"" NUMBER(38, 2), ""_A_CLIENT_CITY_10"" STRING(16777216), ""_A_CLIENT_CITY_6"" STRING(16777216), ""_A_CLIENT_CITY_CNT_1"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_1"" STRING(16777216), ""_A_CLIENT_COUNTRY_3"" STRING(16777216), ""_A_CLIENT_COUNTRY_8"" STRING(16777216), ""_A_CLIENT_COUNTRY_CNT_2"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_3"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_5"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_6"" NUMBER(38, 2), ""_A_CLIENT_COUNTRY_CNT_7"" NUMBER(38, 2), ""_B_RECIP_PROFILE_GLOB_ERROR"" STRING(16777216), ""_B_BVT_NUMERIC_1"" NUMBER(38, 2), ""_B_RECIP_SUM_TODAY"" NUMBER(38, 2), ""_B_CRYPTO_RISK"" STRING(16777216), ""_B_OPEN_LAST_PAYER_CIF_10"" STRING(16777216), ""_B_LIST_RL1_SCAM_TP_CIF"" NUMBER(38, 2), ""_B_NPP_OUT_FTP_SUM_1"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_1"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_2"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_4"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_5"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_6"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_7"" NUMBER(38, 2), ""_B_RECIP_SUM_AAA_LONG"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_1"" STRING(16777216), ""_B_CLIENT_POSTCODE_2"" STRING(16777216), ""_B_CLIENT_POSTCODE_3"" STRING(16777216), ""_B_CLIENT_POSTCODE_CNT_1"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_2"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_3"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_CNT_4"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_1"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_2"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_3"" NUMBER(38, 2), ""_B_CLIENT_POSTCODE_SUM_5"" NUMBER(38, 2), ""_B_RECIP_SUM_1"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_1"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_2"" NUMBER(38, 2), ""_I_CUST_TRAN_SUM_3"" NUMBER(38, 2), ""_I_ALL_LOGONS_CNT_1"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_1"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_2"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_3"" NUMBER(38, 2), ""_I_CAPP_LOGONS_PERC_3M"" NUMBER(38, 2), ""_I_CUST_NET_L_CNT_1"" NUMBER(38, 2), ""_I_CUST_NET_CNT_4"" NUMBER(38, 2), ""_I_CUST_NET_CNT_LONG"" NUMBER(38, 2), ""_L_SCM_RSK_SCR_2"" NUMBER(38, 2), ""_L_PAYTO_MANDATE_ID"" STRING(16777216), ""_L_PUSH_API_1"" STRING(16777216), ""_L_PUSH_API_2"" STRING(16777216), ""_L_PUSH_API_3"" STRING(16777216), ""_L_PUSH_API_4"" STRING(16777216), ""_L_BC_CONTEXT"" STRING(16777216), ""_L_DPI_CHANGE"" NUMBER(38, 2), ""_L_MUID_AGE_PER_USER"" NUMBER(38, 2), ""_L_PLUGIN_CNT"" NUMBER(38, 2), ""_L_RARE_SIM_CNTRY_CODE"" NUMBER(38, 2), ""_L_ROOTED_DEV"" NUMBER(38, 2), ""_L_SDID_1"" STRING(16777216), ""_L_SDID_CNT_1"" NUMBER(38, 2), ""_L_SDID_CNT_3"" NUMBER(38, 2), ""_L_NC_ACCT_NUM"" STRING(16777216), ""_L_NC_MATCH_NAME"" STRING(16777216), ""_L_NC_RESPONSE_CODE"" STRING(16777216), ""_L_NC_WINNING_ALG"" STRING(16777216), ""_L_BC_AO_SCORE"" NUMBER(38, 2), ""_L_BRANCH_ID"" STRING(16777216), ""_L_DRAG_N_DROP"" NUMBER(38, 2), ""_L_PMT_AMT"" NUMBER(38, 2), ""_L_PMT_DESCR"" STRING(16777216), ""_L_RCNT_HI_SCR_ON_DEV"" NUMBER(38, 2), ""_L_SE_SCORE"" NUMBER(38, 2), ""_L_SE_SCORE_1"" NUMBER(38, 2), ""_L_SE_SESS_CNT"" NUMBER(38, 2), ""_L_ACCUM_AMT_ANOM"" NUMBER(38, 2), ""_L_FRST_PROXY"" NUMBER(38, 2), ""_L_NEW_LANG"" NUMBER(38, 2), ""_L_SCRN_RES_ANOM"" NUMBER(38, 2), ""_L_FINGERPRINT_1"" STRING(16777216), ""_L_FINGERPRINT_2"" STRING(16777216), ""_L_FINGERPRINT_3"" STRING(16777216), ""_L_FINGERPRINT_4"" STRING(16777216), ""_L_FINGERPRINT_5"" STRING(16777216), ""_L_SCORE_1"" NUMBER(38, 2), ""_L_SCORE_2"" NUMBER(38, 2), ""_L_SCORE_3"" NUMBER(38, 2), ""_L_SCORE_4"" NUMBER(38, 2), ""_L_SCORE_5"" NUMBER(38, 2), ""_L_RAT_CHECK"" NUMBER(38, 2), ""_L_M_L_1"" NUMBER(38, 2), ""_L_M_L_4"" NUMBER(38, 2), ""_L_M_L_C"" NUMBER(38, 2), ""_L_BC_SESS_CNT"" NUMBER(38, 2), ""_L_BC_SESS_ID"" STRING(16777216), ""_L_ACC_AMT_1D"" NUMBER(38, 2), ""_L_ACC_AMT_1H"" NUMBER(38, 2), ""_L_AND_ID_AGE"" NUMBER(38, 2), ""_L_BC_SCORE"" NUMBER(38, 2), ""_L_BROWSER_AGE"" NUMBER(38, 2), ""_L_CITY_AGE"" NUMBER(38, 2), ""_L_CLIPB_EVENT_CNT"" NUMBER(38, 2), ""_L_DAYS_LST_DEV_IOS"" NUMBER(38, 2), ""_L_DAYS_LST_DEV_JS"" NUMBER(38, 2), ""_L_DEV_FAM"" STRING(16777216), ""_L_DEV_FAM_AGE"" NUMBER(38, 2), ""_L_DOM_HAND_CH_ANOMALY"" NUMBER(38, 2), ""_L_FT_RAT_APP_INST"" NUMBER(38, 2), ""_L_G_CON_DEV"" NUMBER(38, 2), ""_L_IP_AGE"" NUMBER(38, 2), ""_L_IS_ACTIVE_CALL"" NUMBER(38, 2), ""_L_ISP_AGE"" NUMBER(38, 2), ""_L_KEY_MOUSE_ANOMALY"" NUMBER(38, 2), ""_L_LANG_1"" STRING(16777216), ""_L_LANG_2"" STRING(16777216), ""_L_LANG_3"" STRING(16777216), ""_L_LGN_IMPORT_ANOMALY"" NUMBER(38, 2), ""_L_MAX_30D_SCORE"" NUMBER(38, 2), ""_L_MINS_LST_LGN_CAPPED"" NUMBER(38, 2), ""_L_MOUSE_CNT"" NUMBER(38, 2), ""_L_MOUSE_DOODL"" NUMBER(38, 2), ""_L_NEW_BROWSER"" NUMBER(38, 2), ""_L_NEW_BROWSER_ANOMALY"" NUMBER(38, 2), ""_L_NEW_MOB_APP_USER"" NUMBER(38, 2), ""_L_NEW_MOB_BROWSER_USER"" NUMBER(38, 2), ""_L_NUM_SESS_2H"" NUMBER(38, 2), ""_L_NUM_SESS_4H"" NUMBER(38, 2), ""_L_ORIENT_EVENT_CNT"" NUMBER(38, 2), ""_L_OS_CH_ANOMALY"" NUMBER(38, 2), ""_L_POLICY_NM"" STRING(16777216), ""_L_PRIV_BROWSING_ANOMALY"" NUMBER(38, 2), ""_L_PROXY_TYPE"" STRING(16777216), ""_L_SCRN_H"" NUMBER(38, 2), ""_L_SCRN_W"" NUMBER(38, 2), ""_L_SESS_CNT_MOB_BROWSER"" NUMBER(38, 2), ""_L_SESS_CNT_MOB_SDK"" NUMBER(38, 2), ""_L_SESS_CNT_WEB"" NUMBER(38, 2), ""_L_SESS_ID"" STRING(16777216), ""_L_SIM_IP_CNTRY_MISMATCH"" NUMBER(38, 2), ""_L_TAP_CNT"" NUMBER(38, 2), ""_L_TOTAL_SESS_CNT"" NUMBER(38, 2), ""_L_TOUCH_CNT"" NUMBER(38, 2), ""_L_TYPE_PATTERNS_ANOMALY"" NUMBER(38, 2), ""_L_UID_AGE"" NUMBER(38, 2), ""_N_BC_CR_BC_1"" NUMBER(38, 2), ""_N_FTP_CNT_1"" NUMBER(38, 2), ""_N_5_RCNT_M100S_1"" STRING(16777216), ""_N_5_RCNT_M100S_2"" STRING(16777216), ""_N_MPS_MNDT_CNT_24H_1"" NUMBER(38, 2), ""_N_MOB_OTH_TRAN_SUM_1"" NUMBER(38, 2), ""_N_NB_LOGON_USER_AGENT"" STRING(16777216), ""_N_CA_DEVICE_PROFILE_1"" NUMBER(38, 2), ""_N_CA_DEVICE_PROFILE_3"" NUMBER(38, 2), ""_N_P20_7D_CNT_1"" NUMBER(38, 2), ""_N_CA_LGN_CNT_24H_1"" NUMBER(38, 2), ""_N_NMCHK_CNT"" NUMBER(38, 2), ""_N_NMCHK_RECIP_CNT_1"" STRING(16777216), ""_N_2WP_TRAN_IND_1"" NUMBER(38, 2), ""_N_CA_DEV_BL_FLAG_2"" NUMBER(38, 2), ""_N_CLIENT_SSID_NAME_1"" STRING(16777216), ""_N_CUST_TXN_COUNT"" NUMBER(38, 2), ""_N_CRYPTO_RECIPIENT_SUM"" NUMBER(38, 2), ""_N_RP_SES_IP_1"" NUMBER(38, 2), ""_N_MULTI_AMT_1"" NUMBER(38, 2), ""_N_NB_RECIPIENT_AMT_1"" NUMBER(38, 2), ""_N_NB_RECIPIENT_AMT_3"" NUMBER(38, 2), ""_N_NB_SUM_TPT_4"" NUMBER(38, 2), ""_N_D_D_3"" STRING(16777216), ""_N_H_1"" NUMBER(38, 2), ""_N_CUST_NB_DEVICE_CNT"" NUMBER(38, 2), ""_N_OPEN_FTP_SUM_7D"" NUMBER(38, 2), ""_N_CAPP_BPAY_CNT_1"" NUMBER(38, 2), ""_N_CAPP_LINKED_CNT_1"" NUMBER(38, 2), ""_N_CAPP_LINKED_CNT_2"" NUMBER(38, 2), ""_N_ESTAB_SCHEDULE_2"" STRING(16777216), ""_N_LOG_SCR_CONS_2"" NUMBER(38, 2), ""_N_LINKED_RECIP"" STRING(16777216), ""_N_CLIENT_IDCHNG_NB"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_1"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_2"" STRING(16777216), ""_N_CLIENT_NEW_PAYEE_3"" STRING(16777216), ""_X_CIF_SENDER_CNT"" NUMBER(38, 2), ""_X_CIF_SENDER_SUM"" NUMBER(38, 2), ""_X_NAME_MATCH_CNT"" NUMBER(38, 2), ""_X_NAME_MATCH_IND"" NUMBER(38, 2), ""_X_FT_OVER5K_RECIP_CNT"" NUMBER(38, 2), ""_X_LAST_N_TXN_COUNT"" NUMBER(38, 2), ""_X_T_1"" NUMBER(38, 2), ""_X_T_2"" NUMBER(38, 2), ""_X_T_3"" NUMBER(38, 2), ""_X_T_5"" NUMBER(38, 2), ""_X_NPP_OUT_SUM_1"" NUMBER(38, 2), ""_X_NPP_OUT_SUM_3"" NUMBER(38, 2))    AS  SELECT  *  FROM (
    SELECT
        TO_NUMBER(DTL_EX_0_N_064)||DTL_EX_0_N_065||DTL_EX_0_N_066 AS CMX_TRAN_ID,
        SSX_CUST_NUM,
        TTS_TRAN_DATE_ALT,
        DTL_EX_0_20S_001,
        DTL_EX_1_5S_01,
        TGX_TRAN_AMT,
        TRY_CAST(SUBSTR(TTS_TRAN_TIME_ALT, 1, 2) AS NUMBER) AS HOUR,
        _A_MARVIN_DIGI_DECISION_NUM,
        LAG(_A_MARVIN_DIGI_DECISION_NUM) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') DESC) AS LAG_A_MARVIN_DIGI_DECISION_NUM,
        	TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME, 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_BTS_MAX_SE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_BTS_MAX_SE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_BTS_MAX_SE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_ACTIONCODE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_ACTIONCODE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CRD_ACTIONCODE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INBOUND_DATETIME, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INBOUND_DATETIME, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INBOUND_DATETIME
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_LO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CC_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CC_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CC_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_NOTIFY_OPT_OUT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_NOTIFY_OPT_OUT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_NOTIFY_OPT_OUT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CD_RTR_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CD_RTR_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CD_RTR_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IVR_LOGON_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IVR_LOGON_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_IVR_LOGON_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_FTP_DATE2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_FTP_DATE2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_FTP_DATE2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_P_P_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_P_P_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_P_P_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_NPP_PAYMENT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CRD_NPP_PAYMENT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CRD_NPP_PAYMENT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IS_IP_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_IS_IP_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_IS_IP_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_DEV_RETR_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_DEV_RETR_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_DEV_RETR_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_5_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_5_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_5_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ONLINE_PL_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ONLINE_PL_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_ONLINE_PL_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_CAPP_NBANK_SSO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_CAPP_NBANK_SSO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_CAPP_NBANK_SSO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_HID_UNHID_ACCT_DT_PREV, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_DTL_HID_UNHID_ACCT_DT_PREV, 38, 2), '1960-01-01 00:00:00'))
            END as _A_DTL_HID_UNHID_ACCT_DT_PREV
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_DETAILS_VIEW, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_DETAILS_VIEW, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_DETAILS_VIEW
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_MANUAL_NB_LOCK_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_MANUAL_NB_LOCK_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_MANUAL_NB_LOCK_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CUST_BROWSER_PREV_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CUST_BROWSER_PREV_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CUST_BROWSER_PREV_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP1_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP2_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP5_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_SCAMP7_MLW_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP4_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP4_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_REVERSE_IND_SCAMP4_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_LASTLOGON_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_LASTLOGON_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_LASTLOGON_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUTO_DEC_CP_PP_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUTO_DEC_CP_PP_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_AUTO_DEC_CP_PP_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_ALL_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_ALL_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INB_ALL_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_HOLD_COMMSEE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_HOLD_COMMSEE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_HOLD_COMMSEE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_PROF_CAPP_DEVICE_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_PROF_CAPP_DEVICE_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_PROF_CAPP_DEVICE_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_RETRIEVE_STMT_DETAILS_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_RETRIEVE_STMT_DETAILS_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_RETRIEVE_STMT_DETAILS_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_REGO_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CAPP_REGO_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CAPP_REGO_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_CUS_ACCT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_CUS_ACCT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_WHITELIST_CUS_ACCT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_WHITELIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_WHITELIST_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_BPAY_ACCT_FTP_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_BPAY_ACCT_FTP_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_BPAY_ACCT_FTP_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_BLACKLIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_BLACKLIST_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_BLACKLIST_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_OFI_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_INB_OFI_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_INB_OFI_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_CBA_PAYID_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NPP_OUT_CBA_PAYID_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NPP_OUT_CBA_PAYID_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUS_IP_ACTIVITY, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_AUS_IP_ACTIVITY, 38, 2), '1960-01-01 00:00:00'))
            END as _A_AUS_IP_ACTIVITY
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CIF_ESTABLISH_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CIF_ESTABLISH_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CIF_ESTABLISH_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ECV_DOCUMENT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_ECV_DOCUMENT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _A_ECV_DOCUMENT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_GROUP_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_NB_GROUP_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_NB_GROUP_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_POSTCODE_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_POSTCODE_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_POSTCODE_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_PORT_DATE_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_PORT_DATE_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_PORT_DATE_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LAST_NB_LOGIN_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_LAST_NB_LOGIN_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_LAST_NB_LOGIN_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_COUNTRY_DATE_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_CLIENT_COUNTRY_DATE_1, 38, 2), '1960-01-01 00:00:00'))
            END as _A_CLIENT_COUNTRY_DATE_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_OPEN_LAST_PAYER_CIF_DT_10, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_OPEN_LAST_PAYER_CIF_DT_10, 38, 2), '1960-01-01 00:00:00'))
            END as _B_OPEN_LAST_PAYER_CIF_DT_10
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_WHITELIST_SENDER_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_WHITELIST_SENDER_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _B_NPP_WHITELIST_SENDER_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _B_ANY_CUST_FTP_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_OUT_CNT_DATE, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_NPP_OUT_CNT_DATE, 38, 2), '1960-01-01 00:00:00'))
            END as _B_NPP_OUT_CNT_DATE
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_I_ALL_LOGONS_FDT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_I_ALL_LOGONS_FDT, 38, 2), '1960-01-01 00:00:00'))
            END as _I_ALL_LOGONS_FDT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_4, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_4, 38, 2), '1960-01-01 00:00:00'))
            END as _L_PUSH_API_DT_4
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_FIRST_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_FIRST_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_FIRST_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_C_5, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_C_5, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_C_5
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_2, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_F_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_C, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_M_F_C, 38, 2), '1960-01-01 00:00:00'))
            END as _L_M_F_C
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_MOB_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_MOB_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_IS_MOB_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_RAT_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_IS_RAT_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _L_IS_RAT_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_2WP_SNT_TRAN_HOLD_END_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_2WP_SNT_TRAN_HOLD_END_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_2WP_SNT_TRAN_HOLD_END_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1701_DT_1, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1701_DT_1, 38, 2), '1960-01-01 00:00:00'))
            END as _N_1701_DT_1
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_D_P_C, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_D_P_C, 38, 2), '1960-01-01 00:00:00'))
            END as _N_D_P_C
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_T_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_T_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_T_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1601_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_1601_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_1601_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_F_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_F_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_F_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_NB_MEDIUM_PRIORITY_FIRE, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_NB_MEDIUM_PRIORITY_FIRE, 38, 2), '1960-01-01 00:00:00'))
            END as _N_NB_MEDIUM_PRIORITY_FIRE
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_BROWSER_FIRST_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_BROWSER_FIRST_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_BROWSER_FIRST_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_DEVICE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_DEVICE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_NB_DEVICE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_FIRST_DEVICE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CUST_NB_FIRST_DEVICE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CUST_NB_FIRST_DEVICE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_HCE_ADD_CARD, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_HCE_ADD_CARD, 38, 2), '1960-01-01 00:00:00'))
            END as _N_HCE_ADD_CARD
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MALWARE_DT, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MALWARE_DT, 38, 2), '1960-01-01 00:00:00'))
            END as _N_MALWARE_DT
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_2, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_2
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_3, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_3, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_3
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_5, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CAPP_REG_DT_5, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CAPP_REG_DT_5
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_IDTO_PW, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_IDTO_PW, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_IDTO_PW
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_LOGON_FINEST, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_LOGON_FINEST, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_LOGON_FINEST
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_PASSWORD_TEMP, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_CLIENT_PASSWORD_TEMP, 38, 2), '1960-01-01 00:00:00'))
            END as _N_CLIENT_PASSWORD_TEMP
        , 
            CASE 
                WHEN TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_X_D_2, 38, 2), '1960-01-01 00:00:00') = '1960-01-01 00:00:00' THEN NULL
                ELSE DATEDIFF(DAY, TRANSACTIONDATETIME, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_X_D_2, 38, 2), '1960-01-01 00:00:00'))
            END as _X_D_2
        
        ,             try_to_number(_a_bts_bio_se, 38, 2) as _a_bts_bio_se
            ,_A_BTS_BNFT
            ,try_to_number(_a_ecv_commsec_flag, 38, 2) as _a_ecv_commsec_flag
            ,try_to_number(_a_npp_inb_pmt_val, 38, 2) as _a_npp_inb_pmt_val
            ,_A_PROF_RISK_IND
            ,try_to_number(_a_cust_actioncode_1, 38, 2) as _a_cust_actioncode_1
            ,try_to_number(_a_dtl_actioncode_1, 38, 2) as _a_dtl_actioncode_1
            ,try_to_number(_a_dtl_actioncode_2, 38, 2) as _a_dtl_actioncode_2
            ,try_to_number(_a_atm_withdrawal_sum_amt, 38, 2) as _a_atm_withdrawal_sum_amt
            ,try_to_number(_a_npp_inbound_sum_amt, 38, 2) as _a_npp_inbound_sum_amt
            ,_A_TELSTRA_ACTIVE_CALL
            ,_A_TELSTRA_API_EVENT_ID
            ,try_to_number(_a_telstra_existing_relation, 38, 2) as _a_telstra_existing_relation
            ,_A_LATEST_NCRG_ISP
            ,try_to_number(_a_geo_distance, 38, 2) as _a_geo_distance
            ,_A_P_N_H
            ,try_to_number(_a_ftp_sum_1, 38, 2) as _a_ftp_sum_1
            ,try_to_number(_a_multi_cnt, 38, 2) as _a_multi_cnt
            ,try_to_number(_a_crd_scam_supp_7d_sum_1, 38, 2) as _a_crd_scam_supp_7d_sum_1
            ,try_to_number(_a_bts_cust_age, 38, 2) as _a_bts_cust_age
            ,try_to_number(_a_p_l_1, 38, 2) as _a_p_l_1
            ,try_to_number(_a_p_l_3, 38, 2) as _a_p_l_3
            ,try_to_number(_a_p_l_c, 38, 2) as _a_p_l_c
            ,_A_P_N_3
            ,_A_P_N_C
            ,try_to_number(_a_crd_npp_payment_amount, 38, 2) as _a_crd_npp_payment_amount
            ,try_to_number(_a_curr_capp_device_nftp_cnt, 38, 2) as _a_curr_capp_device_nftp_cnt
            ,_A_2WAY_TYPE
            ,try_to_number(_a_cust_acct_bal, 38, 2) as _a_cust_acct_bal
            ,try_to_number(_a_cust_avg_acct_bal, 38, 2) as _a_cust_avg_acct_bal
            ,try_to_number(_a_e, 38, 2) as _a_e
            ,try_to_number(_a_r, 38, 2) as _a_r
            ,try_to_number(_a_t, 38, 2) as _a_t
            ,try_to_number(_a_u, 38, 2) as _a_u
            ,try_to_number(_a_capp_logon_cnt_2, 38, 2) as _a_capp_logon_cnt_2
            ,try_to_number(_a_capp_logon_cnt_3, 38, 2) as _a_capp_logon_cnt_3
            ,try_to_number(_a_capp_registrations_cnt_3, 38, 2) as _a_capp_registrations_cnt_3
            ,try_to_number(_a_nb_logons_cnt_2, 38, 2) as _a_nb_logons_cnt_2
            ,try_to_number(_a_nb_logons_cnt_3, 38, 2) as _a_nb_logons_cnt_3
            ,_A_CUST_BROWSER_VER
            ,_A_CUST_DEVICE_BROWSER_VER
            ,_A_CUST_OS_NAME
            ,_A_CUST_OS_VER
            ,try_to_number(_a_curr_nb_browser_cnt, 38, 2) as _a_curr_nb_browser_cnt
            ,_A_CIF_ESTABLISH_CUST_PCODE
            ,try_to_number(_a_list_rl1_scam_cust_cif, 38, 2) as _a_list_rl1_scam_cust_cif
            ,_A_LOGON_NB_IP_PC
            ,try_to_number(_a_curr_capp_device_cnt, 38, 2) as _a_curr_capp_device_cnt
            ,_A_PREV_CAPP_DEVICE
            ,try_to_number(_a_prev_capp_device_cnt, 38, 2) as _a_prev_capp_device_cnt
            ,_A_PREV_CAPP_DEVICE_MODEL
            ,_A_PROF_CAPP_DEVICE_2
            ,try_to_number(_a_prof_capp_device_cnt_1, 38, 2) as _a_prof_capp_device_cnt_1
            ,try_to_number(_a_prof_capp_device_cnt_2, 38, 2) as _a_prof_capp_device_cnt_2
            ,try_to_number(_a_prof_capp_device_cnt_3, 38, 2) as _a_prof_capp_device_cnt_3
            ,try_to_number(_a_prof_capp_device_cnt_5, 38, 2) as _a_prof_capp_device_cnt_5
            ,_A_PROF_CAPP_DEVICE_MODEL_1
            ,try_to_number(_a_vpn_vps_ip_logon_count, 38, 2) as _a_vpn_vps_ip_logon_count
            ,try_to_number(_a_cc_cash_advance_amt, 38, 2) as _a_cc_cash_advance_amt
            ,_A_MRISK_FOREIGN_IP_CNTRY_CODE
            ,_A_ALL_BPAY_ACCT_2
            ,try_to_number(_a_all_bpay_acct_sum_1, 38, 2) as _a_all_bpay_acct_sum_1
            ,try_to_number(_a_nb_bpay_acct_cnt_2, 38, 2) as _a_nb_bpay_acct_cnt_2
            ,try_to_number(_a_nb_bpay_acct_sum_1, 38, 2) as _a_nb_bpay_acct_sum_1
            ,try_to_number(_a_npp_ftp_sum, 38, 2) as _a_npp_ftp_sum
            ,try_to_number(_a_cust_npp_out_sum_aaa_1, 38, 2) as _a_cust_npp_out_sum_aaa_1
            ,try_to_number(_a_cust_npp_out_sum_aaa_2, 38, 2) as _a_cust_npp_out_sum_aaa_2
            ,try_to_number(_a_cust_npp_out_sum_aaa_5, 38, 2) as _a_cust_npp_out_sum_aaa_5
            ,try_to_number(_a_cust_npp_out_sum_aaa_long, 38, 2) as _a_cust_npp_out_sum_aaa_long
            ,try_to_number(_a_cust_sum_aaa_7, 38, 2) as _a_cust_sum_aaa_7
            ,try_to_number(_a_cust_sum_aaa_long, 38, 2) as _a_cust_sum_aaa_long
            ,try_to_number(_a_cust_sum_aaa_short, 38, 2) as _a_cust_sum_aaa_short
            ,_A_CIF_ESTABLISH_CHANNEL
            ,_A_CIF_ESTABLISH_EMAIL
            ,_A_CIF_ESTABLISH_PHONE
            ,_A_ECV_DOCUMENT_IP
            ,try_to_number(_a_client_postcode_ftp_sum_3, 38, 2) as _a_client_postcode_ftp_sum_3
            ,try_to_number(_a_bts_bch_sum, 38, 2) as _a_bts_bch_sum
            ,try_to_number(_a_monthly_transfer_count_2, 38, 2) as _a_monthly_transfer_count_2
            ,try_to_number(_a_monthly_transfer_count_3, 38, 2) as _a_monthly_transfer_count_3
            ,try_to_number(_a_monthly_transfer_count_4, 38, 2) as _a_monthly_transfer_count_4
            ,try_to_number(_a_monthly_transfer_sum_4, 38, 2) as _a_monthly_transfer_sum_4
            ,_A_CLIENT_CITY_10
            ,_A_CLIENT_CITY_6
            ,try_to_number(_a_client_city_cnt_1, 38, 2) as _a_client_city_cnt_1
            ,_A_CLIENT_COUNTRY_1
            ,_A_CLIENT_COUNTRY_3
            ,_A_CLIENT_COUNTRY_8
            ,try_to_number(_a_client_country_cnt_2, 38, 2) as _a_client_country_cnt_2
            ,try_to_number(_a_client_country_cnt_3, 38, 2) as _a_client_country_cnt_3
            ,try_to_number(_a_client_country_cnt_5, 38, 2) as _a_client_country_cnt_5
            ,try_to_number(_a_client_country_cnt_6, 38, 2) as _a_client_country_cnt_6
            ,try_to_number(_a_client_country_cnt_7, 38, 2) as _a_client_country_cnt_7
            ,_B_RECIP_PROFILE_GLOB_ERROR
            ,try_to_number(_b_bvt_numeric_1, 38, 2) as _b_bvt_numeric_1
            ,try_to_number(_b_recip_sum_today, 38, 2) as _b_recip_sum_today
            ,_B_CRYPTO_RISK
            ,_B_OPEN_LAST_PAYER_CIF_10
            ,try_to_number(_b_list_rl1_scam_tp_cif, 38, 2) as _b_list_rl1_scam_tp_cif
            ,try_to_number(_b_npp_out_ftp_sum_1, 38, 2) as _b_npp_out_ftp_sum_1
            ,try_to_number(_b_recip_sum_aaa_1, 38, 2) as _b_recip_sum_aaa_1
            ,try_to_number(_b_recip_sum_aaa_2, 38, 2) as _b_recip_sum_aaa_2
            ,try_to_number(_b_recip_sum_aaa_4, 38, 2) as _b_recip_sum_aaa_4
            ,try_to_number(_b_recip_sum_aaa_5, 38, 2) as _b_recip_sum_aaa_5
            ,try_to_number(_b_recip_sum_aaa_6, 38, 2) as _b_recip_sum_aaa_6
            ,try_to_number(_b_recip_sum_aaa_7, 38, 2) as _b_recip_sum_aaa_7
            ,try_to_number(_b_recip_sum_aaa_long, 38, 2) as _b_recip_sum_aaa_long
            ,_B_CLIENT_POSTCODE_1
            ,_B_CLIENT_POSTCODE_2
            ,_B_CLIENT_POSTCODE_3
            ,try_to_number(_b_client_postcode_cnt_1, 38, 2) as _b_client_postcode_cnt_1
            ,try_to_number(_b_client_postcode_cnt_2, 38, 2) as _b_client_postcode_cnt_2
            ,try_to_number(_b_client_postcode_cnt_3, 38, 2) as _b_client_postcode_cnt_3
            ,try_to_number(_b_client_postcode_cnt_4, 38, 2) as _b_client_postcode_cnt_4
            ,try_to_number(_b_client_postcode_sum_1, 38, 2) as _b_client_postcode_sum_1
            ,try_to_number(_b_client_postcode_sum_2, 38, 2) as _b_client_postcode_sum_2
            ,try_to_number(_b_client_postcode_sum_3, 38, 2) as _b_client_postcode_sum_3
            ,try_to_number(_b_client_postcode_sum_5, 38, 2) as _b_client_postcode_sum_5
            ,try_to_number(_b_recip_sum_1, 38, 2) as _b_recip_sum_1
            ,try_to_number(_i_cust_tran_sum_1, 38, 2) as _i_cust_tran_sum_1
            ,try_to_number(_i_cust_tran_sum_2, 38, 2) as _i_cust_tran_sum_2
            ,try_to_number(_i_cust_tran_sum_3, 38, 2) as _i_cust_tran_sum_3
            ,try_to_number(_i_all_logons_cnt_1, 38, 2) as _i_all_logons_cnt_1
            ,try_to_number(_i_capp_logons_perc_1, 38, 2) as _i_capp_logons_perc_1
            ,try_to_number(_i_capp_logons_perc_2, 38, 2) as _i_capp_logons_perc_2
            ,try_to_number(_i_capp_logons_perc_3, 38, 2) as _i_capp_logons_perc_3
            ,try_to_number(_i_capp_logons_perc_3m, 38, 2) as _i_capp_logons_perc_3m
            ,try_to_number(_i_cust_net_l_cnt_1, 38, 2) as _i_cust_net_l_cnt_1
            ,try_to_number(_i_cust_net_cnt_4, 38, 2) as _i_cust_net_cnt_4
            ,try_to_number(_i_cust_net_cnt_long, 38, 2) as _i_cust_net_cnt_long
            ,try_to_number(_l_scm_rsk_scr_2, 38, 2) as _l_scm_rsk_scr_2
            ,_L_PAYTO_MANDATE_ID
            ,_L_PUSH_API_1
            ,_L_PUSH_API_2
            ,_L_PUSH_API_3
            ,_L_PUSH_API_4
            ,_L_BC_CONTEXT
            ,try_to_number(_l_dpi_change, 38, 2) as _l_dpi_change
            ,try_to_number(_l_muid_age_per_user, 38, 2) as _l_muid_age_per_user
            ,try_to_number(_l_plugin_cnt, 38, 2) as _l_plugin_cnt
            ,try_to_number(_l_rare_sim_cntry_code, 38, 2) as _l_rare_sim_cntry_code
            ,try_to_number(_l_rooted_dev, 38, 2) as _l_rooted_dev
            ,_L_SDID_1
            ,try_to_number(_l_sdid_cnt_1, 38, 2) as _l_sdid_cnt_1
            ,try_to_number(_l_sdid_cnt_3, 38, 2) as _l_sdid_cnt_3
            ,_L_NC_ACCT_NUM
            ,_L_NC_MATCH_NAME
            ,_L_NC_RESPONSE_CODE
            ,_L_NC_WINNING_ALG
            ,try_to_number(_l_bc_ao_score, 38, 2) as _l_bc_ao_score
            ,_L_BRANCH_ID
            ,try_to_number(_l_drag_n_drop, 38, 2) as _l_drag_n_drop
            ,try_to_number(_l_pmt_amt, 38, 2) as _l_pmt_amt
            ,_L_PMT_DESCR
            ,try_to_number(_l_rcnt_hi_scr_on_dev, 38, 2) as _l_rcnt_hi_scr_on_dev
            ,try_to_number(_l_se_score, 38, 2) as _l_se_score
            ,try_to_number(_l_se_score_1, 38, 2) as _l_se_score_1
            ,try_to_number(_l_se_sess_cnt, 38, 2) as _l_se_sess_cnt
            ,try_to_number(_l_accum_amt_anom, 38, 2) as _l_accum_amt_anom
            ,try_to_number(_l_frst_proxy, 38, 2) as _l_frst_proxy
            ,try_to_number(_l_new_lang, 38, 2) as _l_new_lang
            ,try_to_number(_l_scrn_res_anom, 38, 2) as _l_scrn_res_anom
            ,_L_FINGERPRINT_1
            ,_L_FINGERPRINT_2
            ,_L_FINGERPRINT_3
            ,_L_FINGERPRINT_4
            ,_L_FINGERPRINT_5
            ,try_to_number(_l_score_1, 38, 2) as _l_score_1
            ,try_to_number(_l_score_2, 38, 2) as _l_score_2
            ,try_to_number(_l_score_3, 38, 2) as _l_score_3
            ,try_to_number(_l_score_4, 38, 2) as _l_score_4
            ,try_to_number(_l_score_5, 38, 2) as _l_score_5
            ,try_to_number(_l_rat_check, 38, 2) as _l_rat_check
            ,try_to_number(_l_m_l_1, 38, 2) as _l_m_l_1
            ,try_to_number(_l_m_l_4, 38, 2) as _l_m_l_4
            ,try_to_number(_l_m_l_c, 38, 2) as _l_m_l_c
            ,try_to_number(_l_bc_sess_cnt, 38, 2) as _l_bc_sess_cnt
            ,_L_BC_SESS_ID
            ,try_to_number(_l_acc_amt_1d, 38, 2) as _l_acc_amt_1d
            ,try_to_number(_l_acc_amt_1h, 38, 2) as _l_acc_amt_1h
            ,try_to_number(_l_and_id_age, 38, 2) as _l_and_id_age
            ,try_to_number(_l_bc_score, 38, 2) as _l_bc_score
            ,try_to_number(_l_browser_age, 38, 2) as _l_browser_age
            ,try_to_number(_l_city_age, 38, 2) as _l_city_age
            ,try_to_number(_l_clipb_event_cnt, 38, 2) as _l_clipb_event_cnt
            ,try_to_number(_l_days_lst_dev_ios, 38, 2) as _l_days_lst_dev_ios
            ,try_to_number(_l_days_lst_dev_js, 38, 2) as _l_days_lst_dev_js
            ,_L_DEV_FAM
            ,try_to_number(_l_dev_fam_age, 38, 2) as _l_dev_fam_age
            ,try_to_number(_l_dom_hand_ch_anomaly, 38, 2) as _l_dom_hand_ch_anomaly
            ,try_to_number(_l_ft_rat_app_inst, 38, 2) as _l_ft_rat_app_inst
            ,try_to_number(_l_g_con_dev, 38, 2) as _l_g_con_dev
            ,try_to_number(_l_ip_age, 38, 2) as _l_ip_age
            ,try_to_number(_l_is_active_call, 38, 2) as _l_is_active_call
            ,try_to_number(_l_isp_age, 38, 2) as _l_isp_age
            ,try_to_number(_l_key_mouse_anomaly, 38, 2) as _l_key_mouse_anomaly
            ,_L_LANG_1
            ,_L_LANG_2
            ,_L_LANG_3
            ,try_to_number(_l_lgn_import_anomaly, 38, 2) as _l_lgn_import_anomaly
            ,try_to_number(_l_max_30d_score, 38, 2) as _l_max_30d_score
            ,try_to_number(_l_mins_lst_lgn_capped, 38, 2) as _l_mins_lst_lgn_capped
            ,try_to_number(_l_mouse_cnt, 38, 2) as _l_mouse_cnt
            ,try_to_number(_l_mouse_doodl, 38, 2) as _l_mouse_doodl
            ,try_to_number(_l_new_browser, 38, 2) as _l_new_browser
            ,try_to_number(_l_new_browser_anomaly, 38, 2) as _l_new_browser_anomaly
            ,try_to_number(_l_new_mob_app_user, 38, 2) as _l_new_mob_app_user
            ,try_to_number(_l_new_mob_browser_user, 38, 2) as _l_new_mob_browser_user
            ,try_to_number(_l_num_sess_2h, 38, 2) as _l_num_sess_2h
            ,try_to_number(_l_num_sess_4h, 38, 2) as _l_num_sess_4h
            ,try_to_number(_l_orient_event_cnt, 38, 2) as _l_orient_event_cnt
            ,try_to_number(_l_os_ch_anomaly, 38, 2) as _l_os_ch_anomaly
            ,_L_POLICY_NM
            ,try_to_number(_l_priv_browsing_anomaly, 38, 2) as _l_priv_browsing_anomaly
            ,_L_PROXY_TYPE
            ,try_to_number(_l_scrn_h, 38, 2) as _l_scrn_h
            ,try_to_number(_l_scrn_w, 38, 2) as _l_scrn_w
            ,try_to_number(_l_sess_cnt_mob_browser, 38, 2) as _l_sess_cnt_mob_browser
            ,try_to_number(_l_sess_cnt_mob_sdk, 38, 2) as _l_sess_cnt_mob_sdk
            ,try_to_number(_l_sess_cnt_web, 38, 2) as _l_sess_cnt_web
            ,_L_SESS_ID
            ,try_to_number(_l_sim_ip_cntry_mismatch, 38, 2) as _l_sim_ip_cntry_mismatch
            ,try_to_number(_l_tap_cnt, 38, 2) as _l_tap_cnt
            ,try_to_number(_l_total_sess_cnt, 38, 2) as _l_total_sess_cnt
            ,try_to_number(_l_touch_cnt, 38, 2) as _l_touch_cnt
            ,try_to_number(_l_type_patterns_anomaly, 38, 2) as _l_type_patterns_anomaly
            ,try_to_number(_l_uid_age, 38, 2) as _l_uid_age
            ,try_to_number(_n_bc_cr_bc_1, 38, 2) as _n_bc_cr_bc_1
            ,try_to_number(_n_ftp_cnt_1, 38, 2) as _n_ftp_cnt_1
            ,_N_5_RCNT_M100S_1
            ,_N_5_RCNT_M100S_2
            ,try_to_number(_n_mps_mndt_cnt_24h_1, 38, 2) as _n_mps_mndt_cnt_24h_1
            ,try_to_number(_n_mob_oth_tran_sum_1, 38, 2) as _n_mob_oth_tran_sum_1
            ,_N_NB_LOGON_USER_AGENT
            ,try_to_number(_n_ca_device_profile_1, 38, 2) as _n_ca_device_profile_1
            ,try_to_number(_n_ca_device_profile_3, 38, 2) as _n_ca_device_profile_3
            ,try_to_number(_n_p20_7d_cnt_1, 38, 2) as _n_p20_7d_cnt_1
            ,try_to_number(_n_ca_lgn_cnt_24h_1, 38, 2) as _n_ca_lgn_cnt_24h_1
            ,try_to_number(_n_nmchk_cnt, 38, 2) as _n_nmchk_cnt
            ,_N_NMCHK_RECIP_CNT_1
            ,try_to_number(_n_2wp_tran_ind_1, 38, 2) as _n_2wp_tran_ind_1
            ,try_to_number(_n_ca_dev_bl_flag_2, 38, 2) as _n_ca_dev_bl_flag_2
            ,_N_CLIENT_SSID_NAME_1
            ,try_to_number(_n_cust_txn_count, 38, 2) as _n_cust_txn_count
            ,try_to_number(_n_crypto_recipient_sum, 38, 2) as _n_crypto_recipient_sum
            ,try_to_number(_n_rp_ses_ip_1, 38, 2) as _n_rp_ses_ip_1
            ,try_to_number(_n_multi_amt_1, 38, 2) as _n_multi_amt_1
            ,try_to_number(_n_nb_recipient_amt_1, 38, 2) as _n_nb_recipient_amt_1
            ,try_to_number(_n_nb_recipient_amt_3, 38, 2) as _n_nb_recipient_amt_3
            ,try_to_number(_n_nb_sum_tpt_4, 38, 2) as _n_nb_sum_tpt_4
            ,_N_D_D_3
            ,try_to_number(_n_h_1, 38, 2) as _n_h_1
            ,try_to_number(_n_cust_nb_device_cnt, 38, 2) as _n_cust_nb_device_cnt
            ,try_to_number(_n_open_ftp_sum_7d, 38, 2) as _n_open_ftp_sum_7d
            ,try_to_number(_n_capp_bpay_cnt_1, 38, 2) as _n_capp_bpay_cnt_1
            ,try_to_number(_n_capp_linked_cnt_1, 38, 2) as _n_capp_linked_cnt_1
            ,try_to_number(_n_capp_linked_cnt_2, 38, 2) as _n_capp_linked_cnt_2
            ,_N_ESTAB_SCHEDULE_2
            ,try_to_number(_n_log_scr_cons_2, 38, 2) as _n_log_scr_cons_2
            ,_N_LINKED_RECIP
            ,_N_CLIENT_IDCHNG_NB
            ,_N_CLIENT_NEW_PAYEE_1
            ,_N_CLIENT_NEW_PAYEE_2
            ,_N_CLIENT_NEW_PAYEE_3
            ,try_to_number(_x_cif_sender_cnt, 38, 2) as _x_cif_sender_cnt
            ,try_to_number(_x_cif_sender_sum, 38, 2) as _x_cif_sender_sum
            ,try_to_number(_x_name_match_cnt, 38, 2) as _x_name_match_cnt
            ,try_to_number(_x_name_match_ind, 38, 2) as _x_name_match_ind
            ,try_to_number(_x_ft_over5k_recip_cnt, 38, 2) as _x_ft_over5k_recip_cnt
            ,try_to_number(_x_last_n_txn_count, 38, 2) as _x_last_n_txn_count
            ,try_to_number(_x_t_1, 38, 2) as _x_t_1
            ,try_to_number(_x_t_2, 38, 2) as _x_t_2
            ,try_to_number(_x_t_3, 38, 2) as _x_t_3
            ,try_to_number(_x_t_5, 38, 2) as _x_t_5
            ,try_to_number(_x_npp_out_sum_1, 38, 2) as _x_npp_out_sum_1
            ,try_to_number(_x_npp_out_sum_3, 38, 2) as _x_npp_out_sum_3
    FROM
        LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE
        TTS_TRAN_DATE_ALT BETWEEN 20250724 AND 20250729
        AND COALESCE(TRY_CAST(TGX_TRAN_AMT AS DECIMAL(14,2)), 0) > 0 -- Exclude non-mon txns 
        AND DTL_EX_1_5S_01 IN ('C205N','C207N','C242N','C244N','C246N','N205N','N207N','N244N','N246N')-- NPP Outbound txn only
        AND SSX_CUST_NUM <> 'Not Available'
)",BROOKSOW,R_USR_FRAUMD_LABMLFRD_RW,9472619,9472.619,157.876983,2.631283,2X-LARGE,32,84.201056
01bed239-3204-c553-0000-c71d2c4154d2,"CREATE OR REPLACE TABLE PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG7D AS
SELECT 
    a.*,
    b.CUS_SUM_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_CNT_Q,
    b.CUS_SUM_TRAN_SUM_N,
    b.CUS_SUM_UPST_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_RULE_DCLN_TRAN_CNT_Q,
    b.CUS_SUM_FINL_APRD_TRAN_CNT_Q,
    b.CUS_SUM_UPST_APRD_TRAN_SUM_N,
    b.CUS_SUM_FINL_APRD_TRAN_SUM_N,
    b.CUS_SUM_FDP_RULE_TRIG_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_CNT_Q,
    b.CUS_SUM_OSEA_TRAN_CNT_Q,
    b.CUS_SUM_DOMS_TRAN_SUM_N,
    b.CUS_SUM_OSEA_TRAN_SUM_N,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    b.CUS_SUM_3DS_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    b.CUS_SUM_N3D_TRAN_CNT_Q as CUS_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    b.CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    b.CUS_SUM_3DS_TRAN_SUM_N as CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    b.CUS_SUM_N3D_TRAN_SUM_N as CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    b.CUS_SUM_CARD_PRES_TRAN_CNT_Q,
    b.CUS_SUM_ATM_TRAN_CNT_Q,
    b.CUS_SUM_FALL_BACK_TRAN_CNT_Q,
    b.CUS_SUM_CHIP_TRAN_CNT_Q,
    b.CUS_SUM_PAY_PASS_TRAN_CNT_Q,
    b.CUS_SUM_CARD_PRES_TRAN_SUM_N,
    b.CUS_SUM_ATM_TRAN_SUM_N,
    b.CUS_SUM_FALL_BACK_TRAN_SUM_N,
    b.CUS_SUM_CHIP_TRAN_SUM_N,
    b.CUS_SUM_PAY_PASS_TRAN_SUM_N,
    b.CUS_SUM_CAPP_PSWD_CHNG_CNT_Q,
    b.CUS_SUM_CAPP_DVIC_REGR_CNT_Q,
    b.CUS_SUM_CAPP_LOGN_CNT_Q,
    b.CUS_SUM_NTB_LOGN_CNT_Q,
    b.CUS_SUM_VIEW_CARD_DETL_CNT_Q,
    b.CUS_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    b.CUS_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    b.CUS_MAX_CUV_RULE_PUSH_SENT_F as CUS_MAX_C_2WAY_CRD_RULE_FLAG,
    d.CRD_SUM_TRAN_CNT_Q,
    d.CRD_SUM_UPST_APRD_TRAN_CNT_Q,
    d.CRD_SUM_UPST_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_RULE_DCLN_TRAN_CNT_Q,
    d.CRD_SUM_FINL_APRD_TRAN_CNT_Q,
    d.CRD_SUM_INCO_EXPY_CNT_Q,
    d.CRD_SUM_INCO_CVVA_CNT_Q,
    d.CRD_SUM_INCO_PIN_CNT_Q,
    d.CRD_SUM_OVER_LIMT_DCLN_CNT_Q,
    d.CRD_SUM_TRAN_SUM_N,
    d.CRD_SUM_UPST_APRD_TRAN_SUM_N,
    d.CRD_SUM_UPST_DCLN_TRAN_SUM_N,
    d.CRD_SUM_RULE_DCLN_TRAN_SUM_N,
    d.CRD_SUM_FINL_APRD_TRAN_SUM_N,
    d.CRD_SUM_INCO_EXPY_SUM_N,
    d.CRD_SUM_INCO_CVVA_SUM_N,
    d.CRD_SUM_INCO_PIN_SUM_N,
    d.CRD_SUM_OVER_LIMT_DCLN_SUM_N,
    d.CRD_SUM_FDP_RULE_TRIG_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_CNT_Q,
    d.CRD_SUM_OSEA_TRAN_CNT_Q,
    d.CRD_SUM_DOMS_TRAN_SUM_N,
    d.CRD_SUM_OSEA_TRAN_SUM_N,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    d.CRD_SUM_3DS_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    d.CRD_SUM_N3D_TRAN_CNT_Q as CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    d.CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    d.CRD_SUM_3DS_TRAN_SUM_N as CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    d.CRD_SUM_N3D_TRAN_SUM_N as CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    d.CRD_SUM_CARD_PRES_TRAN_CNT_Q,
    d.CRD_SUM_ATM_TRAN_CNT_Q,
    d.CRD_SUM_FALL_BACK_TRAN_CNT_Q,
    d.CRD_SUM_CHIP_TRAN_CNT_Q,
    d.CRD_SUM_PAY_PASS_TRAN_CNT_Q,
    d.CRD_SUM_CARD_PRES_TRAN_SUM_N,
    d.CRD_SUM_ATM_TRAN_SUM_N,
    d.CRD_SUM_FALL_BACK_TRAN_SUM_N,
    d.CRD_SUM_CHIP_TRAN_SUM_N,
    d.CRD_SUM_PAY_PASS_TRAN_SUM_N,
    d.CRD_SUM_CAPP_PSWD_CHNG_CNT_Q,
    d.CRD_SUM_CAPP_DVIC_REGR_CNT_Q,
    d.CRD_SUM_CAPP_LOGN_CNT_Q,
    d.CRD_SUM_NTB_LOGN_CNT_Q,
    d.CRD_SUM_VIEW_CARD_DETL_CNT_Q,
    d.CRD_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_HIGH_RISK_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_FRAU_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_RULE_PUSH_SENT_F as CRD_MAX_CARD_USER_VARY_RULE_PUSH_SENT_F,
    d.CRD_MAX_CUV_WHLI_F as CRD_MAX_CARD_USER_VARY_WHLI_F,
    d.CRD_MAX_CUV_DO_NOT_CTCT_F as CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F,
    f.CMA_SUM_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    f.CMA_SUM_TRAN_SUM_N,
    f.CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    f.CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    f.CMA_SUM_UPST_APRD_TRAN_SUM_N,
    f.CMA_SUM_FINL_APRD_TRAN_SUM_N,
    f.CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_CNT_Q,
    f.CMA_SUM_OSEA_TRAN_CNT_Q,
    f.CMA_SUM_DOMS_TRAN_SUM_N,
    f.CMA_SUM_OSEA_TRAN_SUM_N,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    f.CMA_SUM_3DS_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    f.CMA_SUM_N3D_TRAN_CNT_Q as CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    f.CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    f.CMA_SUM_3DS_TRAN_SUM_N as CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    f.CMA_SUM_N3D_TRAN_SUM_N as CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    f.CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    f.CMA_SUM_ATM_TRAN_CNT_Q,
    f.CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    f.CMA_SUM_CHIP_TRAN_CNT_Q,
    f.CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    f.CMA_SUM_CARD_PRES_TRAN_SUM_N,
    f.CMA_SUM_ATM_TRAN_SUM_N,
    f.CMA_SUM_FALL_BACK_TRAN_SUM_N,
    f.CMA_SUM_CHIP_TRAN_SUM_N,
    f.CMA_SUM_PAY_PASS_TRAN_SUM_N,
    f.CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    f.CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    f.CMA_MAX_CUV_RULE_PUSH_SENT_F as CMA_MAX_C_2WAY_CRD_RULE_FLAG,
    g.CMC_SUM_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_CNT_Q,
    g.CMC_SUM_TRAN_SUM_N,
    g.CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
    g.CMC_SUM_FINL_APRD_TRAN_CNT_Q,
    g.CMC_SUM_UPST_APRD_TRAN_SUM_N,
    g.CMC_SUM_FINL_APRD_TRAN_SUM_N,
    g.CMC_SUM_FDP_RULE_TRIG_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_CNT_Q,
    g.CMC_SUM_OSEA_TRAN_CNT_Q,
    g.CMC_SUM_DOMS_TRAN_SUM_N,
    g.CMC_SUM_OSEA_TRAN_SUM_N,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    g.CMC_SUM_3DS_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    g.CMC_SUM_N3D_TRAN_CNT_Q as CMC_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    g.CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    g.CMC_SUM_3DS_TRAN_SUM_N as CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    g.CMC_SUM_N3D_TRAN_SUM_N as CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    g.CMC_SUM_CARD_PRES_TRAN_CNT_Q,
    g.CMC_SUM_ATM_TRAN_CNT_Q,
    g.CMC_SUM_FALL_BACK_TRAN_CNT_Q,
    g.CMC_SUM_CHIP_TRAN_CNT_Q,
    g.CMC_SUM_PAY_PASS_TRAN_CNT_Q,
    g.CMC_SUM_CARD_PRES_TRAN_SUM_N,
    g.CMC_SUM_ATM_TRAN_SUM_N,
    g.CMC_SUM_FALL_BACK_TRAN_SUM_N,
    g.CMC_SUM_CHIP_TRAN_SUM_N,
    g.CMC_SUM_PAY_PASS_TRAN_SUM_N,
    g.CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_HR_RULE_FLAG,
    g.CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_FRD_RULE_FLAG,
    g.CMC_MAX_CUV_RULE_PUSH_SENT_F as CMC_MAX_C_2WAY_CRD_RULE_FLAG,
    h.MAQ_SUM_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_TRAN_SUM_N,
    h.MAQ_SUM_UPST_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_RULE_DCLN_TRAN_CNT_Q,
    h.MAQ_SUM_FINL_APRD_TRAN_CNT_Q,
    h.MAQ_SUM_UPST_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FINL_APRD_TRAN_SUM_N,
    h.MAQ_SUM_FDP_RULE_TRIG_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_CNT_Q,
    h.MAQ_SUM_OSEA_TRAN_CNT_Q,
    h.MAQ_SUM_DOMS_TRAN_SUM_N,
    h.MAQ_SUM_OSEA_TRAN_SUM_N,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_3DS_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q,
    h.MAQ_SUM_N3D_TRAN_CNT_Q as MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    h.MAQ_SUM_3DS_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N,
    h.MAQ_SUM_N3D_TRAN_SUM_N as MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N,
    h.MAQ_SUM_CARD_PRES_TRAN_CNT_Q,
    h.MAQ_SUM_ATM_TRAN_CNT_Q,
    h.MAQ_SUM_FALL_BACK_TRAN_CNT_Q,
    h.MAQ_SUM_CHIP_TRAN_CNT_Q,
    h.MAQ_SUM_PAY_PASS_TRAN_CNT_Q,
    h.MAQ_SUM_CARD_PRES_TRAN_SUM_N,
    h.MAQ_SUM_ATM_TRAN_SUM_N,
    h.MAQ_SUM_FALL_BACK_TRAN_SUM_N,
    h.MAQ_SUM_CHIP_TRAN_SUM_N,
    h.MAQ_SUM_PAY_PASS_TRAN_SUM_N
FROM 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_TRAIN_FDT a
LEFT JOIN 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_tran_prfl_agg7d b
ON 
    a.ssx_cust_num = b.cust_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = b.WINDOW_START_DATE
LEFT JOIN 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_card_tran_prfl_agg7d d
ON 
    a.CHL_ID_CARD_NUM = d.card_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = d.WINDOW_START_DATE
LEFT JOIN 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_merc_acqr_tran_prfl_agg7d f
ON 
    a.ssx_cust_num = f.cust_i and a.chl_ct_term_owner_id = f.merc_i and a.chl_ct_acq_id = f.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = f.WINDOW_START_DATE
LEFT JOIN 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_TRAIN_FDT_card_merc_catg_tran_prfl_agg7d g
ON 
    a.CHL_ID_CARD_NUM = g.card_i and a.chl_ct_mer_mcc = g.merc_catg_c
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = g.WINDOW_START_DATE
LEFT JOIN 
    PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_merc_acqr_tran_prfl_agg7d h
ON 
    a.chl_ct_term_owner_id = h.merc_i and a.chl_ct_acq_id = h.acqr_i
AND 
    DATE_TRUNC('day', a.TRANSACTIONDATETIME) = h.WINDOW_START_DATE

;",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,9331641,9331.641,155.52735,2.592123,2X-LARGE,32,82.947936
01be7ca4-3204-bc97-0000-c71d2994833a,"select TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CRD_APAY_CNT_1, _C_CC_GBL_N3D_1D_CNT_1, _C_CC_CNP_VEL_6HR_SUM_1, _C_CRD_SAFE_MERCHANT, _C_CC_CNP_LTRANS_6HR_COUNT_1, _C_CC_CNP_VEL_6HR_COUNT_1, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_NPP_FTP_SUM, _A_CUST_SUM_AAA_LONG, _L_DEV_FAM_AGE, _A_E, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _A_CRD_SCAM_SUPP_7D_SUM_1, _L_BC_SESS_CNT, _A_P_L_1, _L_PMT_AMT, _A_CLIENT_COUNTRY_CNT_7, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _L_MAX_30D_SCORE, _L_SCRN_H, _A_CUST_AVG_ACCT_BAL, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _A_CLIENT_COUNTRY_CNT_5, _A_U, _L_SCM_RSK_SCR_2, _L_BC_SCORE, _A_T, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_2, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _L_CNTRY_AGE, _A_PROF_CAPP_DEVICE_NFTP_1, _A_CLC_FTP_AMT, _L_SESS_CNT_MOB_BROWSER, _A_P_L_3, _L_DAYS_LST_DEV_JS, _A_ECV_DOCUMENT_IP, _A_CLIENT_CITY_10, _L_PUSH_API_1, _L_PUSH_API_2, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, DTL_CA_MERCH_CURR_CODE, DMC_CNT, CC_CNT, FA_1, NO_1, GOVT_BENE, _X_NPP_OUT_SUM_DATE_DIFF, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _L_PUSH_API_DT_1_DIFF, CUS_SUM_UPST_DCLN_TRAN_CNT_Q, CUS_SUM_FINL_APRD_TRAN_CNT_Q, CUS_SUM_FDP_RULE_TRIG_CNT_Q, CUS_SUM_OSEA_TRAN_CNT_Q, CUS_SUM_DOMS_TRAN_SUM_N, CUS_SUM_OSEA_TRAN_SUM_N, CUS_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N, CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_CNT_Q, CUS_SUM_CARD_PRES_TRAN_SUM_N, CUS_SUM_CHIP_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_SUM_N, CRD_SUM_UPST_APRD_TRAN_CNT_Q, CRD_SUM_UPST_DCLN_TRAN_CNT_Q, CRD_SUM_FINL_APRD_TRAN_CNT_Q, CRD_SUM_UPST_APRD_TRAN_SUM_N, CRD_SUM_UPST_DCLN_TRAN_SUM_N, CRD_SUM_RULE_DCLN_TRAN_SUM_N, CRD_SUM_FINL_APRD_TRAN_SUM_N, CRD_SUM_FDP_RULE_TRIG_CNT_Q, CRD_SUM_DOMS_TRAN_CNT_Q, CRD_SUM_OSEA_TRAN_CNT_Q, CRD_SUM_DOMS_TRAN_SUM_N, CRD_SUM_OSEA_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N, CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CRD_SUM_CARD_PRES_TRAN_CNT_Q, CRD_SUM_PAY_PASS_TRAN_CNT_Q, CRD_SUM_CARD_PRES_TRAN_SUM_N, CRD_SUM_PAY_PASS_TRAN_SUM_N, CRD_MAX_CARD_USER_VARY_FRAU_RULE_PUSH_SENT_F, CRD_MAX_CARD_USER_VARY_DO_NOT_CTCT_F, CMA_SUM_RULE_DCLN_TRAN_CNT_Q, CMA_SUM_FINL_APRD_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_SUM_N, CMA_SUM_FDP_RULE_TRIG_CNT_Q, CMA_SUM_DOMS_TRAN_CNT_Q, CMA_SUM_DOMS_TRAN_SUM_N, CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMA_SUM_CARD_PRES_TRAN_CNT_Q, CMC_SUM_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_CNT_Q, CMC_SUM_FINL_APRD_TRAN_SUM_N, CMC_SUM_FDP_RULE_TRIG_CNT_Q, CMC_SUM_DOMS_TRAN_CNT_Q, CMC_SUM_DOMS_TRAN_SUM_N, CMC_SUM_OSEA_TRAN_SUM_N, CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMC_SUM_CARD_PRES_TRAN_SUM_N, CMC_SUM_PAY_PASS_TRAN_SUM_N, MAQ_SUM_UPST_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_DCLN_TRAN_CNT_Q, MAQ_SUM_RULE_DCLN_TRAN_CNT_Q, MAQ_SUM_FINL_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_SUM_N, MAQ_SUM_FINL_APRD_TRAN_SUM_N, MAQ_SUM_FDP_RULE_TRIG_CNT_Q, MAQ_SUM_OSEA_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N from cards_retro_features limit 10;",DVSH,R_DAC_FRAUMD_LABMLFRD_RW,2298081,2298.081,38.30135,0.638356,4X-LARGE,128,81.709568
01beed7f-3204-c939-0000-c71d2d08075a,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
)
;",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,9182903,9182.903,153.048383,2.550806,2X-LARGE,32,81.625792
01becef8-3204-c553-0000-c71d2c23a86a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,9077048,9077.048,151.284133,2.521402,2X-LARGE,32,80.684864
01bdd070-3204-a615-0000-c71d2486f636,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2239903,2239.903,37.331717,0.622195,4X-LARGE,128,79.64096
01beee1f-3204-c939-0000-c71d2d0dbdf6,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        * EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
)
;",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,8956330,8956.33,149.272167,2.487869,2X-LARGE,32,79.611808
01bef3a0-3204-c93c-0000-c71d2d3af132,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250905164056_scored_1 as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO1('modelname=pipeline_it6_F2_xval_2day_all_fdt_redmojsiz_20250905164056.mojo', 
array_construct(
TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N3D_1D_SUM_1, _C_CRD_SAFE_MERCHANT, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_10, _A_NPP_FTP_SUM, _A_CUST_SUM_AAA_LONG, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _L_SCORE_4, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _A_CRD_SCAM_SUPP_7D_SUM_1, _L_UID_AGE, _L_ASN_AGE, _L_SCORE_2, _L_BC_SESS_CNT, _L_ACC_AMT_1H, _A_P_L_1, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_7D, _A_CLIENT_COUNTRY_CNT_7, _L_SCORE_5, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _L_MAX_30D_SCORE, _L_SCRN_H, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _A_CLIENT_COUNTRY_CNT_5, _A_U, _L_SCM_RSK_SCR_2, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_3, _L_DAYS_LST_DEV_IOS, _A_T, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_2, _A_CLIENT_COUNTRY_CNT_6, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_R, _L_CNTRY_AGE, _A_TRANSPORT_REG_CNT_1, _A_MULTI_CNT, _A_PROF_CAPP_DEVICE_NFTP_1, _A_PROF_CAPP_DEVICE_CNT_4, _L_SESS_CNT_WEB, _L_IP_AGE, _A_NPP_INBOUND_SUM_AMT, _A_CLC_FTP_AMT, _L_TRVL_SPD, _L_SESS_CNT_MOB_BROWSER, _L_SCORE_3, _A_SCH_AMT, _A_P_L_3, _A_CUST_NPP_OUT_SUM_AAA_LONG, _A_VPN_VPS_IP_LOGON_COUNT, _A_GEO_DISTANCE, _L_DAYS_LST_DEV_JS, _A_ECV_DOCUMENT_IP, _A_CLIENT_CITY_10, _L_PUSH_API_1, _L_PUSH_API_2, _L_PUSH_API_3, _A_CLIENT_CITY_6, _L_NC_WINNING_ALG, _L_LANG_1, _L_LANG_2, _A_LATEST_NCRG_ISP, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_EX_3_80S_002, _A_MRISK_FOREIGN_IP_CNTRY_CODE, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, _A_CIF_ESTABLISH_CUST_PCODE, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, DPST_CNT, CC_CNT, FA_1, NO_1, GOVT_BENE, MAR_STS_ORG_STR, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF, _A_SCAMP5_MLW_DT_DIFF, _L_PUSH_API_DT_1_DIFF, _L_PUSH_API_DT_2_DIFF, _L_PUSH_API_DT_3_DIFF, _L_PUSH_API_DT_4_DIFF, CUS_SUM_TRAN_SUM_N, CUS_SUM_UPST_DCLN_TRAN_CNT_Q, CUS_SUM_OSEA_TRAN_CNT_Q, CUS_SUM_DOMS_TRAN_SUM_N, CUS_SUM_OSEA_TRAN_SUM_N, CUS_SUM_CARD_NOT_PRES_TRAN_SUM_N, CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CUS_SUM_CARD_PRES_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_SUM_N, CUS_SUM_CAPP_LOGN_CNT_Q, CUS_SUM_VIEW_CARD_DETL_CNT_Q, CRD_SUM_UPST_APRD_TRAN_CNT_Q, CRD_SUM_UPST_DCLN_TRAN_CNT_Q, CRD_SUM_FINL_APRD_TRAN_CNT_Q, CRD_SUM_TRAN_SUM_N, CRD_SUM_UPST_DCLN_TRAN_SUM_N, CRD_SUM_RULE_DCLN_TRAN_SUM_N, CRD_SUM_DOMS_TRAN_CNT_Q, CRD_SUM_DOMS_TRAN_SUM_N, CRD_SUM_OSEA_TRAN_SUM_N, CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N, CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CRD_SUM_CARD_PRES_TRAN_CNT_Q, CRD_SUM_PAY_PASS_TRAN_CNT_Q, CRD_SUM_CARD_PRES_TRAN_SUM_N, CRD_SUM_PAY_PASS_TRAN_SUM_N, CMA_SUM_TRAN_SUM_N, CMA_SUM_RULE_DCLN_TRAN_CNT_Q, CMA_SUM_FINL_APRD_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_SUM_N, CMA_SUM_FINL_APRD_TRAN_SUM_N, CMA_SUM_FDP_RULE_TRIG_CNT_Q, CMA_SUM_OSEA_TRAN_CNT_Q, CMA_SUM_DOMS_TRAN_SUM_N, CMA_SUM_OSEA_TRAN_SUM_N, CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMA_SUM_CARD_PRES_TRAN_CNT_Q, CMA_SUM_PAY_PASS_TRAN_CNT_Q, CMA_SUM_CARD_PRES_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_SUM_N, CMC_SUM_UPST_APRD_TRAN_CNT_Q, CMC_SUM_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_SUM_N, CMC_SUM_FDP_RULE_TRIG_CNT_Q, CMC_SUM_DOMS_TRAN_SUM_N, CMC_SUM_OSEA_TRAN_SUM_N, CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMC_SUM_CARD_PRES_TRAN_SUM_N, CMC_SUM_PAY_PASS_TRAN_SUM_N, MAQ_SUM_UPST_APRD_TRAN_CNT_Q, MAQ_SUM_TRAN_SUM_N, MAQ_SUM_UPST_DCLN_TRAN_CNT_Q, MAQ_SUM_RULE_DCLN_TRAN_CNT_Q, MAQ_SUM_FINL_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_SUM_N, MAQ_SUM_FINL_APRD_TRAN_SUM_N, MAQ_SUM_FDP_RULE_TRIG_CNT_Q, MAQ_SUM_DOMS_TRAN_CNT_Q, MAQ_SUM_OSEA_TRAN_CNT_Q, MAQ_SUM_DOMS_TRAN_SUM_N, MAQ_SUM_OSEA_TRAN_SUM_N, MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, MAQ_SUM_CARD_NOT_PRES_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N, MAQ_SUM_CARD_PRES_TRAN_CNT_Q, MAQ_SUM_PAY_PASS_TRAN_CNT_Q, MAQ_SUM_CARD_PRES_TRAN_SUM_N, MAQ_SUM_PAY_PASS_TRAN_SUM_N)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG2D_OOT
where to_date(transactiondatetime) > '2025-06-05' and to_date(transactiondatetime) <= '2025-06-10'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,8935129,8935.129,148.918817,2.48198,2X-LARGE,32,79.42336
01be7e84-3204-bc96-0000-c71d29a1c9ba,"CALL MLOP_SP_MODL_FEAT_MNTR(DATE '2025-08-20', PARSE_JSON('[""ElectricVehiclesPersonalLoan_v1"", ""CommBankAdvancePayAcquisition_v1"", ""CommSecAcquisition_v1"", ""EssentialSuperAwareness_v1"", ""GoalSaverEngage_v1"", ""TermDepositAcquisition_v1"", ""TermDepositMaturityReminder_v1"", ""FirstHomeBuyerReadiness_v1"", ""BillSenseOnboarding_v1"", ""HomeLoanPropertySeller_v1"", ""HomeSeekerDisengagement_v1"", ""BenefitsFinderGeneric_v1"", ""InvestingActivation_v1"", ""HLOnlineCalculator_v1"", ""CBROfferReminder_v1"", ""CCAutoPaySetUp_v1"", ""PersonalLoanPortfolioAQX_v1"", ""CreditCardAwardsAcquisition_v1"", ""CCPrimeGold_v1"", ""PersonalLoanAcquisition_v1"", ""SecuredPLAcquisition_v1"", ""CommSecPocket_v1"", ""HLRefiNeeds_v1"", ""BNPLAcqui_v1"", ""PLApprovdNtFund_v1"", ""BTADefault_v1"", ""SavingsAcqui_v1""]') :: ARRAY, 'POST', 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,8892608,8892.608,148.210133,2.470169,2X-LARGE,32,79.045408
01be1468-3204-ae4b-0000-c71d2676a90a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2222257,2222.257,37.037617,0.617294,4X-LARGE,128,79.013632
01bef478-3204-c939-0000-c71d2d42256a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,8875324,8875.324,147.922067,2.465368,2X-LARGE,32,78.891776
01beecbc-3204-c558-0000-c71d2d02a61e,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
)
;",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,8749357,8749.357,145.822617,2.430377,2X-LARGE,32,77.772064
01be18fc-3204-aff0-0000-c71d26980b32,"call MLOP_SP_MODL_RUNR(to_date('2025-08-02','YYYY-MM-DD'), 'ALL', ['CarInsurance.mojo', 'HLRefiLoanValue.mojo'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2175665,2175.665,36.261083,0.604351,4X-LARGE,128,77.356928
01bdebfb-3204-aa22-0000-c71d25512c42,"call MLOP_SP_MODL_RUNR(to_date('2025-07-25','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2173265,2173.265,36.221083,0.603685,4X-LARGE,128,77.27168
01bee8a9-3204-c557-0000-c71d2ce3d62a,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT (
-- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (
    WITH DSPT_POST AS (
        SELECT
            a.DSPT_TRAN_CRAT_S,
            a.DSPT_TRAN_I,
            a.ACCT_N,
            CPNN_ACCT_N,
            TOKN_ACCT_N,
            TRAN_S,
            TRAN_REFN_I,
            TRAN_POST_S,
            LPAD(TRAN_MERC_CATG_C, 4, '0') AS TRAN_MERC_CATG_C,
            TRAN_AUTT_NUMB_X,
            TRAN_C,
            TRAN_ORIG_CNCY_C,
            ABS(ROUND(TRAN_ORIG_A, 2)) AS TRAN_ORIG_A,
            TRAN_DEST_CNCY_C,
            ABS(ROUND(TRAN_DEST_A, 2)) AS TRAN_DEST_A,
            REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, 1, 23)), '[^A-Z0-9]', '') AS TRAN_MERC_DETL_X,
            VISA_MAIL_TELE_ORDR_C,
            TRAN_CAHD_ACTV_TRML_C,
            MCRD_INPT_MODE_C,
            MCRD_AUTN_C,
            MCRD_SECU_LEVL_INDA_C,
            MCRD_UVRS_CAHD_AUTT_FIED_C,
            INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, '-', 1)) AS DSPT_TRAN_DCDE_X,
            DDA_N,
            DSPT_TRAN_PROS_C,   
            TRAN_TOKN_TYPE_X,
            TRAN_CAHD_ACPT_IDNN_I,
            TRAN_SYST_TRAC_AUDT_NUMB_I,
            TRAN_RTRV_RQST_NUMB_C,
            TRAN_POS_MODE_C,
            TRAN_FALL_BACK_C,
            MCRD_SECU_LEVL_INDA_X,
            TRAN_ACTL_A,
            TRAN_HOST_SWIT_S,
            b.DSPT_CASE_I,
            b.DSPT_CASE_EVNT_I,
            b.DSPT_CASE_CRAT_I,
            b.DSPT_CASE_CRAT_S,
            b.DSPT_CASE_CLSE_S,
            b.DSPT_CHNL_M,
            b.DSPT_TYPE_X,
            b.DSPT_CASE_USER_STUS_X,
            b.DSPT_CASE_STUS_X,
            b.DSPT_SRCE_SYST_M,
            a.LOAD_TS
        FROM
            CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a
        LEFT JOIN (
            SELECT DSPT_CASE_I,
                ACCT_N,
                DSPT_TYPE_X,
                DSPT_CHNL_M,
                DSPT_SRCE_SYST_M,
                DSPT_TYPE_C,
                DSPT_CASE_EVNT_I,
                DSPT_CASE_STUS_X,
                DSPT_CASE_USER_STUS_X,
                DSPT_CASE_CRAT_I,
                DSPT_CASE_CRAT_S,
                DSPT_CASE_CLSE_S
            FROM
                CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL
            QUALIFY
                ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=1
        ) b
        ON
            a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I
        WHERE
            TO_DATE(b.DSPT_CASE_CRAT_S) <= TO_DATE($INPUT_D)-1
            AND TO_DATE(b.DSPT_CASE_CRAT_S) > TO_DATE($INPUT_D)-18
            AND TO_DATE(TRAN_S) >= '2024-12-10' -- before SF auth history
            AND a.DSPT_TRAN_I NOT IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT WHERE TRAN_I IS NOT NULL) -- Already matched
            AND a.DSPT_CASE_I IS NOT NULL
            AND a.DSPT_TRAN_I IS NOT NULL
            AND b.DSPT_TYPE_C = 'DT1'
            AND b.DSPT_CASE_USER_STUS_X = 'Closed'
        QUALIFY
            ROW_NUMBER() OVER (PARTITION BY a.DSPT_CASE_I, a.DSPT_NON_FNCL_TRAN_IDNN_BK ORDER BY a.DSPT_CASE_EVNT_I DESC )=1
    )
    , POTENTIAL_MATCHES AS (
        SELECT
            -- Posted
            dai.DSPT_CASE_I,
            dai.DSPT_CASE_EVNT_I,
            dai.DSPT_CASE_CRAT_I,
            dai.DSPT_CASE_CRAT_S,
            dai.DSPT_CASE_CLSE_S,
            dai.DSPT_CHNL_M,
            dai.DSPT_TYPE_X,
            dai.DSPT_CASE_USER_STUS_X,
            dai.DSPT_CASE_STUS_X,
            dai.DSPT_SRCE_SYST_M,
            dai.DSPT_TRAN_I,
            dai.TRAN_REFN_I AS DSPT_TRAN_REFN_I,
            dai.TRAN_SYST_TRAC_AUDT_NUMB_I AS DSPT_TRAN_SYST_TRAC_AUDT_NUMB_I,
            dai.TRAN_RTRV_RQST_NUMB_C AS DSPT_TRAN_RTRV_RQST_NUMB_C,
            dai.ACCT_N AS DSPT_ACCT_N,
            dai.CPNN_ACCT_N AS DSPT_CPNN_ACCT_N,
            dai.TOKN_ACCT_N AS DSPT_DPAN_I,
            dai.DDA_N AS DSPT_DDA_N,
            dai.TRAN_TOKN_TYPE_X AS DSPT_TRAN_TOKN_TYPE_X,
            TO_DATE(dai.TRAN_S)+1 AS DSPT_TRAN_D,
            dai.TRAN_S AS DSPT_TRAN_S,
            dai.TRAN_POST_S AS DSPT_TRAN_POST_S,
            dai.TRAN_HOST_SWIT_S AS DSPT_TRAN_HOST_SWIT_S,
            dai.TRAN_ORIG_A AS DSPT_TRAN_ORIG_A,
            dai.TRAN_ORIG_CNCY_C AS DSPT_TRAN_ORIG_CNCY_C,
            dai.TRAN_DEST_A AS DSPT_TRAN_DEST_A,
            dai.TRAN_DEST_CNCY_C AS DSPT_TRAN_DEST_CNCY_C,
            dai.TRAN_ACTL_A AS DSPT_TRAN_ACTL_A,
            dai.TRAN_MERC_DETL_X AS DSPT_TRAN_MERC_DETL_X,
            dai.TRAN_MERC_CATG_C AS DSPT_TRAN_MERC_CATG_C,dai.TRAN_C AS DSPT_TRAN_C,
            dai.VISA_MAIL_TELE_ORDR_C AS DSPT_VISA_MAIL_TELE_ORDR_C,
            dai.MCRD_INPT_MODE_C AS DSPT_MCRD_INPT_MODE_C,
            dai.TRAN_POS_MODE_C AS DSPT_TRAN_POS_MODE_C,
            dai.TRAN_AUTT_NUMB_X AS DSPT_TRAN_AUTT_NUMB_X,
            dai.DSPT_TRAN_DCDE_X,
            dai.MCRD_AUTN_C AS DSPT_MCRD_AUTN_C,
            dai.MCRD_SECU_LEVL_INDA_C AS DSPT_MCRD_SECU_LEVL_INDA_C,
            dai.MCRD_SECU_LEVL_INDA_X AS DSPT_MCRD_SECU_LEVL_INDA_X,
            dai.MCRD_UVRS_CAHD_AUTT_FIED_C AS DSPT_MCRD_UVRS_CAHD_AUTT_FIED_C,
            dai.TRAN_CAHD_ACTV_TRML_C AS DSPT_TRAN_CAHD_ACTV_TRML_C,
            dai.TRAN_CAHD_ACPT_IDNN_I AS DSPT_TRAN_CAHD_ACPT_IDNN_I,
            dai.TRAN_FALL_BACK_C AS DSPT_TRAN_FALL_BACK_C,
            dai.DSPT_TRAN_PROS_C,
            dai.DSPT_TRAN_CRAT_S,
            dai.LOAD_TS AS DSPT_LOAD_TS,
            
            -- Authorisation
            TO_NUMBER(tran.DTL_EX_0_N_064)||tran.DTL_EX_0_N_065||tran.DTL_EX_0_N_066 AS TRAN_I,
            tran.SSX_CUST_NUM AS CUST_I,
            tran.CHL_ID_CARD_NUM AS CARD_I,
            tran.DTL_EX_0_20S_004 AS DPAN_I,
            tran.CHL_CT_MEDIA AS TRAN_MDIA_C,
            TO_TIMESTAMP(CONCAT(tran.TTS_TRAN_DATE_ALT, tran.TTS_TRAN_TIME_ALT), 'YYYYMMDDHH24:MI:SS.FF6') AS TRAN_S,
            TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS TRAN_D,
            tran.DTL_CA_CLIENT_AMT AS TRAN_A,
            REGEXP_REPLACE(UPPER(SUBSTR(CHL_CT_TERM_OWNER_NAME, 1, 23)), '[^A-Z0-9]', '') AS MERC_M,
            tran.CHL_CT_MER_MCC AS TRAN_MERC_CATG_C,
            tran.CHL_CT_TERM_OWNER_ID AS MERC_I,
            tran.CHL_CT_TERM_ID AS MERC_TRML_I,
            tran.CHL_CT_ACQ_ID AS TRAN_ACQR_I,
            tran.CHL_CT_TERM_CNTRY_CODE AS TRAN_CNTY_C,
            tran.ATH_PC_POS AS TRAN_POS_MODE_C,
            tran.CHL_CT_ASSO_DEC_CODE AS TRAN_AUTT_NUMB_X,
            REPLACE(tran.DTL_CA_AUTH_SYS_DEC,' ','') AS TRAN_UPST_DCDE_C,
            REPLACE(tran.DTL_CA_AUTH_SYS_INFO,' ','') AS TRAN_UPST_REAS_C,
            REPLACE(tran.RSP_ACTION_CODE,' ','') AS TRAN_FINL_DCDE_C,
            SUBSTR(tran.DTL_EX_3_80S_003,1,2) AS TRAN_ACCT_AUTT_V,
            tran.DTL_EX_0_3S_002 AS TRAN_SECU_LEVL_INDA_C,
            tran.ATH_PC_PIN_VRFY AS TRAN_PIN_VERF_F,
            tran.DTL_CA_REVERSAL_IND AS TRAN_REVS_F,
            SUBSTR(tran.DTL_EX_0_10S_002,1,1) AS TRAN_PAIN_CUST_MERC_F,
            tran.DTL_EX_0_I_022 AS TRAN_RCRR_F,
            CASE WHEN tran.DTL_EX_3_8S_004 = '' THEN NULL ELSE TO_NUMBER(tran.DTL_EX_3_8S_004) END AS TRAN_MCRD_SCOR_N,
            tran.RSP_EX_2_8S_002 AS FDP_CARD_PRFL_X,
            SUBSTR(tran.RSP_EX_2_8S_001,1,5) AS FDP_RULE_TRIG_X,
            SUBSTR(tran.RSP_EX_2_8S_004,1,1) AS FDP_RULE_PUSH_TYPE_F,
            SUBSTR(tran.RSP_EX_2_8S_002,8,1) AS FDP_PUSH_EXIT_C,
            
            -- Post-to-auth match scoring
            (CASE WHEN DSPT_TRAN_MERC_DETL_X = MERC_M THEN 100
                WHEN (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1 OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1) THEN 80
                ELSE 0 END +
            CASE WHEN tran.CHL_CT_ASSO_DEC_CODE = dai.TRAN_AUTT_NUMB_X THEN 100 ELSE 0 END +
            CASE WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 0 THEN 100
                WHEN ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) = 1 THEN 50
                ELSE 0 END +
            CASE WHEN dai.TRAN_DEST_A = tran.DTL_CA_CLIENT_AMT THEN 100
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.025 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.975 THEN 50
                WHEN dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05 AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95 THEN 25
                ELSE 0 END +
            CASE WHEN dai.TRAN_MERC_CATG_C = tran.CHL_CT_MER_MCC THEN 100
                WHEN ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1 THEN 70
                ELSE 0 END +
            CASE 
                WHEN dai.MCRD_INPT_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = 'C') THEN 100
                        WHEN (tran.ATH_PC_POS = '81' AND dai.MCRD_INPT_MODE_C = 'M') THEN 100
                        WHEN (tran.ATH_PC_POS = '01' AND dai.MCRD_INPT_MODE_C = 'S') THEN 100
                        WHEN (tran.ATH_PC_POS = '07' AND dai.MCRD_INPT_MODE_C = '1') THEN 100
                        WHEN tran.ATH_PC_POS = dai.MCRD_INPT_MODE_C THEN 100
                        ELSE 0
                    END
                WHEN dai.TRAN_POS_MODE_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = 'S') THEN 80
                        WHEN (tran.ATH_PC_POS = '81' AND dai.TRAN_POS_MODE_C = 'M') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = 'C') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '1') THEN 80
                        WHEN (tran.ATH_PC_POS = '07' AND dai.TRAN_POS_MODE_C = '071') THEN 80
                        WHEN (tran.ATH_PC_POS = '01' AND dai.TRAN_POS_MODE_C = '0') THEN 80
                        WHEN tran.ATH_PC_POS = dai.TRAN_POS_MODE_C THEN 70
                        ELSE 0
                    END
                WHEN SUBSTR(tran.CHL_ID_CARD_NUM, 1, 1) = '4' AND dai.VISA_MAIL_TELE_ORDR_C IS NOT NULL THEN
                    CASE
                        WHEN (tran.ATH_PC_POS = '01' AND dai.VISA_MAIL_TELE_ORDR_C = '5') THEN 60
                        WHEN tran.ATH_PC_POS = dai.VISA_MAIL_TELE_ORDR_C THEN 40
                        ELSE 0
                    END
                ELSE 0 
            END) AS POST_AUTN_MTCH_SCOR
        FROM
            DSPT_POST dai
        LEFT JOIN 
            FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT tran
            ON 
            -- General match criteria (refined with POST_AUTN_MTCH_SCOR)
            -- Card number
            (tran.CHL_ID_CARD_NUM = dai.ACCT_N 
                OR tran.CHL_ID_CARD_NUM = dai.CPNN_ACCT_N 
                OR tran.DTL_EX_0_20S_004 = dai.TOKN_ACCT_N)
            -- Merchant name equal to or contained in the other
            AND DSPT_TRAN_MERC_DETL_X = MERC_M
            AND (CONTAINS(DSPT_TRAN_MERC_DETL_X, MERC_M)=1
                OR CONTAINS(MERC_M, DSPT_TRAN_MERC_DETL_X)=1)
            -- Amount within 10%
            AND dai.TRAN_DEST_A <= tran.DTL_CA_CLIENT_AMT * 1.05
            AND dai.TRAN_DEST_A >= tran.DTL_CA_CLIENT_AMT * 0.95
            -- Within 3 days between auth and post
            AND ABS(DATEDIFF(DAY, TO_DATE(dai.TRAN_S)+1, TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD'))) <= 1
            -- Similar MCC
            AND ABS(EDITDISTANCE(dai.TRAN_MERC_CATG_C, tran.CHL_CT_MER_MCC)) <= 1
    )
    , RANKED_MATCHES AS (
        SELECT *,
            -- Get highest match score for each dispute tran id
            ROW_NUMBER() OVER (PARTITION BY DSPT_TRAN_I ORDER BY 
                    CASE WHEN TRAN_AUTT_NUMB_X = DSPT_TRAN_AUTT_NUMB_X THEN 1 ELSE 0 END DESC,
                    POST_AUTN_MTCH_SCOR DESC,
                    TRAN_I ASC
                ) AS POST_RANK
        FROM
            POTENTIAL_MATCHES
    )
    SELECT 
        *
    EXCLUDE POST_RANK,
        'DAISY' AS SRCE_SYST_C,
        CURRENT_TIMESTAMP() AS LOAD_TS,
        0 AS ROW_SECU_ACCS_C,
        CURRENT_TIMESTAMP() AS ETL_TS,
        'PRD-FRAUMD-PRD-CARD-TRAN-DAIS-DSPT' AS ETL_ID,
        TO_DATE($INPUT_D)-1 AS SNAP_D
    FROM
        RANKED_MATCHES
    WHERE
        POST_RANK=1
        -- Don't insert when non-match transaction already exists in table
        AND NOT (TRAN_I IS NULL AND DSPT_TRAN_I IN (SELECT DSPT_TRAN_I FROM labmlfrd.CARD_TRAN_DAIS_DSPT))
);",THORPNA,R_USR_FRAUMD_LABMLFRD_RW,8650944,8650.944,144.1824,2.40304,2X-LARGE,32,76.89728
01be027c-3204-abe2-0000-c71d25f02602,"call MLOP_SP_MODL_RUNR(to_date('2025-07-29','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2116816,2116.816,35.280267,0.588004,4X-LARGE,128,75.264512
01beee77-3204-c93b-0000-c71d2d1145ea,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250904140303_scored_1 as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO2('modelname=pipeline_it1_F2_xval_zero_day_20250904140303.mojo', 
array_construct(
TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N3D_1D_SUM_1, _C_CC_HIGH_VEL_APPLE_SUM_1, _C_CRD_APAY_CNT_1, _C_CC_GBL_N3D_1D_CNT_1, _C_CC_CNP_VEL_6HR_SUM_1, _C_CRD_APAY_SUM_1, _C_CRD_SAFE_MERCHANT, _C_2WAY_CRD_FRD_RULE_FLAG, _C_CC_CNP_LTRANS_6HR_COUNT_1, _C_CC_CNP_VEL_6HR_COUNT_1, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_10, _A_NPP_FTP_SUM, _L_PASTE_IN_LOGIN_CNT, _A_CUST_SUM_AAA_LONG, _L_G_CON_DEV, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _L_RISKY_KEY_COMBO, _A_C_G, _L_SCORE_4, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _A_CRD_SCAM_SUPP_7D_SUM_1, _A_CLIENT_CITY_CNT_2, _L_UID_AGE, _L_SCRN_W, _L_ASN_AGE, _L_SCORE_2, _A_CUST_NPP_OUT_SUM_AAA_5, _L_BC_SESS_CNT, _L_ACC_AMT_1H, _A_CC_CASH_ADVANCE_AMT, _A_CUST_SUM_AAA_SHORT, _A_P_L_1, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_7D, _A_CLIENT_COUNTRY_CNT_7, _L_CONCURRENT_SESS, _A_CAPP_HCE_CNT_1, _L_SCORE_5, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _L_MAX_30D_SCORE, _L_M_L_1, _L_SCRN_H, _A_CUST_NPP_OUT_SUM_AAA_2, _A_CUST_ACTION_IND, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_AND_ID_AGE, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _L_NC_ACCT_NUM_NAME_CONF, _A_CLIENT_COUNTRY_CNT_5, _A_U, _L_SCM_RSK_SCR_2, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_3, _L_DAYS_LST_DEV_IOS, _A_T, _A_CUST_NPP_IN_SUM_AAA_2, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_2, _A_CLIENT_COUNTRY_CNT_6, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_R, _L_CNTRY_AGE, _A_NPP_IN_UNRELATED_SUM_24_1, _L_ACC_AMT_1D, _A_TRANSPORT_REG_CNT_1, _A_MULTI_CNT, _L_M_L_4, _A_PROF_CAPP_DEVICE_NFTP_1, _A_PROF_CAPP_DEVICE_CNT_5, _A_PROF_CAPP_DEVICE_CNT_4, _L_SESS_CNT_WEB, _L_M_L_C, _L_TIME_ZONE, _A_CUST_NPP_IN_SUM_AAA_1, _L_IP_AGE, _A_NPP_INBOUND_SUM_AMT, _A_NB_LOGONS_CNT_2, _A_CLC_FTP_AMT, _L_TRVL_SPD, _A_CRYPTO_MNTHLY_SUM, _A_GL_TRF_ACC_BAL, _L_SESS_CNT_MOB_BROWSER, _L_SCORE_3, _A_CRD_CRYPTO_PROC_FLG, _A_NPP_OUT_CNT_2, _A_SCH_AMT, _A_P_L_3, _L_SDID_CNT_1, _A_CUST_NPP_OUT_SUM_AAA_LONG, _A_LIST_RL1_SCAM_CUST_CIF, _L_NUM_SESS_2H, _A_VPN_VPS_IP_LOGON_COUNT, _A_GEO_DISTANCE, _A_NB_LOGONS_CNT_3, _L_DAYS_LST_DEV_JS, _A_FTP_SUM_1, _L_NUM_SESS_4H, _L_DPI_CHANGE, _A_SCAM_RISKY_MCC_PRELEAD_AMT, _L_M_L_3, _L_CLIPB_EVENT_CNT, _A_CIF_ESTABLISH_CHANNEL, _A_CUST_OS_VER, _A_CUST_OS_NAME, _A_CLIENT_CITY_10, _L_PUSH_API_1, _L_PUSH_API_2, _L_PUSH_API_3, _L_PUSH_API_4, _A_CLIENT_CITY_6, _L_NC_WINNING_ALG, _L_PROXY_TYPE, _L_LANG_3, _L_LANG_1, _L_LANG_2, _L_NC_RESPONSE_CODE, _A_PROF_RISK_IND, _A_LATEST_NCRG_ISP, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_EX_3_80S_002, _A_MRISK_FOREIGN_IP_CNTRY_CODE, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, _A_CIF_ESTABLISH_CUST_PCODE, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, GENDER, DMC_CNT, YCS_CNT, TRAN_CNT, DPST_CNT, CC_CNT, TRD_CNT, PL_CNT, MORT_CNT, INSRNC_CNT, BTA_CNT, BUS_LN_CNT, OTH_CNT, REL_MNG, FA_1, FA_2, NO_1, NO_2, FP, GOVT_BENE, PRVT_CUST, HL_ASOC, CORP_EMPL, INTL_STU, MAR_STS_ORG_STR, EMPL_CLAS_LGL_STS, HOME_OWN, _X_NPP_OUT_SUM_DATE_DIFF, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF, _A_SCAMP1_MLW_DT_DIFF, _A_SCAMP2_MLW_DT_DIFF, _A_SCAMP5_MLW_DT_DIFF, _A_SCAMP7_MLW_DT_DIFF, _L_PUSH_API_DT_1_DIFF, _L_PUSH_API_DT_2_DIFF, _L_PUSH_API_DT_3_DIFF, _L_PUSH_API_DT_4_DIFF)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG2D_OOT
where to_date(transactiondatetime) > '2025-06-07'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,8401475,8401.475,140.024583,2.333743,2X-LARGE,32,74.679776
01be7c20-3204-bc98-0000-c71d2990d1f2,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,2099054,2099.054,34.984233,0.583071,4X-LARGE,128,74.633088
01be29dc-3204-b1e8-0000-c71d270e175a,"call MLOP_SP_MODL_RUNR(to_date('2025-08-05','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,2086230,2086.23,34.7705,0.579508,4X-LARGE,128,74.177024
01be9f50-3204-bee4-0000-c71d2a9f7446,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_merc_acqr_tran_prfl_agg2d as
(WITH date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-05-31'
    order by tran_d
),
hourly_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-05-31'
),
all_dates AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        ds.tran_d
    FROM
        (SELECT DISTINCT cust_i, merc_i, acqr_i FROM PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl where tran_d between '2025-03-01' and '2025-05-31') ca
    CROSS JOIN date_series ds
),
daily_data AS (
    SELECT
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates ad
    LEFT JOIN hourly_data hd
    ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d)
),
aggregated_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data
)
SELECT
    cust_i, -- as ssx_cust_num,
    merc_i,
    acqr_i,
    window_start_date,
    -- window_start_date + INTERVAL '2 days' AS window_end_date,
    CMA_SUM_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    CMA_SUM_TRAN_SUM_N,
    CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_SUM_N,
    CMA_SUM_FINL_APRD_TRAN_SUM_N,
    CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    CMA_SUM_DOMS_TRAN_CNT_Q,
    CMA_SUM_OSEA_TRAN_CNT_Q,
    CMA_SUM_DOMS_TRAN_SUM_N,
    CMA_SUM_OSEA_TRAN_SUM_N,
    CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    CMA_SUM_3DS_TRAN_CNT_Q,
    CMA_SUM_N3D_TRAN_CNT_Q,
    CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    CMA_SUM_3DS_TRAN_SUM_N,
    CMA_SUM_N3D_TRAN_SUM_N,
    CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    CMA_SUM_ATM_TRAN_CNT_Q,
    CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    CMA_SUM_CHIP_TRAN_CNT_Q,
    CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    CMA_SUM_CARD_PRES_TRAN_SUM_N,
    CMA_SUM_ATM_TRAN_SUM_N,
    CMA_SUM_FALL_BACK_TRAN_SUM_N,
    CMA_SUM_CHIP_TRAN_SUM_N,
    CMA_SUM_PAY_PASS_TRAN_SUM_N,
    CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_RULE_PUSH_SENT_F
FROM
    aggregated_data
ORDER BY
    cust_i,
    merc_i,
    acqr_i,
    window_start_date);",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,8341096,8341.096,139.018267,2.316971,2X-LARGE,32,74.143072
01bde595-3204-a619-0000-c71d252146f2,"with PYTHON_WORKSHEET as procedure () returns Table() language python runtime_version=3.11 packages=('snowflake-snowpark-python') handler='main' as 'import json
import pandas as pd
from snowflake.snowpark.functions import parse_json
import snowflake.snowpark as snowpark


dtype_dict = {
    ''CARD_ASES_BTCH_CCA_CASE_TRAN_STG'': {
        ''TTS_TRAN_DATE_CLIENT'': ''object'',
        ''TTS_TRAN_TIME_CLIENT'': ''object'',
        ''TRANSACTIONNUMBER2'': ''object'',
        ''ATH_PC_POS'': ''object'',
        ''RSP_ACTION_CODE'': ''object'',
        ''DTL_CA_AUTH_SYS_DEC'': ''object'',
        ''DTL_CA_CLIENT_AMT'': ''float64'',
        ''CHL_CT_TERM_OWNER_NAME'': ''object'',
        ''DTL_EX_0_20S_004'': ''object'',
        ''CHL_ID_CARD_NUM'': ''object'',
        ''CHL_CT_MER_MCC'': ''object'',
        ''DTL_EX_3_20S_001'': ''object'',
        ''CHL_CT_MEDIA'': ''object'',
        ''DTL_EX_0_3S_002'': ''object'',
        ''DTL_CA_REVERSAL_IND'': ''object'',
        ''DTL_EX_3_80S_003'': ''object'',
        ''_A_CUSTOMER_AGE'': ''float64'',
        ''TRANSACTIONNUMBER'': ''object'',
        ''SSX_CUST_NUM'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_CCA_CASE_TRAN_UV_STG'': {
        ''SSX_CUST_NUM'': ''object'',
        ''CHL_ID_CARD_NUM'': ''object'',
        ''DTL_EX_0_20S_004'': ''object'',
        ''REGISTRATION_TIME'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_CCP_CRCD_TRAN_STG'': {
        ''TRAN_A'': ''float64'',
        ''MERC_X'': ''object'',
        ''TRAN_S'': ''object'',
        ''ACCT_I'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_DIGT_NMON_EVNT_STG'': {
        ''TTS_TRAN_TIME_ALT'': ''object'',
        ''TTS_TRAN_DATE_ALT'': ''object'',
        ''DTL_EX_1_5S_01'': ''object'',
        ''DTL_EX_0_20S_004'': ''object'',
        ''CHL_ID_DEVICE_ID'': ''object'',
        ''DTL_EX_0_4S_001'': ''object'',
        ''DTL_EX_0_N_021'': ''float64'', 
        ''DTL_EX_0_N_015'': ''float64'',
        ''DTL_EX_0_N_012'': ''float64'', 
        ''DTL_EX_0_I_009'': ''object'',
        ''DTL_EX_0_I_005'': ''object'',
        ''DTL_EX_0_N_017'': ''float64'',
        ''DTL_EX_0_N_001'': ''float64'',
        ''DTL_EX_0_N_013'': ''float64'',
        ''SSX_CUST_NUM'': ''object'',
        ''CHL_OB_IP_ADDRESS_V6'': ''object'',
        ''CHL_OB_IP_ADDRESS'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_PEGA_CURR_STG'': {
        ''TRANSDATETIME'': ''object'',
        ''TRANSACTIONNUMBER'': ''object'',
        ''TRANSACTIONAMOUNT'': ''float64'',
        ''FINALDECISIONCODE'': ''object'',
        ''SICCODE'': ''object'',
        ''MERCHANTNAME'': ''object'',
        ''PXCREATEDATETIME'': ''object'',
        ''PYID'': ''object'',
        ''BASECRDNUMBER'': ''object'',
        ''CUSTID'': ''object'',
        ''DETECTIONMETHODID'': ''object'',
        ''POSTINGS_COUNT'': ''float64'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_PEGA_HIST_STG'': {
        ''TRANSDATETIME'': ''object'',
        ''TRANSACTIONNUMBER'': ''object'',
        ''TRANSACTIONAMOUNT'': ''float64'',
        ''FINALDECISIONCODE'': ''object'',
        ''SICCODE'': ''object'',
        ''MERCHANTNAME'': ''object'',
        ''PXCREATEDATETIME'': ''object'',
        ''PYID'': ''object'',
        ''BASECRDNUMBER'': ''object'',
        ''CUSTID'': ''object'',
        ''DETECTIONMETHODID'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    },
    ''CARD_ASES_BTCH_RSA_AUTN_EVNT_STG'': {
        ''PAREQLPADDRESS'': ''object'',
        ''DEVICEID'': ''object'',
        ''PAREQPAN'': ''object'', 
        ''PAREQPURCHASEAMOUNT'': ''float64'',
        ''PAREQPURCHASEDATE'': ''object'',
        ''TRANSACTIONID'': ''object'',
        ''BUSN_D'': ''datetime64[ns]''
    }
}


def charge_back_rights(pega: pd.DataFrame, run_param: dict):

    cpvals = run_param[""SUMMARY""][""cp_ucm_pos""]

    digivals = run_param[""SUMMARY""][""digi""]

    digital_wallet = pega[
    (pega[""DTL_EX_3_20S_001""].isin(digivals)) &
    (pega[""DTL_EX_0_20S_004""].str.len() > 14)
    ]

    digital_tran_id = digital_wallet[""TRANSACTIONNUMBER""].to_list()
    pega_without_digital = pega[~pega[""TRANSACTIONNUMBER""].isin(digital_tran_id)]
    pega_without_digital_cnp = pega_without_digital[
        ~pega_without_digital[""ATH_PC_POS""].isin(cpvals)
    ]

    netcode_transactions = []
    for index, row in pega_without_digital_cnp.iterrows():

        check1 = check2 = check3 = check4 = False

        try:
            int_rua_3byte_string_002 = int(row[""DTL_EX_0_3S_002""])
        except ValueError:
            int_rua_3byte_string_002 = -999  # hopefully not a real value

        if row[""ATH_PC_POS""] not in cpvals:
            check1 = True
        # in [005,242,912,05] means netcode sent
        if int_rua_3byte_string_002 in run_param[""DECLINE""][""netcode_sent_3ds_sli""]:
            check2 = True
        if (int_rua_3byte_string_002 == 212) & isinstance(
            row[""DTL_EX_3_80S_003""], str
        ) and not row[""DTL_EX_3_80S_003""].upper().startswith((""KA"", ""KG"")):
            check3 = True
        # new condition: int_rua_3byte_string_002 == 242 and dua_20byte_string_001 is empty
        if int_rua_3byte_string_002 == 242 and pd.isna(row[""DTL_EX_3_20S_001""]):
            check4 = True

        if check1 and (check2 or check3 or check4):
            netcode_transactions.append(row[""TRANSACTIONNUMBER""])
    pega_without_digital_cnp_not_netcode = pega_without_digital_cnp[
        ~pega_without_digital_cnp[""TRANSACTIONNUMBER""].isin(netcode_transactions)
    ]
    pega_without_digital_cnp_not_netcode = pega_without_digital_cnp_not_netcode.query(
        ""PXCREATEDATETIME != ''nat''""
    )

    # Convert columns to datetime
    # ...existing code...

    # Convert columns to datetime with explicit format
    

    

# ...existing code...

    pega_without_digital_cnp_not_netcode[""difference_days""] = (
        pega_without_digital_cnp_not_netcode[""PXCREATEDATETIME""]
        - pega_without_digital_cnp_not_netcode[""TRANSDATETIME""]
    ).dt.days
    pega_without_digital_cnp_not_netcode = pega_without_digital_cnp_not_netcode[
        pega_without_digital_cnp_not_netcode[""difference_days""] < 120
    ]
    # Sort the DataFrame by TRANSDATETIME
    sorted_pega = pega_without_digital_cnp_not_netcode.sort_values(""TRANSACTIONAMOUNT"", ascending=False)

# Select the top 35 rows
    top_35_pega = sorted_pega.head(35)

# Calculate the total sum of the TRANSACTIONAMOUNT column for these top 35 rows
    total_sum = top_35_pega[""TRANSACTIONAMOUNT""].sum()

    if total_sum > 0:
        return float(total_sum)
    else:
        return """"


def prepare_json_output(json_input):
    return json.dumps(json_input)



def prepare_table(session, table_path):
    table_df = pd.DataFrame(columns=dtype_dict[table_path].keys()) # Create base table
    # sf_table_df = session.table(table_path)
    sf_table_df = session.sql (f""""""
        SELECT
            *
        FROM {table_path}
        WHERE BUSN_D = ''2025-07-18''
    """"""    
    )
    sf_table_df = sf_table_df.to_pandas()
    if not sf_table_df.empty:
        table_df = pd.concat([table_df, sf_table_df])
    col_dtype_dict = {}
    for _, v in dtype_dict.items():
        col_dtype_dict.update(v)
    filtered_dtype_dict = {col: dtype for col, dtype in col_dtype_dict.items() if col in table_df.columns}
    def safe_cast_column(series, target_type):
        if target_type == ''float64'':
            return pd.to_numeric(series, errors=''coerce'')
        elif target_type == ''datetime64[ns]'':
            return pd.to_datetime(series, errors=''coerce'')
        elif target_type == ''object'':
            # Optionally: fillna('''') if you want empty string for missing
            return series.astype(object).where(series.notna(), '''')
        else:
            return series.astype(target_type, errors=''ignore'')
    # Apply the filtered dtype dictionary to the DataFrame
    # table_df = table_df.astype(filtered_dtype_dict)
    # Replace null values with an empty string for string columns
    for col, dtype in filtered_dtype_dict.items():
        table_df[col] = safe_cast_column(table_df[col], dtype)
    if ''BUSN_D'' in table_df.columns:
        table_df = table_df[table_df[''BUSN_D''] == ''2025-07-18''] # TODO
    return table_df


run_param = {
    ''SUMMARY'': {
      # these fields are common to the entire case, so we just need to return a single
      # value. Dict maps the return key to the field name. Field names are lowercased by the
      # time this info is used
        ''case_level_fields'': {
            ''detection_method'': ''DETECTIONMETHODID''
        },
        #fraud_type: fraudtypename
        #case_creation_date: casecreatedate
        # values that indicate Card Present. Strings
        ''cp_ucm_pos'': [''05'',''07'',''02'',''62'',''90'',''91'',''95'', ''5'', ''7'', ''2''],
        ''digi'': [''50120834693'',''50139059239'',''50174158869'',''50183038325'',''40010075001'',''40010043095'',''40010077056'',''40010069887'',''50144344765'',''40010025333'',''50110030273'',''40010030273'',''006110030273'',''006100000002'',''006100000003''],
        # digi: &digi [''82933039052'', ''38741590518'', ''57680944050'', ''43204753869'', ''89342102629'']
        ''escalation_thresholds'': {
            10000: ""Senior Analyst"",
            20000: ""Manager/Senior Manager"",
            50000: ""Executive Manager""
        },
        ''no_change_to_account'': {
            # how many days before a transaction is considered a change?
            ''lookback_days'': 14,  # confirmed Joseph 2024-10-14
            ''change_taskids'': [
            # from Vincent/Matt, but potentially need additions for same action different channels?
            #- ""A0305""  # KAFKA_RTE CommBank App Device Register
                ""C221"",  # NPP ARC CAPP Customer updating contact mobile number
                ""N1702"",  # RTE MyContactDetailsAddressUpdate
                ""N221"",  # NPP ARC NB Customer updating contact mobile number
                ""S1201"",  # OTHER TELEPHONE BANKING PASSWORD RESET
                ""S1601"",  # COMMSEE CommSeeMobileNumberAdd
                ""S1611"",  # COMMSEE CommSeeMobileNumberModify
                ""S1621"",  # COMMSEE CommSeeMobileNumberDelete
                ""S439"",  # EONTECH Request SMS NetCode for Secure Internet Shopping
                ""U354""  # EONTECH CA Create/Change Card Pin
            ]
        }
    },
    # settings for decline reason determination
    ''DECLINE'': {
        ''cp_ucm_pos'': [''05'',''07'',''02'',''62'',''90'',''91'',''95'', ''5'', ''7'', ''2''],
        ''digi'': [''50120834693'',''50139059239'',''50174158869'',''50183038325'',''40010075001'',''40010043095'',''40010077056'',''40010069887'',''50144344765'',''40010025333'',''50110030273'',''40010030273'',''006110030273'',''006100000002'',''006100000003''],
        # applied to rua_3byte_string_002, which is numeric for us:
        ''netcode_sent_3ds_sli'': [912, 5],
        # applied to dua_80byte_string_003, netcode wasn''t actually sent. Uppercase
        ''frictionless_netcode_prefix'': [''KA'', ''KG''],
        # combinations of ucm_pos:hct_media that indicate a PIN check
        ''pin_check_combos'': {
            ''05'': ''C'',
            ''07'': ''T'',
            ''7'': ''T'',
            ''5'': ''C''
        },
        ''report_delay'': {
        # do we count from first(min) or last(max) flagged transaction?
            ''relevant_trans'': ''min'',
            # how long is too long?
            ''threshold_days'': 120
        },
        ''merchant_previously_used'': {
            # column names to compare
                ''pega_col'': ''MERCHANTNAME'',
                ''cca_col'': ''CHL_CT_TERM_OWNER_NAME''
        },
        ''similar_use'': {
        # column names to compare
            ''pega_col'': ''SICCODE'',
            ''cca_col'': ''CHL_CT_MER_MCC''
        },
        ''no_change_to_account'': {
            # how many days before a transaction is considered a change?
            ''lookback_days'': 14,  # confirmed Joseph 2024-10-14
            ''change_taskids'': [
            # from Vincent/Matt, but potentially need additions for same action different channels?
            #- ""A0305""  # KAFKA_RTE CommBank App Device Register
                ""C221"",  # NPP ARC CAPP Customer updating contact mobile number
                ""N1702"",  # RTE MyContactDetailsAddressUpdate
                ""N221"",  # NPP ARC NB Customer updating contact mobile number
                ""S1201"",  # OTHER TELEPHONE BANKING PASSWORD RESET
                ""S1601"",  # COMMSEE CommSeeMobileNumberAdd
                ""S1611"",  # COMMSEE CommSeeMobileNumberModify
                ""S1621"",  # COMMSEE CommSeeMobileNumberDelete
                ""S439"",  # EONTECH Request SMS NetCode for Secure Internet Shopping
                ""U354""  # EONTECH CA Create/Change Card Pin
          ]
        }
    }
}


def main(session: snowpark.Session):
    output_df_schema = {
        ''CASE_I'': ''string'',
        ''BUSN_D'': ''object'', #TODO: TJ MS change when adjusting to dbt
        ''LOAD_TS'': ''object'', #TODO: TJ MS change when adjusting to dbt
        ''CHRG_BACK_RGHT_OPUT_V'': ''object''
    }
    pega = prepare_table(session, ''CARD_ASES_BTCH_PEGA_CURR_STG'') #TODO: TJ MS change when adjusting to dbt
    pega[''TRANSDATETIME''] = pd.to_datetime(
        pega[''TRANSDATETIME''],
        errors=''coerce''
    )
    pega[''PXCREATEDATETIME''] = pd.to_datetime(
        pega[''PXCREATEDATETIME''],
        errors=''coerce''
    )
    pega_full = prepare_table(session, ''CARD_ASES_BTCH_PEGA_HIST_STG'') #TODO: TJ MS change when adjusting to dbt
    cca = prepare_table(session, ''CARD_ASES_BTCH_CCA_CASE_TRAN_STG'') #TODO: TJ MS change when adjusting to dbt
    case_ids = pega[''PYID''].unique()
    results = []
    for case_id in case_ids:
        if not case_id:
            continue
        # Step 1: Filter pega where PYID equals case_id
        pega_filtered = pega[pega[''PYID''] == case_id]
        pega_filtered = pega_filtered.drop_duplicates(subset=''TRANSACTIONNUMBER'')
        pega_filtered = pega_filtered.dropna(subset=[''TRANSDATETIME'', ''MERCHANTNAME'', ''TRANSACTIONNUMBER'', ''BASECRDNUMBER''])
        pega_filtered = pega_filtered[pega_filtered[''MERCHANTNAME''] != """"]
        pega_filtered = pega_filtered[pega_filtered[''TRANSDATETIME''] != """"]
        pega_filtered = pega_filtered[pega_filtered[''TRANSACTIONNUMBER''] != """"]
        pega_filtered = pega_filtered[pega_filtered[''BASECRDNUMBER''] != """"]
        
        
        
        # Extract BASECRDNUMBER and CUSTID from filtered pega
        basecrdnumber = pega_filtered[''BASECRDNUMBER''].iloc[0]  # Assuming single value

    # Handle possible nulls in CUSTID
        missing_custid = False
        first_custid = pega_filtered[''CUSTID''].iloc[0]
        if pd.isnull(first_custid) or first_custid == ''<NA>'':
            non_null_custids = pega_filtered[''CUSTID''][(~pd.isnull(pega_filtered[''CUSTID''])) & (pega_filtered[''CUSTID''] != ''<NA>'')]
            if not non_null_custids.empty:
                custid = non_null_custids.iloc[0]
            else:
                custid = None
                missing_custid = True
        else:
            custid = first_custid
        
        # Step 2:  fix tranactionnumber and remove disputed transactions from other cases from cca
        # ...existing code...

    # Step 2:  fix tranactionnumber and remove disputed transactions from other cases from cca
        if missing_custid:
            cca_filtered = cca[cca[''CHL_ID_CARD_NUM''] == basecrdnumber].copy()
        else:
            cca_filtered = cca[cca[''SSX_CUST_NUM''] == custid].copy()

    # ...existing code...
        # Add new datetime column to cca_filtered
        cca_filtered[''TRANSDATETIME''] = pd.to_datetime(
            cca_filtered[''TTS_TRAN_DATE_CLIENT''] + '' '' + cca_filtered[''TTS_TRAN_TIME_CLIENT''],
            format=''%Y%m%d %H:%M:%S.%f'',
            errors=''coerce''
        )
        cca_filtered = cca_filtered.sort_values(''TRANSDATETIME'', ascending=False).reset_index(drop=True)

        # Lag ''TRANSACTIONNUMBER2'' by 1 row (shift down) and overwrite the column
        cca_filtered[''TRANSACTIONNUMBER2''] = cca_filtered.groupby(''CHL_ID_CARD_NUM'')[''TRANSACTIONNUMBER2''].shift(1)
        invalid_values = ['''', ''00000000000000000000000000001'', ''00000000000000000000000000002'', ''00000000000000000000000000000'']
        cca_filtered[''TRANSACTIONNUMBER''] = cca_filtered.apply(
            lambda row: row[''TRANSACTIONNUMBER2''] if row[''TRANSACTIONNUMBER''] in invalid_values else row[''TRANSACTIONNUMBER''],
            axis=1
        )
        #remove disputed transactions from cca_filtered
        previous_case_transactions = pega_full[
            (pega_full[''CUSTID''] == custid) & (pega_full[''PYID''] != case_id)
        ][''TRANSACTIONNUMBER''].unique()
        # Remove rows in cca_filtered where TRANSACTIONNUMBER is in previous_case_transactions
        cca_filtered = cca_filtered[~cca_filtered[''TRANSACTIONNUMBER''].isin(previous_case_transactions)]
        #complete pega 
        pega_filtered = pega_filtered.merge(
        cca_filtered[[''TRANSACTIONNUMBER'', 
            ''RSP_ACTION_CODE'', ''ATH_PC_POS'', ''CHL_CT_MEDIA'', ''DTL_EX_0_3S_002'', 
            ''DTL_CA_REVERSAL_IND'', ''DTL_EX_0_20S_004'', ''DTL_EX_3_20S_001'', 
            ''DTL_EX_3_80S_003'', ''_A_CUSTOMER_AGE'', ''DTL_CA_AUTH_SYS_DEC'']],
        how=''left'',
        on = ''TRANSACTIONNUMBER''
        )
        pega_filtered = pega_filtered[pega_filtered[''FINALDECISIONCODE''] == ''A'']
        if pega_filtered.empty or cca_filtered.empty: # Skip condition as pega cca required for functions
            continue
        charge_back_json = charge_back_rights(pega_filtered, run_param)
        results.append({
                    ''CASE_I'': case_id,
                    ''BUSN_D'': (pd.Timestamp.now() - pd.Timedelta(days=1)).strftime(""%Y-%m-%d""), #TODO: TJ MS change when adjusting to dbt
                    ''LOAD_TS'': pd.Timestamp.now().strftime(""%Y-%m-%dT%H:%M:%S.%f""), #TODO: TJ MS change when adjusting to dbt
                    ''CHRG_BACK_RGHT_OPUT_V'': prepare_json_output(charge_back_json)
                    })
    results_df = pd.DataFrame(results, columns=output_df_schema).astype(output_df_schema)
    # For testing only
    #TODO: TJ MS change when adjusting to dbt [ADJUST HOW TABLES ARE SAVED TO SF]
    # sf_res_df = session.write_pandas(results_df, ''ASSESSMENT_JSON_AT_CB'', overwrite=True) #TODO: TJ MS change when adjusting to dbt
    # sf_res_df = sf_res_df.with_column(""JSON_OUTPUT"", parse_json(sf_res_df[''JSON_OUTPUT'']))
    # sf_res_df.write.mode(''overwrite'').save_as_table(''ASSESSMENT_JSON_AT_CB'') 
    tag_query = """"""
    """"""
    session.sql(tag_query)
    # For testing only
    return session.create_dataframe(results_df)
' call PYTHON_WORKSHEET();",TANGA29,R_USR_FRAUMD_PRD_CUS,2068570,2068.57,34.476167,0.574603,4X-LARGE,128,73.549184
01bde649-3204-aa22-0000-c71d2525ed0e,"SELECT 
    t1.tts_tran_date_client,
    t1.tts_tran_time_client,
    REGEXP_REPLACE(LTRIM(t1._c_cmx_tran_id), '^[0-9]','') AS transactionnumber2,
    t1.ath_pc_pos,
    t1.rsp_action_code,
    t1.DTL_CA_auth_sys_dec,
    t1.DTL_CA_client_amt,
    t1.CHL_CT_term_owner_name,
    t1.dtl_ex_0_20s_004,
    t1.chl_id_card_num,
    t1.CHL_CT_mer_mcc,
    t1.dtl_ex_3_20s_001,
    t1.chl_ct_media,
    t1.dtl_ex_0_3s_002,
    t1.dtl_ca_reversal_ind,
    t1.dtl_ex_3_80s_003,
    t1._a_customer_age,
    REGEXP_REPLACE(LTRIM(t1.rsp_ex_2_30s_001), '^[0-9]','') AS transactionnumber,
    t1.ssx_cust_num

FROM
    PRD_P01_DMN_FRAUMD.LCL.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT AS t1
JOIN CARD_ASES_BTCH_PEGA_HIST_STG AS p ON (
    (p.custid IS NOT NULL AND p.custid <> '' AND t1.ssx_cust_num = p.custid)
    OR
    (p.custid IS NULL OR p.custid = '' AND t1.chl_id_card_num = p.basecrdnumber)
)
where
t1.tts_tran_date_client >= TO_CHAR(DATEADD(month, -6, CURRENT_DATE), 'YYYYMMDD')
 ",SAKKAIB,R_USR_FRAUMD_LABMLFRD_RW,2039483,2039.483,33.991383,0.566523,4X-LARGE,128,72.514944
01bdc828-3204-a614-0000-c71d244906c2,call cns.sp_inta_digt_evnt_detl_transform(),SYSTEM,R_BAT_PRD_Z01_CAH,1975651,1975.651,32.927517,0.548792,4X-LARGE,128,70.245376
01bdc828-3204-a614-0000-c71d244906c6,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_TRANSFORM
SELECT
  UPPER(CONCAT('AAN','~','OM','~',POST_VISID_HIGH,'_',POST_VISID_LOW, '_', VISIT_NUM , '_' ,VISIT_START_TIME_GMT)) AS INTA_BK
  ,TO_CHAR(TRIM(DATE_TIME)) AS DIGT_INTA_EVNT_S
  ,VISIT_PAGE_NUM AS DIGT_INTA_EVNT_SEQN_N
,TRIM( REGEXP_REPLACE(concat_ws(',',
    COALESCE(   CASE WHEN ARRAY_POSITION ( '213'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_CTCT_RQST_SUBM_CLIC' END, '') || ',' ||
	COALESCE(   CASE WHEN ARRAY_POSITION ( '233'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_FIND_MOBL_L_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '240'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_APPT_STRT_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '241'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_APPT_SUBM_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '274'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_QOTE_STRT_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '208'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_APPT_LEAD_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '275'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_QOTE_COMT_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '277'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_QOTE_RTRV_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '244'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'DIGT_QOTE_SAVE_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20219'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'PDCT_SLCT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20179'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'FEAT_NGGE' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '203'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'TOOL_USGE' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20104'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'PROP_SRCH' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '246'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'ECV_STRT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '249'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'ECV_COMP' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '247'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'ECV_FAIL' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '269'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'EBV_STRT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '271'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'EBV_COMP' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '270'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'EBV_FAIL' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '273'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'REGR_COMP' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20143'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'HB_CE_STRT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20144'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'HB_CE_SUBM' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '258'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'LAUN_EVNT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '262'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'VOTE_UP' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '263'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'VOTE_DOWN' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '297'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'PUSH_IMPS' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '298'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'PUSH_IMPS_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20105'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'PROP_SRCH_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '295'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'MBOX_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'MBOX_IMPS' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '264'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'INTR_SRCH_EVNT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '265'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'INTR_SRCH_RSLT_CLIC' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20170'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'SHRE_EVNT_STRT' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20171'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'SHRE_EVNT_SUBM' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20180'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'EMAL_ASET_FNCL_QOTE' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20181'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'QOTE_REVW_COMP' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20176'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'AUTO_CHAT_CLSE' END, '') || ',' ||
	COALESCE(	CASE WHEN ARRAY_POSITION ( '20175'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 'AUTO_CHAT_SWIT_LIVE_CHAT' END,  '') )
	, ',{2,}', ','),',') AS DIGT_INTA_EVNT_TYPE_CODE_X
    ,'NULL' as DIGT_CHNL_CTNT_OBJC_HASH_X
    ,CASE WHEN PAGENAME LIKE '%404:%' THEN 'Y'
     WHEN PAGENAME LIKE 'cba:commbank:en:job:%' THEN 'Y'
     WHEN PROP43 = 'cb:term-deposit:personal:applicant1-contact-details'        THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:applicant1-fullname'  THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:btn-first-applicant-tfn-details' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:first-applicant-address' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:first-applicant-dob' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:first-applicant-tfn-details' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:review-application-summary' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:personal:selected-term-deposit-intro'  THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:rate-selector:Personal:investment-details' THEN 'N'
     WHEN PROP43 = 'cb:term-deposit:rate-selector:Personal:rates-and-returns' THEN 'N'
     WHEN PROP43 LIKE '%cb:cards-origination%' THEN 'N'
     WHEN PROP43 LIKE '%nb:bta-bos%' THEN 'N'
     WHEN PROP43 LIKE '%nb:business origination%'       THEN 'N'
     WHEN PROP43 LIKE '%nb:cards-origination%' THEN 'N'
     WHEN PROP43 LIKE '%nb:contactcentre:application:appointment%' THEN 'N'
     WHEN PROP43 LIKE '%nb:everyday%'   THEN 'N'
     WHEN PROP43 LIKE '%nb:financialplanning:commbank:new%' THEN 'N'
     WHEN PROP43 LIKE '%nb:fss:stp:travelmoneyreviewandsubmit%' THEN 'N'
     WHEN PROP43 LIKE '%nb:helix:car-insurance%' THEN 'N'
     WHEN PROP43 LIKE '%nb:helix:home-insurance%'       THEN 'N'
     WHEN PROP43 LIKE '%nb:mo%' THEN 'N'
     WHEN PROP43 LIKE '%nb:netbank:financialplanning:netbank:new%' THEN 'N'
     WHEN PROP43 LIKE '%nb:netbank:fss:stp:travelmoney%' THEN 'N'
     WHEN PROP43 LIKE '%nb:netbank:fss:stp:travelmoneycarddetails%' THEN 'N'
     WHEN PROP43 LIKE '%nb:success-account%' THEN 'N'
     WHEN PROP43 LIKE '%personalloans:plappform%'       THEN 'N'
     WHEN PROP43 LIKE '%nb:home:home:%' THEN 'N'
     WHEN PROP43 LIKE '%nb:hl:dp%' THEN 'N'
     WHEN PROP43 LIKE '%nb:helix:essentialsuper:apply%' THEN 'N'
     WHEN PROP43 LIKE '%nb:portfolio:home:home:dt-atq%' THEN 'N'
     WHEN PROP43 = 'nb:helix:car-insurance:apply:edit' THEN 'Y'
     WHEN PROP44 ='nb:accountmaintenance:statementview:multiple_download' THEN 'N'
     WHEN PROP44 ='nb:fss:applytfnconfirmation' THEN 'N'
     WHEN PROP44='nb:fss:cardactivationandsetpinconfirmation' THEN 'N'
     WHEN PROP44='nb:fss:rss:cliapplicationform' THEN 'N'
     WHEN PROP44='nb:fss:rss:cliapplicationsummary' THEN 'N'
     WHEN PROP44='nb:fss:rss:creditcardlimitincrease' THEN 'N'
     WHEN PROP44='nb:fss:rss:creditcardlimitincreaseoptions' THEN 'N'
     WHEN PROP44='nb:fss:rss:documentupload' THEN 'N'
     WHEN PROP44='nb:fss:rss:documentuploadconfirmation' THEN 'N'
     WHEN PROP44='nb:fss:selfserviceconfirmationcmx' THEN 'N'
     WHEN PROP44='nb:fss:stp:setmypin' THEN 'N'
     WHEN PROP44='nb:fss:stp:travellingoverseasnotificationform' THEN 'N'
     WHEN PROP44='nb:home:home:pbs-home-view' THEN 'N'
     WHEN PROP44='nb:imt:sendmoneyoverseas:receipt' THEN 'N'
     WHEN PROP44='nb:netbank:cardsettings:confirm-changes' THEN 'N'
     WHEN PROP44='nb:netbank:fss:applytfnconfirmation' THEN 'N'
     WHEN PROP44='nb:netbank:fss:cardactivationandsetpinconfirmation' THEN 'N'
     WHEN PROP44='nb:netbank:fss:stp:setmypin' THEN 'N'
     WHEN PROP44='nb:netbank:fss:stp:travellingoverseasnotificationform' THEN 'N'
     WHEN PROP44='nb:netbank:paymenthub:paymentreceipt' THEN 'N'
     WHEN PROP44='nb:netbank:payments:billpaymentreceipt' THEN 'N'
     WHEN PROP44='nb:netbank:portfolio:home:home:qp-bpay:success' THEN 'N'
     WHEN PROP44='nb:netbank:portfolio:home:home:qp-transfer:success' THEN 'N'
     WHEN PROP44='nb:netbank:quicktransfer:quicktransfer:qp-bpay:success' THEN 'N'
     WHEN PROP44='nb:netbank:quicktransfer:quicktransfer:qp-transfer:success' THEN 'N'
     WHEN PROP44='nb:netbank:quicktransfer:quicktransfer:quick-transfer:success' THEN 'N'
     WHEN PROP44='nb:netbank:transactionhistory:history' THEN 'N'
     WHEN PROP44='nb:netbank:transferpayments:scheduledtransfersconfirmchanges' THEN 'N'
     WHEN PROP44='nb:netbank:usermaintenance:inbox:messagepreferences' THEN 'N'
     WHEN PROP44='nb:netbank:usermaintenance:mysecurity:changepassword' THEN 'N'
     WHEN PROP44='nb:paymenthub:paymentreceipt' THEN 'N'
     WHEN PROP44='nb:payments:billpaymentreceipt' THEN 'N'
     WHEN PROP44='nb:portfolio:home:home' THEN 'N'
     WHEN PROP44='nb:portfolio:home:home:qp-bpay:success' THEN 'N'
     WHEN PROP44='nb:portfolio:home:home:qp-transfer:success' THEN 'N'
     WHEN PROP44='nb:transaction:history' THEN 'N'
     WHEN PROP44='nb:transaction:history:print' THEN 'N'
     WHEN PROP44='nb:transactionhistory:history:print' THEN 'N'
     WHEN PROP44='nb:transactionmanagement:taxview' THEN 'N'
     WHEN PROP44='nb:transactionmanagement:taxview:incomeLink' THEN 'N'
     WHEN PROP44='nb:transactionmanagement:taxview:spendLink' THEN 'N'
     WHEN PROP44='nb:transactionmanagement:taxview:txVvwExportLink' THEN 'N'
     WHEN PROP44='nb:transactionmanagement:taxview:txVvwPrintLink' THEN 'N'
     WHEN PROP44='nb:transferpayments:scheduledtransfersconfirmchanges' THEN 'N'
     WHEN PROP44='nb:usermaintenance:mysecurity:changepassword' THEN 'N'
     WHEN PROP44='nb:usermaintenance:personalisation:mycontactdetails:mycontactdetailsconfirmation' THEN 'N'
     WHEN PROP44='nb:helix:financialtoolkit:checkoutmynetworth' THEN 'N'
     WHEN PROP44='nb:fss:selfservice:ctl00_BodyPlaceHolder_arrearPayment' THEN 'N'
     WHEN PROP44='ios-app:broadcast-message:clt-bm-view' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:clt-bm-view' THEN 'N'
     WHEN PROP44='ios-app:broadcast-message:clt-bm-click' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:clt-bm-click' THEN 'N'
     WHEN PROP44='ios-app:broadcast-message:pay-now' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:pay-now' THEN 'N'
     WHEN PROP44='ios-app:broadcast message:ok' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:ok' THEN 'N'
     WHEN PROP44='ios-app:broadcast message:close' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:close' THEN 'N'
     WHEN PROP44='and-hb-app:globalnavigation:callus_popup:selection' THEN 'N'
     WHEN PROP44='and-hb-app:globalnavigation:callus_popup:selection:call' THEN 'N'
     WHEN PROP44='and-hb-app:globalnavigation:callus_popup:selection:cancel' THEN 'N'
     WHEN PROP44='and-hb-app:globalnavigation:selection:callus' THEN 'N'
     WHEN PROP44='and-hb-app:make-app-form:make-app-form:make-app-form-callus' THEN 'N'
	 WHEN PROP44='ios-hb-app:globalnavigation:callUs_popUp:selection' THEN 'N'
     WHEN PROP44='ios-hb-app:globalnavigation:callUs_popUp:selection:call' THEN 'N'
     WHEN PROP44='ios-hb-app:globalnavigation:callUs_popUp:selection:cancel' THEN 'N'
     WHEN PROP44='ios-hb-app:globalnavigation:selection:callUs' THEN 'N'
     WHEN PROP44='ios-hb-app:make-app-form:make-app-form:make-app-form-callus' THEN 'N'
     WHEN PROP44='ios-app:cards-accounts:accounts-view:concierge-displayed' THEN 'N'
     WHEN PROP44='ios-app:cards-accounts:accounts-view:concierge-get-started' THEN 'N'
     WHEN PROP44='nb:netbank:paymenthub:transfergroups:transfergroups:choose-file' THEN 'N'
     WHEN PROP44='nb:helix:bills:management:registration' THEN 'N'
     WHEN PROP44='ios-app:bill-management:bpay-view-registration' THEN 'N'
     WHEN PROP44='android-app:bill-management:bpay-view-registration'THEN 'N'
     WHEN PROP44='nb:transaction:history:DrillDownOpen' THEN 'N'
     WHEN PROP44='nb:netbank:paymenthub:transfergroups:transfergroups:choose-file' THEN 'N'
     WHEN PROP44='dashboard-mbox:tt-banner-dismiss' THEN 'N'
     WHEN PROP44='dashboard-mbox:tt-banner-primary-click' THEN 'N'
     WHEN PROP44='dashboard-mbox:tt-banner-secondary-click' THEN 'N'
     WHEN PROP44='dashboard-mbox:tt-banner-click' THEN 'N'
     WHEN PROP44='cba:pers:hl:propertyhub:calculators:upfrontcosts:deposit-field' THEN 'N'
     WHEN PROP44='cba:pers:hl:propertyhub:calculators:repayments:amount' THEN 'N'
     WHEN PROP44='cba:pers:hl:propertyhub:calculators:borrowing:income' THEN 'N'
     WHEN PROP44='ios-app:cards-accounts:accounts-view:ess-super-get-started' THEN 'N'
     WHEN PROP44='android-app:cards-accounts:accounts-view:ess-super-get-started' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super:onboard-done' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super:onboard-close' THEN 'N'
     WHEN PROP44='android-app:accounts-view:ess-super:onboard-done' THEN 'N'
     WHEN PROP44='android-app:accounts-view:ess-super:onboard-close' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share:email' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share:print' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share:cancel' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share:email:send' THEN 'N'
     WHEN PROP44='ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc:share:email:cancel' THEN 'N'
     WHEN PROP44='android-app:broadcast-message:clt-bm-view' THEN 'N'
     WHEN PROP44='cba:pers:ba' THEN 'N'
     WHEN PROP44='cba:pers:ba:comparison-table' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts:debit-master-card' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts:everyday-account:rates-fees' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts:everyday-account-smart-access' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts:smart-access-debit-mastercard2' THEN 'N'
     WHEN PROP44='cba:pers:ba:transaction-accounts:smart-access-with-debit-mastercard' THEN 'N'
     WHEN PROP44='cba:pers:can:moving-to-australia' THEN 'N'
     WHEN PROP44='cba:pers:can:student-banking:overseas-students' THEN 'N'
     WHEN PROP44='cba:pers:cc' THEN 'N'
     WHEN PROP44='cba:pers:cc:250-cash-back' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards:awards' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards:diamond' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards:gold' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards:platinum' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards:program' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards-program:flightcentre' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards-program:flightcentre-myer' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards-program:myer' THEN 'N'
     WHEN PROP44='cba:pers:cc:awards-program:myer' THEN 'N'
     WHEN PROP44='cba:pers:cc:card-fees-charges' THEN 'N'
     WHEN PROP44='cba:pers:cc:compare' THEN 'N'
     WHEN PROP44='cba:pers:cc:credit-card-offers:awards' THEN 'N'
     WHEN PROP44='cba:pers:cc:credit-card-offers:my-offer' THEN 'N'
     WHEN PROP44='cba:pers:cc:get-more:travelling-overseas' THEN 'N'
     WHEN PROP44='cba:pers:cc:lock-block-limit' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-fee' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-fee:gold' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-fee:low-fee' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-fee:student' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-rate' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-rate:gold' THEN 'N'
     WHEN PROP44='cba:pers:cc:low-rate:low-rate' THEN 'N'
     WHEN PROP44='cba:pers:cc:making-payments:paypass' THEN 'N'
     WHEN PROP44='cba:pers:cc:manage:activate-and-manage' THEN 'N'
     WHEN PROP44='cba:pers:cc:mastercard' THEN 'N'
     WHEN PROP44='cba:pers:cc:repayment-calculator' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:bl-talk-to-us-call-1800138713' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:bl-talk-to-us-find-nearest-planner' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:bl-talk-to-us-make-an-appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:buy-a home' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:bl-talk-to-us-call-1800138713' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:bl-talk-to-us-find-nearest-planner' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:bl-talk-to-us-make-an-appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:download-our-brochure' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice:bl-talk-to-us-find-nearest-planner' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice:learn-more' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice:request-an appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice:request-in netbank' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:getting-started-with-advice:request-in netbank' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:grow-protect-your-investments:bl-talk-to-us-find-nearest-planner' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:grow-protect-your-investments:learn-more' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:grow-protect-your-investments:request-an appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:grow-protect-your-investments:request-in netbank' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:grow-protect-your-investments:request-now' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:i-want to grow what i have and help secure my financial future' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:i-want to make the most of my retirement' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:learn-more' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:make-the most of my retirement' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:request-an appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:request-in netbank' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:request-now' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:secure-my financial future' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:the-life-you-want-in-retirement' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:the-life-you-want-in-retirement:bl-talk-to-us-find-nearest-planne' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:the-life-you-want-in-retirement:learn-more' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:the-life-you-want-in-retirement:request-an appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:financial-advice:the-life-you-want-in-retirement:request-in netbank' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-basics' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-basics' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-products' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-products:investment-financial-reports' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-products:investment-super-balances' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:investment-products:unit-prices-and-performance' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:learn-more' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:manage-my debt, make a budget or save' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:bl-talk-to-us-make-an-appointment' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:budget-planner' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:credit-card repayment calculator' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:find-a branch' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:get-on top of your household budget' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:goals-& savings tool' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:keep-reading' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:manage-your credit card repayments' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:reaching-your savings goals' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:money-management:savings-calculator' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:offers:can-day' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:offers:can-day:HeroBanner:Book free initial consultation CTA' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:offers:can-day:HeroBanner:Book free initial consultation CTA' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:plan-my financial future' THEN 'N'
     WHEN PROP44='cba:pers:fin-plan:younger-investors' THEN 'N'
     WHEN PROP44='cba:pers:offers:cc-150-cash-back' THEN 'N'
     WHEN PROP44='cba:pers:offers:cc-150-cash-back-m' THEN 'N'
     WHEN PROP44='cba:pers:offers:cc-80000-points' THEN 'N'
     WHEN PROP44='cba:pers:students' THEN 'N'
     WHEN PROP44='cba:pers:teens' THEN 'N'
     WHEN PROP44='cba:pers:young-adults' THEN 'N'
     WHEN PROP44='cba:pers:youth-stu' THEN 'N'
     WHEN PROP44='ios-app:broadcast-message:clt-bm-view' THEN 'N'
     WHEN PROP44='nb:accountmaintenance:statementview:download-statement' THEN 'N'
     WHEN PROP44='nb:accountmaintenance:statementview:send email' THEN 'N'
     WHEN PROP44='nb:fss:rss:homeloanswitch' THEN 'N'
     WHEN PROP44='nb:rss:homeloanswitch:submit' THEN 'N'
     WHEN PROP44='nb:fss:rss:changerepaymentamount' THEN 'N'
     WHEN PROP44='nb:fss:rss:changerepaymentamount:submit' THEN 'N'
     WHEN PROP44='nb:fss:rss:youthsaver' THEN 'N'
     WHEN PROP44='ios-app:sidenav-tier1:my-notifications' THEN 'N'
     WHEN PROP44='nb:netbank:creditLimit:submitCLDIntercept' THEN 'N'
     WHEN PROP44='nb:netbank:creditLimit:CLDNoIntercept' THEN 'N'
     WHEN PROP44='nb:netbank:creditLimit:rlq4IdoNot' THEN 'N'
     WHEN PROP44='nb:netbank:quicktransfer:load:qp-transfer:success' THEN 'N'
     WHEN PROP44='nb:netbank:quicktransfer:load:qp-bpay:success' THEN 'N'
     WHEN PROP44='cba:digital:home-buying:start:call-me-back:thanks' THEN 'N'
     WHEN PROP44 LIKE  '%nb:usermaintenance:home:viewtravelmoneyinformation%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:transactionhistory%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:term-deposit%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:smsf:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:simple-life%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:portfolio:home:home:dt-atq%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:offersandapply%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:usermaintenance:inbox:messagelist%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:spendingCap%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:paymenthub:paymentreceiptMFX:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:paymenthub:paymentreceipt:MFX%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:offersandapply%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:manageLimit%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:imt:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:homeloans%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:fss:stp:travelmoneycarddetails%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:fss:stp:travelmoney%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:financialplanning:netbank:new%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:creditcards%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:collection:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:netbank:cardsettings%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:mo%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:maintenance:closeaccount:creditcard%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:imt%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:homeloans-switching%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:homeloans-repayment%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:homeloans-changerepaymenttype%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:homeloans%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:homeloans:condeligibility%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:home:home:pp-plsubmittednotfunded%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:home:home:%' AND PROP44 LIKE '%promo-panel-yes%' THEN 'N'
     WHEN PROP44 LIKE  '%nb:home:home:%' AND PROP44 LIKE '%promo-panel-no%' THEN 'N'
     WHEN PROP44 LIKE  '%nb:home:home:%' AND PROP44 LIKE '%promo-panel-reminder%' THEN 'N'
     WHEN PROP44 LIKE  '%nb:hl:dp%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:undefined:ecv%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:smsf%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:sme:ecv%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:sbo%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:personal-overdrafts%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:homeloans%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:home-insurance%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:essentialsuper%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:essentialsuper:apply%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:employer-contribution:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:deposit-transactions:ecv%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:credit-cards:ecv%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:helix:car-insurance%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fwbscore%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fss:stp:traveloverseasinsurance%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fss:stp:travelmoneyreviewandsubmit%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fss:stp:travelmoneyalternative%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fss:rss:cliapplication%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:fss:imtinvestigationconfirmationcmx%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:financialplanning:commbank:new%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:everyday%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:everyday:Smart-Access:migrants%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:everyday:sa-%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:everyday:sa:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:essentialsuper-origination:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:wealthmanager%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:plo%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:otu%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:newpaymentsplatform%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:myproperty%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:dp:homeloansgroup_tt:online-top-ups%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:contactcentre:application:appointment%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:cards-origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:business-origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:business origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:businessonline:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:businessessentialsuper:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:bta-bos%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:asset-finance:%'  THEN 'N'
     WHEN PROP44 LIKE  '%nb:accountorigination:%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-youth-app%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:product-list%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:product-details%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:pre-tax%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:post-tax%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:offers:credit-limit-increase%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:offers:credit-card-offer%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:npp-%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:my-notifications:feed-notifications%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:dp:plo%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:digital-concierge%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:cards-accounts:travel-money-card-currency-order-onboarding%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:accounts-view:ess-super-account-settings%'  THEN 'N'
     WHEN PROP44 LIKE  '%ios-app:accounts-view:ess-super-account-settings:employer-contributions-doc%'  THEN 'N'
     WHEN PROP44 LIKE  '%digital-concierge%'  THEN 'N'
     WHEN PROP44 LIKE  '%cba:super-sorter:main-landing%'  THEN 'N'
     WHEN PROP44 LIKE  '%cba:pers:offers:cc%'  THEN 'N'
     WHEN PROP44 LIKE  '%cba:bus:bus-loans:sbo%'  THEN 'N'
     WHEN PROP44 LIKE  '%cba:bus:bus-loans:sbo:calculator%'  THEN 'N'
     WHEN PROP44 LIKE  '%cba:app:personal loans%'  THEN 'N'
     WHEN PROP44 LIKE  '%cb:cards-origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%ca-app:dp:plo%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:product-list%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:product-details%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:pre-tax%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:post-tax%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:origination%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:offers:credit-limit-increase%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:offers:credit-card-offer%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:npp-%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:my-notifications:feed-notifications%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:dp:plo%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:accounts-view:ess-super-account-settings%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:accounts-view:ess-super-account-settings:employer-contributions-doc%'  THEN 'N'
     WHEN PROP44 LIKE  '%android-app:account-details-view:travel-money-card-currency-order-onboarding%'  THEN 'N'
     WHEN PROP44 LIKE  '%whatnextapp%'  THEN 'N'
     WHEN PROP44 LIKE  '%transaction:apply-limit-per-transaction%'  THEN 'N'
     WHEN PROP44 LIKE  '%super:retirement:calculator%'  THEN 'N'
     WHEN PROP44 LIKE  '%statement-download:VCD%'  THEN 'N'
     WHEN PROP44 LIKE  '%statement-download:MCD%'  THEN 'N'
     WHEN PROP44 LIKE  '%statement-download:MBC%'  THEN 'N'
     WHEN PROP44 LIKE  '%statement-download:LAH%'  THEN 'N'
     WHEN PROP44 LIKE  '%statement-download:DDA%'  THEN 'N'
     WHEN PROP44 LIKE  '%smartchecklist%'  THEN 'N'
     WHEN PROP44 LIKE  '%propertyhub:calculators%'  THEN 'N'
     WHEN PROP44 LIKE  '%product-categories-tier2:home-buying%'  THEN 'N'
     WHEN PROP44 LIKE  '%product-categories-tier1:home-buying%'  THEN 'N'
     WHEN PROP44 LIKE  '%personalloans:plappform%'  THEN 'N'
     WHEN PROP44 LIKE  '%origination-everyday-accounts%'  THEN 'N'
     WHEN PROP44 LIKE  '%lsd:confirm-%' AND PROP44 LIKE '%confirm-button%' THEN 'N'
     WHEN PROP44 LIKE  '%lock-international-online-payments%'  THEN 'N'
     WHEN PROP44 LIKE  '%lock-instore-international%'  THEN 'N'
     WHEN PROP44 LIKE  '%lock-atm-cash-advances%'  THEN 'N'
     WHEN PROP44 LIKE  '%imtpaymentinvestigation%'  THEN 'N'
     WHEN PROP44 LIKE  '%imt:sendmoneyoverseas%'  THEN 'N'
     WHEN PROP44 LIKE  '%confirm-limit-increase%'  THEN 'N'
     WHEN PROP44 LIKE  '%confirm-limit-decrease%'  THEN 'N'
     WHEN PROP44 LIKE  '%-app:cards-accounts:contactless-payments:%'  THEN 'N'
     WHEN PROP44 LIKE  '%activity-feed:my-notifications:int-card-view%'  THEN 'N'
     WHEN PROP44 LIKE  '%:view-statements:%'  THEN 'N'
     WHEN PROP44 LIKE  '%:spending-cap-enable-successful%'  THEN 'N'
     WHEN PROP44 LIKE  '%:spending-cap-disable-successful%'  THEN 'N'
     WHEN PROP44 LIKE  '%:remove-limit-per-transaction%'  THEN 'N'
     WHEN PROP44 LIKE  '%:everyday:%'  THEN 'N'
     WHEN PROP44 LIKE  '%:dp:plo:%'  THEN 'N'
     WHEN PROP44 LIKE  '%:cli-origination:%'  THEN 'N'
     WHEN PROP44 LIKE  '%:DIT-%' THEN 'Y'
     WHEN PROP44 LIKE  '%:PT-%' THEN 'Y'
     WHEN PROP44 LIKE  '%:q:%' THEN 'Y'
     WHEN PROP44 LIKE  '%nb:transactionhistory:history:q:%' THEN 'Y'
     WHEN PROP44 LIKE  '%:view-statements:statement-download-time%' THEN 'Y'
     WHEN PROP44 LIKE  '%http%' THEN 'Y'
     WHEN PROP43 LIKE '%cb:cards-origination:application:appstart%' AND PROP44 LIKE '%cb:cards-origination:%' THEN 'Y'
     ELSE 'N'
  END AS RECD_EXCL_FLTR_F
  ,ACCEPT_LANGUAGE AS ACPT_LANG_M
  ,POST_COOKIES AS POST_COKI_F
  ,POST_CURRENCY AS POST_CNCY_C
  ,POST_CUST_VISID AS POST_CUST_VSIT_N
  ,POST_PROP5 AS APPT_VERS_M
  ,CASE WHEN NVL(POST_EVAR61, '') = '' THEN 'N/A' ELSE POST_EVAR61 END AS BRCH_BSB_C
  ,CASE WHEN ARRAY_POSITION ('208'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS APPT_LEAD_F
  , CASE WHEN EVAR17 LIKE '%-' THEN SUBSTR(EVAR17,1,LENGTH(EVAR17)-1 )
         WHEN  EVAR17 LIKE '-%' THEN SUBSTR(EVAR17,2,LENGTH(EVAR17)-1  )
         ELSE TRIM(EVAR17) END AS DIGT_APPT_N
  ,TRIM(evar6) as DIGT_OPOR_N
  , CASE WHEN ARRAY_POSITION ('210'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS APPT_RTRV_F
  , CASE WHEN ARRAY_POSITION ('209'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS APPT_SAVE_F
  , CASE WHEN ARRAY_POSITION ('240'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS APPT_STRT_F
  , CASE WHEN ARRAY_POSITION ('241'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS APPT_SUBM_F
  ,CASE
     WHEN ARRAY_POSITION ('295'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',') ) >= 0 AND LENGTH(TRIM(POST_EVAR2)) <> 0 AND POSITION(TRIM(POST_EVAR2),'_') <> 0
       THEN SPLIT(TRIM(POST_EVAR2),'[_]')[0]
     ELSE ''
   END AS ARM_CPGN_I
  ,TRIM(POST_EVAR54) AS APPT_S
  ,CASE
     WHEN ARRAY_POSITION ('295'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) > 0 AND LENGTH(TRIM(EVAR2)) <> 0 AND POSITION(TRIM(EVAR2),'_') <> 0
       THEN SPLIT(TRIM(EVAR2),'[_]')[1]
     ELSE ''
   END AS ARM_SEGM_I
  ,POST_EVAR5 AS AUTT_STAT_M
  ,BROWSER AS BRWS_C
  ,C_COLOR AS COLR_DPTH_Q
  ,POST_EVAR29 AS CPGN_STCK_X
,CASE
     WHEN LOWER(CASE WHEN PAGE_URL IS NOT NULL AND LENGTH(TRIM(PAGE_URL)) >=1 THEN SUBSTR(REGEXP_SUBSTR(PAGE_URL, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300) ELSE '' END) LIKE '/business/%' THEN 'COBK'
     WHEN LOWER(CASE WHEN PAGE_URL IS NOT NULL AND LENGTH(TRIM(PAGE_URL)) >=1 THEN SUBSTR(REGEXP_SUBSTR(PAGE_URL, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300) ELSE '' END) LIKE '/netbank/%' THEN 'NTB'
     WHEN LOWER(CASE WHEN PAGE_URL IS NOT NULL AND LENGTH(TRIM(PAGE_URL)) >=1 THEN SUBSTR(REGEXP_SUBSTR(PAGE_URL, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300) ELSE '' END) LIKE '/personal/%' THEN 'COBK'
     WHEN LOWER(PAGENAME) LIKE 'and-tab%' THEN 'CAPT'
     WHEN LOWER(PAGENAME) LIKE 'and_hb-app%' THEN 'HAPPP'
     WHEN LOWER(PAGENAME) LIKE 'and_hb-app%' THEN 'HBAPP'
     WHEN LOWER(PAGENAME) LIKE 'android-app%' THEN 'CAPP'
     WHEN LOWER(PAGENAME) LIKE 'ca-app%' THEN 'CAPP'
     WHEN LOWER(PAGENAME) LIKE 'cb%' THEN 'COBK'
     WHEN LOWER(PAGENAME) LIKE 'cbaxprod%' THEN 'CXAP'
     WHEN LOWER(PAGENAME) LIKE 'commbank tablet%' THEN 'CAPT'
     WHEN LOWER(PAGENAME) LIKE 'commbank%' THEN 'CAPP'
     WHEN LOWER(PAGENAME) LIKE 'ios-cba-app%' THEN 'CXAP'
     WHEN LOWER(PAGENAME) LIKE 'ios-hb-app%' THEN 'HBAPP'
     WHEN LOWER(PAGENAME) LIKE 'ios-tab%' THEN 'CAPT'
     WHEN LOWER(PAGENAME) LIKE 'ios-youth-app%' THEN 'CAYH'
     WHEN LOWER(PAGENAME) LIKE 'ios_app%' THEN 'CAPP'
     WHEN LOWER(PAGENAME) LIKE 'nb%' THEN 'NTB'
     WHEN LOWER(PAGENAME) LIKE 'netbank%' THEN 'NTB'
     WHEN LOWER(PAGENAME) LIKE 'property%' THEN 'HBAPP'
     WHEN LOWER(PAGENAME) LIKE 'win-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'and-hb-app%' THEN 'HBAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'and-tab%' THEN 'CAPT'
     WHEN LOWER(POST_EVAR21) LIKE 'android-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'ca-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'cb' THEN 'COBK'
     WHEN LOWER(POST_EVAR21) LIKE 'cba' THEN 'COBK'
     WHEN LOWER(POST_EVAR21) LIKE 'cbaxprod%' THEN 'CXAP'
     WHEN LOWER(POST_EVAR21) LIKE 'ios-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'ios-cbax-app%' THEN 'CXAP'
     WHEN LOWER(POST_EVAR21) LIKE 'ios-hb-app%' THEN 'HBAPP'
     WHEN LOWER(POST_EVAR21) LIKE 'ios-tab%' THEN 'CAPT'
     WHEN LOWER(POST_EVAR21) LIKE 'ios-youth-app%' THEN 'CAYH'
     WHEN LOWER(POST_EVAR21) LIKE 'nb' THEN 'NTB'
     WHEN LOWER(POST_EVAR21) LIKE 'netbank' THEN 'NTB'
     WHEN LOWER(POST_EVAR21) LIKE 'win-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'and-tab%' THEN 'CAPT'
     WHEN LOWER(POST_EVAR42) LIKE 'and_hb-app%' THEN 'HBAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'android-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'ca-app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'cb%' THEN 'COBK'
     WHEN LOWER(POST_EVAR42) LIKE 'cbaxprod%' THEN 'CXAP'
     WHEN LOWER(POST_EVAR42) LIKE 'commbank tablet%' THEN 'CAPT'
     WHEN LOWER(POST_EVAR42) LIKE 'commbank%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'ios-cba-app%' THEN 'CXAP'
     WHEN LOWER(POST_EVAR42) LIKE 'ios-hb-app%' THEN 'HBAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'ios-tab%' THEN 'CAPT'
     WHEN LOWER(POST_EVAR42) LIKE 'ios-youth-app%' THEN 'CAYH'
     WHEN LOWER(POST_EVAR42) LIKE 'ios_app%' THEN 'CAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'nb%' THEN 'NTB'
     WHEN LOWER(POST_EVAR42) LIKE 'netbank%' THEN 'NTB'
     WHEN LOWER(POST_EVAR42) LIKE 'property%' THEN 'HBAPP'
     WHEN LOWER(POST_EVAR42) LIKE 'win-app%' THEN 'CAPP'
   ELSE 'N/A'
  END AS CHNL_C
  ,CHANNEL AS SRCE_CHNL_X
  ,CLICK_ACTION AS CLIC_ACTV_M
  ,CLICK_ACTION_TYPE AS CLIC_ACTV_TYPE_C
  ,CLICK_CONTEXT AS CLIC_CNTX_X
  ,CLICK_CONTEXT_TYPE AS CLIC_CNTX_TYPE_C
  ,CLICK_SOURCEID AS CLIC_SRCE_C
  ,CLICK_TAG AS CLIC_TAG_M
  ,VA_CLOSER_ID AS LAST_TOUC_I
  ,CODE_VER AS CODE_VERS_M
  ,COLOR AS COLR_DPTH_C
  ,CASE WHEN DOMAIN = 'commbank.com.au' THEN 'CBA internal' ELSE 'N' END AS CBA_TRFC_F
  ,CONNECTION_TYPE AS CONN_TYPE_C
  ,COUNTRY AS CNTY_C
  ,CURRENT_TIMESTAMP AS CRAT_S
  , CASE WHEN ARRAY_POSITION ( '20164'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS CR_DCDE_F
  ,CT_CONNECT_TYPE AS BRWS_CONN_TYPE_M
  ,CURR_FACTOR AS CNCY_FACR_N
  ,CURR_RATE AS CURR_EXCH_R
  ,POST_CUST_HIT_TIME_GMT AS POST_CUST_HIT_S
  ,POST_EVAR48 AS SRCE_CUST_SBTY_M
  ,TRIM(POST_EVAR25) AS SRCE_CUST_TYPE_M
  ,DAILY_VISITOR AS DALY_VSIT_F
  ,POST_PROP17 AS DVIC_I
  , CASE
         WHEN POSITION('googletv', LOWER(USER_AGENT))  > 0 THEN 'TV,GoogleTV'
         WHEN POSITION('crkey', LOWER(USER_AGENT))  > 0 THEN 'TV,Chromecast'
         WHEN POSITION('appletv', LOWER(USER_AGENT))  > 0 THEN 'TV,AppleTV'
         WHEN POSITION('smarttv' , LOWER(USER_AGENT))  > 0 OR
           POSITION('internet tv', LOWER(USER_AGENT)) > 0 OR
           POSITION('netcast', LOWER(USER_AGENT))  > 0 OR
           POSITION('nettv', LOWER(USER_AGENT))  > 0 OR
           POSITION('boxee' , LOWER(USER_AGENT))  > 0 OR
           POSITION('kylo', LOWER(USER_AGENT)) > 0 OR
           POSITION('roku', LOWER(USER_AGENT)) > 0 OR
           POSITION('dlnadoc', LOWER(USER_AGENT))  > 0 OR
           POSITION('ce\\-html', LOWER(USER_AGENT))  > 0 THEN 'TV,SmartTV Other'
         WHEN POSITION('xbox', LOWER(USER_AGENT)) > 0 THEN 'TV,Xbox'
         WHEN POSITION('wii' , LOWER(USER_AGENT)) > 0 THEN 'TV,Wii'
         WHEN POSITION('playstation', LOWER(USER_AGENT)) > 0 THEN 'TV,PLAYSTATION'
         WHEN POSITION('shield', LOWER(USER_AGENT)) > 0 THEN 'TV,Nvidia Shield'
         WHEN POSITION('ipad', LOWER(USER_AGENT)) > 0 OR
              POSITION( 'iprod', LOWER(USER_AGENT))  > 0 THEN 'Tablet,iPad'
         WHEN POSITION('windows phone', LOWER(USER_AGENT)) > 0 OR
                (
                  POSITION('windows nt', LOWER(USER_AGENT))  > 0 AND
                  POSITION('mobile', LOWER(USER_AGENT)) > 0
                ) THEN 'Mobile,Windows Mobile'
         WHEN POSITION('android', LOWER(USER_AGENT) )  > 0 AND
               POSITION('mobile',LOWER(USER_AGENT)) > 0  THEN 'Mobile,Android Mobile'
         WHEN POSITION('ipod', LOWER(USER_AGENT))  > 0 THEN 'Media Player,iPod'
         WHEN POSITION('iphone', LOWER(USER_AGENT))  > 0 THEN 'Mobile,iPhone'
         WHEN
           POSITION('android', LOWER(USER_AGENT))  > 0 AND
             (LOWER(USER_AGENT) LIKE '%gt-p%' OR
              LOWER(USER_AGENT) LIKE '%hp %' OR
              LOWER(USER_AGENT) LIKE '%lenovo a%-h%' OR
              LOWER(USER_AGENT) LIKE '%lenovo a%-g%' OR
              LOWER(USER_AGENT) LIKE '%lenovo a%-f%' OR
              LOWER(USER_AGENT) LIKE '%lenovo b%' OR
              LOWER(USER_AGENT) LIKE '%lenovoa%' OR
              LOWER(USER_AGENT) LIKE '%lg-v%' OR
              LOWER(USER_AGENT) LIKE '%nexus 10%' OR
              LOWER(USER_AGENT) LIKE '%nexus 7%' OR
              LOWER(USER_AGENT) LIKE '%nexus 9%' OR
              LOWER(USER_AGENT) LIKE '%pad%' OR
              LOWER(USER_AGENT) LIKE '%sgp%' OR
              LOWER(USER_AGENT) LIKE '%sm-p%' OR
              LOWER(USER_AGENT) LIKE '%sm-t%' OR
              LOWER(USER_AGENT) LIKE '%tab%' OR
              LOWER(USER_AGENT) LIKE '%gt-n8%' OR
              LOWER(USER_AGENT) LIKE '%gt-n5%')  AND
                (
                  POSITION('fennec' , LOWER(USER_AGENT) )  = 0 AND
                  POSITION('mobi', LOWER(USER_AGENT)    )  = 0 AND
                  POSITION('htc magic',LOWER(USER_AGENT))  = 0 AND
                  POSITION('htcx06ht',LOWER(USER_AGENT))  = 0 AND
                  POSITION('nexus one', LOWER(USER_AGENT))  = 0 AND
                  POSITION('sc-02b' , LOWER(USER_AGENT)  )  = 0 AND
                  POSITION('fone 945', LOWER(USER_AGENT) )  = 0
                )
            THEN 'Tablet,Android tablet'
         WHEN LOWER(USER_AGENT) LIKE '%android%' THEN 'Mobile,Android Mobile'
         WHEN
           POSITION('kindle', LOWER(USER_AGENT)) > 0 OR
             (
               POSITION('mac os', LOWER(USER_AGENT)) > 0 AND
               POSITION('silk' , LOWER(USER_AGENT)) > 0
             )
           THEN 'Tablet,Kindle'
         WHEN
           POSITION('playbook', LOWER(USER_AGENT))  > 0 THEN 'Tablet,PlayBook'
             WHEN
               (
                 (
                   POSITION('windows nt', LOWER(USER_AGENT))  > 0 OR
                   POSITION('windows xp', LOWER(USER_AGENT))  > 0 OR
                   POSITION('windows me', LOWER(USER_AGENT))  > 0 OR
                   POSITION('windows 9',  LOWER(USER_AGENT))  > 0
                 )
                  AND
                   POSITION('PHONE' , LOWER(USER_AGENT)) = 0
               )
                 OR
                   (
                     POSITION('win9' ,LOWER(USER_AGENT) ) > 0 OR
                     POSITION('win 9' ,LOWER(USER_AGENT)) > 0 OR
                     POSITION('winnt', LOWER(USER_AGENT) ) > 0
                   ) THEN 'Desktop,Windows Desktop'
         WHEN
           POSITION('windows' , LOWER(USER_AGENT)  )  > 0 AND
           (POSITION('tablet', LOWER(USER_AGENT)    ) > 0 OR  POSITION('touch', LOWER(USER_AGENT)) > 0)
           THEN 'Tablet,Windows Tablet'
         WHEN
           (
             (
               POSITION('macintosh' ,LOWER(USER_AGENT))  > 0 OR
               POSITION('powerpc'  ,LOWER(USER_AGENT) )  > 0
             )
              AND
                POSITION('silk' , LOWER(USER_AGENT) ) = 0
           ) THEN 'Desktop,Mac Desktop'
         WHEN
           (POSITION('linux' , LOWER(USER_AGENT) )  > 0 OR
           POSITION('freebsd' , LOWER(USER_AGENT) ) > 0 ) AND
           POSITION('x11'  , LOWER(USER_AGENT) ) > 0
           THEN 'Desktop,Linux Desktop'
         WHEN
           POSITION('solaris' , LOWER(USER_AGENT))  > 0 OR
           POSITION('sunos', LOWER(USER_AGENT) ) > 0 OR
           POSITION('bsd'  , LOWER(USER_AGENT)) > 0
           THEN 'Desktop,UNIX Desktop'
         WHEN POSITION('blackberry'   , LOWER(USER_AGENT)) > 0 THEN 'Mobile,BlackBerry'
         WHEN POSITION('bot', LOWER(USER_AGENT) ) > 0 OR
              POSITION('crawler'  , LOWER(USER_AGENT) )  > 0 OR
              POSITION('spider', LOWER(USER_AGENT)) > 0 OR
              POSITION('yahoo' , LOWER(USER_AGENT)) > 0 OR
              POSITION('ia_archiver'   , LOWER(USER_AGENT)   ) > 0 OR
              POSITION('covario-ids' ,  LOWER(USER_AGENT)   ) > 0 OR
              POSITION('findlinks' , LOWER(USER_AGENT))  > 0 OR
              POSITION('dataparksearch' , LOWER(USER_AGENT)  ) > 0 OR
              POSITION('larbin', LOWER(USER_AGENT)) > 0 OR
              POSITION('mediapartners-google', LOWER(USER_AGENT) )  > 0 OR
              POSITION('ng-search' , LOWER(USER_AGENT))  > 0 OR
              POSITION('snappy', LOWER(USER_AGENT)) > 0 OR
              POSITION('teoma', LOWER(USER_AGENT) ) > 0 OR
              POSITION('jeeves', LOWER(USER_AGENT)) > 0 OR
              POSITION('tineye', LOWER(USER_AGENT)) > 0
           THEN 'Desktop,Desktop BOT/Crawler/Spider'
         WHEN
           POSITION('mobile' , LOWER(USER_AGENT))  > 0 OR
           POSITION('symbian', LOWER(USER_AGENT))  > 0
           THEN 'Mobile,Mobile Other'
         WHEN
           POSITION('x11'  , LOWER(USER_AGENT) ) > 0 AND
           POSITION('cros' ,LOWER(USER_AGENT) ) > 0
           THEN 'Desktop,Chromebook'
         WHEN
           (POSITION('tablet' , LOWER(USER_AGENT) )  > 0 OR
           POSITION('tsb_cloud_companion', LOWER(USER_AGENT))  > 0) AND
           (POSITION('rx-34', LOWER(USER_AGENT)) = 0 OR
           POSITION('folio', LOWER(USER_AGENT)) > 0) AND
           POSITION('playbook', LOWER(USER_AGENT)) = 0
           THEN 'Tablet,Tablet Other'
         ELSE 'Other,Other'
      END  AS DVIC_TYPE_M
  ,TRIM(POST_EVAR58) AS DIGT_BNNR_C
    , CASE WHEN ARRAY_POSITION ( '223'  ::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_CTCT_RQST_STRT_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '213'  ::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_CNCT_RQST_SUBM_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20159'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_CROS_SALE_F
    , CASE WHEN ARRAY_POSITION ( '233'  ::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_FIND_MOBL_LEND_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20123'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RTRQ_APPT_STRT_F
    , CASE WHEN ARRAY_POSITION ( '20124'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RTRQ_APPT_SUBM_F
    , CASE WHEN ARRAY_POSITION ( '20121'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RTRQ_COMT_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20122'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RTRQ_RECA_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20120'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RTRQ_STRT_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20163'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_RISK_ASES_F
    , CASE WHEN ARRAY_POSITION ( '20163'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_SLSV_COMT_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20161'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_SLSV_LEAD_CLIC_F
    , CASE WHEN ARRAY_POSITION ( '20162'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS DIGT_SLSV_STRT_CLIC_F
  ,POST_EVAR3 AS DSTN_FROM_BANK_SURB_BRCH_N
  ,DOMAIN AS DOMN_X
  ,TRIM(POST_EVAR46) AS DOMN_TYPE_M
  ,TRIM(POST_PROP46) AS DOMN_TYPE_PATH_M
  ,POST_EVAR10 AS DNLD_LINK_M
  ,DUPLICATE_EVENTS AS DUPL_EVNT_X
  ,DUPLICATE_PURCHASE AS DUPL_PUR_F
  ,DUPLICATED_FROM AS DUPL_FORM_M
    , CASE WHEN ARRAY_POSITION ( '271'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS EBV_COMT_F
    , CASE WHEN ARRAY_POSITION ( '270'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS EBV_FAIL_F
    , CASE WHEN ARRAY_POSITION ( '269'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS EBV_STRT_F
    , CASE WHEN ARRAY_POSITION ( '249'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS ECV_COMT_F
  ,FIRST_HIT_TIME_GMT AS FRST_HIT_S
  ,POST_EVAR15 AS FORM_TYPE_M
  ,GEO_DMA AS DSGT_MRKT_AREA_X
  ,GEO_ZIP AS GEOG_ZIP_C
  ,TRIM(GEO_CITY) AS GEOG_CITY_M
  ,TRIM(GEO_COUNTRY) AS GEOG_CNTY_M
  ,TRIM(GEO_REGION) AS GEOG_REGN_M
  ,POST_HIER1 AS HIER_1_X
  ,HIT_SOURCE AS HIT_SRCE_F
  ,HIT_TIME_GMT AS HIT_S
  ,HITID_HIGH AS HIT_IDNN_HIGH_N
  ,HITID_LOW AS HIT_IDNN_LOW_N
  ,CASE WHEN ARRAY_POSITION ( '20143'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS HOME_BUY_COND_ELGL_STRT_F
  ,CASE WHEN ARRAY_POSITION ( '20144'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS HOME_BUY_COND_ELGL_SUBM_F
  ,HOMEPAGE AS HOME_PAGE_F
  ,HOURLY_VISITOR AS HOUR_VSIT_F
  ,TRIM(POST_EVAR26) AS INTA_TYPE_X
  ,CASE WHEN ARRAY_POSITION ( '264'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS INTR_SRCH_F
  ,CASE WHEN ARRAY_POSITION ( '265'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS INTR_SRCH_RSLT_CLIC_F

  ,TRIM(POST_EVAR1) AS INTR_SRCH_X
  ,TRIM(IP2) AS INTT_PCOL_ADRS_2_X
  ,TRIM(IP) AS INTT_PCOL_ADRS_X
  ,J_JSCRIPT AS JVSC_VERS_SUPP_N
  ,JAVASCRIPT AS JVSC_VERS_USE_N
  ,LANGUAGE AS LANG_C
  ,POST_EVAR34 AS LAST_TOUC_CPGN_X
  ,TRIM(va_closer_detail) AS LAST_TOUC_X
  , CASE WHEN ARRAY_POSITION ( '247'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS ECV_FAIL_F
  , CASE WHEN ARRAY_POSITION ( '246'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS ECV_STRT_F
  ,POST_EVAR60 AS ELEM_INTA_X
  ,POST_PROP41 AS ETRK_X
  ,EVENT_LIST AS EVNT_LIST_X
  ,TO_CHAR(TRIM(DATE_TIME)) AS EVNT_S
  ,EXCLUDE_HIT AS EXCL_HIT_C
  ,POST_PROP74 AS EXPM_M
  ,POST_PROP75 AS EXPM_VARY_M
  ,TRIM(POST_EVAR12) AS EXTL_AND_INTR_CPGN_STCK_X
  ,CURRENT_TIMESTAMP  AS EXT_S
  ,CASE WHEN ARRAY_POSITION ( '20179'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS FEAT_NGGE_F
  ,VA_FINDER_ID AS FRST_TOUC_I
  ,CASE
     WHEN LENGTH(TRIM(LOWER(REGEXP_REPLACE(PRODUCT_LIST,';,','')))) <> 0
       THEN REGEXP_REPLACE(SPLIT(TRIM(LOWER(REGEXP_REPLACE(PRODUCT_LIST,';,',''))),',')[0], ';', '')
     ELSE ''
   END AS DIGT_FRST_PDCT_I
  ,TRIM(POST_EVAR33) AS FRST_TOUC_CPGN_X
  ,VA_FINDER_DETAIL AS FRST_TOUC_X
  ,FIRST_HIT_PAGE_URL AS FRST_HIT_PAGE_URL_X
  ,FIRST_HIT_PAGENAME AS FRST_HIT_PAGE_M
  ,FIRST_HIT_REFERRER AS FRST_HIT_REFR_X
  ,LAST_HIT_TIME_GMT AS LAST_HIT_S
  ,LAST_PURCHASE_NUM AS LAST_PUR_N
  ,LAST_PURCHASE_TIME_GMT AS LAST_PUR_S
  ,CASE WHEN ARRAY_POSITION ( '258'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS LAUN_EVNT_F
  ,POST_MVVAR2 AS LIST_VARY_2_X
  ,POST_MVVAR3 AS LIST_VARY_3_X
  ,CASE WHEN ARRAY_POSITION ( '295'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS MBOX_BNNR_CLIC_F
  ,CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS MBOX_BNNR_LOAD_F
  ,CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN SPLIT(TRIM(evar62),':')[1]
        ELSE ''
   END AS MRKT_CPGN_X
  ,CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN SPLIT(TRIM(evar62),':')[2]
        ELSE ''
   END AS MBOX_EXPC_X
  ,TRIM(POST_EVAR62) AS MBOX_IMPS_X
  ,CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 AND LENGTH(TRIM(prop57)) <> 0 THEN prop57

        ELSE ''
   END AS MBOX_LOCN_X
, CASE WHEN ARRAY_POSITION ( '294'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN SPLIT(TRIM(evar62),':')[3]

        ELSE ''
   END AS MBOX_OFFR_X
  ,POST_EVAR16 AS MCDS_ASET_X
  ,MOBILE_ID AS MOBL_DVIC_I
  ,MONTHLY_VISITOR AS MNLY_VSIT_F
  ,NEW_VISIT AS NEW_VSIT_F
  ,SF_LOAD_TS AS OMN_LOAD_EFFT_S
  ,OS AS OPSY_C
  ,P_PLUGINS AS BRWS_PLGN_LIST_X
  ,PAGE_EVENT AS PAGE_EVNT_TYPE_C
  ,CONCAT(HITID_HIGH,'_', HITID_LOW) AS PAGE_HIT_UNIQ_N
  ,POST_PROP43 AS PAGE_MLST_M
  ,PAGENAME AS PAGE_ORIG_M
  ,CASE WHEN POST_EVAR42 <> '' THEN LOWER(POST_EVAR42) ELSE LOWER(SUBSTR(REGEXP_SUBSTR(PAGE_URL, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300)) END AS PAGE_M
  ,CASE WHEN LENGTH(TRIM(POST_EVAR42)) <> 0 THEN LOWER(TRIM(POST_EVAR42)) END AS PAGE_NAME_X
  ,CASE WHEN REFERRER IS NOT NULL AND LENGTH(TRIM(REFERRER)) >=1 THEN REGEXP_SUBSTR(REFERRER,'://([a-zA-Z0-9.-]+)',1,1,'',1) ELSE '' END AS PAGE_REFR_HOST_M
  ,CASE WHEN REFERRER IS NOT NULL AND LENGTH(TRIM(REFERRER)) >=1 THEN SUBSTR(REGEXP_SUBSTR(REFERRER, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300)  ELSE '' END AS PAGE_REFR_PATH_M
  ,POST_PROP40 AS PAGE_SUB_MLST_M
  ,CASE WHEN PAGE_URL IS NOT NULL AND LENGTH(TRIM(PAGE_URL)) >=1 THEN REGEXP_SUBSTR(PAGE_URL,'://([a-zA-Z0-9.-]+)',1,1,'',1) ELSE '' END AS PAGE_URL_HOST_X
  ,CASE WHEN PAGE_URL IS NOT NULL AND LENGTH(TRIM(PAGE_URL)) >=1 THEN SUBSTR(REGEXP_SUBSTR(PAGE_URL, 'https?://[^/]+(/[^?]*)',1,1,'e'),1,300) ELSE '' END AS PAGE_URL_PATH_X
  ,PAGE_TYPE AS PAGE_TYPE_M
  ,POST_EVAR36 AS PAID_SRCH_CPGN_I
  ,POST_EVAR35 AS PAID_SRCH_CRAT_I
  ,POST_EVAR32 AS PAID_SRCH_KYWD_I
  ,PAID_SEARCH AS PAID_SRCH_F
  ,PLUGINS AS PLGN_LIST_X
  ,CASE WHEN POST_EVAR17 LIKE '%-' THEN SUBSTR(POST_EVAR17, 1, LENGTH(POST_EVAR17) - 1) ELSE TRIM(POST_EVAR17) END AS POST_DIGT_APPT_N
  ,TRIM(post_evar6) as POST_DIGT_OPOR_N
  ,POST_EVENT_LIST AS POST_EVNT_LIST_X
  ,SUBSTR(LOWER(POST_PRODUCT_LIST), 0, 255) AS POST_PDCT_LIST_X
  ,POST_BROWSER_HEIGHT AS POST_BRWS_HGHT_N
  ,POST_BROWSER_WIDTH AS POST_BRWS_WDTH_N
  ,POST_CAMPAIGN AS POST_CPGN_X
  ,POST_CHANNEL AS POST_CHNL_X
  ,POST_PAGE_EVENT_VAR1 AS POST_PAGE_EVNT_VARY_1_X
  ,POST_PAGE_EVENT_VAR2 AS POST_PAGE_EVNT_VARY_2_X
  ,POST_PAGE_EVENT_VAR3 AS POST_PAGE_EVNT_VARY_3_X
  ,POST_PAGE_TYPE AS POST_PAGE_TYPE_M
  ,POST_PAGE_URL AS POST_PAGE_URL_X
  ,POST_PAGENAME AS POST_PAGE_M
  ,POST_PAGENAME_NO_URL AS POST_PAGE_NO_URL_M
  ,POST_PERSISTENT_COOKIE AS POST_PSST_COKI_F
  ,POST_REFERRER AS POST_REFR_PAGE_M
  ,POST_SEARCH_ENGINE AS POST_SRCH_ENGN_C
  ,POST_T_TIME_INFO AS POST_TMZN_INFO_X
  ,POST_TNT AS POST_TEST_AND_TARG_X
  ,POST_VISID_HIGH AS POST_VSIT_IDNN_HIGH_N
  ,POST_VISID_LOW AS POST_VSIT_IDNN_LOW_N
  ,POST_ZIP AS POST_ZIP_C
  ,PREV_PAGE AS PREV_PAGE_I
  ,POST_PROP15 AS PREV_PAGE_M
  ,SUBSTR(LOWER(PRODUCT_LIST), 0, 255) AS PDCT_LIST_X
  , CASE WHEN ARRAY_POSITION ( '20219'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS PDCT_SLCT_F
  ,POST_EVAR28 AS CONV_PDCT_TYPE_M
  ,POST_PROP39 AS TRFC_PDCT_TYPE_M
  ,POST_EVAR30 AS PRMO_STCK_X
  ,TRIM(POST_EVAR2) AS PRMO_X
 , CASE WHEN ARRAY_POSITION ( '20105'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS PROP_SRCH_CLIC_F
 , CASE WHEN ARRAY_POSITION ( '20104'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS PROP_SRCH_F
  ,POST_PROP51 AS PROP_SRCH_RSLT_Q
  ,POST_PROP50 AS PROP_SRCH_TERM_X
  ,POST_PROP52 AS PROP_VIEW_INTA_X
  ,POST_EVAR50 AS PRSP_I
  ,CASE WHEN ARRAY_POSITION ( '298'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS PUSH_IMPS_CLIC_F
  ,CASE WHEN ARRAY_POSITION ( '297'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS PUSH_IMPS_F
  ,QUARTERLY_VISITOR AS QTLR_VSIT_F
  ,CASE WHEN ARRAY_POSITION ( '277'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS QOTE_RTRV_F
  ,CASE WHEN ARRAY_POSITION ( '244'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS QOTE_SAVE_F
  ,CASE WHEN ARRAY_POSITION ( '274'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS QOTE_STRT_F
  ,CASE WHEN ARRAY_POSITION ( '275'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS QOTE_SUBM_F
  ,CASE
     WHEN (LENGTH(TRIM(POST_PAGENAME)) <> 0 OR LENGTH(TRIM(POST_PAGE_URL)) <>0 ) THEN 'Page View'
     WHEN EXCLUDE_HIT <> 0 THEN ''
     ELSE 'Interaction'
   END AS RECD_TYPE_M
  ,CASE
     WHEN NVL(FIRST_VALUE(VISIT_PAGE_NUM) OVER (PARTITION BY POST_VISID_HIGH, POST_VISID_LOW, VISIT_NUM, VISIT_START_TIME_GMT ORDER BY VISIT_PAGE_NUM),null) = 1
       THEN (NVL(FIRST_VALUE(REF_TYPE) OVER (PARTITION BY POST_VISID_HIGH, POST_VISID_LOW, VISIT_NUM, VISIT_START_TIME_GMT ORDER BY VISIT_PAGE_NUM),null)::INTEGER)::VARCHAR ELSE 'N/A'
   END AS REFR_TYPE_C
  ,POST_EVAR60 AS REFR_CHNL_X
  ,TRIM(REF_DOMAIN) AS REFR_DOMN_M
    , CASE WHEN ARRAY_POSITION ( '273'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS REGR_COMT_F

  ,TRIM(POST_PROP21) AS REPT_CUST_TYPE_M
  ,RESOLUTION AS SCRN_RSLV_C
  ,S_RESOLUTION AS SCRN_RSLV_JVSC_C
  ,SAMPLED_HIT AS SAMP_HIT_F
  ,TRIM(POST_EVAR31) AS SRCH_KYWD_X
  ,SEARCH_PAGE_NUM AS SRCH_PAGE_N
  ,CASE
     WHEN LENGTH(TRIM(LOWER(REGEXP_REPLACE(PRODUCT_LIST,';,','')))) <> 0
      THEN REGEXP_REPLACE(SPLIT(TRIM(LOWER(REGEXP_REPLACE(PRODUCT_LIST,';,',''))),'[,]')[1], ';', '')
     ELSE ''
   END AS DIGT_SCND_PDCT_I
  ,SECONDARY_HIT AS SCND_HIT_Q
  ,TRIM(POST_EVAR21) AS SITE_SECT_LEVL_1_X
  ,TRIM(POST_EVAR22) AS SITE_SECT_LEVL_2_X
  ,TRIM(POST_EVAR23) AS SITE_SECT_LEVL_3_X
  ,TRIM(POST_EVAR24) AS SITE_SECT_LEVL_4_X
  ,TRIM(POST_EVAR38) AS SITE_SECT_LEVL_5_X
  ,POST_EVAR49 AS SZMK_COKI_X
  ,date_time AS SRCE_EFFT_DATE_N
  ,HOUR(coalesce(TRY_TO_TIMESTAMP(date_time, 'yyyy-mm-dd hh24:mi:ss'),TRY_TO_TIMESTAMP(date_time, 'dd/mm/yyyy hh24:mi'))) AS SRCE_EFFT_HOUR_N
  ,SOURCEID AS AAN_SRCE_I
  ,STATS_SERVER AS STIS_SRVR_I
  ,CASE WHEN LENGTH(TRIM(POST_EVAR22)) <> 0 THEN POST_EVAR22 ELSE SPLIT(TRIM(PAGENAME), ':')[1] END AS SUB_SECT_X
  ,NVL(
        LEAD(POST_CUST_HIT_TIME_GMT)
          OVER(PARTITION BY POST_VISID_HIGH, POST_VISID_LOW, VISIT_NUM, VISIT_START_TIME_GMT ORDER BY CAST(VISIT_PAGE_NUM AS BIGINT), POST_CUST_HIT_TIME_GMT
	           ), POST_CUST_HIT_TIME_GMT + 1
	  ) - POST_CUST_HIT_TIME_GMT AS TIME_SPEN_SECN_Q
  ,TNT AS TEST_AND_TARG_INGT_X
  ,POST_PROP66 AS TEST_AND_TARG_PATH_X
  ,TNT_POST_VISTA AS TEST_AND_TARG_MODF_X
  ,POST_EVAR4 AS TOOL_M
  , CASE WHEN ARRAY_POSITION ( '203'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS TOOL_USGE_F
  ,TRUNCATED_HIT AS TRUN_HIT_F
  ,UA_COLOR AS USER_AGNT_COLR_DPTH_C
  ,UA_OS AS USER_AGNT_OPSY_C
  ,UA_PIXELS AS USER_AGNT_RSLV_C
  ,POST_PROP33 AS UNIQ_ADVT_I
  ,SUBSTR(USER_AGENT,1,3000) AS USER_AGNT_X
  ,POST_EVAR43 AS USER_LOGN_M
  ,USERID AS USER_RPRT_SUTE_N
  ,USERNAME AS USER_RPRT_SUTE_I
  ,VA_CLOSER_DETAIL AS LAST_TOUC_DETL_X
  ,VA_FINDER_DETAIL AS FRST_TOUC_DETL_X
  ,VA_INSTANCE_EVENT AS LAST_TOUC_ISAC_EVNT_N
  ,VA_NEW_ENGAGEMENT AS FRST_TOUC_NEW_NGGE_N
  ,TRIM(POST_PROP44) AS VIRT_PAGE_M
  ,VISID_NEW AS VSIT_IDNN_NEW_F
  ,VISID_TIMESTAMP AS VSIT_IDNN_S
  ,MD5(UPPER(CONCAT('AAN','~','OM','~',CONCAT(POST_VISID_HIGH, '_',POST_VISID_LOW, '_',VISIT_NUM,'_',VISIT_START_TIME_GMT)))) AS VSIT_IDNN_HASH_X
  ,CONCAT(
            POST_VISID_HIGH, '_',
            POST_VISID_LOW, '_',
            VISIT_NUM,'_',
            VISIT_START_TIME_GMT
         ) AS VSIT_I
  ,MD5(UPPER(CONCAT(post_visid_high,'_', post_visid_low))) AS VSIT_PERS_IDNN_HASH_X
  ,CONCAT(POST_VISID_HIGH,'_', POST_VISID_LOW) AS VSIT_PERS_I
  ,TRIM(VISIT_REFERRER) AS VSIT_REFR_X
  ,TRIM(VISIT_START_PAGENAME) AS VSIT_STRT_PAGE_M
  ,VISIT_START_TIME_GMT AS VSIT_STRT_S
  ,VISIT_KEYWORDS AS VSIT_KYWD_X
  ,VISIT_NUM AS VSIT_N
  ,VISIT_PAGE_NUM AS VSIT_PAGE_N
  ,VISIT_SEARCH_ENGINE AS VSIT_SRCH_ENGN_M
  ,VISIT_START_PAGE_URL AS VSIT_STRT_PAGE_URL_X
  ,CASE WHEN ARRAY_POSITION ( '263'  ::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS VOTE_DOWN_F
  ,CASE WHEN ARRAY_POSITION ( '262'  ::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS VOTE_UP_F
  ,CASE WHEN ARRAY_POSITION ( '20134'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_BUTN_CLIC_F
  ,CASE WHEN ARRAY_POSITION ( '20134'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_INTA_STRT_F
  ,CASE WHEN ARRAY_POSITION ( '20131'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_IVTE_ACPT_F
  ,CASE WHEN ARRAY_POSITION ( '20132'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_IVTE_DCLN_F
  ,CASE WHEN ARRAY_POSITION ( '20130'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_IVTE_OFFR_F
  ,CASE WHEN ARRAY_POSITION ( '20133'::variant, SPLIT(REGEXP_REPLACE(POST_EVENT_LIST, ':', ',-'), ',')) >= 0 THEN 1 ELSE 0 END AS WEB_CHAT_IVTE_TIME_OUT_F
  ,CASE
     WHEN LENGTH(TRIM(POST_EVAR59)) < 39 THEN ''
     WHEN POST_EVAR59 LIKE '%-' THEN LOWER(SUBSTR(POST_EVAR59,1,LENGTH(POST_EVAR59)-1))
     ELSE LOWER(POST_EVAR59)
   END AS POST_WEB_TRAK_IDNN_X
  ,CASE
      WHEN LENGTH(TRIM(EVAR59)) = 40 THEN LOWER(EVAR59)
      WHEN LENGTH(TRIM(EVAR59)) > 40 AND (evar59 LIKE '%-' OR evar59 like'%:%') THEN LOWER(SUBSTR(EVAR59,1,40))
      WHEN LENGTH(TRIM(POST_EVAR59)) = 40  THEN LOWER(POST_EVAR59)
      WHEN LENGTH(TRIM(POST_EVAR59)) > 40 AND (POST_EVAR59 LIKE '%-' OR POST_EVAR59 LIKE '%:%') THEN LOWER(SUBSTR(POST_EVAR59,1,40))
  ELSE 'N/A' END AS WEB_TRAK_IDNN_X
  ,WEEKLY_VISITOR AS WKLY_VSIT_F
  ,YEARLY_VISITOR AS YRLY_VSIT_F
  ,TRIM(ZIP) AS ZIP_POST_C
  ,POST_JAVA_ENABLED AS POST_JVSC_ENBL_F
  ,POST_KEYWORDS AS POST_KYWD_LIST_X
  ,POST_PAGE_EVENT AS POST_PAGE_EVNT_C
  ,POST_VISID_TYPE AS POST_VSIT_IDNN_TYPE_C
  ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
  ,CURRENT_TIMESTAMP as ETL_S
  ,snap_day AS DAY
  ,snap_hour AS HOUR
  ,snap_year AS YEAR
  ,snap_month AS MONTH
  ,date_part(year, SF_LOAD_TS) as SF_LOAD_YEAR
  ,date_part(month, SF_LOAD_TS) as SF_LOAD_MONTH
  ,date_part(day, SF_LOAD_TS) as  SF_LOAD_DAY
  ,date_part(hour, SF_LOAD_TS) as SF_LOAD_HOUR
  ,eVar13 as ALT_I
  ,post_prop16 as ALT_IDNN_X
  ,post_eVar27 as ENTY_TYPE_X
  ,post_eVar45 as PDCT_PAGE_TYPE_X
  ,post_prop45 as VIRT_PAGE_X
  ,post_prop53 as CALR_LEND_X
  ,post_prop58 as PAGE_SUB_SUB_MLST_M
  ,post_prop65 as DSPL_TYPE_X
  ,post_prop69 as ANAY_VERS_N
  ,eVar78 as OFI_X
  ,post_evar78 as POST_OFI_X
  , :TASK_RUN_ID TASK_RUN_ID
  , CURRENT_TIMESTAMP AS TASK_RUN_S
  , SOURCE_FILE
  , SOURCE_FILE_ROW_NUMBER
  FROM PRD_Z01_CRD.AAN.AAN_INTA_HIT_DATA_CHNG
  WHERE 1=1
      AND HIT_SOURCE NOT IN (5,8,9) AND EXCLUDE_HIT=0",SYSTEM,R_BAT_PRD_Z01_CAH,1971421,1971.421,32.857017,0.547617,4X-LARGE,128,70.094976
01bef272-3204-c93d-0000-c71d2d30c3da,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_20250905164042_scored as 
(select
tran_id,
-- dtl_ca_client_amt,
-- ssx_cust_num,
CARDS_RETRO_TEST_MOJO1('modelname=pipeline_it5_F2_xval_2day_all_redmojsiz_20250905164042.mojo', 
array_construct(
TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N3D_1D_SUM_1, _C_CC_GBL_N3D_1D_CNT_1, _C_CRD_APAY_SUM_1, _C_CRD_SAFE_MERCHANT, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_3, _A_CUSTOMER_AGE, _A_NPP_FTP_SUM, _A_CUST_SUM_AAA_LONG, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_2, _A_PROF_CAPP_DEVICE_CNT_1, _L_UID_AGE, _L_BC_SESS_CNT, _A_CC_CASH_ADVANCE_AMT, _L_PMT_AMT, _A_CAPP_HCE_CNT_1, _L_MUID_AGE_PER_USER, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_MAX_30D_SCORE, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _L_NC_ACCT_NUM_NAME_CONF, _L_BC_SCORE, _L_DAYS_LST_DEV_IOS, _A_PROF_CAPP_DEVICE_CNT_2, _A_CLIENT_COUNTRY_CNT_6, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_NB_BROWSER_CNT, _A_TRANSPORT_REG_CNT_1, _A_MULTI_CNT, _A_PROF_CAPP_DEVICE_NFTP_1, _A_PROF_CAPP_DEVICE_CNT_4, _L_SESS_CNT_WEB, _L_TIME_ZONE, _L_IP_AGE, _A_CLC_FTP_AMT, _A_CRYPTO_MNTHLY_SUM, _L_SESS_CNT_MOB_BROWSER, _A_P_L_3, _A_LIST_RL1_SCAM_CUST_CIF, _A_VPN_VPS_IP_LOGON_COUNT, _L_NC_MATCH_NAME_CONF, _A_CIF_ESTABLISH_CHANNEL, _A_CUST_OS_NAME, _A_2WAY_TYPE, _L_PUSH_API_1, _A_CLIENT_CITY_6, _L_PROXY_TYPE, _L_LANG_1, _L_LANG_2, _L_NC_RESPONSE_CODE, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_0_2S_002, DTL_EX_3_80S_002, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, GENDER, DMC_CNT, YCS_CNT, TRAN_CNT, CC_CNT, TRD_CNT, PL_CNT, MORT_CNT, INSRNC_CNT, OTH_CNT, NTBNK_FAC, REL_MNG, FA_1, NO_1, GOVT_BENE, PRVT_CUST, HL_ASOC, CORP_EMPL, TRUSTEE, INTL_STU, MAR_STS_ORG_STR, EMPL_CLAS_LGL_STS, HOME_OWN, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT_DIFF, _A_SCAMP2_MLW_DT_DIFF, _L_PUSH_API_DT_1_DIFF, _L_PUSH_API_DT_2_DIFF, _L_PUSH_API_DT_3_DIFF, CUS_SUM_UPST_DCLN_TRAN_CNT_Q, CUS_SUM_OSEA_TRAN_CNT_Q, CUS_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CUS_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CUS_SUM_CARD_PRES_TRAN_SUM_N, CUS_SUM_PAY_PASS_TRAN_SUM_N, CUS_SUM_CAPP_LOGN_CNT_Q, CUS_SUM_VIEW_CARD_DETL_CNT_Q, CRD_SUM_TRAN_CNT_Q, CRD_SUM_UPST_APRD_TRAN_CNT_Q, CRD_SUM_FINL_APRD_TRAN_CNT_Q, CRD_SUM_UPST_DCLN_TRAN_SUM_N, CRD_SUM_RULE_DCLN_TRAN_SUM_N, CRD_SUM_OSEA_TRAN_CNT_Q, CRD_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CRD_SUM_CARD_NOT_PRES_TRAN_SUM_N, CRD_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CRD_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CRD_SUM_CARD_PRES_TRAN_CNT_Q, CRD_SUM_CARD_PRES_TRAN_SUM_N, CRD_SUM_PAY_PASS_TRAN_SUM_N, CMA_SUM_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_CNT_Q, CMA_SUM_TRAN_SUM_N, CMA_SUM_RULE_DCLN_TRAN_CNT_Q, CMA_SUM_FINL_APRD_TRAN_CNT_Q, CMA_SUM_UPST_APRD_TRAN_SUM_N, CMA_SUM_FINL_APRD_TRAN_SUM_N, CMA_SUM_FDP_RULE_TRIG_CNT_Q, CMA_SUM_OSEA_TRAN_CNT_Q, CMA_SUM_DOMS_TRAN_SUM_N, CMA_SUM_OSEA_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMA_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N, CMA_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMA_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMA_SUM_CARD_PRES_TRAN_CNT_Q, CMA_SUM_PAY_PASS_TRAN_CNT_Q, CMA_SUM_CARD_PRES_TRAN_SUM_N, CMA_SUM_PAY_PASS_TRAN_SUM_N, CMA_MAX_C_2WAY_CRD_HR_RULE_FLAG, CMA_MAX_C_2WAY_CRD_FRD_RULE_FLAG, CMC_SUM_TRAN_SUM_N, CMC_SUM_RULE_DCLN_TRAN_CNT_Q, CMC_SUM_FINL_APRD_TRAN_CNT_Q, CMC_SUM_UPST_APRD_TRAN_SUM_N, CMC_SUM_FINL_APRD_TRAN_SUM_N, CMC_SUM_FDP_RULE_TRIG_CNT_Q, CMC_SUM_DOMS_TRAN_SUM_N, CMC_SUM_OSEA_TRAN_SUM_N, CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, CMC_SUM_SECU_PCOL_ENBL_TRAN_SUM_N, CMC_SUM_SECU_PCOL_DABL_TRAN_SUM_N, CMC_SUM_CARD_PRES_TRAN_SUM_N, CMC_SUM_PAY_PASS_TRAN_SUM_N, MAQ_SUM_UPST_APRD_TRAN_CNT_Q, MAQ_SUM_TRAN_SUM_N, MAQ_SUM_UPST_DCLN_TRAN_CNT_Q, MAQ_SUM_RULE_DCLN_TRAN_CNT_Q, MAQ_SUM_FINL_APRD_TRAN_CNT_Q, MAQ_SUM_UPST_APRD_TRAN_SUM_N, MAQ_SUM_FINL_APRD_TRAN_SUM_N, MAQ_SUM_FDP_RULE_TRIG_CNT_Q, MAQ_SUM_DOMS_TRAN_SUM_N, MAQ_SUM_OSEA_TRAN_SUM_N, MAQ_SUM_CARD_NOT_PRES_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_ENBL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_CNT_Q, MAQ_SUM_SECU_PCOL_DABL_TRAN_SUM_N, MAQ_SUM_CARD_PRES_TRAN_CNT_Q, MAQ_SUM_PAY_PASS_TRAN_CNT_Q, MAQ_SUM_CARD_PRES_TRAN_SUM_N)) as target_0
-- 1 - try_to_double(target_0) as target_1
from 
PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_FDT_AGG2D_OOT
-- where to_date(transactiondatetime) <= '2025-06-07'
-- limit 870
);",VERENIIL,R_USR_FRAUMD_LABMLFRD_RW,7708445,7708.445,128.474083,2.141235,2X-LARGE,32,68.51952
01bdcad0-3204-a61b-0000-c71d245e788e,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1904414,1904.414,31.740233,0.529004,4X-LARGE,128,67.712512
01be9bda-3204-bee5-0000-c71d2a88ab6a,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_TRAIN_FDT_card_merc_catg_tran_prfl_agg2d as
(WITH date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-07-01'
    order by tran_d
),
hourly_data AS (
    SELECT
        card_i,
        merc_catg_c,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        PRD_P01_DMN_FRAUMD.lcl.CARD_MERC_CATG_TRAN_PRFL
    where    
        tran_d between '2025-03-01' and '2025-07-01'
),
all_dates AS (
    SELECT
        card_i,
        merc_catg_c,
        ds.tran_d
    FROM
        (SELECT DISTINCT card_i, merc_catg_c FROM PRD_P01_DMN_FRAUMD.lcl.CARD_MERC_CATG_TRAN_PRFL where tran_d between '2025-03-01' and '2025-07-01') ca
    CROSS JOIN date_series ds
),
daily_data AS (
    SELECT
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates ad
    LEFT JOIN hourly_data hd
    ON ad.card_i = hd.card_i AND ad.merc_catg_c = hd.merc_catg_c AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.card_i,
        ad.merc_catg_c,
        DATE_TRUNC('day', ad.tran_d)
),
aggregated_data AS (
    SELECT
        card_i,
        merc_catg_c,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY card_i, merc_catg_c ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMC_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data
)
SELECT
    card_i, --as chl_id_card_num,
    merc_catg_c,
    window_start_date,
    -- window_start_date + INTERVAL '2 days' AS window_end_date,
    CMC_SUM_TRAN_CNT_Q,
    CMC_SUM_UPST_APRD_TRAN_CNT_Q,
    CMC_SUM_TRAN_SUM_N,
    CMC_SUM_UPST_DCLN_TRAN_CNT_Q,
    CMC_SUM_RULE_DCLN_TRAN_CNT_Q,
    CMC_SUM_FINL_APRD_TRAN_CNT_Q,
    CMC_SUM_UPST_APRD_TRAN_SUM_N,
    CMC_SUM_FINL_APRD_TRAN_SUM_N,
    CMC_SUM_FDP_RULE_TRIG_CNT_Q,
    CMC_SUM_DOMS_TRAN_CNT_Q,
    CMC_SUM_OSEA_TRAN_CNT_Q,
    CMC_SUM_DOMS_TRAN_SUM_N,
    CMC_SUM_OSEA_TRAN_SUM_N,
    CMC_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    CMC_SUM_3DS_TRAN_CNT_Q,
    CMC_SUM_N3D_TRAN_CNT_Q,
    CMC_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    CMC_SUM_3DS_TRAN_SUM_N,
    CMC_SUM_N3D_TRAN_SUM_N,
    CMC_SUM_CARD_PRES_TRAN_CNT_Q,
    CMC_SUM_ATM_TRAN_CNT_Q,
    CMC_SUM_FALL_BACK_TRAN_CNT_Q,
    CMC_SUM_CHIP_TRAN_CNT_Q,
    CMC_SUM_PAY_PASS_TRAN_CNT_Q,
    CMC_SUM_CARD_PRES_TRAN_SUM_N,
    CMC_SUM_ATM_TRAN_SUM_N,
    CMC_SUM_FALL_BACK_TRAN_SUM_N,
    CMC_SUM_CHIP_TRAN_SUM_N,
    CMC_SUM_PAY_PASS_TRAN_SUM_N,
    CMC_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    CMC_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    CMC_MAX_CUV_RULE_PUSH_SENT_F
FROM
    aggregated_data
ORDER BY
    card_i,
    merc_catg_c,
    window_start_date);",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,7593743,7593.743,126.562383,2.109373,2X-LARGE,32,67.499936
01be1e9b-3204-afef-0000-c71d26be09de,"call MLOP_SP_MODL_RUNR(to_date('2025-08-03','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1890141,1890.141,31.50235,0.525039,4X-LARGE,128,67.204992
01bdd667-3204-a61b-0000-c71d24b20d32,call cns.sp_inta_digt_evnt_detl_paty(),ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,1884898,1884.898,31.414967,0.523583,4X-LARGE,128,67.018624
01bdd668-3204-a61b-0000-c71d24b20d3a,"INSERT INTO CNS.INTA_DIGT_EVNT_DETL_PATY
    SELECT
    DISTINCT
        INTA_BK
        ,DIGT_INTA_EVNT_S
        ,DIGT_INTA_EVNT_SEQN_N
        ,CASE WHEN LOWER(ided.WEB_TRAK_IDNN_X) = 'N/A' THEN ided.WEB_TRAK_IDNN_X
              ELSE PT.PATY_IDNN_BK
              END AS PATY_IDNN_BK
        ,DIGT_INTA_EVNT_TYPE_CODE_X
        ,DIGT_CHNL_CTNT_OBJC_HASH_X
        ,RECD_EXCL_FLTR_F
        ,ACPT_LANG_M
        ,POST_COKI_F
        ,POST_CNCY_C
        ,POST_CUST_VSIT_N
        ,APPT_VERS_M
        ,BRCH_BSB_C
        ,APPT_LEAD_F
        ,DIGT_APPT_N
        ,DIGT_OPOR_N
        ,APPT_RTRV_F
        ,APPT_SAVE_F
        ,APPT_STRT_F
        ,APPT_SUBM_F
        ,ARM_CPGN_I
        ,APPT_S
        ,ARM_SEGM_I
        ,AUTT_STAT_M
        ,BRWS_C
        ,COLR_DPTH_Q
        ,CPGN_STCK_X
        ,CHNL_C
        ,SRCE_CHNL_X
        ,CLIC_ACTV_M
        ,CLIC_ACTV_TYPE_C
        ,CLIC_CNTX_X
        ,CLIC_CNTX_TYPE_C
        ,CLIC_SRCE_C
        ,CLIC_TAG_M
        ,LAST_TOUC_I
        ,CODE_VERS_M
        ,COLR_DPTH_C
        ,CBA_TRFC_F
        ,CONN_TYPE_C
        ,CNTY_C
        ,CRAT_S
        ,CR_DCDE_F
        ,BRWS_CONN_TYPE_M
        ,CNCY_FACR_N
        ,CURR_EXCH_R
        ,POST_CUST_HIT_S
        ,SRCE_CUST_SBTY_M
        ,SRCE_CUST_TYPE_M
        ,DALY_VSIT_F
        ,DVIC_I
        ,DVIC_TYPE_M
        ,DIGT_BNNR_C
        ,DIGT_CTCT_RQST_STRT_CLIC_F
        ,DIGT_CNCT_RQST_SUBM_CLIC_F
        ,DIGT_CROS_SALE_F
        ,DIGT_FIND_MOBL_LEND_CLIC_F
        ,DIGT_RTRQ_APPT_STRT_F
        ,DIGT_RTRQ_APPT_SUBM_F
        ,DIGT_RTRQ_COMT_CLIC_F
        ,DIGT_RTRQ_RECA_CLIC_F
        ,DIGT_RTRQ_STRT_CLIC_F
        ,DIGT_RISK_ASES_F
        ,DIGT_SLSV_COMT_CLIC_F
        ,DIGT_SLSV_LEAD_CLIC_F
        ,DIGT_SLSV_STRT_CLIC_F
        ,DSTN_FROM_BANK_SURB_BRCH_N
        ,DOMN_X
        ,DOMN_TYPE_M
        ,DOMN_TYPE_PATH_M
        ,DNLD_LINK_M
        ,DUPL_EVNT_X
        ,DUPL_PUR_F
        ,DUPL_FORM_M
        ,EBV_COMT_F
        ,EBV_FAIL_F
        ,EBV_STRT_F
        ,ECV_COMT_F
        ,FRST_HIT_S
        ,FORM_TYPE_M
        ,DSGT_MRKT_AREA_X
        ,GEOG_ZIP_C
        ,GEOG_CITY_M
        ,GEOG_CNTY_M
        ,GEOG_REGN_M
        ,HIER_1_X
        ,HIT_SRCE_F
        ,HIT_S
        ,HIT_IDNN_HIGH_N
        ,HIT_IDNN_LOW_N
        ,HOME_BUY_COND_ELGL_STRT_F
        ,HOME_BUY_COND_ELGL_SUBM_F
        ,HOME_PAGE_F
        ,HOUR_VSIT_F
        ,INTA_TYPE_X
        ,INTR_SRCH_F
        ,INTR_SRCH_RSLT_CLIC_F
        ,INTR_SRCH_X
        ,INTT_PCOL_ADRS_2_X
        ,INTT_PCOL_ADRS_X
        ,JVSC_VERS_SUPP_N
        ,JVSC_VERS_USE_N
        ,LANG_C
        ,LAST_TOUC_CPGN_X
        ,LAST_TOUC_X
        ,ECV_FAIL_F
        ,ECV_STRT_F
        ,ELEM_INTA_X
        ,ETRK_X
        ,EVNT_LIST_X
        ,EVNT_S
        ,EXCL_HIT_C
        ,EXPM_M
        ,EXPM_VARY_M
        ,EXTL_AND_INTR_CPGN_STCK_X
        ,EXT_S
        ,FEAT_NGGE_F
        ,FRST_TOUC_I
        ,DIGT_FRST_PDCT_I
        ,FRST_TOUC_CPGN_X
        ,FRST_TOUC_X
        ,FRST_HIT_PAGE_URL_X
        ,FRST_HIT_PAGE_M
        ,FRST_HIT_REFR_X
        ,LAST_HIT_S
        ,LAST_PUR_N
        ,LAST_PUR_S
        ,LAUN_EVNT_F
        ,LIST_VARY_2_X
        ,LIST_VARY_3_X
        ,MBOX_BNNR_CLIC_F
        ,MBOX_BNNR_LOAD_F
        ,MRKT_CPGN_X
        ,MBOX_EXPC_X
        ,MBOX_IMPS_X
        ,MBOX_LOCN_X
        ,MBOX_OFFR_X
        ,MCDS_ASET_X
        ,MOBL_DVIC_I
        ,MNLY_VSIT_F
        ,NEW_VSIT_F
        ,OMN_LOAD_EFFT_S
        ,OPSY_C
        ,BRWS_PLGN_LIST_X
        ,PAGE_EVNT_TYPE_C
        ,PAGE_HIT_UNIQ_N
        ,PAGE_MLST_M
        ,PAGE_ORIG_M
        ,PAGE_M
        ,PAGE_NAME_X
        ,PAGE_REFR_HOST_M
        ,PAGE_REFR_PATH_M
        ,PAGE_SUB_MLST_M
        ,PAGE_URL_HOST_X
        ,PAGE_URL_PATH_X
        ,PAGE_TYPE_M
        ,PAID_SRCH_CPGN_I
        ,PAID_SRCH_CRAT_I
        ,PAID_SRCH_KYWD_I
        ,PAID_SRCH_F
        ,PLGN_LIST_X
        ,POST_DIGT_APPT_N
        ,POST_DIGT_OPOR_N
        ,POST_EVNT_LIST_X
        ,POST_PDCT_LIST_X
        ,POST_BRWS_HGHT_N
        ,POST_BRWS_WDTH_N
        ,POST_CPGN_X
        ,POST_CHNL_X
        ,POST_PAGE_EVNT_VARY_1_X
        ,POST_PAGE_EVNT_VARY_2_X
        ,POST_PAGE_EVNT_VARY_3_X
        ,POST_PAGE_TYPE_M
        ,POST_PAGE_URL_X
        ,POST_PAGE_M
        ,POST_PAGE_NO_URL_M
        ,POST_PSST_COKI_F
        ,POST_REFR_PAGE_M
        ,POST_SRCH_ENGN_C
        ,POST_TMZN_INFO_X
        ,POST_TEST_AND_TARG_X
        ,POST_VSIT_IDNN_HIGH_N
        ,POST_VSIT_IDNN_LOW_N
        ,POST_ZIP_C
        ,PREV_PAGE_I
        ,PREV_PAGE_M
        ,PDCT_LIST_X
        ,PDCT_SLCT_F
        ,CONV_PDCT_TYPE_M
        ,TRFC_PDCT_TYPE_M
        ,PRMO_STCK_X
        ,PRMO_X
        ,PROP_SRCH_CLIC_F
        ,PROP_SRCH_F
        ,PROP_SRCH_RSLT_Q
        ,PROP_SRCH_TERM_X
        ,PROP_VIEW_INTA_X
        ,PRSP_I
        ,PUSH_IMPS_CLIC_F
        ,PUSH_IMPS_F
        ,QTLR_VSIT_F
        ,QOTE_RTRV_F
        ,QOTE_SAVE_F
        ,QOTE_STRT_F
        ,QOTE_SUBM_F
        ,RECD_TYPE_M
        ,REFR_TYPE_C
        ,REFR_CHNL_X
        ,REFR_DOMN_M
        ,REGR_COMT_F
        ,REPT_CUST_TYPE_M
        ,SCRN_RSLV_C
        ,SCRN_RSLV_JVSC_C
        ,SAMP_HIT_F
        ,SRCH_KYWD_X
        ,SRCH_PAGE_N
        ,DIGT_SCND_PDCT_I
        ,SCND_HIT_Q
        ,SITE_SECT_LEVL_1_X
        ,SITE_SECT_LEVL_2_X
        ,SITE_SECT_LEVL_3_X
        ,SITE_SECT_LEVL_4_X
        ,SITE_SECT_LEVL_5_X
        ,SZMK_COKI_X
        ,SRCE_EFFT_DATE_N
        ,SRCE_EFFT_HOUR_N
        ,AAN_SRCE_I
        ,STIS_SRVR_I
        ,SUB_SECT_X
        ,TIME_SPEN_SECN_Q
        ,TEST_AND_TARG_INGT_X
        ,TEST_AND_TARG_PATH_X
        ,TEST_AND_TARG_MODF_X
        ,TOOL_M
        ,TOOL_USGE_F
        ,TRUN_HIT_F
        ,USER_AGNT_COLR_DPTH_C
        ,USER_AGNT_OPSY_C
        ,USER_AGNT_RSLV_C
        ,UNIQ_ADVT_I
        ,USER_AGNT_X
        ,USER_LOGN_M
        ,USER_RPRT_SUTE_N
        ,USER_RPRT_SUTE_I
        ,LAST_TOUC_DETL_X
        ,FRST_TOUC_DETL_X
        ,LAST_TOUC_ISAC_EVNT_N
        ,FRST_TOUC_NEW_NGGE_N
        ,VIRT_PAGE_M
        ,VSIT_IDNN_NEW_F
        ,VSIT_IDNN_S
        ,VSIT_IDNN_HASH_X
        ,VSIT_I
        ,VSIT_PERS_IDNN_HASH_X
        ,VSIT_PERS_I
        ,VSIT_REFR_X
        ,VSIT_STRT_PAGE_M
        ,VSIT_STRT_S
        ,VSIT_KYWD_X
        ,VSIT_N
        ,VSIT_PAGE_N
        ,VSIT_SRCH_ENGN_M
        ,VSIT_STRT_PAGE_URL_X
        ,VOTE_DOWN_F
        ,VOTE_UP_F
        ,WEB_CHAT_BUTN_CLIC_F
        ,WEB_CHAT_INTA_STRT_F
        ,WEB_CHAT_IVTE_ACPT_F
        ,WEB_CHAT_IVTE_DCLN_F
        ,WEB_CHAT_IVTE_OFFR_F
        ,WEB_CHAT_IVTE_TIME_OUT_F
        ,POST_WEB_TRAK_IDNN_X
        ,ided.WEB_TRAK_IDNN_X
        ,WKLY_VSIT_F
        ,YRLY_VSIT_F
        ,ZIP_POST_C
        ,POST_JVSC_ENBL_F
        ,POST_KYWD_LIST_X
        ,POST_PAGE_EVNT_C
        ,POST_VSIT_IDNN_TYPE_C
        ,'AAN_INTA_DIGT_EVNT_DETL_ENR' AS ETL_ID
        ,CURRENT_TIMESTAMP as ETL_S
        ,YEAR AS YEAR
        ,MONTH AS MONTH
        ,DAY AS DAY
        ,HOUR AS HOUR
        ,PT.PATY_I
        ,ALT_I
        ,ALT_IDNN_X
        ,ENTY_TYPE_X
        ,PDCT_PAGE_TYPE_X
        ,VIRT_PAGE_X
        ,CALR_LEND_X
        ,PAGE_SUB_SUB_MLST_M
        ,DSPL_TYPE_X
        ,ANAY_VERS_N
        ,OFI_X
        ,POST_OFI_X
        , :TASK_RUN_ID TASK_RUN_ID
        ,CURRENT_TIMESTAMP AS TASK_RUN_S
        , SOURCE_FILE
    FROM CNS.INTA_DIGT_EVNT_DETL_TRANSFORM_CHNG ided
    LEFT JOIN
    CNS.PATY_EXTRACT_RULE pt
    ON lower(pt.web_trak_idnn_x)=lower(ided.WEB_TRAK_IDNN_X)
    WHERE 1=1",ACOE_CDL_PRD_P01_CAH_001,R_BAT_PRD_P01_CAH,1883226,1883.226,31.3871,0.523118,4X-LARGE,128,66.959104
01be8b78-3204-bee5-0000-c71d2a0bcb6e,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,7486543,7486.543,124.775717,2.079595,2X-LARGE,32,66.54704
01bde678-3204-aa21-0000-c71d252795d2,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1864232,1864.232,31.070533,0.517842,4X-LARGE,128,66.283776
01be9d9c-3204-bee2-0000-c71d2a92fbbe,"create or replace temporary table Digital_Transactions as
select    
    b.fraudtype,
    b.DETECTION,
    b.case_detection,
    TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_ANY_CUST_FTP_DT, 38, 2), '1960-01-01 00:00:00') as _B_ANY_CUST_FTP_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_x_cif_recipient_new_date, 38, 2), '1960-01-01 00:00:00') as _x_cif_recipient_new_date,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_BC_EVENT_DT, 38, 2), '1960-01-01 00:00:00') as _L_BC_EVENT_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_SCM_RSK_HGH_DT, 38, 2), '1960-01-01 00:00:00') as _L_SCM_RSK_HGH_DT,
    _L_NC_RESPONSE_CODE,
    dtl_ex_0_20s_001 AS RECEIPT_NUM,
    (a.dtl_ex_0_n_064 || a.dtl_ex_0_n_065 || a.dtl_ex_0_n_066) as TRAN_ID,
    cmx_tran_id,
    hdr_activity_type,
    ssx_cust_num,
    chl_id_ob_userid,
    chl_id_pb_userid,
    dtl_ex_1_5s_01 as dmx_5byte_string_01,
    _a_cse_chg_dwl_ind AS DWL_change,
    dtl_ex_0_n_006 as Task_ID,
    dtl_ex_0_i_002 AS FTP_Indicator_1,
    rsp_ex_2_i_006 AS FTP_Indicator_2,
    TRY_TO_NUMBER(_X_CIF_RECIPIENT_SUM, 38, 2) as _X_CIF_RECIPIENT_SUM,
    TRY_TO_NUMBER(_X_CIF_RECIPIENT_NEW_SUM, 38, 2) as _X_CIF_RECIPIENT_NEW_SUM,
    TRY_TO_NUMBER(_x_cif_recipient_new_cnt, 38, 2) as _x_cif_recipient_new_cnt,
    TRY_TO_NUMBER(TGX_TRAN_AMT) AS TGX_TRAN_AMT,
    TRY_TO_NUMBER(_A_BTS_CUST_AGE, 38, 2)as _A_BTS_CUST_AGE,
    tgx_bank_name,
    tgx_bank_num,
    tgx_branch_id,
    tgx_acct_num,
    tgx_name,
    _L_ACCT_NUM,
    _L_BANK_NUM,
    _l_branch_id, 
    DTL_EX_3_80S_003 AS pmt_description_1,
    tgx_description AS pmt_description_2,
    TRY_TO_NUMBER(_L_SCM_RSK_HGH_SCR, 38, 2) as _L_SCM_RSK_HGH_SCR,
    TRY_TO_NUMBER(dtl_ex_0_n_034, 38, 5) as CERBERUS_SCORE,
    TRY_TO_NUMBER(_L_CUST_SCAMRISK_SCORE, 38, 2) as _L_CUST_SCAMRISK_SCORE,
    TRY_TO_NUMBER(a._l_se_score, 38, 2) as _L_SE_SCORE,
    TRY_TO_NUMBER(a._l_bc_score, 38, 2) as _L_BC_SCORE,
    TRY_TO_NUMBER(a._l_max_30d_score, 38, 2) as _L_MAX_30D_SCORE,
    TRY_TO_NUMBER(a._l_max_30d_se_score, 38, 2) as _L_MAX_30D_SE_S,
    TRY_TO_NUMBER(_l_max_30d_mule_score, 38, 2) as _l_max_30d_mule_score,
    TRY_TO_NUMBER(_L_NUM_SESS_2H, 38, 2) as _L_NUM_SESS_2H,
    TRY_TO_NUMBER(_L_NUM_SESS_4H, 38, 2) as _L_NUM_SESS_4H,
    TRY_TO_NUMBER(_L_TRUST_NEW_PAYEE,38,2) as _L_TRUST_NEW_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_UNUSED_PAYEE,38,2) as _L_TRUST_UNUSED_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_PAYEE_HIGH_VLOC_IN,38,2) as _L_TRUST_PAYEE_HIGH_VLOC_IN,
	TRY_TO_NUMBER(_L_TRUST_PAYEE_DORM_ACCT,38,2) as _L_TRUST_PAYEE_DORM_ACCT,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_ATO_AS_PAYER,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_SES_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_SES_AS_PAYER,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYEE,38,2) as _L_TRUST_RCNT_HI_MS_AS_PAYEE,
	TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYER,38,2) as _L_TRUST_RCNT_HI_MS_AS_PAYER,
    TRY_TO_NUMBER(_l_rcnt_hi_scr_on_dev,38,2) as _l_rcnt_hi_scr_on_dev,
    TRY_TO_NUMBER(_B_RECIP_SUM_LONG, 38, 2) as _B_RECIP_SUM_LONG,
    TRY_TO_NUMBER(_B_RECIP_SUM_SHORT, 38, 2) as _B_RECIP_SUM_SHORT,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_1, 38, 2) as _B_RECIP_FTP_CNT_1,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_2, 38, 2) as _B_RECIP_FTP_CNT_2,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_3, 38, 2) as _B_RECIP_FTP_CNT_3,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_4, 38, 2) as _B_RECIP_FTP_CNT_4,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_5, 38, 2) as _B_RECIP_FTP_CNT_5,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_6, 38, 2) as _B_RECIP_FTP_CNT_6,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_7, 38, 2) as _B_RECIP_FTP_CNT_7,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_RECIP_FTP_CNT_DATE, 38, 2), '1960-01-01 00:00:00') as _B_RECIP_FTP_CNT_DATE,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_LONG, 38, 2) as _B_RECIP_FTP_CNT_LONG,
    TRY_TO_NUMBER(_B_RECIP_FTP_CNT_SHORT, 38, 2) as _B_RECIP_FTP_CNT_SHORT,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_1, 38, 2) as _B_RECIP_FTP_SUM_1,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_2, 38, 2) as _B_RECIP_FTP_SUM_2,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_3, 38, 2) as _B_RECIP_FTP_SUM_3,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_4, 38, 2) as _B_RECIP_FTP_SUM_4,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_5, 38, 2) as _B_RECIP_FTP_SUM_5,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_6, 38, 2) as _B_RECIP_FTP_SUM_6,
    TRY_TO_NUMBER(_B_RECIP_FTP_SUM_7, 38, 2) as _B_RECIP_FTP_SUM_7,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_B_RECIP_FTP_SUM_DATE, 38, 2), '1960-01-01 00:00:00') as _B_RECIP_FTP_SUM_DATE,
    TRY_TO_NUMBER(_a_npp_in_unrelated_sum_24_1, 38, 2) as _a_npp_in_unrelated_sum_24_1,
    TRY_TO_NUMBER(_a_npp_in_unrelated_sum_24_2, 38, 2) as _a_npp_in_unrelated_sum_24_2,
    TRY_TO_NUMBER(a._a_ftp_cnt_1, 38, 2) as _A_FTP_CNT_1,
	TRY_TO_NUMBER(a._a_ftp_cnt_2, 38, 2) as _A_FTP_CNT_2,
	TRY_TO_NUMBER(a._a_ftp_cnt_3, 38, 2) as _A_FTP_CNT_3,
	TRY_TO_NUMBER(a._a_ftp_cnt_4, 38, 2) as _A_FTP_CNT_4,
	TRY_TO_NUMBER(a._a_ftp_cnt_5, 38, 2) as _A_FTP_CNT_5,
	TRY_TO_NUMBER(a._a_ftp_cnt_6, 38, 2) as _A_FTP_CNT_6,
	TRY_TO_NUMBER(a._a_ftp_cnt_7, 38, 2) as _A_FTP_CNT_7,
	TRY_TO_NUMBER(a._a_ftp_sum_1, 38, 2) as _A_FTP_SUM_1,
	TRY_TO_NUMBER(a._a_ftp_sum_2, 38, 2) as _A_FTP_SUM_2,
	TRY_TO_NUMBER(a._a_ftp_sum_3, 38, 2) as _A_FTP_SUM_3,
	TRY_TO_NUMBER(a._a_ftp_sum_4, 38, 2) as _A_FTP_SUM_4,
	TRY_TO_NUMBER(a._a_ftp_sum_5, 38, 2) as _A_FTP_SUM_5,
	TRY_TO_NUMBER(a._a_ftp_sum_6, 38, 2) as _A_FTP_SUM_6,
	TRY_TO_NUMBER(a._a_ftp_sum_7, 38, 2) as _A_FTP_SUM_7,
    TRY_TO_NUMBER(_A_CUST_NPP_IN_SUM_AAA_1, 38, 2) as _A_CUST_NPP_IN_SUM_AAA_1,
    TRY_TO_NUMBER(_A_CUST_NPP_IN_SUM_AAA_2, 38, 2) as _A_CUST_NPP_IN_SUM_AAA_2,
    TRY_TO_NUMBER(_A_CUST_NPP_IN_SUM_AAA_3, 38, 2) as _A_CUST_NPP_IN_SUM_AAA_3,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_1, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_1,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_2, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_2,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_3, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_3,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_4, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_4,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_5, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_5,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_6, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_6,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_7, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_7,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_LONG, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_LONG,
    TRY_TO_NUMBER(_A_CUST_NPP_OUT_SUM_AAA_SHORT, 38, 2) as _A_CUST_NPP_OUT_SUM_AAA_SHORT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP5_DT, 38, 2), '1960-01-01 00:00:00') as _A_REVERSE_IND_SCAMP5_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP6_DT, 38, 2), '1960-01-01 00:00:00') as _A_REVERSE_IND_SCAMP6_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_REVERSE_IND_SCAMP7_DT, 38, 2), '1960-01-01 00:00:00') as _A_REVERSE_IND_SCAMP7_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP1_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP1_MLW_IND, 38, 2) as _A_SCAMP1_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP2_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP2_MLW_IND, 38, 2) as _A_SCAMP2_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP3_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP3_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP3_MLW_IND, 38, 2) as _A_SCAMP3_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP4_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP4_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP4_MLW_IND, 38, 2) as _A_SCAMP4_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP5_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP5_MLW_IND, 38, 2) as _A_SCAMP5_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP6_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP6_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP6_MLW_IND, 38, 2) as _A_SCAMP6_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP7_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP7_MLW_IND, 38, 2) as _A_SCAMP7_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP_MLW_IND, 38, 2) as _A_SCAMP_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP5_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP5_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP5_MLW_IND, 38, 2) as _N_SCAMP5_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP6_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP6_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP6_MLW_IND, 38, 2) as _N_SCAMP6_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP7_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP7_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP7_MLW_IND, 38, 2) as _N_SCAMP7_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP1_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP1_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP1_MLW_IND, 38, 2) as _N_SCAMP1_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP2_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP2_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP2_MLW_IND, 38, 2) as _N_SCAMP2_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP3_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP3_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP3_MLW_IND, 38, 2) as _N_SCAMP3_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP4_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP4_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP4_MLW_IND, 38, 2) as _N_SCAMP4_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP_MLW_IND, 38, 2) as _N_SCAMP_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MOUSE_MV_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_MOUSE_MV_MLW_DT,
    TRY_TO_NUMBER(_N_MOUSE_MV_MLW_IND, 38, 2) as _N_MOUSE_MV_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_5_RCNT_M100_DTS_1, 38, 2), '1960-01-01 00:00:00') as _N_5_RCNT_M100_DTS_1,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_5_RCNT_M100_DTS_2, 38, 2), '1960-01-01 00:00:00') as _N_5_RCNT_M100_DTS_2,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_5_RCNT_M100_DTS_3, 38, 2), '1960-01-01 00:00:00') as _N_5_RCNT_M100_DTS_3,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_5_RCNT_M100_DTS_4, 38, 2), '1960-01-01 00:00:00') as _N_5_RCNT_M100_DTS_4,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_5_RCNT_M100_DTS_5, 38, 2), '1960-01-01 00:00:00') as _N_5_RCNT_M100_DTS_5,
    _N_5_RCNT_M100S_1,
    _N_5_RCNT_M100S_2,
    _N_5_RCNT_M100S_3,
    _N_5_RCNT_M100S_4,
    _N_5_RCNT_M100S_5,
    TRY_TO_NUMBER(_N_M100_P8_IND, 38, 2) as _N_M100_P8_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_M100_P8_IND_DT, 38, 2), '1960-01-01 00:00:00') as _N_M100_P8_IND_DT,
    TRY_TO_NUMBER(_N_M100_P21_MLW_IND, 38, 2) as _N_M100_P21_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_M100_P22_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_M100_P22_MLW_DT,
    TRY_TO_NUMBER(_N_M100_P22_MLW_IND, 38, 2) as _N_M100_P22_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_M100_P23_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_M100_P23_MLW_DT,
    TRY_TO_NUMBER(_N_M100_P23_MLW_IND, 38, 2) as _N_M100_P23_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP20_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP20_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP20_MLW_IND, 38, 2) as _A_SCAMP20_MLW_IND,
    TRY_TO_NUMBER(_N_P20_7D_CNT_1, 38, 2) as _N_P20_7D_CNT_1,
    TRY_TO_NUMBER(_N_P20_7D_CNT_2, 38, 2) as _N_P20_7D_CNT_2,
    TRY_TO_NUMBER(_N_P20_7D_CNT_3, 38, 2) as _N_P20_7D_CNT_3,
    TRY_TO_NUMBER(_N_P20_7D_CNT_4, 38, 2) as _N_P20_7D_CNT_4,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_P20_7D_CNT_DT, 38, 2), '1960-01-01 00:00:00') as _N_P20_7D_CNT_DT,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_SCAMP21_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _A_SCAMP21_MLW_DT,
    TRY_TO_NUMBER(_A_SCAMP21_MLW_IND, 38, 2) as _A_SCAMP21_MLW_IND,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_SCAMP21_MLW_DT, 38, 2), '1960-01-01 00:00:00') as _N_SCAMP21_MLW_DT,
    TRY_TO_NUMBER(_N_SCAMP21_MLW_IND, 38, 2) as _N_SCAMP21_MLW_IND,
    _L_PUSH_API_1,
    _L_PUSH_API_2,
    _L_PUSH_API_3,
    _L_PUSH_API_4,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_1, 38, 2), '1960-01-01 00:00:00') as _L_PUSH_API_DT_1,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_2, 38, 2), '1960-01-01 00:00:00') as _L_PUSH_API_DT_2,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_3, 38, 2), '1960-01-01 00:00:00') as _L_PUSH_API_DT_3,
    TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_L_PUSH_API_DT_4, 38, 2), '1960-01-01 00:00:00') as _L_PUSH_API_DT_4,
    TRY_TO_NUMBER(substr(_l_Fingerprint_3,3,1),1.) as HOME_LOAN_IND,
    TRY_TO_NUMBER(substr(_l_Fingerprint_1,11,1),1.) as MORTGAGE_ACC,
    TRY_TO_NUMBER(substr(_l_Fingerprint_3,7,1),1.) as INCOME_BANDS,
    TRY_TO_NUMBER(substr(dtl_ex_0_20s_004,14,1),1.) as HOME_OWNER_STATUS,
    dtl_ex_0_30s_002,
    dtl_ex_0_80s_002,
    _L_POLICY_NM
from LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT a
left join PRD_P01_DMN_FRAUMD.LABMLFRD.DTL_FRAUDMASTER b
    on a.dtl_ex_0_20s_001 = b.rua_20byte_string_001
where mid_event_ts >= '20250501'
and mid_event_ts <= '20250801';",ZAIDIS2,R_USR_FRAUMD_LABMLFRD_RW,7438201,7438.201,123.970017,2.066167,2X-LARGE,32,66.117344
01bddfbe-3204-a61b-0000-c71d24f4852a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,20)",ACOE_CDL_PRD_Z01_CBIRBS_001,R_BAT_PRD_Z01_CBIRBS,1835236,1835.236,30.587267,0.509788,4X-LARGE,128,65.252864
01bddfac-3204-a61b-0000-c71d24f35d32,"execute notebook ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""GAREAJU 2025-05-28 13:40:55""()",GAREAJU,PUBLIC,7291034,7291.034,121.517233,2.025287,2X-LARGE,32,64.809184
01bdedf8-3204-aa25-0000-c71d2563dbfe,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1819317,1819.317,30.32195,0.505366,4X-LARGE,128,64.686848
01bed1b4-3204-c553-0000-c71d2c3cc4fe,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_merc_acqr_tran_prfl_agg7d as
(WITH date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-06-06'
    order by tran_d
),
hourly_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-06-06'
),
all_dates AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        ds.tran_d
    FROM
        (SELECT DISTINCT cust_i, merc_i, acqr_i FROM PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl where tran_d between '2025-03-01' and '2025-06-06') ca
    CROSS JOIN date_series ds
),
daily_data AS (
    SELECT
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates ad
    LEFT JOIN hourly_data hd
    ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d)
),
aggregated_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 6 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data
)
SELECT
    cust_i, -- as ssx_cust_num,
    merc_i,
    acqr_i,
    window_start_date,
    -- window_start_date + INTERVAL '2 days' AS window_end_date,

    COALESCE(CAST(CMA_SUM_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_UPST_APRD_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_UPST_DCLN_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_RULE_DCLN_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_FINL_APRD_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_UPST_APRD_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_FINL_APRD_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_FDP_RULE_TRIG_CNT_Q AS FLOAT), -1) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    COALESCE(CAST(CMA_SUM_DOMS_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_DOMS_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_OSEA_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_OSEA_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_DOMS_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_DOMS_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_OSEA_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_OSEA_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_3DS_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_3DS_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_N3D_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_N3D_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_3DS_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_3DS_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_N3D_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_N3D_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_CARD_PRES_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_ATM_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_ATM_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_FALL_BACK_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_CHIP_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_CHIP_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_PAY_PASS_TRAN_CNT_Q AS FLOAT), -1) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    COALESCE(CAST(CMA_SUM_CARD_PRES_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_ATM_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_ATM_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_FALL_BACK_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_CHIP_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_CHIP_TRAN_SUM_N,
    COALESCE(CAST(CMA_SUM_PAY_PASS_TRAN_SUM_N AS FLOAT), -1) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
    COALESCE(CAST(CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F AS FLOAT), -1) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    COALESCE(CAST(CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F AS FLOAT), -1) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    COALESCE(CAST(CMA_MAX_CUV_RULE_PUSH_SENT_F AS FLOAT), -1) AS CMA_MAX_CUV_RULE_PUSH_SENT_F,
    
    -- CMA_SUM_TRAN_CNT_Q,
    -- CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    -- CMA_SUM_TRAN_SUM_N,
    -- CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    -- CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    -- CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    -- CMA_SUM_UPST_APRD_TRAN_SUM_N,
    -- CMA_SUM_FINL_APRD_TRAN_SUM_N,
    -- CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    -- CMA_SUM_DOMS_TRAN_CNT_Q,
    -- CMA_SUM_OSEA_TRAN_CNT_Q,
    -- CMA_SUM_DOMS_TRAN_SUM_N,
    -- CMA_SUM_OSEA_TRAN_SUM_N,
    -- CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    -- CMA_SUM_3DS_TRAN_CNT_Q,
    -- CMA_SUM_N3D_TRAN_CNT_Q,
    -- CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    -- CMA_SUM_3DS_TRAN_SUM_N,
    -- CMA_SUM_N3D_TRAN_SUM_N,
    -- CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    -- CMA_SUM_ATM_TRAN_CNT_Q,
    -- CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    -- CMA_SUM_CHIP_TRAN_CNT_Q,
    -- CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    -- CMA_SUM_CARD_PRES_TRAN_SUM_N,
    -- CMA_SUM_ATM_TRAN_SUM_N,
    -- CMA_SUM_FALL_BACK_TRAN_SUM_N,
    -- CMA_SUM_CHIP_TRAN_SUM_N,
    -- CMA_SUM_PAY_PASS_TRAN_SUM_N,
    -- CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    -- CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    -- CMA_MAX_CUV_RULE_PUSH_SENT_F
FROM
    aggregated_data
ORDER BY
    cust_i,
    merc_i,
    acqr_i,
    window_start_date);",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,7256118,7256.118,120.9353,2.015588,2X-LARGE,32,64.498816
01bddfde-3204-a615-0000-c71d24f5b262,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,20)",ACOE_CDL_PRD_Z01_CBIRBS_001,R_BAT_PRD_Z01_CBIRBS,1806928,1806.928,30.115467,0.501924,4X-LARGE,128,64.246272
01be9c10-3204-bee2-0000-c71d2a897e8e,"create or replace table PRD_P01_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_20250825_cust_merc_acqr_tran_prfl_agg2d as
(WITH date_series AS (
    SELECT DISTINCT
        tran_d
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-07-01'
    order by tran_d
),
hourly_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        tran_d,
        TRAN_CNT_Q,
        UPST_APRD_TRAN_CNT_Q,
        UPST_DCLN_TRAN_CNT_Q,
        RULE_DCLN_TRAN_CNT_Q,
        FINL_APRD_TRAN_CNT_Q,
        TRAN_SUM_N,
        UPST_APRD_TRAN_SUM_N,
        FINL_APRD_TRAN_SUM_N,
        FDP_RULE_TRIG_CNT_Q,
        DOMS_TRAN_CNT_Q,
        OSEA_TRAN_CNT_Q,
        DOMS_TRAN_SUM_N,
        OSEA_TRAN_SUM_N,
        CARD_NOT_PRES_TRAN_CNT_Q,
        ""3DS_TRAN_CNT_Q"",
        N3D_TRAN_CNT_Q,
        CARD_NOT_PRES_TRAN_SUM_N,
        ""3DS_TRAN_SUM_N"",
        N3D_TRAN_SUM_N,
        CARD_PRES_TRAN_CNT_Q,
        ATM_TRAN_CNT_Q,
        FALL_BACK_TRAN_CNT_Q,
        CHIP_TRAN_CNT_Q,
        PAY_PASS_TRAN_CNT_Q,
        CARD_PRES_TRAN_SUM_N,
        ATM_TRAN_SUM_N,
        FALL_BACK_TRAN_SUM_N,
        CHIP_TRAN_SUM_N,
        PAY_PASS_TRAN_SUM_N,
        CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        CUV_FRAU_RULE_PUSH_SENT_F,
        CUV_RULE_PUSH_SENT_F
    FROM
        PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl
    where    
        tran_d between '2025-03-01' and '2025-07-01'
),
all_dates AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        ds.tran_d
    FROM
        (SELECT DISTINCT cust_i, merc_i, acqr_i FROM PRD_P01_DMN_FRAUMD.lcl.cust_merc_acqr_tran_prfl where tran_d between '2025-03-01' and '2025-07-01') ca
    CROSS JOIN date_series ds
),
daily_data AS (
    SELECT
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d) AS activity_day,
        COALESCE(SUM(hd.TRAN_CNT_Q), 0) AS DAILY_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_CNT_Q), 0) AS DAILY_UPST_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.TRAN_SUM_N), 0) AS DAILY_TRAN_SUM_N,
        COALESCE(SUM(hd.UPST_DCLN_TRAN_CNT_Q), 0) AS DAILY_UPST_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.RULE_DCLN_TRAN_CNT_Q), 0) AS DAILY_RULE_DCLN_TRAN_CNT_Q,
        COALESCE(SUM(hd.FINL_APRD_TRAN_CNT_Q), 0) AS DAILY_FINL_APRD_TRAN_CNT_Q,
        COALESCE(SUM(hd.UPST_APRD_TRAN_SUM_N), 0) AS DAILY_UPST_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FINL_APRD_TRAN_SUM_N), 0) AS DAILY_FINL_APRD_TRAN_SUM_N,
        COALESCE(SUM(hd.FDP_RULE_TRIG_CNT_Q), 0) AS DAILY_FDP_RULE_TRIG_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_CNT_Q), 0) AS DAILY_DOMS_TRAN_CNT_Q,
        COALESCE(SUM(hd.OSEA_TRAN_CNT_Q), 0) AS DAILY_OSEA_TRAN_CNT_Q,
        COALESCE(SUM(hd.DOMS_TRAN_SUM_N), 0) AS DAILY_DOMS_TRAN_SUM_N,
        COALESCE(SUM(hd.OSEA_TRAN_SUM_N), 0) AS DAILY_OSEA_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_NOT_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.""3DS_TRAN_CNT_Q""), 0) AS DAILY_3DS_TRAN_CNT_Q,
        COALESCE(SUM(hd.N3D_TRAN_CNT_Q), 0) AS DAILY_N3D_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_NOT_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_NOT_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.""3DS_TRAN_SUM_N""), 0) AS DAILY_3DS_TRAN_SUM_N,
        COALESCE(SUM(hd.N3D_TRAN_SUM_N), 0) AS DAILY_N3D_TRAN_SUM_N,
        COALESCE(SUM(hd.CARD_PRES_TRAN_CNT_Q), 0) AS DAILY_CARD_PRES_TRAN_CNT_Q,
        COALESCE(SUM(hd.ATM_TRAN_CNT_Q), 0) AS DAILY_ATM_TRAN_CNT_Q,
        COALESCE(SUM(hd.FALL_BACK_TRAN_CNT_Q), 0) AS DAILY_FALL_BACK_TRAN_CNT_Q,
        COALESCE(SUM(hd.CHIP_TRAN_CNT_Q), 0) AS DAILY_CHIP_TRAN_CNT_Q,
        COALESCE(SUM(hd.PAY_PASS_TRAN_CNT_Q), 0) AS DAILY_PAY_PASS_TRAN_CNT_Q,
        COALESCE(SUM(hd.CARD_PRES_TRAN_SUM_N), 0) AS DAILY_CARD_PRES_TRAN_SUM_N,
        COALESCE(SUM(hd.ATM_TRAN_SUM_N), 0) AS DAILY_ATM_TRAN_SUM_N,
        COALESCE(SUM(hd.FALL_BACK_TRAN_SUM_N), 0) AS DAILY_FALL_BACK_TRAN_SUM_N,
        COALESCE(SUM(hd.CHIP_TRAN_SUM_N), 0) AS DAILY_CHIP_TRAN_SUM_N,
        COALESCE(SUM(hd.PAY_PASS_TRAN_SUM_N), 0) AS DAILY_PAY_PASS_TRAN_SUM_N,
        COALESCE(MAX(hd.CUV_HIGH_RISK_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_FRAU_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_FRAU_RULE_PUSH_SENT_F,
        COALESCE(MAX(hd.CUV_RULE_PUSH_SENT_F), 0) AS DAILY_CUV_RULE_PUSH_SENT_F
    FROM
        all_dates ad
    LEFT JOIN hourly_data hd
    ON ad.cust_i = hd.cust_i AND ad.merc_i = hd.merc_i AND ad.acqr_i = hd.acqr_i AND ad.tran_d = hd.tran_d
    GROUP BY
        ad.cust_i,
        ad.merc_i,
        ad.acqr_i,
        DATE_TRUNC('day', ad.tran_d)
),
aggregated_data AS (
    SELECT
        cust_i,
        merc_i,
        acqr_i,
        activity_day AS window_start_date,
        SUM(DAILY_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_CNT_Q,
        SUM(DAILY_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_TRAN_SUM_N,
        SUM(DAILY_UPST_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
        SUM(DAILY_RULE_DCLN_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
        SUM(DAILY_FINL_APRD_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_CNT_Q,
        SUM(DAILY_UPST_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_UPST_APRD_TRAN_SUM_N,
        SUM(DAILY_FINL_APRD_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FINL_APRD_TRAN_SUM_N,
        SUM(DAILY_FDP_RULE_TRIG_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FDP_RULE_TRIG_CNT_Q,
        SUM(DAILY_DOMS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_CNT_Q,
        SUM(DAILY_OSEA_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_CNT_Q,
        SUM(DAILY_DOMS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_DOMS_TRAN_SUM_N,
        SUM(DAILY_OSEA_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_OSEA_TRAN_SUM_N,
        SUM(DAILY_CARD_NOT_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
        SUM(DAILY_3DS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_CNT_Q,
        SUM(DAILY_N3D_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_CNT_Q,
        SUM(DAILY_CARD_NOT_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
        SUM(DAILY_3DS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_3DS_TRAN_SUM_N,
        SUM(DAILY_N3D_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_N3D_TRAN_SUM_N,
        SUM(DAILY_CARD_PRES_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_CNT_Q,
        SUM(DAILY_ATM_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_CNT_Q,
        SUM(DAILY_FALL_BACK_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_CNT_Q,
        SUM(DAILY_CHIP_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_CNT_Q,
        SUM(DAILY_PAY_PASS_TRAN_CNT_Q) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_CNT_Q,
        SUM(DAILY_CARD_PRES_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CARD_PRES_TRAN_SUM_N,
        SUM(DAILY_ATM_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_ATM_TRAN_SUM_N,
        SUM(DAILY_FALL_BACK_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_FALL_BACK_TRAN_SUM_N,
        SUM(DAILY_CHIP_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_CHIP_TRAN_SUM_N,
        SUM(DAILY_PAY_PASS_TRAN_SUM_N) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_SUM_PAY_PASS_TRAN_SUM_N,
        MAX(DAILY_CUV_HIGH_RISK_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_FRAU_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
        MAX(DAILY_CUV_RULE_PUSH_SENT_F) OVER (PARTITION BY cust_i, merc_i, acqr_i ORDER BY activity_day ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING) AS CMA_MAX_CUV_RULE_PUSH_SENT_F
    FROM
        daily_data
)
SELECT
    cust_i, -- as ssx_cust_num,
    merc_i,
    acqr_i,
    window_start_date,
    -- window_start_date + INTERVAL '2 days' AS window_end_date,
    CMA_SUM_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_CNT_Q,
    CMA_SUM_TRAN_SUM_N,
    CMA_SUM_UPST_DCLN_TRAN_CNT_Q,
    CMA_SUM_RULE_DCLN_TRAN_CNT_Q,
    CMA_SUM_FINL_APRD_TRAN_CNT_Q,
    CMA_SUM_UPST_APRD_TRAN_SUM_N,
    CMA_SUM_FINL_APRD_TRAN_SUM_N,
    CMA_SUM_FDP_RULE_TRIG_CNT_Q,
    CMA_SUM_DOMS_TRAN_CNT_Q,
    CMA_SUM_OSEA_TRAN_CNT_Q,
    CMA_SUM_DOMS_TRAN_SUM_N,
    CMA_SUM_OSEA_TRAN_SUM_N,
    CMA_SUM_CARD_NOT_PRES_TRAN_CNT_Q,
    CMA_SUM_3DS_TRAN_CNT_Q,
    CMA_SUM_N3D_TRAN_CNT_Q,
    CMA_SUM_CARD_NOT_PRES_TRAN_SUM_N,
    CMA_SUM_3DS_TRAN_SUM_N,
    CMA_SUM_N3D_TRAN_SUM_N,
    CMA_SUM_CARD_PRES_TRAN_CNT_Q,
    CMA_SUM_ATM_TRAN_CNT_Q,
    CMA_SUM_FALL_BACK_TRAN_CNT_Q,
    CMA_SUM_CHIP_TRAN_CNT_Q,
    CMA_SUM_PAY_PASS_TRAN_CNT_Q,
    CMA_SUM_CARD_PRES_TRAN_SUM_N,
    CMA_SUM_ATM_TRAN_SUM_N,
    CMA_SUM_FALL_BACK_TRAN_SUM_N,
    CMA_SUM_CHIP_TRAN_SUM_N,
    CMA_SUM_PAY_PASS_TRAN_SUM_N,
    CMA_MAX_CUV_HIGH_RISK_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_FRAU_RULE_PUSH_SENT_F,
    CMA_MAX_CUV_RULE_PUSH_SENT_F
FROM
    aggregated_data
ORDER BY
    cust_i,
    merc_i,
    acqr_i,
    window_start_date);",SAIKIRKA,R_USR_FRAUMD_LABMLFRD_RW,14346484,14346.484,239.108067,3.985134,X-LARGE,16,63.762144
01be66f6-3204-b9c7-0000-c71d28e3917a,"WITH NPP_DATA AS (
    SELECT
        CONCAT(TGX_BANK_NUM,'~',TGX_BRANCH_ID,'~',TGX_ACCT_NUM) AS RCPI_ACCT_I,
        CONCAT('SAP~PT~+', LPAD(SSX_CUST_NUM, 10, 0)) as SSX_PATY_IDNN_BK,
        SSX_CUST_NUM as SENDER_ID,
        TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD') AS FNCL_TRAN_D,  
        TRY_TO_TIMESTAMP(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') as SNAP_D,
        _A_CAPP_REGISTRATIONS_CNT_1,     
        _A_CAPP_LOGON_CNT_1,
        _A_CAPP_REGO_1D_IND,
        _A_SCAM_VICTIM_FLAG,
        TGX_TRAN_AMT,
        -- Clean the fields
        CASE 
            WHEN TRIM(_A_CAPP_REGISTRATIONS_CNT_1) = '' OR TRIM(_A_CAPP_REGISTRATIONS_CNT_1) IS NULL 
            THEN NULL 
            ELSE TRY_CAST(_A_CAPP_REGISTRATIONS_CNT_1 AS DOUBLE) 
        END AS clean_capp_reg,
        CASE 
            WHEN TRIM(_A_CAPP_LOGON_CNT_1) = '' OR TRIM(_A_CAPP_LOGON_CNT_1) IS NULL 
            THEN NULL 
            ELSE TRY_CAST(_A_CAPP_LOGON_CNT_1 AS DOUBLE) 
        END AS clean_capp_logon,
        CASE 
            WHEN TRIM(_A_SCAM_VICTIM_FLAG) = '' OR TRIM(_A_SCAM_VICTIM_FLAG) IS NULL 
            THEN NULL 
            ELSE TRY_CAST(_A_SCAM_VICTIM_FLAG AS DOUBLE) 
        END AS clean_scam_flag,
        CASE 
            WHEN TRIM(TGX_TRAN_AMT) = '' OR TRIM(TGX_TRAN_AMT) IS NULL 
            THEN NULL 
            ELSE TRY_CAST(TGX_TRAN_AMT AS DOUBLE) 
        END AS clean_amount
    FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE SNAP_D >= '2025-01-01'
      AND SNAP_D < '2025-07-01'
      AND HDR_SOURCE = 'NPP OUT'
      AND TGX_BANK_NUM <> ''
      AND TGX_BRANCH_ID <> ''
      AND TGX_ACCT_NUM <> ''
      AND TTS_TRAN_DATE_ALT IS NOT NULL
),

-- Self-join approach for 1-hour features
features_1h AS (
    SELECT 
        current_txn.RCPI_ACCT_I,
        current_txn.SSX_PATY_IDNN_BK,
        current_txn.SENDER_ID,
        current_txn.FNCL_TRAN_D,
        current_txn.SNAP_D,
        current_txn.clean_amount,
        
        -- 1-hour aggregations
        MAX(hist.clean_capp_reg) as MAX_SEND_CAPP_REGR_1H,
        SUM(COALESCE(hist.clean_capp_reg, 0)) as TOTL_SEND_CAPP_REGR_1H,
        COUNT(hist.clean_capp_reg) as CNT_SEND_CAPP_REGR_1H,
        
        MIN(hist.clean_capp_logon) as MIN_SEND_CAPP_LOGN_1H,
        MAX(hist.clean_capp_logon) as MAX_SEND_CAPP_LOGN_1H,
        SUM(COALESCE(hist.clean_capp_logon, 0)) as TOTL_SEND_CAPP_LOGN_1H,
        COUNT(hist.clean_capp_logon) as CNT_SEND_CAPP_LOGN_1H,
        
        SUM(CASE WHEN hist._A_CAPP_REGO_1D_IND = '1' THEN 1 ELSE 0 END) as TOTL_SEND_NEW_CAPP_REGR_1D_1H,
        COUNT(hist._A_CAPP_REGO_1D_IND) as CNT_SEND_NEW_CAPP_REGR_1D_1H,
        
        MAX(hist.clean_scam_flag) as MAX_SEND_SCAM_VCTM_1H,
        SUM(CASE WHEN hist.clean_scam_flag = 1 THEN 1 ELSE 0 END) as TOTL_SEND_SCAM_VCTM_1H,
        COUNT(hist.clean_scam_flag) as CNT_SEND_SCAM_VCTM_FLAG_1H,
        
        MIN(hist.clean_amount) as MIN_FNCL_TRAN_1H,
        MAX(hist.clean_amount) as MAX_FNCL_TRAN_1H,
        SUM(COALESCE(hist.clean_amount, 0)) as TOTL_FNCL_TRAN_1H,
        COUNT(hist.clean_amount) as CNT_FNCL_TRAN_AMT_1H,
        
        -- Sender diversity
        COUNT(DISTINCT hist.SENDER_ID) as UNIQUE_SENDERS_TO_RECIPIENT_1H
        
    FROM NPP_DATA current_txn
    LEFT JOIN NPP_DATA hist ON current_txn.RCPI_ACCT_I = hist.RCPI_ACCT_I
                              AND hist.SNAP_D < current_txn.SNAP_D
                              AND hist.SNAP_D >= DATEADD(HOUR, -1, current_txn.SNAP_D)
    GROUP BY 
        current_txn.RCPI_ACCT_I, current_txn.SSX_PATY_IDNN_BK, current_txn.SENDER_ID,
        current_txn.FNCL_TRAN_D, current_txn.SNAP_D, current_txn.clean_amount
),

-- Self-join approach for 24-hour features
features_24h AS (
    SELECT 
        current_txn.RCPI_ACCT_I,
        current_txn.SENDER_ID,
        current_txn.SNAP_D,
        
        -- 24-hour aggregations
        MAX(hist.clean_capp_reg) as MAX_SEND_CAPP_REGR_24H,
        SUM(COALESCE(hist.clean_capp_reg, 0)) as TOTL_SEND_CAPP_REGR_24H,
        COUNT(hist.clean_capp_reg) as CNT_SEND_CAPP_REGR_24H,
        
        MIN(hist.clean_capp_logon) as MIN_SEND_CAPP_LOGN_24H,
        MAX(hist.clean_capp_logon) as MAX_SEND_CAPP_LOGN_24H,
        SUM(COALESCE(hist.clean_capp_logon, 0)) as TOTL_SEND_CAPP_LOGN_24H,
        COUNT(hist.clean_capp_logon) as CNT_SEND_CAPP_LOGN_24H,
        
        SUM(CASE WHEN hist._A_CAPP_REGO_1D_IND = '1' THEN 1 ELSE 0 END) as TOTL_SEND_NEW_CAPP_REGR_1D_24H,
        COUNT(hist._A_CAPP_REGO_1D_IND) as CNT_SEND_NEW_CAPP_REGR_1D_24H,
        
        MAX(hist.clean_scam_flag) as MAX_SEND_SCAM_VCTM_24H,
        SUM(CASE WHEN hist.clean_scam_flag = 1 THEN 1 ELSE 0 END) as TOTL_SEND_SCAM_VCTM_24H,
        COUNT(hist.clean_scam_flag) as CNT_SEND_SCAM_VCTM_FLAG_24H,
        
        MIN(hist.clean_amount) as MIN_FNCL_TRAN_24H,
        MAX(hist.clean_amount) as MAX_FNCL_TRAN_24H,
        SUM(COALESCE(hist.clean_amount, 0)) as TOTL_FNCL_TRAN_24H,
        COUNT(hist.clean_amount) as CNT_FNCL_TRAN_AMT_24H,
        
        -- Sender diversity and frequency
        COUNT(DISTINCT hist.SENDER_ID) as UNIQUE_SENDERS_TO_RECIPIENT_24H,
        COUNT(CASE WHEN hist.SENDER_ID = current_txn.SENDER_ID THEN 1 END) as SENDER_TO_RECIPIENT_FREQ_24H
        
    FROM NPP_DATA current_txn
    LEFT JOIN NPP_DATA hist ON current_txn.RCPI_ACCT_I = hist.RCPI_ACCT_I
                              AND hist.SNAP_D < current_txn.SNAP_D
                              AND hist.SNAP_D >= DATEADD(HOUR, -24, current_txn.SNAP_D)
    GROUP BY 
        current_txn.RCPI_ACCT_I, current_txn.SENDER_ID, current_txn.SNAP_D
)

SELECT
    f1.RCPI_ACCT_I,
    f1.SSX_PATY_IDNN_BK,
    f1.SENDER_ID,
    f1.FNCL_TRAN_D,  
    f1.SNAP_D,
    f1.clean_amount,
    
    -- === 1-HOUR FEATURES ===
    COALESCE(f1.MAX_SEND_CAPP_REGR_1H, -9999999999) AS MAX_SEND_CAPP_REGR_1H,
    COALESCE(f1.TOTL_SEND_CAPP_REGR_1H, 0) AS TOTL_SEND_CAPP_REGR_1H,
    COALESCE(f1.CNT_SEND_CAPP_REGR_1H, 0) AS CNT_SEND_CAPP_REGR_1H,
    
    COALESCE(f1.MIN_SEND_CAPP_LOGN_1H, 9999999999) AS MIN_SEND_CAPP_LOGN_1H,
    COALESCE(f1.MAX_SEND_CAPP_LOGN_1H, -9999999999) AS MAX_SEND_CAPP_LOGN_1H,
    COALESCE(f1.TOTL_SEND_CAPP_LOGN_1H, 0) AS TOTL_SEND_CAPP_LOGN_1H,
    COALESCE(f1.CNT_SEND_CAPP_LOGN_1H, 0) AS CNT_SEND_CAPP_LOGN_1H,
    
    COALESCE(f1.TOTL_SEND_NEW_CAPP_REGR_1D_1H, 0) AS TOTL_SEND_NEW_CAPP_REGR_1D_1H,
    COALESCE(f1.CNT_SEND_NEW_CAPP_REGR_1D_1H, 0) AS CNT_SEND_NEW_CAPP_REGR_1D_1H,
    
    COALESCE(f1.MAX_SEND_SCAM_VCTM_1H, -9999999999) AS MAX_SEND_SCAM_VCTM_1H,
    COALESCE(f1.TOTL_SEND_SCAM_VCTM_1H, 0) AS TOTL_SEND_SCAM_VCTM_1H,
    COALESCE(f1.CNT_SEND_SCAM_VCTM_FLAG_1H, 0) AS CNT_SEND_SCAM_VCTM_FLAG_1H,
    
    COALESCE(f1.MIN_FNCL_TRAN_1H, 9999999999) AS MIN_FNCL_TRAN_1H,
    COALESCE(f1.MAX_FNCL_TRAN_1H, -9999999999) AS MAX_FNCL_TRAN_1H,
    COALESCE(f1.TOTL_FNCL_TRAN_1H, 0) AS TOTL_FNCL_TRAN_1H,
    COALESCE(f1.CNT_FNCL_TRAN_AMT_1H, 0) AS CNT_FNCL_TRAN_AMT_1H,
    
    -- === 24-HOUR FEATURES ===
    COALESCE(f24.MAX_SEND_CAPP_REGR_24H, -9999999999) AS MAX_SEND_CAPP_REGR_24H,
    COALESCE(f24.TOTL_SEND_CAPP_REGR_24H, 0) AS TOTL_SEND_CAPP_REGR_24H,
    COALESCE(f24.CNT_SEND_CAPP_REGR_24H, 0) AS CNT_SEND_CAPP_REGR_24H,
    
    COALESCE(f24.MIN_SEND_CAPP_LOGN_24H, 9999999999) AS MIN_SEND_CAPP_LOGN_24H,
    COALESCE(f24.MAX_SEND_CAPP_LOGN_24H, -9999999999) AS MAX_SEND_CAPP_LOGN_24H,
    COALESCE(f24.TOTL_SEND_CAPP_LOGN_24H, 0) AS TOTL_SEND_CAPP_LOGN_24H,
    COALESCE(f24.CNT_SEND_CAPP_LOGN_24H, 0) AS CNT_SEND_CAPP_LOGN_24H,
    
    COALESCE(f24.TOTL_SEND_NEW_CAPP_REGR_1D_24H, 0) AS TOTL_SEND_NEW_CAPP_REGR_1D_24H,
    COALESCE(f24.CNT_SEND_NEW_CAPP_REGR_1D_24H, 0) AS CNT_SEND_NEW_CAPP_REGR_1D_24H,
    
    COALESCE(f24.MAX_SEND_SCAM_VCTM_24H, -9999999999) AS MAX_SEND_SCAM_VCTM_24H,
    COALESCE(f24.TOTL_SEND_SCAM_VCTM_24H, 0) AS TOTL_SEND_SCAM_VCTM_24H,
    COALESCE(f24.CNT_SEND_SCAM_VCTM_FLAG_24H, 0) AS CNT_SEND_SCAM_VCTM_FLAG_24H,
    
    COALESCE(f24.MIN_FNCL_TRAN_24H, 9999999999) AS MIN_FNCL_TRAN_24H,
    COALESCE(f24.MAX_FNCL_TRAN_24H, -9999999999) AS MAX_FNCL_TRAN_24H,
    COALESCE(f24.TOTL_FNCL_TRAN_24H, 0) AS TOTL_FNCL_TRAN_24H,
    COALESCE(f24.CNT_FNCL_TRAN_AMT_24H, 0) AS CNT_FNCL_TRAN_AMT_24H,
    
    -- === SENDER ANALYSIS FEATURES ===
    COALESCE(f1.UNIQUE_SENDERS_TO_RECIPIENT_1H, 0) as UNIQUE_SENDERS_TO_RECIPIENT_1H,
    COALESCE(f24.UNIQUE_SENDERS_TO_RECIPIENT_24H, 0) as UNIQUE_SENDERS_TO_RECIPIENT_24H,
    COALESCE(f24.SENDER_TO_RECIPIENT_FREQ_24H, 0) as SENDER_TO_RECIPIENT_FREQ_24H

FROM features_1h f1
LEFT JOIN features_24h f24 ON f1.RCPI_ACCT_I = f24.RCPI_ACCT_I 
                             AND f1.SENDER_ID = f24.SENDER_ID 
                             AND f1.SNAP_D = f24.SNAP_D

WHERE f1.SNAP_D IS NOT NULL
ORDER BY f1.RCPI_ACCT_I, f1.SNAP_D;",DEHURYSK,PUBLIC,1782710,1782.71,29.711833,0.495197,4X-LARGE,128,63.385216
01be56db-3204-b365-0000-c71d285e81d2,"call MLOP_SP_MODL_RUNR(to_date('2025-08-13','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,7068830,7068.83,117.813833,1.963564,2X-LARGE,32,62.834048
01be783f-3204-bb76-0000-c71d2974c72e,"select 
    A.DTL_EX_0_20S_001, 
    A.ssx_cust_num,
    (A.dtl_ex_0_n_064 || A.dtl_ex_0_n_065 || A.dtl_ex_0_n_066) as TRAN_ID,
    CAST(A.dtl_ex_0_n_034 as DOUBLE) as score_baseline,
    B.*,
    from PRD_P01_DMN_FRAUMD.LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT A
    inner join (select * from PRD_P01_DMN_FRAUMD.LABMLFRD.techds_dehurysk_digital_retro_scam_20250805202111_scor) B
    on TRAN_ID = B.tran_id",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,1765049,1765.049,29.417483,0.490291,4X-LARGE,128,62.757248
01bddf2c-3204-a614-0000-c71d24f0a266,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""I_7BWEOF10N4E50V""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,1756916,1756.916,29.281933,0.488032,4X-LARGE,128,62.468096
01beedf0-3204-c93b-0000-c71d2d0bfffa,"create or replace table FRD_ECV_NM_H20 as 
WITH DEVICE_VENDOR AS (
--added to include a view of Capp Device Vendor/Telstra Device Vendor mismatch
select dtl_ex_0_20s_001
,TRIM(CHL_ID_DEVICE_ID)::variant AS CHL_ID_DEVICE_ID_
,ARRAY_CONSTRUCT(_A_PROF_CAPP_DEVICE_1,_A_PROF_CAPP_DEVICE_2,_A_PROF_CAPP_DEVICE_3,_A_PROF_CAPP_DEVICE_4,_A_PROF_CAPP_DEVICE_5) AS DEVICE_ID_ARRAY
,CASE WHEN CHL_ID_DEVICE_ID IS NOT NULL AND CHL_ID_DEVICE_ID != '' THEN ARRAY_POSITION(CHL_ID_DEVICE_ID_, DEVICE_ID_ARRAY) ELSE NULL END AS DEV_ARRAY_POS
            ,ARRAY_CONSTRUCT(_A_PROF_CAPP_DEVICE_VENDOR_1,_A_PROF_CAPP_DEVICE_VENDOR_2,_A_PROF_CAPP_DEVICE_VENDOR_3,_A_PROF_CAPP_DEVICE_VENDOR_4,_A_PROF_CAPP_DEVICE_VENDOR_5) AS DEVICE_VENDOR_ARRAY
            ,UPPER(GET(DEVICE_VENDOR_ARRAY, DEV_ARRAY_POS)::varchar) AS CAPP_DEVICE_VENDOR
        from        LCL.FDP_DIGITAL_NONMONETARY_TRANSACTIONS_SEND_FLAT a 
        where   mid_event_ts >= '20250101'
        AND     mid_event_ts < '20250901'
        AND LEFT(dtl_ex_1_5s_01, 1) = 'C'
        )
        
SELECT 
to_timestamp(TTS_TRAN_DATE_ALT || ' ' || TTS_TRAN_TIME_ALT, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
DEV.CAPP_DEVICE_VENDOR
SSX_CUST_NUM, 
SSX_CUST_NAME,
dtl_ex_1_5s_01, 
TGX_TRAN_AMT,
SUBSTR(dtl_ex_1_5s_01, 1, 1) as tran_made_on_cApp,
_l_acc_amt_1d,
_l_acc_amt_1h,
_l_acc_amt_2h,
_l_acc_amt_4h,
_l_acc_amt_7d,
_l_accel_event_cnt,
_l_alt_tab_cnt,
_l_and_id_age,
_l_anon_status,
_l_asn_age,
_l_bcksp_cnt,
_l_browser_age,
_l_city_age,
_l_clipb_copy_cnt,
_l_clipb_cut_cnt,
_l_clipb_event_cnt,
_l_clipb_paste_cnt,
_l_cntry_age,
_l_ctrl_tab_cnt,
_l_days_lst_dev_and,
_l_days_lst_dev_ios,
_l_days_lst_dev_js,
_l_days_lst_new_cookie,
_l_dbl_click_cnt,
_l_delete_cnt,
_l_dev_fam,
_l_dev_fam_age,
_l_dev_source,
_l_f_func_cnt,
_l_gyro_event_cnt,
_l_ip_age,
_l_ip_city,
_l_ip_cntry_code,
_l_ip_geo_ip,
_l_ip_geo_lat,
_l_ip_geo_long,
_l_ip_geo_state,
_l_is_f12,
_l_is_lh_int,
_l_is_on_call,
_l_is_priv_brows,
_l_is_rh_int,
_l_isp_age,
_l_lalt_cnt,
_l_lang_1,
_l_lang_2,
_l_lang_3,
_l_lcmd_cnt,
_l_lctrl_cnt,
_l_left_click_cnt,
_l_lshift_cnt,
_l_lst_proxy,
_l_mins_lst_lgn_capped,
_l_mouse_cnt,
_l_num_sess_2h,
_l_num_sess_4h,
_l_orient_event_cnt,
_l_overlap_sess_diff_dev,
_l_paste_in_login_cnt,
_l_priv_browsing_cnt,
_l_proxy_lvl,
_l_proxy_type,
_l_prt_scrn_cnt,
_l_ralt_cnt,
_l_rcmd_cnt,
_l_rctrl_cnt,
_l_right_click_cnt,
_l_rshift_cnt,
_l_scrn_h,
_l_scrn_w,
_l_sess_cnt_mob_browser,
_l_sess_cnt_mob_sdk,
_l_sess_cnt_web,
_l_shift_tab_cnt,
_l_swipe_cnt,
_l_tab_cnt,
_l_tap_cnt,
_l_time_zone,
_l_total_sess_cnt,
_l_touch_cnt,
_l_trvl_spd,
_l_uid_age,
_l_g_con_dev,
_l_g_con_ip,
_l_g_con_wifi,
_l_g_fluid_typing_pi,
_l_g_gen_payee,
_l_g_no_delay_to_input_pi,
_l_g_prev_used_pi,
_l_bc_event_dt,
_l_sess_id,
_l_policy_action,
_l_policy_nm,
_l_max_30d_score,
_l_bc_muid,
_l_policy_id,
_l_recip_ftp,
_l_adv_key_combo,
_l_app_togg,
_l_concurrent_sess,
_l_dev_tools,
_l_dev_change_anom,
_l_export_data,
_l_fast_traveler,
_l_frd_mac_adrs,
_l_hi_dead_time,
_l_import_export_pi,
_l_input_otp_delay,
_l_ip_mismatch_anomaly,
_l_is_active_call,
_l_is_soc_eng_rat,
_l_new_asn,
_l_new_browser,
_l_new_dev,
_l_new_dev_con_ip,
_l_new_ip,
_l_new_payee,
_l_new_user,
_l_nhuman_mouse_bhv,
_l_rare_browser,
_l_rare_cores,
_l_rare_cores_anomaly,
_l_rat_in_sess,
_l_rcnt_pmt_settings_ch,
_l_rcnt_prof_settings_ch,
_l_rcnt_req_loan,
_l_rcnt_risky_dev,
_l_risky_amt,
_l_risky_apps,
_l_risky_browser,
_l_risky_elements_int,
_l_risky_guid,
_l_risky_import_export,
_l_risky_ip,
_l_risky_isp,
_l_risky_key_combo,
_l_risky_payee,
_l_risky_wifi,
_l_tzone_mismatch,
_l_dom_hand_ch_anomaly,
_l_deleting_pi,
_l_ft_rat_app_inst,
_l_import_data,
_l_import_pi_data,
_l_is_long_sess,
_l_is_rcnt_hrisk_sess,
_l_key_mouse_anomaly,
_l_lgn_import_anomaly,
_l_delay_to_input_pi,
_l_low_fam_contact_det,
_l_mouse_doodl,
_l_new_browser_anomaly,
_l_new_desktop_user,
_l_new_mob_app_user,
_l_new_mob_browser_user,
_l_new_payee_per_user,
_l_os_ch_anomaly,
_l_priv_browsing_anomaly,
_l_type_patterns_anomaly,
_l_rcnt_linked_dev,
_l_rcnt_linked_ip,
_l_risky_import,
_l_seg_typing_pi,
_l_sim_ip_cntry_mismatch,
_l_is_bot,
_l_is_emu,
_l_is_mlw,
_l_is_mob_rat,
_l_is_rat,
_l_is_rcnt_rat,
_l_voice_scam,
_l_platform,
_l_bc_sess_cnt,
_l_bc_sess_id,
_l_m_m_1,
_l_m_m_2,
_l_m_m_3,
_l_m_m_4,
_l_m_m_5,
_l_first_rat_dt,
_l_prev_rat_dt,
_l_rat_cnt_1,
_l_rat_cnt_2,
_l_rat_cnt_3,
_l_rat_cnt_4,
_l_rat_check,
_l_score_1,
_l_score_2,
_l_score_3,
_l_score_4,
_l_score_5,
_l_score_dt_1,
_l_score_dt_2,
_l_score_dt_3,
_l_score_dt_4,
_l_score_dt_5,
_l_rare_scrn_sz,
_l_lrg_dist_known_loc,
_l_clpbrd_evnt,
_l_new_lang,
_l_scrn_res_anom,
_l_accum_amt_anom,
_l_frst_proxy,
_l_drag_n_drop,
_l_pmt_vloc_anom,
_l_flat_phone,
_l_rcnt_hi_scr_on_dev,
_l_g_con_geoloc,
_l_g_accum_amt,
_l_bank_num,
_l_acct_num,
_l_pmt_descr,
_l_pmt_amt,
_l_bpay_biller,
_l_bpay_crn,
_N_MII_ASSOC_NUM_CNT
        , _N_MII_AV_IN_CALL
        , _N_MII_AV_OUT_CALL
        , _N_MII_BRANCH_INT
        , _N_MII_CALLEE_CNT
        , _N_MII_CALLR_CNT
        , _N_MII_CALL_ACTIV
        , _N_MII_CALL_INACTIV
        , _N_MII_CUST_TENURE
        , _N_MII_DATA_ACTIV
        , _N_MII_DATA_INACTIV
        , _N_MII_DATA_USE_CH
        , _N_MII_DEV_BRAND
        , _N_MII_DEV_CNT
        , _N_MII_DEV_MNTHS
        , _N_MII_DWELL_MATCH
        , TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_N_MII_EVENT_DT, 38, 2), '1960-01-01 00:00:00') AS _N_MII_EVENT_DT
        , _N_MII_HOME_PCODE
        , _N_MII_INB_SMS_CH
        , _N_MII_IN_CALL_CH
        , _N_MII_IN_CALL_CNT
        , _N_MII_IN_SMS_CNT
        , _N_MII_LOYALTY
        , _N_MII_MULT_PROD
        , _N_MII_NAME_MATCH
        , _N_MII_NEW_CALLEE_RATIO
        , _N_MII_NEW_CALLR_RATIO
        , _N_MII_NEW_RECIP_RATIO
        , _N_MII_NEW_SENDER_RATIO
        , _N_MII_OUT_CALL_CH
        , _N_MII_OUT_CALL_CNT
        , _N_MII_OUT_SMS_CH
        , _N_MII_OUT_SMS_CNT
        , _N_MII_PCODES_VISITED
        , _N_MII_PCODE_MATCH
        , _N_MII_SERV_CNT
        , _N_MII_SERV_TENURE
        , _N_MII_SERV_TYPE
        , _N_MII_SERV_USAGE
        , _N_MII_SIM_SWAP
        , _N_MII_SIM_SWAP_DT
        , _N_MII_SMS_ACTIV
        , _N_MII_SMS_INACTIV
        , _N_MII_SMS_RECIP_CNT
        , _N_MII_SMS_SENDER_CNT
FROM  LCL.FDP_DIGITAL_NONMONETARY_TRANSACTIONS_SEND_FLAT as a
LEFT JOIN DEVICE_VENDOR AS DEV
        ON DEV.dtl_ex_0_20s_001 = a.dtl_ex_0_20s_001
WHERE SSX_CUST_NUM IS NOT NULL
AND mid_event_ts >= TO_CHAR(TIMESTAMPADD(month, -($trainingPeriod + 1), TO_DATE($testingStart, 'YYYY-MM-DD')), 'YYYYMMDDHH24MISSFF6') 
AND mid_event_ts < TO_CHAR(LAST_DAY(TO_DATE($testingStart, 'YYYY-MM-DD')), 'YYYYMMDDHH24MISSFF6')
AND dtl_ex_1_5s_01 in ('N508B', 'N509B', 'N510B', 'N511B','C517B', 'N522B','N524B','O001B')
;",GOENKAPR,R_USR_FRAUMD_LABMLFRD_RW,13836381,13836.381,230.60635,3.843439,X-LARGE,16,61.495024
01be3abb-3204-b363-0000-c71d27864986,"call MLOP_SP_MODL_RUNR(to_date('2025-08-08','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1709539,1709.539,28.492317,0.474872,4X-LARGE,128,60.783616
01bea0cf-3204-bee2-0000-c71d2aacd46a,"(WITH code1_data AS (
    SELECT DISTINCT
--         TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME,
-- (dtl_ex_0_n_064 || dtl_ex_0_n_065 || dtl_ex_0_n_066) as TRAN_ID,
-- TO_DATE(SUBSTR(TTS_TRAN_DATE_ALT, 1, 8), 'YYYYMMDD') AS tran_d,
-- TO_DATE(SUBSTR(mid_event_ts, 1, 8), 'YYYYMMDD') as evnt_d,
-- TO_DATE(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') as SSX_SNAP_D,
-- CONCAT(TGX_BANK_NUM,'~',TGX_BRANCH_ID,'~',TGX_ACCT_NUM) AS RCPI_ACCT_I,
-- CONCAT('SAP~PT~+', LPAD(SSX_CUST_NUM, 10, 0)) as SSX_PATY_IDNN_BK,

TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF') as TRANSACTIONDATETIME
,(dtl_ex_0_n_064 || dtl_ex_0_n_065 || dtl_ex_0_n_066) as TRAN_ID
,TO_DATE(MID_EVENT_TS, 'YYYYMMDDHH24MISSFF') as SSX_SNAP_D
        ,CONCAT(TGX_BANK_NUM,'~',TGX_BRANCH_ID,'~',TGX_ACCT_NUM) AS RCPI_ACCT_I
        ,CONCAT('SAP~PT~+', LPAD(SSX_CUST_NUM, 10, 0)) as SSX_PATY_IDNN_BK
        ,TO_DATE(SUBSTR(TTS_TRAN_DATE_ALT, 1, 8), 'YYYYMMDD') AS tran_d
-- ,tts_tran_date_alt
-- ,tts_tran_time_alt
,dtl_ex_0_20s_001
-- ,dtl_ex_1_5s_01
,SSX_CUST_NUM
,COALESCE(TRY_TO_NUMBER(tgx_tran_amt, 38, 2), -1) as TRAN_AMT
,COALESCE(TRY_TO_NUMBER(_l_max_30d_score, 38, 2), -1) as _L_MAX_30D_SCORE
,COALESCE(TRY_TO_NUMBER(_l_bc_score, 38, 2), -1) as _L_BC_SCORE
,COALESCE(TRY_TO_NUMBER(_l_max_30d_mule_score, 38, 2), -1) as _L_MAX_30D_MULE_SCORE

,COALESCE(TRY_TO_NUMBER(_l_adv_key_combo, 38, 2), -1) as _L_ADV_KEY_COMBO
,COALESCE(TRY_TO_NUMBER(_l_clpbrd_evnt, 38, 2), -1) as _L_CLPBRD_EVNT
,COALESCE(TRY_TO_NUMBER(_l_concurrent_sess, 38, 2), -1) as _L_CONCURRENT_SESS
,COALESCE(TRY_TO_NUMBER(_l_export_data, 38, 2), -1) as _L_EXPORT_DATA
,COALESCE(TRY_TO_NUMBER(_l_import_data, 38, 2), -1) as _L_IMPORT_DATA
,COALESCE(TRY_TO_NUMBER(_l_rat_in_sess, 38, 2), -1) as _L_RAT_IN_SESS
,COALESCE(TRY_TO_NUMBER(_l_is_rcnt_hrisk_sess, 38, 2), -1) as _L_IS_RCNT_HRISK_SESS
-- ,COALESCE(TRY_TO_NUMBER(_l_lrg_dist_known_loc, 38, 2), -1) as _L_LRG_DIST_KNOWN_LOC -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_l_rare_scrn_sz, 38, 2), -1) as _L_RARE_SCRN_SZ -- Not in feature list
--,COALESCE(TRY_TO_NUMBER(_l_risky_isp, 38, 2), -1) as _L_RISKY_ISP
--,COALESCE(TRY_TO_NUMBER(_l_tzone_mismatch, 38, 2), -1) as _L_TZONE_MISMATCH
,COALESCE(TRY_TO_NUMBER(_l_scrn_broadcast, 38, 2), -1) as _L_SCRN_BROADCAST
,COALESCE(TRY_TO_NUMBER(_l_delay_to_input_pi, 38, 2), -1) as _L_DELAY_TO_INPUT_PI
,COALESCE(TRY_TO_NUMBER(_l_active_spoofing, 38, 2), -1) as _L_ACTIVE_SPOOFING
,COALESCE(TRY_TO_NUMBER(_l_pmt_vloc_anom, 38, 2), -1) as _L_PMT_VLOC_ANOM
-- ,COALESCE(TRY_TO_NUMBER(_l_rcnt_hi_scr_on_dev, 38, 2), -1) as _L_RCNT_HI_SCR_ON_DEV -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_l_accum_amt_anom, 38, 2), -1) as _L_ACCUM_AMT_ANOM
-- ,COALESCE(TRY_TO_NUMBER(_l_is_active_call, 38, 2), -1) as _L_IS_ACTIVE_CALL -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_l_is_long_sess, 38, 2), -1) as _L_IS_LONG_SESS
-- ,COALESCE(TRY_TO_NUMBER(_l_type_patterns_anomaly, 38, 2), -1) as _L_TYPE_PATTERNS_ANOMALY -- Not in feature list
--,COALESCE(TRY_TO_NUMBER(_l_seg_typing_pi, 38, 2), -1) as _L_SEG_TYPING_PI
,COALESCE(TRY_TO_NUMBER(_L_TRUST_900, 38, 2), -1) as _L_TRUST_900
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_1000, 38, 2), -1) as _L_TRUST_1000 -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_L_TRUST_NEW_PAYEE, 38, 2), -1) as _L_TRUST_NEW_PAYEE
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_UNUSED_PAYEE, 38, 2), -1) as _L_TRUST_UNUSED_PAYEE -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_PAYEE_HIGH_VLOC_IN, 38, 2), -1) as _L_TRUST_PAYEE_HIGH_VLOC_IN -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_L_TRUST_PAYEE_DORM_ACCT, 38, 2), -1) as _L_TRUST_PAYEE_DORM_ACCT
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYEE, 38, 2), -1) as _L_TRUST_RCNT_HI_ATO_AS_PAYEE
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_ATO_AS_PAYER, 38, 2), -1) as _L_TRUST_RCNT_HI_ATO_AS_PAYER
,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYEE, 38, 2), -1) as _L_TRUST_RCNT_HI_SES_AS_PAYEE
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYER, 38, 2), -1) as _L_TRUST_RCNT_HI_SES_AS_PAYER -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYEE, 38, 2), -1) as _L_TRUST_RCNT_HI_MS_AS_PAYEE -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_L_TRUST_RCNT_HI_MS_AS_PAYER, 38, 2), -1) as _L_TRUST_RCNT_HI_MS_AS_PAYER -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_l_cust_scamrisk_score, 38, 2), -1) as _L_CUST_SCAMRISK_SCORE
,COALESCE(TRY_TO_NUMBER(_b_recip_sum_short, 38, 2), -1) as _B_RECIP_SUM_SHORT
,COALESCE(TRY_TO_NUMBER(_b_recip_sum_long, 38, 2), -1) as _B_RECIP_SUM_LONG
-- ,COALESCE(TRY_TO_NUMBER(_b_recip_ftp_cnt_short, 38, 2), -1) as _B_RECIP_FTP_CNT_SHORT -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_b_recip_ftp_cnt_long, 38, 2), -1) as _B_RECIP_FTP_CNT_LONG -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_a_customer_age, 38, 2), -1) as _A_CUSTOMER_AGE
,COALESCE(TRY_TO_NUMBER(_a_cust_sum_aaa_short, 38, 2), -1) as _A_CUST_SUM_AAA_SHORT
,COALESCE(TRY_TO_NUMBER(_a_cust_sum_aaa_long, 38, 2), -1) as _A_CUST_SUM_AAA_LONG
,COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_3, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_4, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_5, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_6, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_cnt_7, 38, 2),0) as FTP_CNT_7DAYS
,COALESCE(TRY_TO_NUMBER(_a_ftp_sum_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_3, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_4, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_5, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_6, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_ftp_sum_7, 38, 2),0) as FTP_SUM_7DAYS
,COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_nb_logons_cnt_3, 38, 2),0) as NB_LOGONS_CNT_3M
,COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_1, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_2, 38, 2),0) +
COALESCE(TRY_TO_NUMBER(_a_capp_logon_cnt_3, 38, 2),0) as CAPP_LOGONS_CNT_3M
,COALESCE(TRY_TO_NUMBER(_x_cif_recipient_new_sum, 38, 2),0) as _X_CIF_RECIPIENT_NEW_SUM,
------------------
-- Keep other columns as VARCHAR (mostly text)
--,COALESCE(CAST(_A_CAPP_REGO_IND AS VARCHAR(50)), '-1') as _A_CAPP_REGO_IND,
COALESCE(CAST(_A_CUST_LINK_SUM_AAA_3 AS VARCHAR(50)), '-1') as _A_CUST_LINK_SUM_AAA_3,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_3 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_3,
COALESCE(CAST(_A_CAPP_REGO_1D_IND AS VARCHAR(50)), '-1') as _A_CAPP_REGO_1D_IND,
COALESCE(CAST(_L_PMT_AMT AS VARCHAR(50)), '-1') as _L_PMT_AMT,
-- ,COALESCE(CAST(_A_ACCT_AGG_FLAG AS VARCHAR(50)), '-1') as _A_ACCT_AGG_FLAG -- Not in feature list
COALESCE(CAST(_X_NPP_OUT_SUM_DATE AS VARCHAR(50)), '-1') as _X_NPP_OUT_SUM_DATE,
COALESCE(CAST(_B_NB_HRISK_BILLER_SUM_1 AS VARCHAR(50)), '-1') as _B_NB_HRISK_BILLER_SUM_1,
COALESCE(CAST(_L_ACC_AMT_1D AS VARCHAR(50)), '-1') as _L_ACC_AMT_1D,
COALESCE(CAST(_L_SCORE_3 AS VARCHAR(50)), '-1') as _L_SCORE_3,
COALESCE(CAST(_B_RECIP_SUM_AAA_6 AS VARCHAR(50)), '-1') as _B_RECIP_SUM_AAA_6,
COALESCE(CAST(_A_CLIENT_CITY_7 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_7,
COALESCE(CAST(_L_ACC_AMT_1H AS VARCHAR(50)), '-1') as _L_ACC_AMT_1H,
COALESCE(CAST(_A_BTS_WDL_SUM_LONG AS VARCHAR(50)), '-1') as _A_BTS_WDL_SUM_LONG,
COALESCE(CAST(_L_SCORE_4 AS VARCHAR(50)), '-1') as _L_SCORE_4,
-- ,COALESCE(CAST(_B_RECIP_SUM_1 AS VARCHAR(50)), '-1') as _B_RECIP_SUM_1 -- Not in feature list
COALESCE(CAST(_L_NEW_PAYEE_PER_USER AS VARCHAR(50)), '-1') as _L_NEW_PAYEE_PER_USER,
COALESCE(CAST(_A_CLIENT_CITY_2 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_2,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_2 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_2,
COALESCE(CAST(_L_BC_SESS_CNT AS VARCHAR(50)), '-1') as _L_BC_SESS_CNT,
COALESCE(CAST(_A_CSE_CHG_DWL_NEW_AMT AS VARCHAR(50)), '-1') as _A_CSE_CHG_DWL_NEW_AMT,
COALESCE(CAST(_A_CLIENT_CITY_1 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_1,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_5 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_5,
COALESCE(CAST(_L_MINS_LST_LGN_CAPPED AS VARCHAR(50)), '-1') as _L_MINS_LST_LGN_CAPPED,
COALESCE(CAST(_B_RECIP_SUM_AAA_7 AS VARCHAR(50)), '-1') as _B_RECIP_SUM_AAA_7,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_2 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_2,
COALESCE(CAST(_A_CLIENT_CITY_10 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_10,
COALESCE(CAST(_L_NUM_SESS_2H AS VARCHAR(50)), '-1') as _L_NUM_SESS_2H,
-- ,COALESCE(CAST(_L_NEW_PAYEE AS VARCHAR(50)), '-1') as _L_NEW_PAYEE -- Not in feature list
COALESCE(CAST(_N_CUST_TXN_COUNT AS VARCHAR(50)), '-1') as _N_CUST_TXN_COUNT,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_3 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_3,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_NFTP_1 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_NFTP_1,
-- ,COALESCE(CAST(_A_CURR_CAPP_DEVICE_VENDOR AS VARCHAR(100)), '-1') as _A_CURR_CAPP_DEVICE_VENDOR -- Not in feature list
COALESCE(CAST(_A_NPP_FTP_SUM2 AS VARCHAR(50)), '-1') as _A_NPP_FTP_SUM2,
COALESCE(CAST(_A_CLIENT_CITY_6 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_6,
COALESCE(CAST(_B_CLIENT_POSTCODE_CNT_1 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_CNT_1,
COALESCE(CAST(_A_CURR_CAPP_DEVICE_NFTP_CNT AS VARCHAR(50)), '-1') as _A_CURR_CAPP_DEVICE_NFTP_CNT,
COALESCE(CAST(_A_NPP_OUT_SUM_1 AS VARCHAR(50)), '-1') as _A_NPP_OUT_SUM_1,
COALESCE(CAST(_A_CLIENT_CITY_8 AS VARCHAR(100)), '-1') as _A_CLIENT_CITY_8,
COALESCE(CAST(_N_CRYPTO_RECIPIENT_CNT AS VARCHAR(50)), '-1') as _N_CRYPTO_RECIPIENT_CNT,
COALESCE(CAST(_N_H_2 AS VARCHAR(50)), '-1') as _N_H_2,
COALESCE(CAST(_A_GEO_DISTANCE AS VARCHAR(50)), '-1') as _A_GEO_DISTANCE,
COALESCE(CAST(_N_CAPP_LOGONS_CNT_1 AS VARCHAR(50)), '-1') as _N_CAPP_LOGONS_CNT_1,
COALESCE(CAST(_N_CAPP_LINKED_CNT_2 AS VARCHAR(50)), '-1') as _N_CAPP_LINKED_CNT_2,
COALESCE(CAST(_B_CLIENT_POSTCODE_SUM_4 AS VARCHAR(50)), '-1') as _B_CLIENT_POSTCODE_SUM_4,
COALESCE(CAST(_X_CIF_REC_SUM AS VARCHAR(50)), '-1') as _X_CIF_REC_SUM,
COALESCE(CAST(_L_M_L_C AS VARCHAR(50)), '-1') as _L_M_L_C,
COALESCE(CAST(_A_MULTI_CNT AS VARCHAR(50)), '-1') as _A_MULTI_CNT,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_NFTP_3 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_NFTP_3,
COALESCE(CAST(_N_CUST_STATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_CUST_STATE_IP_ACTIVITY,
COALESCE(CAST(_A_MRISK_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_MRISK_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_3 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_3,
COALESCE(CAST(_N_RP_SES_IP_1 AS VARCHAR(50)), '-1') as _N_RP_SES_IP_1,
COALESCE(CAST(_A_CAPP_REGO_IP_COUNTRY AS VARCHAR(50)), '-1') as _A_CAPP_REGO_IP_COUNTRY,
COALESCE(CAST(_A_CUST_STATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_CUST_STATE_IP_ACTIVITY,
COALESCE(CAST(_A_LOGON_NB_IP_CNTRY AS VARCHAR(50)), '-1') as _A_LOGON_NB_IP_CNTRY,
COALESCE(CAST(_A_MRISK_FOREIGN_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_MRISK_FOREIGN_IP_TASK_ID,
COALESCE(CAST(_A_DEVCIE_GEO_LAT_AVG_INCL AS VARCHAR(50)), '-1') as _A_DEVCIE_GEO_LAT_AVG_INCL,
COALESCE(CAST(_N_INTERSTATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_INTERSTATE_IP_ACTIVITY,
COALESCE(CAST(_N_INTERSTATE_IP_STATE AS VARCHAR(50)), '-1') as _N_INTERSTATE_IP_STATE,
COALESCE(CAST(_N_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_INTERSTATE_IP_STATE AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_STATE,
COALESCE(CAST(_A_INTERSTATE_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_ACTIVITY,
COALESCE(CAST(_A_IS_IP_DT_2 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_2,
COALESCE(CAST(_A_INTERSTATE_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_INTERSTATE_IP_TASK_ID,
COALESCE(CAST(_A_IS_IP_DT_1 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_1,
COALESCE(CAST(_A_SAFE_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_SAFE_CUST_LATITUDE,
COALESCE(CAST(_A_CURR_CAPP_DEVICE_LATT AS VARCHAR(50)), '-1') as _A_CURR_CAPP_DEVICE_LATT,
COALESCE(CAST(_A_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _A_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_N_HRISK_FOREIGN_IP_ACTIVITY AS VARCHAR(50)), '-1') as _N_HRISK_FOREIGN_IP_ACTIVITY,
COALESCE(CAST(_A_IS_IP_DT_3 AS VARCHAR(50)), '-1') as _A_IS_IP_DT_3,
COALESCE(CAST(_A_CURR_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_CURR_CUST_LATITUDE,
COALESCE(CAST(_N_CLOUD_SERV_LATEST_LOGON_DT AS VARCHAR(50)), '-1') as _N_CLOUD_SERV_LATEST_LOGON_DT,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_1 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_1,
COALESCE(CAST(_A_PROF_CAPP_DEVICE_LATT_2 AS VARCHAR(50)), '-1') as _A_PROF_CAPP_DEVICE_LATT_2,
COALESCE(CAST(_A_FOREIGN_IP_TASK_ID AS VARCHAR(50)), '-1') as _A_FOREIGN_IP_TASK_ID,
COALESCE(CAST(_A_PREV_CUST_LATITUDE AS VARCHAR(50)), '-1') as _A_PREV_CUST_LATITUDE
--newly added
-- ,COALESCE(TRY_TO_NUMBER(_l_risky_key_combo, 38, 2), -1) as _L_RISKY_KEY_COMBO -- Not in feature list
-- ,COALESCE(TRY_TO_NUMBER(_l_keyb_nav_anom, 38, 2), -1) as _L_KEYB_NAV_ANOM -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_x_cif_recipient_new_cnt, 38, 2), -1) as _X_CIF_RECIPIENT_NEW_CNT
,COALESCE(TRY_TO_NUMBER(_x_telstra_last_call_dur, 38, 2),-1) as _X_TELSTRA_LAST_CALL_DUR
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_3, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_3
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_2, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_2
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_B_CLIENT_POSTCODE_4, '[^0-9.-]', '')), -1) as _B_CLIENT_POSTCODE_4
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_MRISK_FOREIGN_IP_CNTRY_CODE, '[^0-9.-]', '')), -1) as _A_MRISK_FOREIGN_IP_CNTRY_CODE,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_N_NEW_IP_LOGON_PCODE, '[^0-9.-]', '')), -1) as _N_NEW_IP_LOGON_PCODE,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_LOGON_198_IP_PC, '[^0-9.-]', '')), -1) as _A_LOGON_198_IP_PC,
COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(_A_LOGON_NB_IP_PC, '[^0-9.-]', '')), -1) as _A_LOGON_NB_IP_PC,
COALESCE(CAST(_X_LAST_N_TXN_COUNT AS VARCHAR(50)), '-1') as _X_LAST_N_TXN_COUNT,

COALESCE(TRY_TO_NUMBER(_a_telstra_tp_outbnd_count, 38, 2), -1) as _A_TELSTRA_TP_OUTBND_COUNT
-- ,COALESCE(TRY_TO_NUMBER(_A_TELSTRA_TP_NUM_SP, 38, 2),-1) as _A_TELSTRA_TP_NUM_SP -- Not in feature list

-------------------
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_2, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_2
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_3, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_3
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_4, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_4
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_b_open_last_payer_cif_dt_5, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _B_OPEN_LAST_PAYER_CIF_DT_5
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_new_capp_rego_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_NEW_CAPP_REGO_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cse_chg_dwl_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CSE_CHG_DWL_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_cif_establish_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CIF_ESTABLISH_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_nb_lastlogon_dt_1, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_NB_LASTLOGON_DT_1
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_curr_capp_device_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_CURR_CAPP_DEVICE_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_telstra_long_call, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_TELSTRA_LONG_CALL

,case when TIMESTAMPADD(day, TRY_TO_NUMBER(_a_crypto_last_pymnt_date, 38, 2), '1960-01-01'::date) > '2000-01-01'::date
      then datediff('day', TIMESTAMPADD(day, TRY_TO_NUMBER(_a_crypto_last_pymnt_date, 38, 2), '1960-01-01'::date),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))
      else -1
end as _A_CRYPTO_LAST_PYMNT_DATE
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp1_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP1_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp2_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP2_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp3_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP3_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp4_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP4_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp5_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP5_MLW_DT
-- ,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp6_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
--       then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp6_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
--                    TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
--       else -1
-- end as _N_SCAMP6_MLW_DT -- Not in feature list
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp7_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP7_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp10_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP10_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp20_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP20_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_scamp21_mlw_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_SCAMP21_MLW_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_P8_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p1_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_M100_APP_P1_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p5_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_APP_P5_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_a_m100_app_p8_ind_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _A_M100_APP_P8_IND_DT
,case when TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00'::timestamp) > '2000-01-01 00:00:00'::timestamp_ntz
      then datediff('second', TIMESTAMPADD(second, TRY_TO_NUMBER(_n_m100_app_p9_dt, 38, 2), '1960-01-01 00:00:00'::timestamp),
                   TO_TIMESTAMP(tts_tran_date_alt || ' ' || tts_tran_time_alt, 'YYYYMMDD HH24:MI:SS.FF'))/86400
      else -1
end as _N_M100_APP_P9_DT

,COALESCE(TRY_TO_NUMBER(_x_telstra_max_call_dur, 38, 2),-1) as _X_TELSTRA_MAX_CALL_DUR
-- ,COALESCE(TRY_TO_NUMBER(_a_telstra_active_call,38,2), -1) as _A_TELSTRA_ACTIVE_CALL -- Not in feature list
,COALESCE(TRY_TO_NUMBER(_a_telstra_tp_outbnd_avg_dur, 38, 2),-1) as _A_TELSTRA_TP_OUTBND_AVG_DUR
,COALESCE(TRY_TO_NUMBER(_a_telstra_multi_calls,38,2),-1) as _A_TELSTRA_MULTI_CALLS
,COALESCE(TRY_TO_NUMBER(_a_crypto_mnthly_sum, 38, 2),-1) as _A_CRYPTO_MNTHLY_SUM
--,substr(_l_fingerprint_1,1,1) as PARTY_TYPE
,substr(_l_fingerprint_1,2,1) as GENDER
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,5,1),1.),-1) as TRAN_ACCT_COUNT
-- ,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,11,1),1.),-1) as MORT_ACCT_COUNT -- Not in feature list
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,13,1),1.),-1) as BUSI_TRAN_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_Fingerprint_1,3,1),1.),-1) as DMC_COUNT
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,6,1),1.),-1) as DEPOSIT_ACCT_COUNT
-- ,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,7,1),1.),-1) as CC_ACCT_COUNT -- Not in feature list
,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,8,1),1.),-1) as TRADE_ACCT_COUNT
-- ,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,9,1),1.),-1) as PL_ACCT_COUNT -- Not in feature list
,substr(_l_fingerprint_2,5,2) as NAME_ORIG_ASSOC
-- ,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_1,12,1),1.),-1) as INSUR_ACCT_COUNT -- Not in feature list
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(substr(_l_fingerprint_2,1,2), '[^0-9.-]', '')), -1) as MAIN_FOREIGN_ASSOC
,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(substr(_l_fingerprint_3,1,1), '[^0-9.-]', '')), -1) as GOVT_BENEFITS
-- ,COALESCE(TRY_TO_NUMBER(REGEXP_REPLACE(substr(_l_fingerprint_3,2,1), '[^0-9.-]', '')), -1) as PRIV_PREM_CUST -- Not in feature list
,POWER(COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_3,12,2)),-1)/10,10) as BAL_LAST_MON
,POWER(COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_3,14,2)), -1)/10,10) as BAL_TWO_MON_AGO
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,1,3)),-1)/100) as GAMBLING_SPEND_LAST_YEAR
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,4,3)), -1)/100) as GAMBLING_SPEND_THREE_MON
,POWER(10,COALESCE(TRY_TO_NUMBER(substr(_l_fingerprint_4,7,3)), -1)/100) as GAMBLING_SPEND_ONE_MON

from        lcl.fdp_customer_transactions_send_flat
where   mid_event_ts >= '20241001'
and  mid_event_ts < '20250716'
-- and     dtl_ex_1_5s_01 in ('C205N'
							-- ,'C207N'
							-- ,'C242N'
							-- ,'C244N'
							-- ,'C246N'
							-- ,'N205N'
							-- ,'N207N'
							-- ,'N242N'
							-- ,'N244N'
							-- ,'N246N'
							-- ,'X232N'
							-- ,'X243N'
							-- ,'X246N')
and     hdr_source = 'NPP OUT'
and SSX_CUST_NUM <> ''
and SSX_CUST_NUM IS NOT NULL
and SSX_CUST_NUM <> 'Not Available'
and     tran_amt > 0
order by    transactiondatetime

),



code2_data AS (
    SELECT 
        PATY_IDNN_BK, 
        SNAP_D, 
        COALESCE(TRY_TO_NUMBER(DPAT_TOTL_DPAT_30D_BPAY_TRAN_A, 16, 2),-1) as DPAT_TOTL_DPAT_30D_BPAY_TRAN_A,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_DPAT_LAST_30D_BANK_INIT_TRAN_A, 16, 2),-1)  as DPAT_TOTL_DPAT_LAST_30D_BANK_INIT_TRAN_A,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_DPAT_LAST_30D_PENS_TRAN_A, 16, 2),-1)  as DPAT_TOTL_DPAT_LAST_30D_PENS_TRAN_A,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_PRSL_TRAN_FOOT_A, 16, 2),-1)  as DPAT_TOTL_PRSL_TRAN_FOOT_A,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_BUSN_TRAN_FOOT_A, 16, 2),-1)  as DPAT_TOTL_BUSN_TRAN_FOOT_A,
-- ,COALESCE(TRY_TO_NUMBER(DPAT_TOTL_TD_FOOT_A, 16, 2),-1)  as DPAT_TOTL_TD_FOOT_A -- Not in feature list
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_DPAT_LAST_30D_AVRG_FOOT_A, 16, 2),-1)  as DPAT_TOTL_DPAT_LAST_30D_AVRG_FOOT_A,
 COALESCE(TRY_TO_NUMBER(DPAT_DPAT_LAST_30D_POSV_BALN_MOVE_Q, 38, 0),-1)  as DPAT_DPAT_LAST_30D_POSV_BALN_MOVE_Q,
 --COALESCE(TRY_TO_NUMBER(DPAT_DPAT_LAST_30D_NEG_BALN_MOVE_Q, 38, 0),-1)  as DPAT_DPAT_LAST_30D_NEG_BALN_MOVE_Q,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_PRSL_TRAN_BALN_A, 16, 2),-1)  as DPAT_TOTL_PRSL_TRAN_BALN_A,
 COALESCE(TRY_TO_NUMBER(DPAT_TOTL_BUSN_TRAN_BALN_A, 16, 2),-1)  as DPAT_TOTL_BUSN_TRAN_BALN_A,
 COALESCE(TRY_TO_NUMBER(AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_1,38, 0),-1) as AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_1,
 COALESCE(TRY_TO_NUMBER(AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_30,38,0),-1) as AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_30,
        --DIGT_INTA_SNAP_D,
        COALESCE(TRY_TO_NUMBER(DPAT_TOTL_DPAT_LAST_30D_BPY_DIGT_DR_Q,38,0),-1) as DPAT_TOTL_DPAT_LAST_30D_BPY_DIGT_DR_Q,
        COALESCE(TRY_TO_NUMBER(DIGT_INTA_LAST_1_30_DAY_STMT_VIEW_Q,38,0),-1) as DIGT_INTA_LAST_1_30_DAY_STMT_VIEW_Q,
        -- ,COALESCE(TRY_TO_NUMBER(DIGT_INTA_LAST_1_30_DAY_HL_CALO_INTA_Q,38,0),-1) as DIGT_INTA_LAST_1_30_DAY_HL_CALO_INTA_Q -- Not in feature list
        -- ,COALESCE(TRY_TO_NUMBER(DIGT_INTA_LAST_1_30_DAY_HBAP_INTA_Q,38,0),-1) as DIGT_INTA_LAST_1_30_DAY_HBAP_INTA_Q -- Not in feature list
        COALESCE(TRY_TO_NUMBER(DIGT_INTA_LAST_1_30_DAY_GENL_HL_INTA_Q,38,0),-1) as DIGT_INTA_LAST_1_30_DAY_GENL_HL_INTA_Q,
        --DIGT_EVNT_SNAP_D,
        COALESCE(TRY_TO_NUMBER(DIGT_EVNT_DETL_LAST_1D_PAYT_PAGE_VSIT_Q,38,0),-1) as DIGT_EVNT_DETL_LAST_1D_PAYT_PAGE_VSIT_Q,
        COALESCE(TRY_TO_NUMBER(DIGT_EVNT_DETL_LAST_30D_PAYT_PAGE_VSIT_Q,38,0),-1) as DIGT_EVNT_DETL_LAST_30D_PAYT_PAGE_VSIT_Q
    FROM PRD_P01_DMN_CBIRBS.LCL.MLOP_FEAT_ATTR_PATY_FEAT_LTST where SNAP_D >= '2024-10-01'
    and SNAP_D < '2025-07-16'
)

SELECT 
    c1.*,
    -- Selected columns from code2
        c2.PATY_IDNN_BK, 
        c2.SNAP_D, 
        COALESCE((c2.DPAT_TOTL_DPAT_30D_BPAY_TRAN_A),-1) as DPAT_TOTL_DPAT_30D_BPAY_TRAN_A,
 COALESCE((c2.DPAT_TOTL_DPAT_LAST_30D_BANK_INIT_TRAN_A),-1) as DPAT_TOTL_DPAT_LAST_30D_BANK_INIT_TRAN_A,
 COALESCE((c2.DPAT_TOTL_DPAT_LAST_30D_PENS_TRAN_A),-1) as DPAT_TOTL_DPAT_LAST_30D_PENS_TRAN_A,
 COALESCE((c2.DPAT_TOTL_PRSL_TRAN_FOOT_A),-1) as DPAT_TOTL_PRSL_TRAN_FOOT_A,
 COALESCE((c2.DPAT_TOTL_BUSN_TRAN_FOOT_A),-1) as DPAT_TOTL_BUSN_TRAN_FOOT_A,
-- ,COALESCE((c2.DPAT_TOTL_TD_FOOT_A),-1) as DPAT_TOTL_TD_FOOT_A -- Not in feature list
 COALESCE((c2.DPAT_TOTL_DPAT_LAST_30D_AVRG_FOOT_A),-1) as DPAT_TOTL_DPAT_LAST_30D_AVRG_FOOT_A,
 COALESCE((c2.DPAT_DPAT_LAST_30D_POSV_BALN_MOVE_Q),-1) as DPAT_DPAT_LAST_30D_POSV_BALN_MOVE_Q,
 --COALESCE((c2.DPAT_DPAT_LAST_30D_NEG_BALN_MOVE_Q),-1) as DPAT_DPAT_LAST_30D_NEG_BALN_MOVE_Q,
 COALESCE((c2.DPAT_TOTL_PRSL_TRAN_BALN_A),-1) as DPAT_TOTL_PRSL_TRAN_BALN_A,
 COALESCE((c2.DPAT_TOTL_BUSN_TRAN_BALN_A),-1) as DPAT_TOTL_BUSN_TRAN_BALN_A,
 COALESCE((c2.AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_1),-1) as AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_1,
 COALESCE((c2.AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_30),-1) as AUTT_AUTN_EVNT_LOGIN_NUM_LOGIN_VIST_DAILY_30,
        --DIGT_INTA_SNAP_D,
        COALESCE((c2.DPAT_TOTL_DPAT_LAST_30D_BPY_DIGT_DR_Q),-1) as DPAT_TOTL_DPAT_LAST_30D_BPY_DIGT_DR_Q,
        COALESCE((c2.DIGT_INTA_LAST_1_30_DAY_STMT_VIEW_Q),-1) as DIGT_INTA_LAST_1_30_DAY_STMT_VIEW_Q,
        -- ,COALESCE((c2.DIGT_INTA_LAST_1_30_DAY_HL_CALO_INTA_Q),-1) as DIGT_INTA_LAST_1_30_DAY_HL_CALO_INTA_Q -- Not in feature list
        -- ,COALESCE((c2.DIGT_INTA_LAST_1_30_DAY_HBAP_INTA_Q),-1) as DIGT_INTA_LAST_1_30_DAY_HBAP_INTA_Q -- Not in feature list
        COALESCE((c2.DIGT_INTA_LAST_1_30_DAY_GENL_HL_INTA_Q),-1) as DIGT_INTA_LAST_1_30_DAY_GENL_HL_INTA_Q,
        --DIGT_EVNT_SNAP_D,
        COALESCE((c2.DIGT_EVNT_DETL_LAST_1D_PAYT_PAGE_VSIT_Q),-1) as DIGT_EVNT_DETL_LAST_1D_PAYT_PAGE_VSIT_Q,
        COALESCE((c2.DIGT_EVNT_DETL_LAST_30D_PAYT_PAGE_VSIT_Q),-1) as DIGT_EVNT_DETL_LAST_30D_PAYT_PAGE_VSIT_Q
    
    
FROM code1_data c1
-- LEFT JOIN recipient_data r2
-- ON c1.RCPI_ACCT_I = r2.RCPI_ACCT_ID
--Join with code2 using the NPP.SNAP_D >= RPF.SNAP_D condition
ASOF JOIN code2_data c2 
    MATCH_CONDITION(c1.SSX_SNAP_D >= c2.SNAP_D )
    ON c1.SSX_PATY_IDNN_BK = c2.PATY_IDNN_BK );",DEHURYSK,R_USR_FRAUMD_LABMLFRD_RW,6815071,6815.071,113.584517,1.893075,2X-LARGE,32,60.5784
01bde330-3204-a616-0000-c71d250f383a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1696086,1696.086,28.2681,0.471135,4X-LARGE,128,60.30528
01bdea38-3204-aa23-0000-c71d2545015a,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1692432,1692.432,28.2072,0.47012,4X-LARGE,128,60.17536
01bdeb28-3204-aa25-0000-c71d254be592,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1690009,1690.009,28.166817,0.469447,4X-LARGE,128,60.089216
01bdeba0-3204-aa20-0000-c71d254ee7aa,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1684630,1684.63,28.077167,0.467953,4X-LARGE,128,59.897984
01be4b9b-3204-b361-0000-c71d2801daf6,"call MLOP_SP_MODL_RUNR(to_date('2025-08-11','YYYY-MM-DD'), 'CarInsurance.mojo', ['None'], 'BV_RBS_PATY_M360_FEAT_LTST_CUEE_NBCV')",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,6718196,6718.196,111.969933,1.866166,2X-LARGE,32,59.717312
01be8ec0-3204-bee4-0000-c71d2a27e3c2,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,6716572,6716.572,111.942867,1.865714,2X-LARGE,32,59.702848
01be0838-3204-aca9-0000-c71d26180dfe,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1677289,1677.289,27.954817,0.465914,4X-LARGE,128,59.636992
01be1030-3204-ae50-0000-c71d265493b6,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1676875,1676.875,27.947917,0.465799,4X-LARGE,128,59.622272
01be0fb8-3204-ae4a-0000-c71d2651a366,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1672697,1672.697,27.878283,0.464638,4X-LARGE,128,59.473664
01be7d6b-3204-bc98-0000-c71d2999aeea,"execute streamlit ""PRD_P01_DMN_FRAUMD"".""LABMLFRD"".""Q2W1W74MRCJ0Q3J_""()",LISTONPE,R_USR_FRAUMD_LABMLFRD_RW,1671188,1671.188,27.853133,0.464219,4X-LARGE,128,59.420032
01bdeab0-3204-aa23-0000-c71d254814be,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1670103,1670.103,27.83505,0.463918,4X-LARGE,128,59.381504
01bde3a8-3204-a617-0000-c71d2510dfae,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1668821,1668.821,27.813683,0.463561,4X-LARGE,128,59.335808
01bde0d8-3204-a615-0000-c71d24fcc0e2,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1666510,1666.51,27.775167,0.462919,4X-LARGE,128,59.253632
01bde588-3204-a617-0000-c71d2520c2a6,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1663212,1663.212,27.7202,0.462003,4X-LARGE,128,59.136384
01be0b08-3204-aa20-0000-c71d262c4c6e,"call MLOP_SP_EMBED_RUNR('MLOP_EXEC_EMBD_MODL_INPT_SAP_CCS_ROBERTA_LTST_BTCH_VW','MLOP_EXEC_OPUT_TRAN_EMBD','ROBERTA_SAP_CCS_F152884E8BBD494AA0F5800F59240E5C_V1_NOTEBOOK','roberta_sap_ccs_f152884e8bbd494aa0f5800f59240e5c_v1',NULL,21)",ACOE_CDL_PRD_P01_CBIRBS_001,R_BAT_PRD_P01_CBIRBS,1663022,1663.022,27.717033,0.461951,4X-LARGE,128,59.129728
