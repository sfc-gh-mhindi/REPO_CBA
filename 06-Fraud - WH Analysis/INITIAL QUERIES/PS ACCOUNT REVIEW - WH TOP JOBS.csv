Wh EAC,Wh Avg Running,Wh >=75 Cost %,Wh >=75 Job %,Wh Max Clusters,Wh Queued %,Wh QAS Eligible %,Wh QAS Assisted %,Wh Name,Wh Size,User Group,Scan Size,Job Name,Users,>=75 Cost %,>=75 Script %,EAC,EAC %,Scripts,Script %,Jobs,Job %,SQLs,SQLs %,QAS Eligible,QAS Eligible %,QAS Assisted,QAS Assisted %,60+ Min Jobs,Timeouts,Daily Exec Min,Daily Scan GB,Daily Spill GB,Daily Write GB,Daily Write to Result GB,Daily Result Rows,Avg Exec Sec,Avg Queued Sec,Avg Scan GB,Avg Spill GB,Avg Spill Remote GB,Avg Network GB,Avg Write GB,Avg Query Ld,Avg Part Scanned,Partitions %,Blocked %,Avg Blocked Sec,Avg List Mins,From Cache %,Avg Result Write GB,Avg Result Read GB,Query Text Lines,Query Text CTEs,Avg Rows Produced,Avg Rows Inserted,Avg Rows Updatedr,Avg Rows Deleted,Avg Rows Unloaded
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE  OR  REPLACE    TABLE  LABMLFRD.TECHDS_MARVIN_CCA_WIDE_TRANS_PK_E<value>E_ENGINEER_TEST_<value>_<value>( CMX_TRAN_ID  STRING(<value>),  TTS_TRAN_DATE_ALT  STRING(<value>),  TTS_TRAN_TIME_ALT  STRING(<value>),  CHL_ID_CARD_NUM  STRING(<value>),  CHL_CT_ASSO_DEC_CODE  STRING(<value>),  DTL_CA_MERCH_AMT  DOUBLE,  DTL_CA_CLIENT_AMT  DOUBLE,  ATH_PC_POS  STRING(<value>),  RSP_EX_<value>_I_<value>  STRING(<value>),  RSP_EX_<value>_<value>S_<value>  STRING(<value>),  RSP_ACTION_CODE  STRING(<value>),  LAG_C_<value>WAY_CRD_FRD_RULE_FLAG  DOUBLE,  LAG_C_<value>WAY_CRD_HR_RULE_FLAG  DOUBLE)    AS  SELECT  *   FROM (          SELECT             TO_NUMBER(DTL_EX_<value>_N_<value>)||DTL_EX_<value>_N_<value>||DTL_EX_<value>_N_<value> AS CMX_TRAN_ID,             TTS_TRAN_DATE_ALT,              TTS_TRAN_TIME_ALT,             CHL_ID_CARD_NUM,             CHL_CT_ASSO_DEC_CODE,             DTL_CA_MERCH_AMT,             DTL_CA_CLIENT_AMT,             ATH_PC_POS,             RSP_EX_<value>_I_<value>, /* Sent an alert */             RSP_EX_<value>_<value>S_<value>, /* What type of alert */             RSP_ACTION_CODE,             LAG(_C_<value>WAY_CRD_FRD_RULE_FLAG) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) DESC) AS LAG_C_<value>WAY_CRD_FRD_RULE_FLAG,             LAG(_C_<value>WAY_CRD_HR_RULE_FLAG) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) DESC) AS LAG_C_<value>WAY_CRD_HR_RULE_FLAG         FROM             LCL.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT                   WHERE                 HDR_ACTIVITY_TYPE = <value>                  AND DTL_CA_AUTH_SYS_INFO NOT IN (<value>, <value>, <value>, <value>)                 AND LEFT(REPLACE(CHL_ID_CARD_NUM, <value>, <value>), <value>) != <value>                 AND DTL_CA_AUTH_SYS_DEC = <value>                  AND ATH_PC_POS IN (<value>, <value>, <value>, <value>, <value>, <value>, <value>)                 AND TTS_TRAN_DATE_ALT BETWEEN <value> AND <value>          )",1,100,100,20143.7,20.98,1,1.15,200,22.08,69,11.5,0,0,0,0,0,0,39.07,21246.6,0,19.2,1.24,186654575.43,82.05,5.55,743.63,0,0,1.76,0.67,93.52,109822.39,56,0,0,0,47,0.04,0,756.3,0,6598899.1,6375382.1,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"create or replace table PRD_P<value>_DMN_FRAUMD.labmlfrd.techds_vereniil_cretro_<value>_scored_<value> as  (select tran_id, -- dtl_ca_client_amt, -- ssx_cust_num, CARDS_RETRO_TEST_MOJO<value>(<value>,  array_construct( TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N<value>D_<value>D_SUM_<value>, _C_CRD_SAFE_MERCHANT, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_<value>, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_<value>, _A_NPP_FTP_SUM, _A_CUST_SUM_AAA_LONG, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _L_SCORE_<value>, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_<value>, _A_PROF_CAPP_DEVICE_CNT_<value>, _A_CRD_SCAM_SUPP_<value>D_SUM_<value>, _L_UID_AGE, _L_ASN_AGE, _L_SCORE_<value>, _L_BC_SESS_CNT, _L_ACC_AMT_<value>H, _A_P_L_<value>, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_<value>D, _A_CLIENT_COUNTRY_CNT_<value>, _L_SCORE_<value>, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _L_MAX_<value>D_SCORE, _L_SCRN_H, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _A_CLIENT_COUNTRY_CNT_<value>, _A_U, _L_SCM_RSK_SCR_<value>, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_<value>, _L_DAYS_LST_DEV_IOS, _A_T, _L_MINS_LST_LGN_CAPPED, _A_PROF_CAPP_DEVICE_CNT_<value>, _A_CLIENT_COUNTRY_CNT_<value>, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_R, _L_CNTRY_AGE, _A_TRANSPORT_REG_CNT_<value>, _A_MULTI_CNT, _A_PROF_CAPP_DEVICE_NFTP_<value>, _A_PROF_CAPP_DEVICE_CNT_<value>, _L_SESS_CNT_WEB, _L_IP_AGE, _A_NPP_INBOUND_SUM_AMT, _A_CLC_FTP_AMT, _L_TRVL_SPD, _L_SESS_CNT_MOB_BROWSER, _L_SCORE_<value>, _A_SCH_AMT, _A_P_L_<value>, _A_CUST_NPP_OUT_SUM_AAA_LONG, _A_VPN_VPS_IP_LOGON_COUNT, _A_GEO_DISTANCE, _L_DAYS_LST_DEV_JS, _A_ECV_DOCUMENT_IP, _A_CLIENT_CITY_<value>, _L_PUSH_API_<value>, _L_PUSH_API_<value>, _L_PUSH_API_<value>, _A_CLIENT_CITY_<value>, _L_NC_WINNING_ALG, _L_LANG_<value>, _L_LANG_<value>, _A_LATEST_NCRG_ISP, CHL_CT_TERM_OWNER_NAME, _C_CNP_MER_NM_CURR, DTL_EX_<value>_<value>S_<value>, DTL_EX_<value>_<value>S_<value>, _A_MRISK_FOREIGN_IP_CNTRY_CODE, DTL_CA_AUTH_SYS_DEC, CHL_CT_MER_MCC, ATH_PC_CUST_PRESENT, _A_CIF_ESTABLISH_CUST_PCODE, CHL_CT_TERM_CNTRY_CODE, DTL_CA_MERCH_CURR_CODE, DPST_CNT, CC_CNT, FA_<value>, NO_<value>, GOVT_BENE, MAR_STS_ORG_STR, _A_CC_DT_DIFF, _A_ONLINE_PL_DT_DIFF, _A_CIF_ESTABLISH_DT_DIFF, _A_ECV_DOCUMENT_DT_DIFF, _A_AUTO_DEC_CP_PP_DT_DIFF, _A_CAPP_NOTIFY_OPT_OUT_DT",1,100,100,11834.87,12.33,2,2.3,21,2.32,15,2.5,0,0,0,0,4,0,64.96,60.06,0,1.77,0.49,129042062,1299.21,0,20.02,0,0,13.79,0.59,62.71,1845.19,72,0,0,0,29,0.16,0,8,0,64521031,34411215.8,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"INSERT INTO LABMLFRD.CARD_TRAN_DAIS_DSPT ( -- CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_DAIS_DSPT AS (     WITH DSPT_POST AS (         SELECT             a.DSPT_TRAN_CRAT_S,             a.DSPT_TRAN_I,             a.ACCT_N,             CPNN_ACCT_N,             TOKN_ACCT_N,             TRAN_S,             TRAN_REFN_I,             TRAN_POST_S,             LPAD(TRAN_MERC_CATG_C, <value>, <value>) AS TRAN_MERC_CATG_C,             TRAN_AUTT_NUMB_X,             TRAN_C,             TRAN_ORIG_CNCY_C,             ABS(ROUND(TRAN_ORIG_A, <value>)) AS TRAN_ORIG_A,             TRAN_DEST_CNCY_C,             ABS(ROUND(TRAN_DEST_A, <value>)) AS TRAN_DEST_A,             REGEXP_REPLACE(UPPER(SUBSTR(TRAN_MERC_DETL_X, <value>, <value>)), <value>, <value>) AS TRAN_MERC_DETL_X,             VISA_MAIL_TELE_ORDR_C,             TRAN_CAHD_ACTV_TRML_C,             MCRD_INPT_MODE_C,             MCRD_AUTN_C,             MCRD_SECU_LEVL_INDA_C,             MCRD_UVRS_CAHD_AUTT_FIED_C,             INITCAP(SPLIT_PART(DSPT_TRAN_DCDE_X, <value>, <value>)) AS DSPT_TRAN_DCDE_X,             DDA_N,             DSPT_TRAN_PROS_C,                TRAN_TOKN_TYPE_X,             TRAN_CAHD_ACPT_IDNN_I,             TRAN_SYST_TRAC_AUDT_NUMB_I,             TRAN_RTRV_RQST_NUMB_C,             TRAN_POS_MODE_C,             TRAN_FALL_BACK_C,             MCRD_SECU_LEVL_INDA_X,             TRAN_ACTL_A,             TRAN_HOST_SWIT_S,             b.DSPT_CASE_I,             b.DSPT_CASE_EVNT_I,             b.DSPT_CASE_CRAT_I,             b.DSPT_CASE_CRAT_S,             b.DSPT_CASE_CLSE_S,             b.DSPT_CHNL_M,             b.DSPT_TYPE_X,             b.DSPT_CASE_USER_STUS_X,             b.DSPT_CASE_STUS_X,             b.DSPT_SRCE_SYST_M,             a.LOAD_TS         FROM             CNS.OMN_BV_RBS_NON_FNCL_TRAN_DSPT_DETL a         LEFT JOIN (             SELECT DSPT_CASE_I,                 ACCT_N,                 DSPT_TYPE_X,                 DSPT_CHNL_M,                 DSPT_SRCE_SYST_M,                 DSPT_TYPE_C,                 DSPT_CASE_EVNT_I,                 DSPT_CASE_STUS_X,                 DSPT_CASE_USER_STUS_X,                 DSPT_CASE_CRAT_I,                 DSPT_CASE_CRAT_S,                 DSPT_CASE_CLSE_S             FROM                 CNS.OMN_BV_RBS_SVRQ_DSPT_CASE_DETL             QUALIFY                 ROW_NUMBER() OVER (PARTITION BY DSPT_CASE_I ORDER BY DSPT_CASE_EVNT_I DESC)=<value>         ) b         ON             a.DSPT_CASE_EVNT_I = b.DSPT_CASE_EVNT_I         WHERE             TO_DATE(b.D",1,100,100,7988.28,8.32,1,1.15,4,0.44,3,0.5,0,0,0,0,2,0,40,4887.34,0,0.01,0,56001.71,4200.45,0,8552.84,0,0,11,0.02,100,1007300.5,100,0,0,0,25,0,0,128.8,1.5,98003,56440,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"create table PRD_P<value>_DMN_FRAUMD.LABMLFRD.MULE_INB_OFI_SHROFFPR as select    CASE     WHEN b.FRAUDTYPE = <value>     OR c.BAD = <value>      THEN <value>     ELSE <value>   END AS final_target,   SSX_CUST_NUM,   DTL_EX_<value>_<value>S_<value>,   TO_TIMESTAMP(TTS_TRAN_DATE_ALT || <value> || TTS_TRAN_TIME_ALT, <value>) as TRANSACTIONDATENTIME, EXTRACT(HOUR FROM TRANSACTIONDATENTIME) + EXTRACT(MINUTE FROM TRANSACTIONDATENTIME) / <value>.<value>  as TRANSACTION_HOUR, -- SPLIT as SPLI,   COALESCE(TRY_CAST(_l_pmt_amt AS FLOAT), -<value>) AS _l_pmt_amt,   COALESCE(TRY_CAST(_a_cust_avg_acct_bal AS FLOAT), -<value>) AS _a_cust_avg_acct_bal,   COALESCE(datediff(<value>, TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_x_npp_out_sum_date, <value>, <value>), <value>), TRANSACTIONDATENTIME), -<value>) AS     _x_npp_out_sum_date_diff, -- features extracted from fingerprints data case when substr(_L_FINGERPRINT_<value>, <value>, <value>) in(<value>, <value>) then substr(_L_FINGERPRINT_<value>, <value>, <value>) else <value> end as PARTY_TYPE, --  P  for personal,  O  for organisations, case when substr(_L_FINGERPRINT_<value>, <value>, <value>) in(<value>, <value>) then substr(_L_FINGERPRINT_<value>, <value>, <value>) else <value> end as GENDER, -- M or F     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as DMC_CNT, -- count of scheme debit cards     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as YCS_CNT, -- count of travel money cards     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as TRAN_CNT, -- count of personal txn accts    COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as DPST_CNT, -- count of money management accounts     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as CC_CNT, -- count of credit cards     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as TRD_CNT, -- count of trading accounts     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as PL_CNT, -- count of personal loan accounts     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as INVST_CNT, -- count of investment accounts     COALESCE(TRY_CAST(substr(_L_FINGERPRINT_<value>, <value>, <value>) as FLOAT), -<value>) as MORT_CNT, -- count of mortgage accounts     COALESCE(TRY_CAST(substr",1,100,100,6200.19,6.46,1,1.15,6,0.66,6,1,0,0,0,0,0,0,11.22,2665.08,0,12.75,0,55819659.71,785.41,0,3109.26,0,0,0.2,14.88,100,613828,89,0,0,0,33,0,0,204,0,65122936.3,65122935.3,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_FPF AS ( -- -- INSERT INTO LABMLFRD.CARD_TRAN_PRFL (     WITH TRAN AS (         SELECT             TO_NUMBER(DTL_EX_<value>_N_<value>)||DTL_EX_<value>_N_<value>||DTL_EX_<value>_N_<value> AS TRAN_I             , TO_CHAR(SSX_CUST_NUM) AS CUST_I         	, CHL_ID_CARD_NUM AS CARD_I         	, DTL_EX_<value>_<value>S_<value> AS DPAN_I             , TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) AS TRAN_S             , TRY_TO_DATE(TTS_TRAN_DATE_ALT, <value>) AS TRAN_D             , CAST(SUBSTR(TTS_TRAN_TIME_ALT,<value>,<value>) AS INT) AS TRAN_HOUR_T             , UPPER(TO_CHAR(TO_DATE(TTS_TRAN_DATE_ALT, <value>), <value>)) AS TRAN_DAY_X         	, CASE WHEN CHL_CT_MEDIA = <value> THEN <value> ELSE <value> END AS TOKN_F             , TRY_TO_DATE(ATH_PC_CARD_EXP_DATE, <value>) AS CARD_EXPY_D             , CASE WHEN CHL_CT_WHICH_CARD IN (<value>,<value>) THEN <value> ELSE <value> END AS PRIM_CAHD_F         	, DTL_CA_CLIENT_AMT AS TRAN_AMT_N         	, ATH_PC_POS AS POS_ENTR_C             , CASE WHEN DTL_CA_REVERSAL_IND = <value> THEN <value> ELSE <value> END AS REVS_INDA_F             , CASE WHEN ATH_PC_PIN_VRFY = <value> THEN <value> ELSE <value> END AS PIN_VRFY_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_CUST_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_MERC_F         	, CASE WHEN DTL_EX_<value>_I_<value> = <value> THEN <value> ELSE <value> END AS RCRR_F         	, DTL_EX_<value>_<value>S_<value> AS SECU_LEVL_INDA_C             , SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) AS ACCT_AUTT_V             , CASE WHEN ATH_PC_POS IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_NOT_PRES_INDA_F             , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS  <value>DS_INDA_F              , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS N<value>D_INDA_F             , CASE WHEN ATH_PC_POS NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_PRES_INDA_F          ",1,100,100,6122.92,6.38,2,2.3,44,4.86,32,5.33,1,2.27,0,0,0,0,10.4,3666.62,168.11,181.51,18.22,412498394.71,99.23,0.01,583.33,26.74,0,125.43,28.88,98.02,39662.59,4,0,0,0,50,2.9,0,241.2,0.5,70426555.2,55488969.8,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"WITH TOBY_EXTRACT AS (         SELECT              LAST_VALUE(id_key<value> IGNORE NULLS) OVER (partition by hqo_ob_userid order by tran_date, tran_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS ID_KEY             ,CASENUMBER             ,HQO_OB_USERID AS CUST_ID             ,TO_TIMESTAMP(transactiondatetime, <value>) AS transactiondatetime             ,TO_CHAR(TO_TIMESTAMP(transactiondatetime, <value>), <value>) AS DATE             ,TO_CHAR(TO_TIMESTAMP(transactiondatetime, <value>), <value>) AS TIME             ,RULE_NAME             ,RULE_DESC             ,STRATEGY_NAME             ,FRAUDTYPE             ,DESCRIPTION             ,FRAUD_TAG             ,COALESCE(CQF_RULE_O_ID,CQF_RULE_X_ID) AS RULE_FIRED             ,COALESCE(CQF_RULE_VERSION_O_NBR,CQF_RULE_VERSION_X_NBR) AS RULE_VERSION             ,RECIP_FIRST_DT             ,CMX_TRAN_ID             ,TPP_TRAN_AMT             ,LOSS             ,LHD AS DECISION             ,CASE                  WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 WHEN ACTIONTAKEN = <value> THEN <value>                 ELSE <value>             END AS ACTION_TAKEN         FROM LABMLFRD.TOBY_DIGI_EXTRACT<value> --updated extract          )         ,TOBY_SUMMARY AS (             SELECT                  CASENUMBER                 ,CUST_ID                 ,ACTION_TAKEN                 ,FRAUDTYPE                 ,COUNT(CMX_TRAN_ID) AS TOTAL_TRANS                 ,COUNT(CASE WHEN DESCRIPTION = <value> THEN <value> END) AS TOTAL_NON_MON                 ,COUNT(DISTINCT CASE WHEN LOSS = <value> THEN CMX_TRAN_ID END) AS TOTAL_APPROVED_TRANS                 ,SUM(CASE WHEN LOSS = <value> THEN TPP_TRAN_AMT END) AS TOTAL_SUM_APPROVED                  ,SUM(TPP_TRAN_AMT) AS TOTAL_SUM              FROM TOBY_EXTRACT             WHERE ACTION_TAKEN IS NOT NULL             AND FRAUDTYPE IS NOT NULL             GROUP BY <value>,<value>,<value>,<value>         )         ,SNOWFLAKE_DATA AS (             SELECT DISTINCT                  CONCAT(TO_DECIMAL(dtl_ex_<value>_n_<value>), dtl_ex_<valu",1,100,100,5152.78,5.37,1,1.15,13,1.43,10,1.67,0,0,0,0,0,0,8.67,4228.02,16.35,0,0,2767.86,280.2,0.01,2276.63,8.81,0,32.49,0,66.54,441750.15,45,0,0,0,31,0,0,105.3,0.6,1614.6,56,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE OR REPLACE TABLE LABMLFRD.CARD_TRAN_FPF AS ( -- INSERT INTO LABMLFRD.CARD_TRAN_PRFL (     WITH TRAN AS (         SELECT             TO_NUMBER(DTL_EX_<value>_N_<value>)||DTL_EX_<value>_N_<value>||DTL_EX_<value>_N_<value> AS TRAN_I             , TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) AS TRAN_S             , TO_DATE(TTS_TRAN_DATE_ALT, <value>) AS TRAN_D             , UPPER(TO_CHAR(DATE_TRUNC(<value>, TRAN_S), <value>)) AS TRAN_HOUR_DAY_X             , TO_CHAR(SSX_CUST_NUM) AS CUST_I         	, CHL_ID_CARD_NUM AS CARD_I             , ATH_PC_CARD_EXP_DATE         	, DTL_EX_<value>_<value>S_<value> AS DPAN_I         	, CASE WHEN CHL_CT_MEDIA = <value> THEN <value> ELSE <value> END AS TOKN_F             , CASE WHEN CHL_CT_WHICH_CARD IN (<value>,<value>) THEN <value> ELSE <value> END AS PRIM_CAHD_F         	, DTL_CA_CLIENT_AMT AS TRAN_AMT_N         	, ATH_PC_POS AS POS_ENTR_C             , CASE WHEN DTL_CA_REVERSAL_IND = <value> THEN <value> ELSE <value> END AS REVS_INDA_F             , CASE WHEN ATH_PC_PIN_VRFY = <value> THEN <value> ELSE <value> END AS PIN_VRFY_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_CUST_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_MERC_F         	, CASE WHEN DTL_EX_<value>_I_<value> = <value> THEN <value> ELSE <value> END AS RCRR_F         	, DTL_EX_<value>_<value>S_<value> AS SECU_LEVL_INDA_C             , SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) AS ACCT_AUTT_V             , CASE WHEN ATH_PC_POS IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_NOT_PRES_INDA_F             , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS  <value>DS_INDA_F              , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS N<value>D_INDA_F             , CASE WHEN ATH_PC_POS NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_PRES_INDA_F             , CASE WHEN CARD_PRES_INDA_F = <value> AND CHL_CT_MER_MCC = <value> THEN <value> ELSE <value> END AS ATM_TRAN_F             , CA",1,100,100,4399.81,4.58,1,1.15,6,0.66,6,1,0,0,0,0,0,0,5.52,2162.21,138.27,99.16,0,170739962,386.07,0.07,2522.58,161.32,0,539.1,115.69,100,187539.5,19,0,0,0,17,0,0,242,3.8,199196622.3,198657507.3,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"WITH TRAN AS (         SELECT             TO_NUMBER(DTL_EX_<value>_N_<value>)||DTL_EX_<value>_N_<value>||DTL_EX_<value>_N_<value> AS TRAN_I             , TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) AS TRAN_S             , TO_DATE(TTS_TRAN_DATE_ALT, <value>) AS TRAN_D             , UPPER(TO_CHAR(DATE_TRUNC(<value>, TRAN_S), <value>)) AS TRAN_HOUR_DAY_X             , SSX_CUST_NUM AS CUST_I         	, CHL_ID_CARD_NUM AS CARD_I             , ATH_PC_CARD_EXP_DATE         	, DTL_EX_<value>_<value>S_<value> AS DPAN_I         	, CASE WHEN CHL_CT_MEDIA = <value> THEN <value> ELSE <value> END AS TOKN_F             , CASE WHEN CHL_CT_WHICH_CARD IN (<value>,<value>) THEN <value> ELSE <value> END AS PRIM_CAHD_F         	, DTL_CA_CLIENT_AMT AS TRAN_AMT_N         	, ATH_PC_POS AS POS_ENTR_C             , CASE WHEN DTL_CA_REVERSAL_IND = <value> THEN <value> ELSE <value> END AS REVS_INDA_F             , CASE WHEN ATH_PC_PIN_VRFY = <value> THEN <value> ELSE <value> END AS PIN_VRFY_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_CUST_F         	, CASE WHEN SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) = <value> THEN <value> ELSE <value> END AS PAIN_MERC_F         	, CASE WHEN DTL_EX_<value>_I_<value> = <value> THEN <value> ELSE <value> END AS RCRR_F         	, DTL_EX_<value>_<value>S_<value> AS SECU_LEVL_INDA_C             , SUBSTR(DTL_EX_<value>_<value>S_<value>,<value>,<value>) AS ACCT_AUTT_V             , CASE WHEN ATH_PC_POS IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_NOT_PRES_INDA_F             , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS  <value>DS_INDA_F              , CASE WHEN CARD_NOT_PRES_INDA_F = <value> AND DTL_EX_<value>_<value>S_<value> NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS N<value>D_INDA_F             , CASE WHEN ATH_PC_POS NOT IN (<value>,<value>,<value>,<value>,<value>,<value>,<value>) THEN <value> ELSE <value> END AS CARD_PRES_INDA_F             , CASE WHEN CARD_PRES_INDA_F = <value> AND CHL_CT_MER_MCC = <value> THEN <value> ELSE <value> END AS ATM_TRAN_F             , CASE WHEN POS_ENTR_C IN (<value>,<value>,<value>) AND CHL_CT_MER_MCC = <value> THEN <value> ELSE <value> END",1,100,100,4276.81,4.45,2,2.3,15,1.66,15,2.5,0,0,0,0,1,0,21.21,3588.74,78.77,24.26,13.51,339620530.43,594.01,0,1674.74,36.76,0,138.31,11.32,88.4,203739.67,38,0,0,0,27,6.31,0,96.5,1.7,198111976.1,79133603.5,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"create or replace temporary table NPP_TRAN as select	distinct case   when b.fraudtype = <value> then null                 else b.fraudtype         end as FRAUDTYPE 		,b.detection 		,b.case_detection         ,TO_TIMESTAMP(a.tts_tran_date_alt || <value> || a.tts_tran_time_alt, <value>) as TRANSACTIONDATETIME 		,(a.dtl_ex_<value>_n_<value> || a.dtl_ex_<value>_n_<value> || a.dtl_ex_<value>_n_<value>) as TRAN_ID 		,a.tts_tran_date_alt 		,a.tts_tran_time_alt 		,a.dtl_ex_<value>_<value>s_<value> 		,a.dtl_ex_<value>_<value>s_<value> 		,a.ssx_cust_num 		,a.chl_id_ob_userid 		,a.tgx_bank_name 		,a.tgx_bank_num 		,a.tgx_branch_id 		,a.tgx_acct_num 		,a.tgx_name 		,a.tgx_description 		,TRY_TO_NUMBER(a.tgx_tran_amt, <value>, <value>) as TRAN_AMT 		,a.dtl_ex_<value>_i_<value> as FTP_IND 		 		-- BioCatch UVs 		,TRY_TO_NUMBER(a._l_se_score, <value>, <value>) as _L_SE_SCORE 		,TRY_TO_NUMBER(a._l_bc_score, <value>, <value>) as _L_BC_SCORE 		,TRY_TO_NUMBER(a._l_max_<value>d_score, <value>, <value>) as _L_MAX_<value>D_SCORE 		,TRY_TO_NUMBER(a._l_max_<value>d_se_score, <value>, <value>) as _L_MAX_<value>D_SE_SCORE 		,TRY_TO_NUMBER(a._l_adv_key_combo, <value>, <value>) as _L_ADV_KEY_COMBO 		,TRY_TO_NUMBER(a._l_clpbrd_evnt, <value>, <value>) as _L_CLPBRD_EVNT 		,TRY_TO_NUMBER(a._l_concurrent_sess, <value>, <value>) as _L_CONCURRENT_SESS 		,TRY_TO_NUMBER(a._l_export_data, <value>, <value>) as _L_EXPORT_DATA 		,TRY_TO_NUMBER(a._l_import_data, <value>, <value>) as _L_IMPORT_DATA 		,TRY_TO_NUMBER(a._l_is_rat, <value>, <value>) as _L_IS_RAT 		,TRY_TO_NUMBER(a._l_is_mob_rat, <value>, <value>) as _L_IS_MOB_RAT 		,TRY_TO_NUMBER(a._l_rat_in_sess, <value>, <value>) as _L_RAT_IN_SESS 		,TRY_TO_NUMBER(a._l_is_rcnt_hrisk_sess, <value>, <value>) as _L_IS_RCNT_HRISK_SESS 		,TRY_TO_NUMBER(a._l_is_rcnt_rat, <value>, <value>) as _L_IS_RCNT_RAT 		,TRY_TO_NUMBER(a._l_lrg_dist_known_loc, <value>, <value>) as _L_LRG_DIST_KNOWN_LOC 		,TRY_TO_NUMBER(a._l_rare_scrn_sz, <value>, <value>) as _L_RARE_SCRN_SZ 		,TRY_TO_NUMBER(a._l_risky_isp, <value>, <value>) as _L_RISKY_ISP 		,TRY_TO_NUMBER(a._l_risky_key_combo, <value>, <value>) as _L_RISKY_KEY_COMBO 		,TRY_TO_NUMBER(a._l_tzone_mismatch, <value>, <value>) as _L_TZONE_MISMATCH 		,TRY_TO_NUMBER(a._l_scm_rsk_hgh_scr, <value>, <value>) as _L_SCM_RSK_HGH_SCR 		,TRY_TO_NUMBER(a._l_keyb_nav_anom, <value>, <value>) as _L_KEYB_NAV_ANOM 		,TRY_TO_NUMBER(a._l_scrn_broadcast, <value>, <value>) as _L_SCRN_BROADCAST 		,TRY_TO_NUMBER(a._l_delay_to_input_pi, <value>, <va",1,100,100,3099.69,3.23,1,1.15,8,0.88,5,0.83,0,0,0,0,0,0,9.15,181.71,16.39,11.75,2,82436169.86,480.27,0.01,159,14.35,0,94.73,10.28,100,14688.63,8,0,0,0,0,1.75,0,159.1,0,72131648.6,63045433.4,0,0,0
96009.01,0.97,96.22,33.22,1,3.21,1.99,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_003,2X-Large,Service Account,5) >= 50 GB 4XLARGE,"SELECT          ssx_cust_num                AS CIF         ,chl_id_ob_userid           AS NB_ID         ,dtl_ex_<value>_n_<value>             AS GEO_LOCATION_LATITUDE         ,dtl_ex_<value>_n_<value>             AS GEO_LOCATION_LONGITUDE         ,chl_ob_ip_latitude         AS IP_LOCATION_LATITUDE         ,chl_ob_ip_longitude        AS IP_LOCATION_LONGITUDE         ,SUBSTR(mid_event_ts,<value>,<value>) || <value> || SUBSTR(mid_event_ts,<value>,<value>)  AS SF_DATETIME         ,dtl_ex_<value>_<value>s_<value> FROM lcl.fdp_digital_nonmonetary_transactions_send_flat WHERE dtl_ex_<value>_<value>s_<value> in (<value>, <value>)   AND ssx_cust_num in (<value>, <value>) --CIF --  AND chl_id_ob_userid in (<value>) --NBID     AND (mid_event_ts LIKE <value>)     --AND mid_event_ts >= TO_CHAR(TO_DATE(<value>, <value>), <value>)     --AND mid_event_ts <= TO_CHAR(TO_DATE(<value>, <value>), <value>)     --AND TRY_TO_NUMBER(dtl_ex_<value>_n_<value>) > <value>      ORDER BY mid_event_ts LIMIT <value>;",1,100,100,2577.73,2.68,1,1.15,3,0.33,3,0.5,0,0,0,0,0,0,4.85,2706.84,0,0,0,46.86,679.55,0,6315.97,0,0,0.51,0,100,1490322,57,0,0,0,0,0,0,19,0,328,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE OR REPLACE temporary TABLE transx AS  select   b.FRAUDTYPE ,b.DETECTION ,b.case_detection ,TO_TIMESTAMP(tts_tran_date_alt || <value> || tts_tran_time_alt, <value>) as TRANSACTIONDATETIME ,ssx_cust_num AS XQO_CUST_NUM ,chl_id_ob_userid AS HQO_OB_USERID ,TRY_TO_NUMBER(tgx_tran_amt, <value>, <value>) as TRAN_AMT ,TRY_TO_NUMBER(_A_CUSTOMER_AGE, <value>, <value>) as _A_CUSTOMER_AGE ,TRY_TO_NUMBER(_L_SE_SCORE, <value>, <value>) as _L_SE_SCORE ,TRY_TO_NUMBER(_L_BC_SCORE, <value>, <value>) as _L_BC_SCORE ,TRY_TO_NUMBER(dtl_ex_<value>_n_<value>, <value>, <value>) as CERBERUS_SCORE ,TGX_BANK_NAME ,TGX_BANK_NUM ,TGX_BRANCH_ID ,TGX_ACCT_NUM ,TGX_NAME ,_L_HI_DEAD_TIME ,_L_FLAT_PHONE ,_l_fast_traveler ,_L_DPI_CHANGE  ,_L_NEW_DEV ,_L_RARE_SCRN_SZ ,_L_scrn_res_anom ,_l_lrg_dist_known_loc ,_L_NEW_BROWSER ,_L_NEW_DESKTOP_USER ,_L_IS_ACTIVE_CALL  ,_L_IS_LONG_SESS ,_L_NEW_MOB_BROWSER_USER ,_L_DEV_CHANGE_ANOM ,_L_TZONE_MISMATCH   ,_L_EXPORT_DATA ,_L_NEW_LANG ,_L_TRVL_SPD   ,_L_CONCURRENT_SESS ,_l_import_pi_data ,_l_trust_<value>  ,_l_trust_<value> ,_L_TRUST_NEW_PAYEE   ,_L_TRUST_PAYEE_DORM_ACCT   ,_L_TRUST_PAYEE_HIGH_VLOC_IN   ,_L_TRUST_RCNT_HI_ATO_AS_PAYEE   ,_L_TRUST_RCNT_HI_ATO_AS_PAYER   ,_L_TRUST_RCNT_HI_MS_AS_PAYEE   ,_L_TRUST_RCNT_HI_MS_AS_PAYER   ,_L_TRUST_RCNT_HI_SES_AS_PAYEE   ,_L_TRUST_RCNT_HI_SES_AS_PAYER   ,_L_TRUST_UNUSED_PAYEE   ,TRY_TO_NUMBER(_n_bc_cr_se_<value>,<value>,<value>) as _n_bc_cr_se_<value> ,TRY_TO_NUMBER(_n_bc_cr_se_<value>,<value>,<value>) as _n_bc_cr_se_<value> ,TRY_TO_NUMBER(_n_bc_cr_se_<value>,<value>,<value>) as _n_bc_cr_se_<value> ,TRY_TO_NUMBER(_n_bc_ncrg_ato_score,<value>,<value>) as _n_bc_ncrg_ato_score ,dtl_ex_<value>_<value>s_<value>     /* task id */ ,dtl_ex_<value>_i_<value> as FTP_ind ,TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_n_client_details_view, <value>, <value>), <value>::timestamp) as _n_client_details_view ,TRY_TO_NUMBER(_A_CAPP_LOGON_CNT_<value>, <value>, <value>) as _A_CAPP_LOGON_CNT_<value> /* capp login counts within last <value> hours, <value> is between <value> and <value> hours etc */ ,TRY_TO_NUMBER(_A_NB_LOGONS_CNT_<value>, <value>, <value>) as _A_NB_LOGONS_CNT_<value> , _L_ADV_KEY_COMBO ,_A_TELSTRA_API_EVENT_ID /* this is task id e.g.C<value>B  */ ,TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_TELSTRA_API_EVENT_DT, <value>, <value>), <value>) as _A_TELSTRA_API_EVENT_DT ,COALESCE(NULLIF(_A_TELSTRA_CALL_DURATION, <value>), <value>) / <value> as _A_TELSTRA_CALL_DURATION /* in minutes */ ,_a_telstra_active_call  ,_L_PUSH_API_<valu",1,100,100,3378.73,13.2,3,3,95,8.45,30,4.82,0,0,0,0,0,0,6.7,710.13,20.16,8.94,0,104239419,29.61,0.01,52.33,1.49,0,3.91,0.66,71.17,5913.53,6,0,0,0,34,0,0,19.4,0,7762509.9,7680752.7,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select to_date(MID_EVENT_TS) as SessDate,    date_part(hour, current_timestamp()) as SessHour,count(<value>) from  FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT where DTL_EX_<value>_N_<value>= <value>  group by SessHour, SessDate order by SessHour, SessDate",1,100,100,1682.64,6.57,1,1,57,5.07,31,4.98,0,0,0,0,0,0,2.18,740.72,0,0,0,174492.57,16.04,0.01,90.97,0,0,0.01,0,43.93,26909.74,6,0,0,0,40,0,0,3.4,0,34898.5,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select     <value> as aspect,     date(load_ts) as last_UPDATED_Date,     SNAP_D AS LATEST_BUSINESS_DATE,     count(*) as Record_count,     CASE WHEN current_time > <value> AND DATEDIFF(DAY, LOAD_TS,                        CURRENT_TIMESTAMP) = <value> THEN <value>         WHEN current_time < <value> AND DATEDIFF(DAY, LOAD_TS,                        CURRENT_TIMESTAMP) = <value> THEN <value>         ELSE <value> END AS LAST_RUN_STATUS from PRD_P<value>_DMN_FRAUMD.LCL.MLOP_FEAT_INPT_CUSTINVSCAMSUSCEPTIBILITYV<value> WHERE SNAP_D IN  (SELECT MAX(SNAP_D) FROM PRD_P<value>_DMN_FRAUMD.LCL.MLOP_FEAT_INPT_CUSTINVSCAMSUSCEPTIBILITYV<value>) GROUP BY ASPECT,  LAST_UPDATED_DATE, LATEST_BUSINESS_DATE, LOAD_TS  UNION ALL  select     <value> as aspect,     date(load_ts) as last_UPDATED_Date,     SNAP_D AS LATEST_BUSINESS_DATE,     count(*) as Record_count,     CASE WHEN current_time > <value> AND DATEDIFF(DAY, LOAD_TS,                        CURRENT_TIMESTAMP) = <value> THEN <value>         WHEN current_time < <value> AND DATEDIFF(DAY, LOAD_TS,                        CURRENT_TIMESTAMP) = <value> THEN <value>         ELSE <value> END AS LAST_RUN_STATUS from PRD_P<value>_DMN_FRAUMD.LCL.MLOP_FEAT_INPT_ALLSCAMCUSTSUSCEPTIBILITYV<value> WHERE SNAP_D IN  (SELECT MAX(SNAP_D) FROM PRD_P<value>_DMN_FRAUMD.LCL.MLOP_FEAT_INPT_ALLSCAMCUSTSUSCEPTIBILITYV<value>) GROUP BY ASPECT,  LAST_UPDATED_DATE, LATEST_BUSINESS_DATE, LOAD_TS;",2,100,100,1567.13,6.12,1,1,7,0.62,1,0.16,7,100,0,0,0,0,4.28,508.48,49.07,0,0,5,256.99,0,508.48,49.07,0,587.6,0,100,793544,136,0,0,0,100,0,0,40,0,5,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE OR REPLACE temporary TABLE rule_idea AS  select  f.fraudtype, TO_TIMESTAMP(tts_tran_date_alt || <value> || tts_tran_time_alt, <value>) as TRANSACTIONDATETIME ,dtl_ex_<value>_<value>s_<value> as taskid , mid_event_ts , ssx_cust_num AS XQO_CUST_NUM , chl_id_ob_userid AS HQO_OB_USERID , _l_pmt_amt ,TRY_TO_NUMBER(_l_max_<value>d_mule_score, <value>, <value>) as max_<value>d_mule_score ,TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_A_M<value>_P<value>_IND_DT, <value>, <value>), <value>) as _A_M<value>_P<value>_IND_DT ,pow((TRY_TO_NUMBER(substr(_l_Fingerprint_<value>,<value>,<value>),<value>,<value>)/<value>),<value>) as last_month_bal , pow((TRY_TO_NUMBER(substr(_l_Fingerprint_<value>,<value>,<value>),<value>,<value>)/<value>),<value>) as seclast_month_bal ,TRY_TO_NUMBER(dtl_ex_<value>_n_<value>, <value>, <value>) as C_Score , TRY_TO_NUMBER(tgx_tran_amt, <value>, <value>) as TRAN_AMT   ,TRY_TO_NUMBER(_L_BC_SCORE, <value>, <value>) as _L_BC_SCORE ,TRY_TO_NUMBER(_L_SE_SCORE, <value>, <value>) as _L_SE_SCORE ,TRY_TO_NUMBER(_L_MAX_<value>D_SCORE, <value>, <value>) as _L_MAX_<value>D_SCORE  ,TRY_TO_NUMBER(_L_ACCUM_AMT_ANOM, <value>, <value>) as _L_ACCUM_AMT_ANOM ,TRY_TO_NUMBER(_L_IS_LONG_SESS, <value>, <value>) as _L_IS_LONG_SESS ,TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYEE, <value>, <value>) as _L_TRUST_RCNT_HI_SES_AS_PAYEE ,TRY_TO_NUMBER(_L_TRUST_RCNT_HI_SES_AS_PAYER, <value>, <value>) as _L_TRUST_RCNT_HI_SES_AS_PAYER ,TRY_TO_NUMBER(_a_customer_age, <value>, <value>) as _a_customer_age ,dtl_ex_<value>_i_<value> ,TIMESTAMPADD(SECOND, TRY_TO_NUMBER(_X_CIF_RECIPIENT_NEW_DATE, <value>, <value>), <value>) as _X_CIF_RECIPIENT_NEW_DATE ,TRY_TO_NUMBER(_x_cif_recipient_new_cnt, <value>, <value>) as _x_cif_recipient_new_cnt  , case when dtl_ex_<value>_<value>s_<value> in (<value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>) then <value> else <value> end as frd     from      LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT T   LEFT JOIN PRD_P<value>_DMN_FRAUMD.LABMLFRD.DTL_FRAUDMASTER F      ON T.dtl_ex_<value>_<value>s_<value> = F.rua_<value>byte_string_<value>     where  ( t.mid_event_ts >= <value>     AND     t.mid_event_ts <= <value>)     and dtl_ex_<value>_<value>s_<value> in  (<value>,<value>,<value>,<value>,<value>,<value>,<value>,",1,100,100,1361.28,5.32,1,1,95,8.45,27,4.34,0,0,0,0,0,0,0.78,330.21,0,0,0,2150.29,3.43,0.01,24.33,0,0,0,0,98.32,5445.23,6,0,0,0,60,0,0,84.6,0,160.1,103.5,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,2)  > 0 and <  1 GB SMALL,SELECT             *         FROM CARD_ASES_BTCH_CCA_CASE_TRAN_STG         WHERE BUSN_D = <value>,1,0,0,1326.74,5.18,1,1,73,6.49,35,5.63,0,0,0,0,0,0,1.49,0.44,0,0.08,0.08,1578749.29,8.58,0,0.04,0,0,0,0.01,25,16.68,102,0,0,0,10,0.01,0,256.5,0,181168,0.3,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,3) >= 1 and < 20 GB 2XLARGE,"select * from PRD_Z<value>_DMN_FRAUMD.LCL.RCPI_ACCT_FEAT_AGGS where rel_levl_n in (<value>,<value>,<value>) and  substr(rcpi_acct_i,<value>,<value>)=<value>;",1,100,100,1194.39,4.67,1,1,45,4,21,3.38,0,0,0,0,0,0,0.04,0.96,0,0.21,0.21,5615204.86,0.41,0.03,0.15,0,0,0.08,0.03,49.18,26.31,100,0,0,0,27,0.03,0,0,0,958693.5,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"SELECT SUBSTR(mid_event_ts,<value>,<value>) AS YYMM        , COUNT(DISTINCT ssx_cust_num) AS VOLUME FROM PRD_P<value>_DMN_FRAUMD.LCL.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT WHERE  (mid_event_ts LIKE <value>  OR mid_event_ts LIKE <value> OR mid_event_ts LIKE <value> )        AND rsp_action_code NOT IN (<value>, <value>) --FINAL RESPONCE        AND dtl_ca_auth_sys_dec IN (<value>) --INITIAL RESPONCE GROUP BY YYMM ;",1,100,100,1018.8,3.98,1,1,4,0.36,3,0.48,0,0,0,0,0,0,4.67,2177.08,0,0,0,1.71,490.83,0.03,3809.9,0,0,0.17,0,100,671146.75,33,0,0,0,0,0,0,7.5,0,3,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select   chl_id_card_num, TO_TIMESTAMP_LTZ(TO_NUMBER(record_metadata:CreateTime),<value>), hdr_source, mid_eveNT_ID, DTL_EX_<value>_N_<value> ,DTL_EX_<value>_N_<value> ,DTL_EX_<value>_N_<value>,DTL_EX_<value>_N_<value>,DTL_EX_<value>_N_<value> from  PRD_P<value>_DMN_FRAUMD.LCL.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT  where --mid_event_id= <value> --hdr_source=<value> --and  TO_TIMESTAMP_LTZ(TO_NUMBER(record_metadata:CreateTime),<value>) >= <value>  and dtl_ca_ref_num in (<value>,<value>,<value>,<value>) LIMIT <value> ",1,100,100,967.29,3.78,1,1,31,2.76,19,3.05,0,0,0,0,0,0,0.7,193.13,0,0.01,0.01,273100.57,9.47,0.02,43.61,0,0,0.01,0,85.29,9084.61,0,0,0,0,55,0,0,9.7,0,91033.5,0,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,5) >= 50 GB 4XLARGE,"create or replace temporary table tran_raw as select  mid_event_ts         ,TO_TIMESTAMP(tts_tran_date_alt || <value> || tts_tran_time_alt, <value>) as TRANSACTIONDATETIME         ,tts_tran_date_alt         ,tts_tran_time_alt         ,dtl_ex_<value>_<value>s_<value>         ,_A_CUST_ACTIONCODE_<value>         ,TIMESTAMPADD(SECOND, CAST(_A_CUST_ACTIONCODE_DT_<value> AS NUMBER(<value>,<value>)), <value>) as _A_CUST_ACTIONCODE_DT_<value>         ,_A_CUST_ACTIONCODE_<value>         ,TIMESTAMPADD(SECOND, CAST(_A_CUST_ACTIONCODE_DT_<value> AS NUMBER(<value>,<value>)), <value>) as _A_CUST_ACTIONCODE_DT_<value>         ,_A_CUST_ACTIONCODE_<value>         ,TIMESTAMPADD(SECOND, CAST(_A_CUST_ACTIONCODE_DT_<value> AS NUMBER(<value>,<value>)), <value>) as _A_CUST_ACTIONCODE_DT_<value>         ,_a_list_wl_scam_cust_cif         ,_a_list_wl_cust_cif         ,_a_list_wl_scam_cust_netbank         ,_a_list_wl_cust_netbank         -- Other Branch Enrichment Information         ,_a_cif_establish_channel from   LCL.FDP_DIGITAL_NONMONETARY_TRANSACTIONS_SEND_FLAT where   mid_event_ts >= <value> AND mid_event_ts <=<value> AND ssx_cust_num = <value> order by    TRANSACTIONDATETIME;",1,100,100,962.4,3.76,1,1,6,0.53,4,0.64,0,0,0,0,0,0,1.72,754.59,0,0,0,1.14,120.14,0.03,880.35,0,0,0.04,0,71,179277.33,11,0,0,0,0,0,0,25.3,0,2,0.7,0,0,0
25558.84,0.09,83.57,34.39,1,0.36,0.62,0,WH_USR_PRD_P01_FRAUMD_001,X-Large,Service Account,3) >= 1 and < 20 GB 2XLARGE,create or replace temporary table cluster<value> as select  * from   LABMLFRD.DSA_JUL_AUG_CASE_REVIEW_<value> /* View cases/transactions with risk factors */ where _L_RARE_SCRN_SZ_IND and LOW_HIST_TRAN_SUM_RECIP_IND	 and RCNT_CREATED_ACCT_<value>M_IND	 and LOW_HIST_FTP_CNT_RECIP_IND and RCNT_CUST_ACCT_<value>D_IND	 and RCNT_CUST_ACCT_<value>M_IND	 and TELSTRA_LAST_CALL_MAX_CALL_IND   /*and ftp_ind in (<value>) and _l_se_score >= <value> and _a_customer_age >= <value> and dtl_ex_<value>_<value>s_<value> like <value> and tran_amt >= <value> and _l_bc_score >= <value> and _l_max_<value>d_score >= <value> and ftp_cnt_<value>days = <value> */  order by chl_id_ob_userid asc ;,1,100,100,796.14,3.11,1,1,103,9.16,52,8.36,0,0,0,0,0,0,0.14,33.08,0,0.04,0,94704.29,0.58,0,2.25,0,0,0.01,0,93.17,617.84,98,0,0,0,75,0,0,21.1,0,6436.2,6423.3,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE  OR  REPLACE    TABLE  LABMLFRD.TECHDS_MARVIN_CCA_WIDE_TRANS_PK_E<value>E_ENGINEER_TEST_<value>_<value>( CMX_TRAN_ID  STRING(<value>),  TTS_TRAN_DATE_ALT  STRING(<value>),  TTS_TRAN_TIME_ALT  STRING(<value>),  CHL_ID_CARD_NUM  STRING(<value>),  CHL_CT_ASSO_DEC_CODE  STRING(<value>),  DTL_CA_MERCH_AMT  DOUBLE,  DTL_CA_CLIENT_AMT  DOUBLE,  ATH_PC_POS  STRING(<value>),  RSP_EX_<value>_I_<value>  STRING(<value>),  RSP_EX_<value>_<value>S_<value>  STRING(<value>),  RSP_ACTION_CODE  STRING(<value>),  LAG_C_<value>WAY_CRD_FRD_RULE_FLAG  DOUBLE,  LAG_C_<value>WAY_CRD_HR_RULE_FLAG  DOUBLE)    AS  SELECT  *   FROM (          SELECT             TO_NUMBER(DTL_EX_<value>_N_<value>)||DTL_EX_<value>_N_<value>||DTL_EX_<value>_N_<value> AS CMX_TRAN_ID,             TTS_TRAN_DATE_ALT,              TTS_TRAN_TIME_ALT,             CHL_ID_CARD_NUM,             CHL_CT_ASSO_DEC_CODE,             DTL_CA_MERCH_AMT,             DTL_CA_CLIENT_AMT,             ATH_PC_POS,             RSP_EX_<value>_I_<value>, /* Sent an alert */             RSP_EX_<value>_<value>S_<value>, /* What type of alert */             RSP_ACTION_CODE,             LAG(_C_<value>WAY_CRD_FRD_RULE_FLAG) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) DESC) AS LAG_C_<value>WAY_CRD_FRD_RULE_FLAG,             LAG(_C_<value>WAY_CRD_HR_RULE_FLAG) OVER (PARTITION BY CHL_ID_CARD_NUM ORDER BY TO_TIMESTAMP(CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT), <value>) DESC) AS LAG_C_<value>WAY_CRD_HR_RULE_FLAG         FROM             LCL.FDP_CARDS_MONETARY_TRANSACTIONS_SEND_FLAT                   WHERE                 HDR_ACTIVITY_TYPE = <value>                  AND DTL_CA_AUTH_SYS_INFO NOT IN (<value>, <value>, <value>, <value>)                 AND LEFT(REPLACE(CHL_ID_CARD_NUM, <value>, <value>), <value>) != <value>                 AND DTL_CA_AUTH_SYS_DEC = <value>                  AND ATH_PC_POS IN (<value>, <value>, <value>, <value>, <value>, <value>, <value>)                 AND TTS_TRAN_DATE_ALT BETWEEN <value> AND <value>          )",1,100,100,819.69,19.72,1,2.5,7,4.86,6,5.08,0,0,0,0,0,0,5.26,1696.35,0,0,0,12.43,315.56,1.45,1696.35,0,0,0.14,0,85.71,257844.29,88,0,0,0,57,0,0,118.9,0,17.4,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select max(mid_event_ts),min(mid_event_ts) from PRD_Z<value>_DMN_FRAUMD.LCL.FDP_Customer_Transactions_Send_FLAT",1,100,100,441.02,10.61,1,2.5,3,2.08,2,1.69,0,0,0,0,0,0,2.77,915,0,0,0,3.57,387.16,0.04,2135,0,0,0.07,0,100,622023.67,94,0,0,0,33,0,0,0,0,12.5,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"CREATE OR REPLACE TABLE PRD_P<value>_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_<value>_FDT_AGG<value>D AS select  distinct(tran_id) as tran_id, SSX_CUST_NUM, CHL_ID_CARD_NUM, CHL_CT_TERM_OWNER_ID, CHL_CT_ACQ_ID, TRANSACTIONDATETIME, TRANSACTION_HOUR, DTL_CA_CLIENT_AMT, _C_CC_GBL_N<value>D_<value>D_SUM_<value>, _C_CC_HIGH_VEL_APPLE_SUM_<value>, _C_CRD_APAY_CNT_<value>, _C_CC_GBL_N<value>D_<value>D_CNT_<value>, _C_CC_CNP_VEL_<value>HR_SUM_<value>, _C_CRD_APAY_SUM_<value>, _C_CRD_SAFE_MERCHANT, _C_<value>WAY_CRD_FRD_RULE_FLAG, _C_CC_CNP_LTRANS_<value>HR_COUNT_<value>, _C_CC_CNP_VEL_<value>HR_COUNT_<value>, _L_CITY_AGE, _A_CRD_NPP_PAYMENT_AMOUNT, _A_CLIENT_COUNTRY_CNT_<value>, _A_CUSTOMER_AGE, _A_CLIENT_COUNTRY_CNT_<value>, _A_NPP_FTP_SUM, _L_PASTE_IN_LOGIN_CNT, _A_CUST_SUM_AAA_LONG, _L_G_CON_DEV, _L_DEV_FAM_AGE, _L_TOUCH_CNT, _B_RECIP_SUM_AAA_LONG, _L_RISKY_KEY_COMBO, _A_C_G, _L_SCORE_<value>, _A_E, _A_NPP_INB_PMT_VAL, _A_CLIENT_COUNTRY_CNT_<value>, _A_PROF_CAPP_DEVICE_CNT_<value>, _A_CRD_SCAM_SUPP_<value>D_SUM_<value>, _A_CLIENT_CITY_CNT_<value>, _L_UID_AGE, _L_SCRN_W, _L_ASN_AGE, _L_SCORE_<value>, _A_CUST_NPP_OUT_SUM_AAA_<value>, _L_BC_SESS_CNT, _L_ACC_AMT_<value>H, _A_LIST_WL_SCAM_DRIVE_LICENSE, _A_CC_CASH_ADVANCE_AMT, _A_CUST_SUM_AAA_SHORT, _A_P_L_<value>, _L_PMT_AMT, _L_ISP_AGE, _L_ACC_AMT_<value>D, _A_CLIENT_COUNTRY_CNT_<value>, _L_CONCURRENT_SESS, _A_CAPP_HCE_CNT_<value>, _L_SCORE_<value>, _L_MUID_AGE_PER_USER, _A_CUST_ACCT_BAL, _L_CUST_SCAMRISK_SCORE, _A_ATM_WITHDRAWAL_SUM_AMT, _L_TAP_CNT, _A_LIST_WL_SCAM_TP_IP, _L_MAX_<value>D_SCORE, _B_RECIP_SUM_AAA_<value>, _X_CIF_SENDER_SUM, _L_M_L_<value>, _L_SCRN_H, _A_CUST_NPP_OUT_SUM_AAA_<value>, _A_CUST_ACTION_IND, _A_P_L_C, _A_CUST_AVG_ACCT_BAL, _L_AND_ID_AGE, _X_CIF_REC_SUM, _L_SESS_CNT_MOB_SDK, _L_TOTAL_SESS_CNT, _A_CURR_CAPP_DEVICE_NFTP_CNT, _L_NC_ACCT_NUM_NAME_CONF, _A_CLIENT_COUNTRY_CNT_<value>, _A_U, _B_RECIP_SUM_AAA_<value>, _L_SCM_RSK_SCR_<value>, _B_RECIP_SUM_AAA_<value>, _L_BC_SCORE, _L_DAYS_LST_DEV_AND, _A_PROF_CAPP_DEVICE_CNT_<value>, _L_DAYS_LST_DEV_IOS, _X_LAST_N_TXN_COUNT, _A_T, _A_CUST_NPP_IN_SUM_AAA_<value>, _L_MINS_LST_LGN_CAPPED, _L_ACC_AMT_<value>H, _L_ACC_AMT_<value>H, _A_LIST_BL_PASSPORT, _A_LIST_WL_SCAM_PASSPORT, _A_LIST_BL_SCAM_PASSPORT, _B_RECIP_SUM_AAA_<value>, _A_PROF_CAPP_DEVICE_CNT_<value>, _A_CLIENT_COUNTRY_CNT_<value>, _A_BTS_BCH_SUM, _A_BTS_CUST_AGE, _A_CURR_CAPP_DEVICE_CNT, _A_CURR_NB_BROWSER_CNT, _A_PREV_CAPP_DEVICE_CNT, _A_Q, _A_R, _L_CNTRY_AGE, _A_NPP_IN_UNRELATED_S",1,100,100,270.47,6.51,1,2.5,15,10.42,13,11.02,3,20,0,0,0,0,0.38,37.3,0,0,0,19.86,10.69,0.05,17.41,0,0,23.94,0,90,15978.8,69,0,0,0,13,0,0,31.1,0,11.6,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,4) >=20 and < 50 GB 3XLARGE,"create or replace table PRD_P<value>_DMN_FRAUMD.LABMLFRD.TECHDS_GUERREOL_IMP_PCA_TRAN_EMBD_CRETRO_<value>_score as (select A.tran_id, -- dtl_ca_client_amt, -- ssx_cust_num, CARDS_RETRO_IMP_PCA_TRAN_EMBD_MOJO(<value>, array_construct( transaction_hour, dtl_ca_client_amt, _c_crd_apay_cnt_<value>, _c_cc_gbl_n<value>d_<value>d_cnt_<value>, _c_cc_cnp_vel_<value>hr_sum_<value>, _c_crd_safe_merchant, _c_<value>way_crd_frd_rule_flag, _c_cc_cnp_ltrans_<value>hr_count_<value>, _a_client_country_cnt_<value>, _a_customer_age, _a_npp_ftp_sum, _a_cust_sum_aaa_long, _l_dev_fam_age, _a_client_country_cnt_<value>, _a_prof_capp_device_cnt_<value>, _a_crd_scam_supp_<value>d_sum_<value>, _a_client_city_cnt_<value>, _l_uid_age, _l_bc_sess_cnt, _l_acc_amt_<value>h, _l_isp_age, _a_capp_hce_cnt_<value>, _l_muid_age_per_user, _a_cust_acct_bal, _l_cust_scamrisk_score, _l_max_<value>d_score, _a_p_l_c, _a_cust_avg_acct_bal, _l_sess_cnt_mob_sdk, _l_total_sess_cnt, _a_curr_capp_device_nftp_cnt, _l_mins_lst_lgn_capped, _a_prof_capp_device_cnt_<value>, _a_bts_bch_sum, _a_bts_cust_age, _a_curr_capp_device_cnt, _a_prev_capp_device_cnt, _l_sess_cnt_web, _a_clc_ftp_amt, _l_sess_cnt_mob_browser, _a_p_l_<value>, _a_vpn_vps_ip_logon_count, _a_ecv_document_ip, _l_push_api_<value>, chl_ct_term_owner_name, _c_cnp_mer_nm_curr, dtl_ex_<value>_<value>s_<value>, _a_mrisk_foreign_ip_cntry_code, dtl_ca_auth_sys_dec, chl_ct_mer_mcc, ath_pc_cust_present, chl_ct_term_cntry_code, dtl_ca_merch_curr_code, dmc_cnt, cc_cnt, no_<value>, govt_bene, _x_npp_out_sum_date_diff, _a_cc_dt_diff, _a_online_pl_dt_diff, _a_cif_establish_dt_diff, _a_scamp<value>_mlw_dt_diff, _l_push_api_dt_<value>_diff, _l_push_api_dt_<value>_diff, _l_push_api_dt_<value>_diff, cus_sum_upst_dcln_tran_cnt_q, cus_sum_fdp_rule_trig_cnt_q, cus_sum_osea_tran_cnt_q, cus_sum_osea_tran_sum_n, cus_sum_secu_pcol_dabl_tran_cnt_q, cus_sum_card_not_pres_tran_sum_n, cus_sum_secu_pcol_enbl_tran_sum_n, cus_sum_secu_pcol_dabl_tran_sum_n, cus_sum_card_pres_tran_cnt_q, cus_sum_card_pres_tran_sum_n, cus_sum_pay_pass_tran_sum_n, cus_sum_capp_logn_cnt_q, cus_sum_view_card_detl_cnt_q, crd_sum_upst_aprd_tran_cnt_q, crd_sum_upst_dcln_tran_cnt_q, crd_sum_finl_aprd_tran_cnt_q, crd_sum_upst_dcln_tran_sum_n, crd_sum_rule_dcln_tran_sum_n, crd_sum_fdp_rule_trig_cnt_q, crd_sum_doms_tran_cnt_q, crd_sum_osea_tran_cnt_q, crd_sum_doms_tran_sum_n, crd_sum_osea_tran_sum_n, crd_sum_card_not_pres_tran_cnt_q, crd_sum_secu_pcol_enbl_tran_cnt_q, crd_sum_secu_pcol_dabl_tran_cnt_q, crd",1,100,100,227.79,5.48,1,2.5,4,2.78,4,3.39,0,0,0,0,0,0,1.24,6.01,0,0.06,0.02,5331107.29,129.8,0.02,10.52,0,0,7.42,0.1,81.25,800.25,100,0,0,0,0,0.04,0,5.5,0,12439250.3,4664718.8,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,4) >=20 and < 50 GB 3XLARGE,"create or replace table PRD_P<value>_DMN_FRAUMD.LABMLFRD.TECHDS_GUERREOL_PCA_TRAN_EMBD_CRETRO_<value>_score as (select A.tran_id, -- dtl_ca_client_amt, -- ssx_cust_num, CARDS_RETRO_PCA_TRAN_EMBD_MOJO(<value>, array_construct( transaction_hour, dtl_ca_client_amt, _c_cc_gbl_n<value>d_<value>d_cnt_<value>, _c_cc_cnp_vel_<value>hr_sum_<value>, _c_crd_safe_merchant, _c_cc_cnp_ltrans_<value>hr_count_<value>, _c_cc_cnp_vel_<value>hr_count_<value>, _a_client_country_cnt_<value>, _a_customer_age, _a_cust_sum_aaa_long, _l_g_con_dev, _l_dev_fam_age, _a_client_country_cnt_<value>, _a_crd_scam_supp_<value>d_sum_<value>, _l_score_<value>, _l_bc_sess_cnt, _l_acc_amt_<value>h, _a_p_l_<value>, _l_muid_age_per_user, _a_cust_acct_bal, _l_max_<value>d_score, _a_cust_avg_acct_bal, _l_sess_cnt_mob_sdk, _l_total_sess_cnt, _l_bc_score, _a_bts_bch_sum, _a_bts_cust_age, _a_prev_capp_device_cnt, _a_r, _l_cntry_age, _a_clc_ftp_amt, _l_sess_cnt_mob_browser, _a_p_l_<value>, _a_vpn_vps_ip_logon_count, _l_days_lst_dev_js, _a_ecv_document_ip, _l_push_api_<value>, _l_push_api_<value>, _l_lang_<value>, chl_ct_term_owner_name, _c_cnp_mer_nm_curr, dtl_ex_<value>_<value>s_<value>, _a_mrisk_foreign_ip_cntry_code, dtl_ca_auth_sys_dec, chl_ct_mer_mcc, ath_pc_cust_present, dtl_ca_merch_curr_code, cc_cnt, fa_<value>, no_<value>, govt_bene, _x_npp_out_sum_date_diff, _a_cc_dt_diff, _a_online_pl_dt_diff, _a_cif_establish_dt_diff, _a_ecv_document_dt_diff, _a_capp_notify_opt_out_dt_diff, _a_scamp<value>_mlw_dt_diff, _l_push_api_dt_<value>_diff, _l_push_api_dt_<value>_diff, cus_sum_upst_dcln_tran_cnt_q, cus_sum_doms_tran_cnt_q, cus_sum_osea_tran_cnt_q, cus_sum_osea_tran_sum_n, cus_sum_secu_pcol_dabl_tran_cnt_q, cus_sum_card_not_pres_tran_sum_n, cus_sum_secu_pcol_enbl_tran_sum_n, cus_sum_secu_pcol_dabl_tran_sum_n, cus_sum_card_pres_tran_cnt_q, cus_sum_pay_pass_tran_cnt_q, cus_sum_card_pres_tran_sum_n, cus_sum_chip_tran_sum_n, cus_sum_pay_pass_tran_sum_n, cus_sum_capp_logn_cnt_q, cus_sum_view_card_detl_cnt_q, crd_sum_tran_cnt_q, crd_sum_upst_aprd_tran_cnt_q, crd_sum_upst_dcln_tran_cnt_q, crd_sum_finl_aprd_tran_cnt_q, crd_sum_upst_dcln_tran_sum_n, crd_sum_rule_dcln_tran_sum_n, crd_sum_fdp_rule_trig_cnt_q, crd_sum_doms_tran_cnt_q, crd_sum_osea_tran_cnt_q, crd_sum_doms_tran_sum_n, crd_sum_osea_tran_sum_n, crd_sum_card_not_pres_tran_cnt_q, crd_sum_secu_pcol_enbl_tran_cnt_q, crd_sum_secu_pcol_dabl_tran_cnt_q, crd_sum_card_not_pres_tran_sum_n, crd_sum_secu_pcol_enbl_tran_sum_n, crd_sum_secu_pcol_dabl_tran_sum_n,",1,100,100,222.22,5.35,1,2.5,5,3.47,5,4.24,0,0,0,0,0,0,0.92,5.91,0,0.05,0.02,5331107.29,76.97,0.06,8.27,0,0,5.49,0.07,70,640.2,100,0,0,0,0,0.03,0,4.8,0,12439250.3,3731775,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,select * from LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT  where dtl_ex_<value>_<value>s_<value> in (<value>),1,100,100,222.09,5.34,1,2.5,2,1.39,1,0.85,0,0,0,0,0,0,0.99,237.31,0,0,0,0.29,207.02,143.73,830.58,0,0,0,0,100,190643,28,0,0,0,0,0,0,1,0,1,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,select * from       LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT a     where rsp_ex_<value>_<value>s_<value> = <value>     and TTS_TRAN_DATE_ALT >= <value>     ;,1,100,100,221.78,5.34,1,2.5,2,1.39,2,1.69,0,0,0,0,0,0,1.37,280.81,0,2.03,2.03,287311.43,288.28,0.11,982.84,0,0,0.02,7.1,100,63702.5,9,0,0,0,0,7.1,0,4.5,0,1005590,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"COPY INTO @h<value>oaib<value>a<value>f<value>b<value>e<value>d<value>ee<value>a<value>b<value>/csr_<value>d_train.csv                 FROM (SELECT * FROM PRD_P<value>_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_<value>_FDT_AGG<value>D WHERE target = <value> and to_date(transactiondatetime) between <value> and <value>  UNION ALL  SELECT * FROM PRD_P<value>_DMN_FRAUMD.labmlfrd.TECHDS_SAI_CARDS_SCAMS_RETRO_<value>_FDT_AGG<value>D WHERE target = <value> AND UNIFORM(<value>::FLOAT, <value>::FLOAT, RANDOM()) < <value>.<value> --maintain ~ <value>% positive ratio and to_date(transactiondatetime) between <value> and <value>)                 FILE_FORMAT = (TYPE= CSV  FIELD_OPTIONALLY_ENCLOSED_BY = <value>)                 MAX_FILE_SIZE = <value>                 OVERWRITE = TRUE                 HEADER = TRUE",1,100,100,185.16,4.46,1,2.5,1,0.69,1,0.85,1,100,0,0,0,0,0.41,200.23,0,0,0,0.14,170.58,0,1401.64,0,0,0,0,100,96256,100,0,0,0,0,0,0,16,0,1,0,0,0,2288281
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select         chl_id_card_num         , to_timestamp(concat(tts_tran_date_alt, <value>, tts_tran_time_alt), <value>) as transactiondatetime         ,ath_pc_pos         ,dtl_ca_client_amt         ,chl_ct_term_owner_name         ,chl_ct_term_owner_id         ,chl_ct_mer_mcc         ,DATEADD(second, TO_NUMBER(_a_telstra_API_event_dt), <value>) as telstra_API_event_dt         ,_a_telstra_API_event_ID         ,_a_telstra_active_call         ,_a_telstra_existing_relation         ,_a_telstra_call_duration         ,_a_telstra_num_type         ,_a_telstra_num_wl         ,_a_telstra_tp_num_sp         ,_a_telstra_tp_num_prefix_type         ,_a_telstra_tp_outbnd_count         ,_a_telstra_tp_outbnd_avg_dur         ,_a_telstra_multi_calls     from          lcl.fdp_cards_monetary_transactions_send_flat    where          chl_id_card_num = <value>         and mid_event_ts >= to_char(timestampadd(day, (-<value>), current_timestamp()), <value>)         and mid_event_ts <= to_char(timestampadd(day, (-<value>), current_timestamp()), <value>)          order by mid_event_ts;",1,100,100,179.23,4.31,1,2.5,5,3.47,1,0.85,0,0,0,0,0,0,0.79,235.41,0,0,0,2,66.35,0.09,329.57,0,0,0,0,100,58601,3,0,0,0,0,0,0,26,0,2.8,0,0,0,0
4201.4,0.12,94.72,43.06,1,32.86,6.25,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_002,X-Large,Service Account,5) >= 50 GB 4XLARGE,"select * from LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT  where dtl_ex_<value>_<value>s_<value> in (<value>, <value>, <value>)",1,100,100,168.47,4.05,1,2.5,2,1.39,2,1.69,0,0,0,0,0,0,0.51,121.32,0,0,0,0.43,107.36,131.08,424.6,0,0,0,0,66.5,97972,28,0,0,0,0,0,0,3,0,3,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"WITH card_not_received AS (   SELECT      SSX_CUST_NUM,     TRAN_ID,     PEGA_CASENUMBER,     TRANSACTION_DATE AS CNR_DATE,     FRAUDTYPENAME,     DTL_CA_CLIENT_AMT,     CHL_CT_TERM_OWNER_NAME,     DETECT_METHOD   FROM CARD_TRAN_GROS_FRAU_TMP_<value>   WHERE FRAUDTAG = <value> -- Filter for confirmed fraud cases     AND FRAUDTYPENAME = <value> -- First fraud type condition ), lost_stolen_card AS (   SELECT      SSX_CUST_NUM,     TRAN_ID,     PEGA_CASENUMBER,     TRANSACTION_DATE AS LSC_DATE,     FRAUDTYPENAME,     DTL_CA_CLIENT_AMT,     CHL_CT_TERM_OWNER_NAME,     DETECT_METHOD   FROM CARD_TRAN_GROS_FRAU_TMP_<value>   WHERE FRAUDTAG = <value> -- Filter for confirmed fraud cases     AND FRAUDTYPENAME = <value> -- Second fraud type condition ) SELECT    cnr.SSX_CUST_NUM AS CIF,   cnr.CNR_DATE AS CARD_NOT_RECEIVED_DATE,   cnr.PEGA_CASENUMBER AS CNR_CASE_NUMBER,   CONCAT(<value>, TO_CHAR(cnr.DTL_CA_CLIENT_AMT, <value>)) AS CNR_AMOUNT,   cnr.CHL_CT_TERM_OWNER_NAME AS CNR_MERCHANT,   cnr.DETECT_METHOD AS CNR_DETECTION,   lsc.LSC_DATE AS LOST_STOLEN_CARD_DATE,   lsc.PEGA_CASENUMBER AS LSC_CASE_NUMBER,   CONCAT(<value>, TO_CHAR(lsc.DTL_CA_CLIENT_AMT, <value>)) AS LSC_AMOUNT,   lsc.CHL_CT_TERM_OWNER_NAME AS LSC_MERCHANT,   lsc.DETECT_METHOD AS LSC_DETECTION,   DATEDIFF(day, cnr.CNR_DATE, lsc.LSC_DATE) AS DAYS_BETWEEN_INCIDENTS FROM card_not_received cnr INNER JOIN lost_stolen_card lsc    ON cnr.SSX_CUST_NUM = lsc.SSX_CUST_NUM -- Same customer   AND lsc.LSC_DATE > cnr.CNR_DATE -- Lost Stolen Card must occur after Card Not Received   AND DATEDIFF(day, cnr.CNR_DATE, lsc.LSC_DATE) <= <value> -- Within <value> days ORDER BY cnr.SSX_CUST_NUM, cnr.CNR_DATE, lsc.LSC_DATE LIMIT <value>;",1,100,100,87.37,23.96,1,2.5,122,16.05,118,25.6,0,0,0,0,0,0,0.52,0.25,0,0,0,189.86,1.78,0.07,0.01,0,0,0,0,100,20.13,76,0,0,0,29,0,0,35.1,0.5,14,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,3) >= 1 and < 20 GB 2XLARGE,"create or replace temporary table valid as select   concat( tgx_bank_num ||tgx_branch_id) as bsb ,* ,DATE(TRANSACTIONDATETIME) AS tts_tran_date_alt from LABMLFRD.DSA_JUL_AUG_CASE_REVIEW_<value> where   _L_ADV_KEY_COMBO_IND = <value> and _L_CLPBRD_EVNT_IND = <value> and _L_IMPORT_DATA_IND = <value> and LOW_HIST_TRAN_SUM_RECIP_IND = <value> and LOW_HIST_FTP_CNT_RECIP_IND = <value> and RCNT_CUST_ACCT_<value>D_IND = <value> and RCNT_CUST_ACCT_<value>M_IND = <value> and bsb in (<value>,<value>,<value>,<value>)  --and TGX_NAME like <value> -- and (_B_ANY_CUST_FTP_DT < <value> or _B_ANY_CUST_FTP_DT is null)  -- --and _N_INTEL_FRCT_INTENT in (<value>,<value>,<value>) -- and _N_INTEL_FRCT_INTENT in (<value>,<value>) -- and _L_SE_SCORE >= <value> -- and _X_CIF_RECIPIENT_NEW_CNT = <value>  -- and _A_CRYPTO_MNTHLY_SUM >= <value> -- and _A_CRYPTO_LAST_PYMNT_DATE < <value> -- and TRAN_ACCT_COUNT = <value> -- and _x_cif_recipient_new_sum >=<value> --and fraudtype in (<value>)  --and fraudtype in (<value>, <value>, <value>, <value>, <value>, <value>, <value>, <value>,<value>)  -- and detection = <value> order by FRAUDTYPE,SSX_CUST_NUM,TRANSACTIONDATETIME;",1,100,100,75.13,20.6,1,2.5,102,13.42,53,11.5,0,0,0,0,0,0,0.76,34.27,0.08,0.04,0,287762.29,3.13,0.03,2.35,0.01,0,0,0,100,369.15,83,0,0,0,29,0,0,24.8,0,21203.5,19666.8,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"WITH merchant_fraud_stats AS (     -- Calculate fraud frequency by merchant     SELECT          CHL_CT_TERM_OWNER_NAME,         COUNT(DISTINCT SSX_CUST_NUM) AS unique_customers_with_fraud,         COUNT(TRAN_ID) AS total_fraud_transactions     FROM CARD_TRAN_GROS_FRAU_TMP_<value>     WHERE FRAUDTAG = <value> -- Only confirmed fraud cases         AND TRANSACTION_DATE >= DATEADD(day, -<value>, CURRENT_DATE()) -- Last <value> days for recent activity         AND CHL_CT_TERM_OWNER_NAME IS NOT NULL         AND SSX_CUST_NUM IS NOT NULL     GROUP BY CHL_CT_TERM_OWNER_NAME     HAVING COUNT(DISTINCT SSX_CUST_NUM) >= <value> -- Merchants with at least <value> different customers having fraud ), customer_merchant_fraud AS (     -- Get customer-merchant fraud combinations with rule details     SELECT          SSX_CUST_NUM,         CHL_CT_TERM_OWNER_NAME,         CQF_RULE_C_ID,         COUNT(TRAN_ID) AS fraud_count,         SUM(DTL_CA_CLIENT_AMT) AS total_fraud_amount,         COUNT(DISTINCT CQF_RULE_C_ID) AS distinct_rules_triggered     FROM CARD_TRAN_GROS_FRAU_TMP_<value>     WHERE FRAUDTAG = <value> -- Only confirmed fraud cases         AND TRANSACTION_DATE >= DATEADD(day, -<value>, CURRENT_DATE()) -- Last <value> days         AND SSX_CUST_NUM IS NOT NULL         AND CQF_RULE_C_ID IS NOT NULL         AND CHL_CT_TERM_OWNER_NAME IN (SELECT CHL_CT_TERM_OWNER_NAME FROM merchant_fraud_stats) -- Only merchants with multiple fraud customers     GROUP BY SSX_CUST_NUM, CHL_CT_TERM_OWNER_NAME, CQF_RULE_C_ID ), rule_exclusion_check AS (     -- Identify merchant-rule combinations that are too common (shared by many customers)     SELECT          CHL_CT_TERM_OWNER_NAME,         CQF_RULE_C_ID     FROM customer_merchant_fraud     GROUP BY CHL_CT_TERM_OWNER_NAME, CQF_RULE_C_ID     HAVING COUNT(DISTINCT SSX_CUST_NUM) >= <value> -- Exclude rules shared by <value>+ customers at same merchant ) SELECT      cmf.SSX_CUST_NUM AS CUSTOMER_ID,     cmf.CHL_CT_TERM_OWNER_NAME AS MERCHANT_NAME,     cmf.CQF_RULE_C_ID AS RULE_ID,     cmf.fraud_count AS CUSTOMER_FRAUD_COUNT,     TO_CHAR(cmf.total_fraud_amount, <value>) AS CUSTOMER_FRAUD_AMOUNT,     mfs.unique_customers_with_fraud AS MERCHANT_AFFECTED_CUSTOMERS,     mfs.total_fraud_transactions AS MERCHANT_TOTAL_FRAUD_TRANSACTIONS,     cmf.distinct_rules_triggered AS CUSTOMER_DISTINCT_RULES FROM customer_merchant_fraud cmf INNER JOIN merchant_fraud_stats mfs      ON cmf.CHL_CT_TERM_OWNER_NAME = mfs.CHL_CT_TERM_OWNER_NAME LEFT JOIN rule_exclusion_c",1,100,100,35.79,9.81,1,2.5,47,6.18,45,9.76,0,0,0,0,0,0,0.06,0.11,0,0,0,92,0.54,0.07,0.02,0,0,0,0,100,20,103,0,0,0,19,0,0,52.9,1,17.9,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"SELECT      CHL_CT_MER_MCC AS MERCHANT_CATEGORY_CODE,     FRAUDTYPENAME AS FRAUD_TYPE,     CASE          WHEN CHL_CT_TERM_CNTRY_CODE = <value> THEN <value>         WHEN CHL_CT_TERM_CNTRY_CODE = <value> THEN <value>          WHEN CHL_CT_TERM_CNTRY_CODE = <value> THEN <value>         WHEN CHL_CT_TERM_CNTRY_CODE = <value> THEN <value>         WHEN CHL_CT_TERM_CNTRY_CODE IS NOT NULL THEN <value>         ELSE <value>     END AS COUNTRY_REGION,     COUNT(DISTINCT CHL_CT_TERM_OWNER_ID) AS UNIQUE_MERCHANTS,     COUNT(TRAN_ID) AS TOTAL_FRAUD_CASES,     COUNT(CASE WHEN UPPER(DETECT_METHOD) IN (<value>, <value>) THEN <value> END) AS DETECTED_CASES,     COUNT(CASE WHEN UPPER(DETECT_METHOD) NOT IN (<value>, <value>) THEN <value> END) AS UNDETECTED_CASES,     CASE          WHEN COUNT(TRAN_ID) > <value>          THEN TO_CHAR((COUNT(CASE WHEN UPPER(DETECT_METHOD) NOT IN (<value>, <value>) THEN <value> END) * <value>.<value> / COUNT(TRAN_ID)), <value>) || <value>         ELSE <value>      END AS UNDETECTED_RATE,     <value> || TO_CHAR(SUM(DTL_CA_CLIENT_AMT), <value>) AS TOTAL_FRAUD_AMOUNT,     <value> || TO_CHAR(AVG(DTL_CA_CLIENT_AMT), <value>) AS AVG_FRAUD_AMOUNT,     COUNT(DISTINCT CHL_CT_TERM_CITY) AS CITIES_AFFECTED,     COUNT(DISTINCT PEGA_CASENUMBER) AS DISTINCT_CASES FROM CARD_TRAN_GROS_FRAU_TMP_<value>  WHERE      FRAUDTAG = <value> -- Focus on confirmed fraud cases only     AND TRANSACTION_DATE >= DATEADD(day, -<value>, CURRENT_DATE()) -- Last <value> months for recent patterns     AND CHL_CT_MER_MCC IS NOT NULL -- Ensure we have merchant category data     AND FRAUDTYPENAME IS NOT NULL -- Ensure we have fraud type data GROUP BY      CHL_CT_MER_MCC,     FRAUDTYPENAME,     COUNTRY_REGION HAVING      COUNT(TRAN_ID) >= <value> -- Filter for merchant patterns with meaningful volume ORDER BY      SUM(DTL_CA_CLIENT_AMT) DESC, -- Order by highest financial impact first     COUNT(TRAN_ID) DESC -- Then by fraud volume LIMIT <value>;",1,100,100,26.94,7.39,1,2.5,26,3.42,26,5.64,0,0,0,0,0,0,0.03,0.07,0,0,0,55.86,0.54,0.09,0.02,0,0,0,0,100,19.5,100,0,0,0,4,0,0,35.1,0.3,16.3,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,select * from IDENTIFIER(<value>) limit <value>,3,100,100,18.11,4.97,1,2.5,24,3.16,1,0.22,0,0,0,0,0,0,0.02,0.01,0,0,0,323.57,0.36,0.07,0,0,0,0,0,100,7.88,0,0,0,0,0,0,0,0,0,98.5,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"SELECT    TRAN_ID,    TRANSACTION_DATE,    FRAUDTYPENAME,    CONCAT(<value>, TO_CHAR(DTL_CA_CLIENT_AMT, <value>)) AS TRANSACTION_AMOUNT,   TRIM(UPPER(CHL_CT_TERM_OWNER_NAME)) AS MERCHANT_NAME,   COMMENTS FROM CARD_TRAN_GROS_FRAU_TMP_<value>  WHERE    TRANSACTION_DATE >= DATEADD(day, -<value>, CURRENT_DATE()) -- Last <value> weeks   AND UPPER(DETECT_METHOD) NOT IN (<value>, <value>) -- Undetected fraud cases   AND FRAUDTAG = <value> -- Confirmed fraud cases   AND DTL_CA_CLIENT_AMT > <value> -- High value threshold ORDER BY DTL_CA_CLIENT_AMT DESC LIMIT <value>;",1,100,100,14.2,3.89,1,2.5,171,22.5,41,8.89,0,0,0,0,0,0,0.08,0.01,0,0,0,90.71,0.21,0.02,0,0,0,0,0,100,7.71,41,0,0,0,20,0,0,10.1,0,6.1,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"SELECT    TRANSACTION_DATE, -- Grouping by transaction date as required   CHL_CT_TERM_OWNER_NAME AS MERCHANT_NAME, -- Grouping/identification by merchant   COUNT(DISTINCT PEGA_CASENUMBER) AS CASE_COUNT, -- Count of distinct cases for uniqueness   COUNT(TRAN_ID) AS TRANSACTION_COUNT, -- Number of Account Takeover transactions at merchant-date   TO_CHAR(SUM(DTL_CA_CLIENT_AMT),<value>) AS TOTAL_AMOUNT, -- Sum and format amount   COUNT(DISTINCT CHL_ID_CARD_NUM) AS DISTINCT_CARDS, -- Unique cards for context   COUNT(DISTINCT CQF_RULE_C_ID) AS DISTINCT_RULES, -- Distinct rules fired at merchant-date   COUNT(DISTINCT ATH_PC_POS) AS DISTINCT_POS_MODES -- Transaction characteristics: POS entry mode variety FROM CARD_TRAN_GROS_FRAU_TMP_<value> WHERE    FRAUDTYPENAME = <value> -- Only Account Take Over cases   AND FRAUDTAG = <value> -- Only fraud-positives   -- Only include cases occurring on the same day at the same merchant implicitly (by GROUP BY) GROUP BY    TRANSACTION_DATE,    CHL_CT_TERM_OWNER_NAME ORDER BY    TRANSACTION_DATE DESC,   TOTAL_AMOUNT DESC LIMIT <value>; -- Limit for output clarity and performance",1,100,100,14.13,3.87,1,2.5,66,8.68,49,10.63,0,0,0,0,0,0,0.04,0.07,0,0,0,99.57,0.27,0.01,0.01,0,0,0,0,100,25.02,55,0,0,0,79,0,0,20.5,0.4,13.9,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"SELECT   RULEID,    RULE_NAME,   STRATEGY_NAME,   COALESCE(SUM(ALERT_COUNT), <value>) AS TOTAL_ALERTS,   COALESCE(SUM(CONFIRMED_FRAUD_COUNT), <value>) AS TOTAL_CONFIRMED_FRAUDS,   COALESCE(TO_CHAR(SUM(FRAUD_EXPOSURE), <value>), <value>) AS  TOTAL_FRAUD_EXPOSURE ($) ,   CASE     WHEN SUM(ALERT_COUNT) > <value> THEN SUM(CONFIRMED_FRAUD_COUNT) * <value>.<value> / SUM(ALERT_COUNT)     ELSE <value>   END AS FRAUD_RATE,   CASE     WHEN SUM(ALERT_COUNT) > <value> THEN (<value> - (SUM(CONFIRMED_FRAUD_COUNT) * <value>.<value> / SUM(ALERT_COUNT))) * <value>     ELSE <value>   END AS  FALSE_POSITIVE_RATE (%)  FROM CARD_RULE_PERF_DAILY_TMP_<value> WHERE    RULEFIREDDATE >= DATEADD(month, -<value>, CURRENT_DATE()) -- Filter for last month of data   AND NOT REGEXP_LIKE(UPPER(RULE_NAME), <value>) -- Exclude only policy rules as requested   AND STRATEGY_NAME NOT ILIKE <value> -- Exclude dormant strategies (monitoring only, no actionable alerts)   AND STRATEGY_NAME NOT ILIKE <value> -- Exclude IAT strategies (monitoring only)   AND STRATEGY_NAME <> <value> -- Exclude background decline (no reliable fraud labels) GROUP BY    RULEID, RULE_NAME, STRATEGY_NAME HAVING     FALSE_POSITIVE_RATE (%)  > <value> -- Filter for high false positive rates over <value>% ORDER BY    FALSE_POSITIVE_RATE (%)  DESC, TOTAL_ALERTS DESC LIMIT <value>;",1,100,100,10.6,2.91,1,2.5,10,1.32,10,2.17,0,0,0,0,0,0,0.01,0,0,0,0,14.29,0.37,0.07,0,0,0,0,0,100,1,100,0,0,0,10,0,0,31.9,0,10,0,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,"SELECT      RULEID,      RULE_NAME,      STRATEGY_NAME,     SUM(ALERT_COUNT) AS TOTAL_ALERTS,     SUM(CONFIRMED_FRAUD_COUNT) AS TOTAL_CONFIRMED_FRAUDS,     SUM(FRAUD_EXPOSURE) AS TOTAL_FRAUD_EXPOSURE,     -- Calculate fraud rate as confirmed frauds divided by total alerts     CASE WHEN SUM(ALERT_COUNT) > <value>          THEN CAST(SUM(CONFIRMED_FRAUD_COUNT) AS FLOAT) / SUM(ALERT_COUNT)          ELSE <value> END AS FRAUD_RATE,     -- Calculate average fraud exposure per alert     CASE WHEN SUM(ALERT_COUNT) > <value>          THEN SUM(FRAUD_EXPOSURE) / SUM(ALERT_COUNT)          ELSE <value> END AS AVG_FRAUD_EXPOSURE_PER_ALERT FROM CARD_RULE_PERF_DAILY_TMP_<value>  WHERE RULEFIREDDATE >= DATEADD(month, -<value>, CURRENT_DATE()) -- Filter for last <value> months     AND UPPER(STRATEGY_NAME) NOT LIKE <value> -- Exclude dormant rules (not active)     AND UPPER(STRATEGY_NAME) NOT LIKE <value> -- Exclude IAT rules (not active)     AND STRATEGY_NAME <> <value> -- Exclude per filtering rules guidelines GROUP BY RULEID, RULE_NAME, STRATEGY_NAME HAVING SUM(ALERT_COUNT) > <value> -- Only include rules with any alerts ORDER BY TOTAL_ALERTS DESC LIMIT <value>;",1,100,100,8.33,2.28,1,2.5,11,1.45,11,2.39,0,0,0,0,0,0,0.01,0,0,0,0,2846.14,0.25,0.06,0,0,0,0,0,100,0.27,60,0,0,0,0,0,0,27.5,0,6641,1810.2,0,0,0
391.12,0.03,99.57,100,1,2.45,0,0,WH_USR_PRD_P01_FRAUMD_LABMLFRD_001,X-Small,Service Account,2)  > 0 and <  1 GB SMALL,SELECT COUNT(*) as row_count FROM CARD_RULE_PERF_DAILY_TMP_<value>,1,100,100,8.11,2.22,1,2.5,23,3.03,12,2.6,0,0,0,0,0,0,0.01,0,0,0,0,1.71,0.18,0.04,0,0,0,0,0,100,0.52,100,0,0,0,13,0,0,12.5,0,1,0,0,0,0
