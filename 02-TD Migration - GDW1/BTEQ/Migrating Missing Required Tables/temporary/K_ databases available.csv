"DataBaseName","TableName","Version","TableKind","ProtectionType","JournalFlag","CreatorName","RequestText","CommentString","ParentCount","ChildCount","NamedTblCheckCount","UnnamedTblCheckExist","PrimaryKeyIndexId","RepStatus","CreateTimeStamp","LastAlterName","LastAlterTimeStamp","RequestTxtOverflow","AccessCount","LastAccessTimeStamp","UtilVersion","QueueFlag","CommitOpt","TransLog","CheckOpt","TemporalProperty","ResolvedCurrent_Date","ResolvedCurrent_Timestamp","SystemDefinedJI","VTQualifier","TTQualifier","PIColumnCount","PartitioningLevels","LoadProperty","CurrentLoadId","LoadIdLayout","DelayedJI","LastArchiveId","LastFullArchiveId","BlockSize","FreeSpacePercent","MergeBlockRatio","CheckSum","BlockCompression","BlockCompressionAlgorithm","BlockCompressionLevel","TableHeaderFormat","RowSizeFormat","MapName","ColocationName","TVMFlavor","FastAlterTable","IncrementalRestoreEnabled","AuthName"
"K_PDDSTG","TMP_APPT_DEPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_DEPT AS GDW2_RESTORE.TMP_APPT_DEPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:39","singhp80","2025-07-12 07:56:39","NULL","3","2025-07-12 06:02:12","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_FEAT_OVRD_REAS_PL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_FEAT_OVRD_REAS_PLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_PLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_PL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:25","perumabh","2025-07-14 22:16:25","NULL","1","2025-07-14 22:16:25","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DAR_ACCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DAR_ACCT AS LOCKING TABLE K_STAR_CAD_PROD_DATA.DAR_ACCT  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.DAR_ACCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:45","perumabh","2025-07-14 22:20:45","NULL","1","2025-07-14 22:20:45","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_DOCU_METH","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_DOCU_METH   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_DOCU_METH FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_DOCU_METH;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:57","perumabh","2025-07-14 22:16:57","NULL","1","2025-07-14 22:16:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","BUSN_PTNR","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.BUSN_PTNR AS GDW2_RESTORE.BUSN_PTNR WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:13","PUDBAI016","2025-08-21 21:47:13","NULL","1","2025-08-22 11:37:33","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ORIG_APPT_SRCE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ORIG_APPT_SRCE AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:15:48","perumabh","2025-07-14 22:15:48","NULL","1","2025-07-14 22:15:48","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2017","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2017 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2017-01-02' and '2018-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","2","2025-08-06 20:39:10","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","WRK_APPT_PDCT_CL_PL_APP_PRD","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_PDCT_CL_PL_APP_PRD AS GDW2_RESTORE.WRK_APPT_PDCT_CL_PL_APP_PRD WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:39","singhp80","2025-07-12 07:56:39","NULL","3","2025-07-12 06:02:11","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EX_403_1_BV_BPB_PATY_COLL_CTCT_RPRT","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.EX_403_1_BV_BPB_PATY_COLL_CTCT_RPRT AS(SELECT DISTINCT    CUST_N,    TITL_C,    FRST_M,    MDLE_M,    FMLY_M,     ORGN_M,    'N' AS IS_SNSV_F,    'SELF' AS CONTACT_TYPE,       CAST(CAST (CALR_D  AS DATE FORMAT 'yyyy-mm-dd')AS VARCHAR(10)) AS VALID_FROM_D,     CAST( CAST('9999-12-31' AS DATE FORMAT 'yyyy-mm-dd') AS VARCHAR(10)) AS VALID_TO_D,	CALR_D AS BUSN_D    FROM B_D36_V_USR_TEC_1.BV_BPB_PATY_COLL_ATTR  PCAINNER JOIN B_D36_V_BAL_001_STD_0.DIMN_DATE DD ON 1=1 AND CALR_D BETWEEN PCA.EFFT_D AND PCA.EXPY_DINNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR ON BAPR.PATY_IDNN_BK = PCA.PATY_IDNN_BK AND DD.CALR_D BETWEEN BAPR.EFFT_D AND BAPR.EXPY_DINNER JOIN B_D36_V_USR_TEC_0.BV_BPB_ACCT_COLL_ARRS ARRS	ON ARRS.ACCT_IDNN_BK = BAPR.ACCT_IDNN_BK	AND DD.CALR_D = BUSN_D AND ( OWN_BPB_MNGE_F = 'Yes'   OR  BPB_PDCT_F = 'Yes'  ) 							WHERE 		(			BUSN_D = IS_IN_ARRS_D  	-- New in Arrears						OR				(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )	   )     -- Already in arrears   and    a change in attributes							OR				(		WAS_IN_ARRS_F = 'Yes' 	AND 	IS_IN_ARRS_F = 'No')   -- Leaving arrears		)			);","NULL","0","0","0","N ","NULL","NULL","2020-09-22 15:08:06","KOSTKAMA","2020-09-22 15:29:56","NULL","0","2020-09-22 15:30:04","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","ACCT_PATY_THA_NEW_RNGE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.ACCT_PATY_THA_NEW_RNGEAS LOCK TABLE K_PDDSTG.ACCT_PATY_THA_NEW_RNGEFOR ACCESS SELECT * FROM K_PDDSTG.ACCT_PATY_THA_NEW_RNGE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:56","perumabh","2025-07-14 22:05:56","NULL","1","2025-07-14 22:05:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","ACCT_REL_WSS_DITPS","1","T ","F ","NN  ","perumabh","  CREATE SET TABLE K_PDDSTG.ACCT_REL_WSS_DITPS ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'ACCOUNT IDENTIFIER' NOT NULL)PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:28","perumabh","2025-07-14 22:04:28","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","BV_RSS_DEPT_RPRT_LINE_SHDW","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.BV_RSS_DEPT_RPRT_LINE_SHDW (        RPRT_MAP_IDNN_BK       ,DEPT_IDNN_BK       ,PERD_C       ,SNAP_D       ,SCNO_IDNN_BK       ,REL_MNGE_NODE_C       ,SALE_CHNL_NODE_C       ,SHDW_TYPE_C       ,RVNU_A       ,MSUR_A       ,MSUR_Q       ,MSUR_R)-- ---------------------------------------------------------  SCRIPT NAME:  B_D02_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE_SHDW ----  DESCRIPTION: --  Business Vault RSS Department Report Line, Export View----  MODIFICATION HISTORY:--  VER   DATE         MODIFIED BY    DESCRIPTION--  ----  ----------  -------------  ------------------------------  0.1   03/05/2016   Ali Shamim  @SMS shadow project-- -----------------------------------------------------AS LOCKING ROW FOR ACCESSSELECT  FACT.RPRT_MAP_IDNN_BK     AS RPRT_MAP_IDNN_BK        ,FACT.DEPT_IDNN_BK         AS DEPT_IDNN_BK         ,FACT.PERD_C               AS PERD_C             ,FACT.SNAP_D               AS SNAP_D             ,FACT.SCNO_IDNN_BK         AS SCNO_IDNN_BK       ,FACT.REL_MNGE_NODE_C      AS REL_MNGE_NODE_C        ,FACT.SALE_CHNL_NODE_C  AS  SALE_CHNL_NODE_C        ,COALESCE(RM.SHDW_TYPE_C, 'UNKNOWN') AS SHDW_TYPE_C       ,SUM(FACT.RVNU_A*COALESCE(ADJ.MULT_N,1.0))  AS RVNU_A -- Multiplier used here       ,SUM(FACT.MSUR_A*COALESCE(ADJ.MULT_N,1.0))  AS MSUR_A -- Multiplier used here                        ,SUM(FACT.MSUR_Q*COALESCE(ADJ.MULT_N,1.0))  AS MSUR_Q -- Multiplier used here                             ,SUM(FACT.MSUR_R)          AS MSUR_R                        FROM B_D02_D_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR_PP FACT-- Join to get the maximum date of the month to be used to join to BV_RPRT_ENTY_HIER  since we have hierarchy at the month end levelINNER JOIN B_D02_V_BAL_001_STD_0.DIMN_DATE AS DDATON FACT.SNAP_D = DDAT.CALR_DLEFT OUTER JOIN (  SELECT              SNAP_D                                 AS SNAP_D          ,ENTY_NODE_C                     AS DEPT_IDNN_BK          ,ENTY_ANCS_NODE_C         AS SHDW_TYPE_C  FROM B_D02_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER               WHERE ENTY_HIER_M       = 'SHDW_TYPE_HIER'  AND   ENTY_NODE_LEAF_F  = 'Y'  AND   ENTY_LEVL_N-1     = ENTY_ANCS_LEVL_N  GROUP BY 1,2,3)                                                                                                    RMON    RM.DEPT_IDNN_BK  = FACT.SHDW_TYPE_C AND   RM.SNAP_D             = DDAT.CALR_MNTH_END_D-- Adjust (reduce) last week plans for one day for R_ID18-- PatchLEFT JOIN (      SELECT           'R_ID18'          AS RPRT_MAP_IDNN_BK                   ,'WEEK'           AS PERD_C              ,'PLAN'           AS SCNO_IDNN_BK              ,0.8              AS MULT_N              ,MAX(SNAP_D)      AS SNAP_D      FROM B_D02_D_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR_PP FACT      WHERE EXPY_D               = DATE'9999-12-31'      AND   RECORD_DELETED_FLAG  = 0      AND   RPRT_MAP_IDNN_BK     = 'R_ID18'       AND   PERD_C               = 'WEEK'       AND   SCNO_IDNN_BK         = 'PLAN')                                                                 ADJON    FACT.RPRT_MAP_IDNN_BK   = ADJ.RPRT_MAP_IDNN_BKAND   FACT.PERD_C             = ADJ.PERD_CAND   FACT.SCNO_IDNN_BK       = ADJ.SCNO_IDNN_BKAND   FACT.SNAP_D             = ADJ.SNAP_D-- Patch endWHERE FACT.EXPY_D              = DATE'9999-12-31'AND   FACT.RECORD_DELETED_FLAG = 0AND ((FACT.SALE_CHNL_NODE_C = 'ONLN' AND FACT.SHDW_TYPE_C IN ('COIN','SATD','COFN','COAP')) OR (FACT.SHDW_TYPE_C = 'UPFR'))GROUP BY 1,2,3,4,5,6,7,8;","NULL","0","0","0","N ","NULL","NULL","2016-07-27 17:10:19","kumarahe","2016-08-17 15:39:48","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVCBODS","MSTR_CNCT_PRXY_ACCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.MSTR_CNCT_PRXY_ACCT(	RECD_CNT,	ELEM_OF_A_CNCT_HIER_GRUP,	CNCT_TYPE_KEY,	SRCE_SYST_ISAC_CODE,	EXTL_CNCT_PART_1,	EXTL_CNCT_PART_2,	EXTL_CNCT_PART_3,	ACCT_CATG,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	NON_SAP_ACCT_IDNN,	NON_SAP_ACCT_SALE_PDCT,	NON_SAP_ACCT_NUMB,	CIF_PDCT_CODE,	CIF_SUB_PDCT_CODE,	APPT_CODE,	SRCE_SYST,	CIF_PDCT_IDNN,	CRIS_PDCT_C)	AS LOCKING ROW FOR ACCESSSELECT	RECD_CNT,	ELEM_OF_A_CNCT_HIER_GRUP,	CNCT_TYPE_KEY,	SRCE_SYST_ISAC_CODE,	EXTL_CNCT_PART_1,	EXTL_CNCT_PART_2,	EXTL_CNCT_PART_3,	ACCT_CATG,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	NON_SAP_ACCT_IDNN,	NON_SAP_ACCT_SALE_PDCT,	NON_SAP_ACCT_NUMB,	CIF_PDCT_CODE,	CIF_SUB_PDCT_CODE,	APPT_CODE,	SRCE_SYST,	CIF_PDCT_IDNN,	CRIS_PDCT_C  FROM	K_PDCBODS.MSTR_CNCT_PRXY_ACCT  WHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:53","perumabh","2025-08-22 11:37:53","NULL","1","2025-08-22 11:37:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_PHYS_ADRS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_PHYS_ADRS AS GDW2_RESTORE.TMP_PHYS_ADRS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:49","singhp80","2025-07-12 07:56:49","NULL","3","2025-07-12 06:02:21","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","PATY_APPT_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.PATY_APPT_PDCTAS LOCKING TABLE K_STAR_CAD_PROD_DATA.PATY_APPT_PDCTFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.PATY_APPT_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:14:23","perumabh","2025-07-14 22:14:23","NULL","1","2025-07-14 22:14:23","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PURP_PL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_PL AS GDW2_RESTORE.MAP_CSE_APPT_PURP_PL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:51","singhp80","2025-07-12 07:56:51","NULL","29","2025-08-13 15:59:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_136_23_MGMT_INFO_PDCT_MAP","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW  kostkama.TX_136_23_MGMT_INFO_PDCT_MAP(	GL_PDCT_IDNN_BK ,	POST_ALOC_GL_DEPT_IDNN_BK ,	PDCT_MTX_LEVL_1_C ,	PDCT_MTX_LEVL_1_M ,	PDCT_MTX_LEVL_2_C ,	PDCT_MTX_LEVL_2_M ,	PDCT_MTX_LEVL_3_C ,	PDCT_MTX_LEVL_3_M ,	PMGT_GRUP_CATG_C  ,	PMGT_GRUP_CATG_M  ,	PMGT_GRUP_SUB_CATG_C ,	PMGT_GRUP_SUB_CATG_M ,	MGMT_INFO_PG_C ,	MGMT_INFO_PG_M ,	MGMT_INFO_PDCG_C ,	MGMT_INFO_PDCG_M ,	MGMT_INFO_PDCT_SUB_CATG_C ,	MGMT_INFO_PDCT_SUB_CATG_M ,	CFIG_EFFT_D,	BUSN_STRT_D ,	BUSN_END_D  ,	MSTR_SRCE_SYST_C ) AS LOCKING	ROW FOR ACCESS (SELECT 	GL_PDCT_IDNN_BK ,	POST_ALOC_GL_DEPT_IDNN_BK ,	PDCT_MTX_LEVL_1_C ,	PDCT_MTX_LEVL_1_M ,	PDCT_MTX_LEVL_2_C ,	PDCT_MTX_LEVL_2_M ,	PDCT_MTX_LEVL_3_C ,	PDCT_MTX_LEVL_3_M ,	PMGT_GRUP_CATG_C  ,	PMGT_GRUP_CATG_M  ,	PMGT_GRUP_SUB_CATG_C ,	PMGT_GRUP_SUB_CATG_M ,	MGMT_INFO_PG_C ,	MGMT_INFO_PG_M ,	MGMT_INFO_PDCG_C ,	MGMT_INFO_PDCG_M ,	MGMT_INFO_PDCT_SUB_CATG_C ,	MGMT_INFO_PDCT_SUB_CATG_M ,	CFIG_EFFT_D,	BUSN_STRT_D ,	BUSN_END_D  ,	MSTR_SRCE_SYST_C 	FROM 	( SEL       GL_PDCT_IDNN_BK,       POST_ALOC_GL_DEPT_IDNN_BK,              PDCT_MTX_LEVL_1_C,       PDCT_MTX_LEVL_1_M,       PDCT_MTX_LEVL_2_C,       PDCT_MTX_LEVL_2_M,       PDCT_MTX_LEVL_3_C,       PDCT_MTX_LEVL_3_M,             PMGT_GRUP_CATG_C,       PMGT_GRUP_CATG_M,       PMGT_GRUP_SUB_CATG_C,       PMGT_GRUP_SUB_CATG_M,       PMGT_GL_PDCT_IDNN_BK,              MGMT_INFO_PG_C,        MGMT_INFO_PG_M,        MGMT_INFO_PDCG_C,        MGMT_INFO_PDCG_M,        MGMT_INFO_PDCT_SUB_CATG_C,       MGMT_INFO_PDCT_SUB_CATG_M,              CFIG_EFFT_D,              CASE                   WHEN GL_PDCT_IDNN_BK  = INPT_COLM_2 THEN 1                    WHEN PMGT_GRUP_SUB_CATG_M = INPT_COLM_2 THEN 2                   WHEN PMGT_GRUP_CATG_M = INPT_COLM_2 THEN 3                   WHEN INPT_COLM_2 = 'UN_MAPPED' THEN 4                   WHEN INPT_COLM_2 = '*' THEN 5                   ELSE 6                   END AS RNK2,              	(SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE  WHERE STREAM_KEY = 1334) AS BUSN_STRT_D,	DATE '9999-12-31' AS BUSN_END_D,	'GRD' AS MSTR_SRCE_SYST_C                            FROM (                SEL                                PSGL.GL_PDCT_IDNN_BK ,                            PSGL.POST_ALOC_GL_DEPT_IDNN_BK,                                                         PDCT_MTX_LEVL_1_C,                            PDCT_MTX_LEVL_1_M,                            PDCT_MTX_LEVL_2_C,                            PDCT_MTX_LEVL_2_M,                            PDCT_MTX_LEVL_3_C,                            PDCT_MTX_LEVL_3_M,                                    COALESCE(MGMT.TARG_NUMC_C, 'N/A') AS PMGT_GRUP_CATG_C,                            COALESCE(MGMT.TARG_CHAR_C, 'Other') AS PMGT_GRUP_CATG_M,                            COALESCE(MGMT.SRCE_NUMC_1_C, 'N/A') AS PMGT_GRUP_SUB_CATG_C,                            COALESCE(MGMT.SRCE_CHAR_1_C, 'Other') AS PMGT_GRUP_SUB_CATG_M,                            MGMT.GL_PDCT_IDNN_BK AS PMGT_GL_PDCT_IDNN_BK,                                                        SRE_MAP.INPT_COLM_1,                              SRE_MAP.INPT_COLM_2,   	                                                         CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 9999 ELSE SRE_MAP.OPUT_COLM_1  END AS MGMT_INFO_PG_C,                             CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 'Other' ELSE SRE_MAP.OPUT_COLM_2  END AS MGMT_INFO_PG_M,                             CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 9999 ELSE SRE_MAP.OPUT_COLM_3  END AS MGMT_INFO_PDCG_C,                             CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 'Other' ELSE SRE_MAP.OPUT_COLM_4  END AS MGMT_INFO_PDCG_M,                             CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 9999 ELSE SRE_MAP.OPUT_COLM_5  END AS MGMT_INFO_PDCT_SUB_CATG_C,                            CASE WHEN SRE_MAP.OPUT_COLM_1 IS NULL THEN 'Other' ELSE SRE_MAP.OPUT_COLM_6  END AS MGMT_INFO_PDCT_SUB_CATG_M,                            CFIG_EFFT_D,                                                                    					      CASE 					                 WHEN PDCT_MTX_LEVL_3_C = INPT_COLM_1 THEN 1 					                  WHEN PDCT_MTX_LEVL_2_C = INPT_COLM_1 THEN 2					                  WHEN PDCT_MTX_LEVL_1_C = INPT_COLM_1 THEN 3					                  WHEN INPT_COLM_1 = 'UN_MAPPED' THEN 4					                  WHEN INPT_COLM_1 = '*' THEN 5					                  ELSE 6					      END AS RNK1                                                                                           FROM B_D17_D_INP_001_STD_0.TX_136_21_PDCT_MAP_PSGL_STG PSGL                                             LEFT JOIN   B_D17_V_INP_001_STD_0.TX_136_22_PDCT_MAP_RVN_STG MATRIX ON MATRIX.DEPT_LEAF = PSGL.POST_ALOC_GL_DEPT_IDNN_BK                        LEFT JOIN (                                                 SEL TARG_NUMC_C, TARG_CHAR_C, SRCE_NUMC_1_C, SRCE_CHAR_1_C, SRCE_CHAR_2_C AS GL_PDCT_IDNN_BK , 												(SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE  WHERE STREAM_KEY = 1334) AS BUSINESS_DATE                                                FROM B_D17_V_COX_001_STD_0.GRD_GNRC_MAP  MGMT                                                 WHERE MAP_TYPE_C = 'PDCT_MGMT_GRP'  AND BUSINESS_DATE BETWEEN EFFT_D AND EXPY_D                                                ) MGMT                                                          ON MGMT.GL_PDCT_IDNN_BK = PSGL.GL_PDCT_IDNN_BK                                                                              LEFT JOIN (                                            SEL        SRE_MAP.*,                                                            (SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE  WHERE STREAM_KEY = 1334) AS BUSINESS_DATE,                                                            SRE_MAP.EFFT_D AS CFIG_EFFT_D                                            FROM B_D17_V_REF_001_STD_0.R_CFIG_MAP SRE_MAP                                             WHERE BUSINESS_DATE BETWEEN EFFT_D AND EXPY_D                                            AND SRE_MAP.MAP_TYPE_M = 'MGMT_INFO_PDCT_HIER'                                                                                        --ORDER BY OPUT_COLM_1, OPUT_COLM_3, OPUT_COLM_5                                                                        ) SRE_MAP                                                        ON SRE_MAP.MAP_TYPE_M = 'MGMT_INFO_PDCT_HIER'                                                        AND (           SRE_MAP.INPT_COLM_1 = '*'                                          OR  SRE_MAP.INPT_COLM_1 = TRIM(MATRIX.PDCT_MTX_LEVL_3_C)                                          OR  SRE_MAP.INPT_COLM_1 = TRIM(MATRIX.PDCT_MTX_LEVL_2_C)                                          OR  SRE_MAP.INPT_COLM_1 = TRIM(MATRIX.PDCT_MTX_LEVL_1_C)                                          OR  SRE_MAP.INPT_COLM_1 = 'UN_MAPPED'                                                                                 )                                                                                                           AND (                SRE_MAP.INPT_COLM_2 = '*'                                        OR        SRE_MAP.INPT_COLM_2 = MGMT.GL_PDCT_IDNN_BK                                         OR        SRE_MAP.INPT_COLM_2 = MGMT.SRCE_CHAR_1_C                                          OR        SRE_MAP.INPT_COLM_2 = MGMT.TARG_CHAR_C                                        OR        SRE_MAP.INPT_COLM_2 = 'UN_MAPPED'                                      )                              		WHERE PSGL.GL_PDCT_IDNN_BK = '001628'				AND PSGL.POST_ALOC_GL_DEPT_IDNN_BK ='012476'                                                                 QUALIFY RNK1 = MIN (RNK1) OVER (PARTITION BY PSGL.GL_PDCT_IDNN_BK, PSGL.POST_ALOC_GL_DEPT_IDNN_BK ORDER BY PSGL.GL_PDCT_IDNN_BK, PSGL.POST_ALOC_GL_DEPT_IDNN_BK)     ) BASE                                                                         QUALIFY RNK2 = MIN (RNK2) OVER (PARTITION BY GL_PDCT_IDNN_BK, POST_ALOC_GL_DEPT_IDNN_BK ORDER BY GL_PDCT_IDNN_BK, POST_ALOC_GL_DEPT_IDNN_BK) 		  )  PDCT_MAP                                                                   );","NULL","0","0","0","N ","NULL","NULL","2018-01-17 11:12:07","KOSTKAMA","2018-01-23 16:56:38","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","DERV_ACCT_PATY_ROW_SECU_FIX","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_ROW_SECU_FIXAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_ROW_SECU_FIXFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_ROW_SECU_FIX;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:58","perumabh","2025-07-14 22:05:58","NULL","1","2025-07-14 22:05:58","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_DEPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_DEPT AS GDW2_RESTORE.TMP_APPT_PDCT_DEPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:12","singhp80","2025-07-12 07:57:12","NULL","3","2025-07-12 06:02:28","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT AS GDW2_RESTORE.TMP_APPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:40","singhp80","2025-07-12 07:56:40","NULL","3","2025-07-12 06:02:13","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","UTIL_PROS_ISAC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.UTIL_PROS_ISAC AS GDW2_RESTORE.UTIL_PROS_ISAC_PDSRCCS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 08:01:14","singhp80","2025-07-12 08:01:14","NULL","31","2025-08-05 14:08:37","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_BASE_ACCT_BALN_GL_Prod","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.FACT_BASE_ACCT_BALN_GL_Prod--this base view will give All BALANCE details at daily level for all daily measures and monthly measures(for month end date)--this base view does not deal with measures which have back dated transactions--please pass SNAP_D & MSUR_CODE_IDNN_BK(measure code) value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but this view used new new code block structure.(      MSUR_CODE_IDNN_BK    ,BALN_TYPE_LEAF_IDNN_BK     ,SNAP_D    ,ACCT_IDNN_HK    ,GL_DEPT_IDNN_BK   ,GL_OPER_UNIT_IDNN_BK   ,GL_SRCE_IDNN_BK    ,GL_PRJC_IDNN_BK   ,GL_BUSN_UNIT_IDNN_BK   ,GL_AFLT_IDNN_BK   ,GL_PDCT_IDNN_BK   ,GL_ACCT_IDNN_BK   ,GL_CNCY_IDNN_BK    ,CNCY_IDNN_BK    ,USGE_CNCY_CATG_IDNN_BK    ,MSUR_A    ,MSTR_SRCE_SYST_C    ,EFFT_D    ,EXPY_D    ,EFFT_TS    ,EXPY_TS    ,RECD_ISRT_DTTM )AS LOCKING ROW FOR ACCESSSELECT     MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,COALESCE(SMI.MSUR_IDNN_SUB_BK     ,'UNKNOWN') AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- CCS GL Code blocks Balances     SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C         =       'BALN'AND SMN.MSTR_SRCE_SYST_C    =       'GDW2-CCS'AND SMN.MSUR_CODE_IDNN_BK   NOT IN ('BALN_A')AND SMN.MSUR_A              <>       0UNION ALLSELECT -- ALL Code blocks except  CCS AND FRL    SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C       =        'BALN'AND SMN.MSTR_SRCE_SYST_C  NOT IN  ('GDW2-CCS','FRL')AND SMN.MSUR_A            <> 0     UNION ALLSELECT -- CCS GL Code blocks Balances     SMSR.MSUR_IDNN_HK   ,SMSR.MSUR_QLFY_C   ,SMSR.MSUR_CODE_IDNN_BK   ,SMSR.SNAP_D   ,SMSR.MSUR_A   ,SMSR.CNCY_IDNN_BK   ,SMSR.USGE_CNCY_CATG_IDNN_BK   ,SMSR.MSTR_SRCE_SYST_C   ,SMSR.EFFT_D   ,SMSR.EXPY_D   ,SMSR.EFFT_TS   ,SMSR.EXPY_TS   ,SMSR.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_MNLY_SNAP_M SMSR -- 1:1 viewWHERE     SMSR.MSUR_QLFY_C       = 'BALN'AND SMSR.EXPY_D            =  DATE'9999-12-31'AND SMSR.MSTR_SRCE_SYST_C  = 'GDW2-CCS'AND SMSR.MSUR_CODE_IDNN_BK NOT IN ('CYCL_POIT_BALN_A')  UNION ALLSELECT -- ALL Code blocks except  CCS AND FRL     SMSR.MSUR_IDNN_HK    ,SMSR.MSUR_QLFY_C    ,SMSR.MSUR_CODE_IDNN_BK    ,SMSR.SNAP_D    ,SMSR.MSUR_A    ,SMSR.CNCY_IDNN_BK    ,SMSR.USGE_CNCY_CATG_IDNN_BK    ,SMSR.MSTR_SRCE_SYST_C    ,SMSR.EFFT_D    ,SMSR.EXPY_D    ,SMSR.EFFT_TS    ,SMSR.EXPY_TS    ,SMSR.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_MNLY_SNAP_M SMSR -- 1:1 viewWHERE     SMSR.MSUR_QLFY_C       = 'BALN'AND SMSR.EXPY_D            =  DATE'9999-12-31'AND SMSR.MSTR_SRCE_SYST_C  NOT IN 'GDW2-CCS'AND SMSR.MSUR_CODE_IDNN_BK NOT IN ('CYCL_POIT_BALN_A','NET_CLSE_BALN_A'))                  MSURINNER JOIN    B_D16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code BlockLEFT JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 --fetch balance by balance type LEFT JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_IDNN      SMI   ON  MSUR.MSUR_IDNN_HK         = SMI.MSUR_IDNN_HK                                                AND SMI.MSUR_IDNN_SUB_BK_M   IN ('BALN_TYPE_LEAF_IDNN_BK','ORIG_BALN_TYPE_C')                                                and smi.expy_d  = '9999-12-31'                                                and smi.record_deleted_flag = 0;","NULL","0","0","0","N ","NULL","NULL","2016-06-21 11:36:59","KOSTKAMA","2016-06-21 14:38:46","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","DIMN_DATE","1","V ","F ","NN  ","KOSTKAMA"," REPLACE VIEW KOSTKAMA.DIMN_DATE AS ( 	SELECT DATE '2020-10-06' AS Business_Date );","NULL","0","0","0","N ","NULL","NULL","2020-10-21 12:23:52","KOSTKAMA","2020-10-21 15:10:05","NULL","1","2023-07-14 03:37:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_ACCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_ACCT AS GDW2_RESTORE.APPT_PDCT_ACCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:34","singhp80","2025-07-12 07:55:34","NULL","28","2025-08-13 13:28:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","ACCT_PATY_DEDUP","1","T ","F ","NN  ","perumabh","  CREATE SET TABLE K_PDDSTG.ACCT_PATY_DEDUP ,NO FALLBACK ,      NO BEFORE JOURNAL,      NO AFTER JOURNAL,      CHECKSUM = DEFAULT      (       ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,       ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,       PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL        COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */       PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),       SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),       EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,       EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,       ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0        ) PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:27","perumabh","2025-07-14 22:04:27","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_FEAT AS GDW2_RESTORE.APPT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:45","singhp80","2025-07-12 07:55:45","NULL","28","2025-08-13 13:22:55","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","ACCT_PATY_REL_THA","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.ACCT_PATY_REL_THAAS LOCK TABLE K_PDDSTG.ACCT_PATY_REL_THAFOR ACCESS SELECT * FROM K_PDDSTG.ACCT_PATY_REL_THA;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:55","perumabh","2025-07-14 22:05:55","NULL","1","2025-07-14 22:05:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","ACCT_MSTR_CYT_DATA","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.ACCT_MSTR_CYT_DATA(	ACCT,	BUSN_PTNR_NUMB,	SRCE_SYST_ISAC_CODE,	VALD_FROM,	VALD_TO,	USER_IN_CYT_CALC,	CYT_DOCU_QOTE,	RSDT_STUS,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	RECD_CNT,	LAST_UPDT_ON,	BDT_OBJC_APPT,	CNCT_PART_ID,	OBJC_FUNC,	PROS_TIME_STMP,	LAST_CHNG_BY,	BUSN_TRAN_CATG_FOR_THE_CHNG,	PDCG,	CUST_ENHC_2_ID,	TIME_STMP_SHRT_FORM,	VALD_FROM_DTTS,	VALD_TO_DTTS)	AS LOCKING TABLE K_PDCBODS.ACCT_MSTR_CYT_DATA FOR ACCESSSELECT	ACCT,	BUSN_PTNR_NUMB,	SRCE_SYST_ISAC_CODE,	VALD_FROM,	VALD_TO,	USER_IN_CYT_CALC,	CYT_DOCU_QOTE,	RSDT_STUS,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	RECD_CNT,	LAST_UPDT_ON,	BDT_OBJC_APPT,	CNCT_PART_ID,	OBJC_FUNC,	PROS_TIME_STMP,	LAST_CHNG_BY,	BUSN_TRAN_CATG_FOR_THE_CHNG,	PDCG,	CUST_ENHC_2_ID,	TIME_STMP_SHRT_FORM,	VALD_FROM_DTTS,	VALD_TO_DTTS  FROM	K_PDCBODS.ACCT_MSTR_CYT_DATA  WHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:13","perumabh","2025-08-22 11:37:13","NULL","1","2025-08-22 11:37:13","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ACCT_XREF_MAS_DAR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_XREF_MAS_DAR AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_XREF_MAS_DAR  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.ACCT_XREF_MAS_DAR;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:21:19","perumabh","2025-07-14 22:21:19","NULL","1","2025-07-14 22:21:19","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_PRTF_ACCT_PATY_PSST","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.DERV_PRTF_ACCT_PATY_PSST ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier',      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier',      ACCT_PRTF_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Portfolio Code',   RANK_I INTEGER,             /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder  Change  */   PATY_ACCT_REL_C CHAR(6)   /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder  Change  */       )PRIMARY INDEX ( ACCT_I )INDEX(PATY_I);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:47","perumabh","2025-07-14 22:04:47","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_QLFY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QLFY AS GDW2_RESTORE.MAP_CSE_APPT_QLFY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:02","singhp80","2025-07-12 07:57:02","NULL","29","2025-08-13 16:01:05","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KHANA15","gss_resusage_td150_pdcr","1","M ","F ","NN  ","KHANA15","replace macro khana15.gss_resusage_td150_pdcr( BEGINDATE (DATE, DEFAULT DATE), ENDDATE (DATE, DEFAULT DATE), BEGINTIME (INT, DEFAULT 0), ENDTIME (INT, DEFAULT 240000))AS (sel'TD15v1.72_pdcr' (named ""Version""),spma_dt.LogDate (named ""LogDate""),cast(spma_dt.LogDay as char(3)) (named ""LogDOW""),spma_dt.LogTime (named ""LogTime""),cast((spma_dt.LogDate || ' ' || spma_dt.LogTime) as timestamp(0)) (named ""Timestamp""),extract(hour from ""Timestamp"") (named ""Hour""),extract(minute from ""Timestamp"") / 10 * 10 (named ""Minute10""),SPMAInterval (named ""RSSInterval"") /* System data */ ,spma_dt.NodeType (Named ""NodeGen""),case when spma_dt.vproc1 > 0 then spma_dt.vproc1 else 'PE-only Node'end (Named ""AMPS""),spma_dt.NCPUs (Named ""CPUs""),info.infodata (named ""DBSRelease"") ,PM_COD (Named ""PMCOD""),WM_COD (Named ""WMCOD""),IO_COD (Named ""IOCOD"") ,cast(((casewhen ( NodeGen in ('6800','6800H','1800','2800','680'))  then 5.35 * CPUswhen ( NodeGen in ('6750','6750H','6750P','6750HX','6750X','675','675HDD','2750','2755','1750')) then 5 * CPUswhen ( NodeGen in ('6700','6700H','2700','1700','670H','6700HDD') and CPUs = 32) then 167.74when ( NodeGen in ('6700','6700C','670C') and CPUs = 16) then 99.19when ( NodeGen in ('6690','6690H','2690') and CPUs = 24) then 132.25when ( NodeGen in ('6680','6650H','6650','5650H','5650','4650','2650','1650') and CPUs = 24) then 129.03when ( NodeGen in ('6650C','6650','5650C','5650','560C') and CPUs = 12 ) then 68.38when ( NodeGen in ('5600H','5600','560H','4600','2580','1600','1580') and CPUs = 16) then 86.02when ( NodeGen in ('5600C','5600','560C') and CPUs = 8) then 45.59when ( NodeGen in ('5550','2550','1550') and CPUs = 8) then 50.89when ( NodeGen in ('5550','5555') and CPUs = 4) then 27.63when ( NodeGen in ('5500H','5500','2500') and CPUs = 4) then 31.72when ( NodeGen in ('5500C','5500') and CPUs = 2) then 16.81when NodeGen = '5450' then 13.36when NodeGen = '5400' then 11.72when NodeGen in ('5380','4980') then 8.80when NodeGen in ('5350','4950') then 6.13when NodeGen in ('5300','4900') then 4.68else 0end) ) as decimal(5,2)) (named ""NodeT"") /*** end grouping fields ***/ , ( (0.005 * (TtlPosReadSecGen + TtlPreReadSecGen + 2*TtlWriteSecGen)) +(TtlReadMBSecGen + 2*TtlWriteMBSecGen)/150 ) / .8 (format 'ZZ,ZZ9.9')(named ""D""),NodeT * NumNodes * AvgCPUBusy / 100 /.8 (format 'ZZ,ZZ9.9') (Named ""T""),min(MemSizeGB) (Named ""MinMemSizeGB""),max(MemSizeGB) (Named ""MaxMemSizeGB""),count(distinct(spma_dt.NodeID)) (Named ""NumNodes"") /* SPMA data */ ,sum(CPUUtil) / NumNodes / CPUs / RSSInterval (format 'ZZ9.9') (named ""AvgCPUBusy""),max(CPUUtil) / CPUs / RSSInterval (format 'ZZ9.9') (named ""MaxCPUBusy""),sum(OSPctCPU) / NumNodes (format 'ZZ9.9') (named ""AvgPctOSCPU""),max(OSPctCPU)(format 'ZZ9.9') (named ""MaxPctOSCPU""),sum(IOWaitCPUUtil) / NumNodes / CPUs / RSSInterval (format 'ZZ9.9') (named ""AvgPctIOWait""),sum(RunQSz) / NumNodes (format 'z,zz9.9') (named ""AvgRunQSz""),max(MaxRunQSz) (format 'z,zz9.9') (named ""MaxRunQSz""),max(IOWaitCPUUtil) / CPUs / RSSInterval (format 'ZZ9.9') (named ""MaxPctIOWait""),zeroifnull( sum(SPMAPhysReads + SPMAPhysPreReads) /nullifzero(sum(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites)) * 100) (format 'ZZ9.9') (named ""PctReadsCnt""),zeroifnull( sum(SPMAPhysReadKB + SPMAPhysPreReadKB) /nullifzero(sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB)) * 100) (format 'ZZ9.9') (named ""PctReadsKB"") ,sum(SPMAPhysReads) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgPosReadSec""),sum(SPMAPhysPreReads) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgPreReadSec""),sum(SPMAPhysWrites) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgWriteSec"") ,sum(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgIOPsSec""),max(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites) / RSSInterval (format 'ZZ,ZZ9.9') (named ""MaxIOPsSec""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgMBSecNode""),max(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'ZZZ,ZZ9.9') (named ""MaxMBSecNode""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgReadMBSecNode""),sum(SPMAPhysWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgWriteMBSecNode"") ,sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlMBSecGen""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlReadMBSecGen""),sum(SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlWriteMBSecGen"") ,sum(SPMAPhysReads) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlPosReadSecGen""),sum(SPMAPhysPreReads) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlPreReadSecGen""),sum(SPMAPhysWrites) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlWriteSecGen"") ,zeroifnull( TtlReadMBSecGen / nullifzero(TtlPosReadSecGen + TtlPreReadSecGen) * 1024.0 ) (format 'Z,ZZ9.9') (named ""KBRead""),zeroifnull( TtlWriteMBSecGen / nullifzero(TtlWriteSecGen) * 1024.0 ) (format 'Z,ZZ9.9')(named ""KBWrite"") /* SVPR Cache Effectiveness */ ,zeroifnull(CASEWHEN TtlPhyPermReadMBSecNode_SVPR > LogPermReadMBSecNode_SVPR THEN 0ELSE (LogPermReadMBSecNode_SVPR - TtlPhyPermReadMBSecNode_SVPR)/ nullifzero(LogPermReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""PermCacheEffKB""),zeroifnull(CASEWHEN TtlPhySpoolReadMBSecNode_SVPR > LogSpoolReadMBSecNode_SVPR THEN 0ELSE (LogSpoolReadMBSecNode_SVPR - TtlPhySpoolReadMBSecNode_SVPR)/ nullifzero(LogSpoolReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""SpoolCacheEffKB""),zeroifnull(CASEWHEN TtlPhyReadMBSecNode_SVPR > TtlLogReadMBSecNode_SVPR THEN 0ELSE (TtlLogReadMBSecNode_SVPR - TtlPhyReadMBSecNode_SVPR)/ nullifzero(TtlLogReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""TotalCacheEffKB"") ,zeroifnull( (LogPermReadSecNode_SVPR-TtlPhyPermReadsSecNode_SVPR)/ nullifzero(LogPermReadSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermCacheEffCnt""),zeroifnull( (LogSpoolReadSecNode_SVPR-TtlPhySpoolReadsSecNode_SVPR)/ nullifzero(LogSpoolReadSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolCacheEffCnt"") ,zeroifnull( (LogPermDBSecNode_SVPR-PhyPermDBSecNode_SVPR)/ nullifzero(LogPermDBSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermDBCacheEffCnt""),zeroifnull( (LogPermCISecNode_SVPR-PhyPermCISecNode_SVPR)/ nullifzero(LogPermCISecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermCICacheEffCnt"") ,zeroifnull( (LogSpoolDBSecNode_SVPR-PhySpoolDBSecNode_SVPR)/ nullifzero(LogSpoolDBSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolDBCacheEffCnt""),zeroifnull( (LogSpoolCISecNode_SVPR-PhySpoolCISecNode_SVPR)/ nullifzero(LogSpoolCISecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolCICacheEffCnt"") /* SVPR I/O Metrics */ ,sum(LogPermDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermDBSecNode_SVPR""),sum(LogPermCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermCISecNode_SVPR""),sum(LogSpoolDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolDBSecNode_SVPR""),sum(LogSpoolCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolCISecNode_SVPR"") ,sum(PhySpoolCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolDBSecNode_SVPR""),sum(PhySpoolDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolCISecNode_SVPR""),sum(PhyPermDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermDBSecNode_SVPR""),sum(PhyPermCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermCISecNode_SVPR"") ,sum(LogPermRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermReadSecNode_SVPR""),sum(LogSpoolRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolReadSecNode_SVPR""),sum(LogPermReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""LogPermReadMBSecNode_SVPR""),sum(LogSpoolReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""LogSpoolReadMBSecNode_SVPR"") ,sum(PhyPermReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermPosReadMBSecNode_SVPR""),sum(PhyPermPreReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermPreReadMBSecNode_SVPR""),sum(PhySpoolReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolPosReadMBSecNode_SVPR""),sum(PhySpoolPreReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolPreReadMBSecNode_SVPR"") ,sum(PhyPermRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermPosReadSecNode_SVPR""),sum(PhyPermPreRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermPreReadSecNode_SVPR""),sum(PhySpoolRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolPosReadSecNode_SVPR""),sum(PhySpoolPreRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolPreReadSecNode_SVPR"") ,sum(PhyPermWrite) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermWriteSecNode_SVPR""),sum(PhySpoolWrite) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolWriteSecNode_SVPR""),sum(PhyPermWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermWriteMBSecNode_SVPR""),sum(PhySpoolWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolWriteMBSecNode_SVPR"") ,PhyPermPosReadMBSecNode_SVPR + PhyPermPreReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhyPermReadMBSecNode_SVPR""),PhySpoolPosReadMBSecNode_SVPR + PhySpoolPreReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhySpoolReadMBSecNode_SVPR""),PhyPermWriteMBSecNode_SVPR + PermAgedWriteMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhyPermWriteMBSecNode_SVPR""),PhySpoolWriteMBSecNode_SVPR + SpoolAgedWriteMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhySpoolWriteMBSecNode_SVPR"") ,PhyPermPosReadSecNode_SVPR + PhyPermPreReadSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyPermReadsSecNode_SVPR""),PhySpoolPosReadSecNode_SVPR + PhySpoolPreReadSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhySpoolReadsSecNode_SVPR""),PhyPermWriteSecNode_SVPR + PhyPermWriteSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyWriteSecNode_SVPR""),PhyPermWriteMBSecNode_SVPR + PhySpoolWriteMBSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyWriteMBSecNode_SVPR"") ,LogPermReadMBSecNode_SVPR + LogSpoolReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlLogReadMBSecNode_SVPR""),TtlPhyPermReadMBSecNode_SVPR + TtlPhySpoolReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(format 'ZZZ,ZZ9.9')(named ""TtlPhyReadMBSecNode_SVPR"") /* SVPR extended perm db caching information */ ,sum(FCRRequests) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadRequestsSecNode_SVPR""),sum(SuccessfulFCRs) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadSecNode_SVPR""),sum(FCRBlocksRead) / NumNodes / RSSInterval (format 'ZZ,ZZZ,ZZ9.9') (named ""FCRBlocksRead"")(named ""CylReadBlocksSecNode_SVPR""),sum(FCRDeniedThresh) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""CylReadDenThrSecNode_SVPR""),sum(FCRDeniedCache)  / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadDenCacheSecNode_SVPR"") ,sum(PermDirtyRelease) / NumNodes / RSSInterval (named ""PermDirtyRelSecNode_SVPR""),sum(PermCleanRelease) / NumNodes / RSSInterval (named ""PermCleanRelSecNode_SVPR""),sum(PermDirtyReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""PermDirtyRelMBSecNode_SVPR""),sum(PermCleanReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""PermCleanRelMBSecNode_SVPR""),sum(PermDirtyAgedWriteKB) / 1024.0 / NumNodes / RSSInterval(named ""PermAgedWriteMBSecNode_SVPR"") ,sum(SpoolDirtyRelease) / NumNodes / RSSInterval (named ""SpoolDirtyRelSecNode_SVPR""),sum(SpoolCleanRelease) / NumNodes / RSSInterval (named ""SpoolCleanRelSecNode_SVPR""),sum(SpoolDirtyReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolDirtyRelMBSecNode_SVPR""),sum(SpoolCleanReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolCleanRelMBSecNode_SVPR""),sum(SpoolDirtyAgedWriteKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolAgedWriteMBSecNode_SVPR"") ,sum(WALTJWriteKB)  / 1024.0 / NumNodes / RSSInterval (named ""WALTJWriteMBSecNode_SVPR""),sum(WALTJDirtyReleaseKB)  / 1024.0 / NumNodes / RSSInterval (named ""WALTJDirtyRelMBSecNode_SVPR""),sum(PhysWALTJReadKB) / 1024.0 / NumNodes / RSSInterval (named ""PhysWALTJReadMBSecNode_SVPR"") /* SPMA Physical Bynet */ ,sum(PtPReads) / NumNodes / RSSInterval (fo","NULL","0","0","0","N ","NULL","NULL","2017-07-06 14:59:07","KHANA15","2017-07-06 14:59:07","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_PURP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_PURP AS GDW2_RESTORE.APPT_PDCT_PURP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:22","singhp80","2025-07-12 07:55:22","NULL","28","2025-08-13 13:46:37","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","CLS_UNID_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.CLS_UNID_PATY AS LOCKING TABLE K_STAR_CAD_PROD_DATA.CLS_UNID_PATY  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.CLS_UNID_PATY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:44","perumabh","2025-07-14 22:20:44","NULL","1","2025-07-14 22:20:44","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PURP_CLAS_CL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PURP_CLAS_CLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CLAS_CLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CLAS_CL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:43","perumabh","2025-07-14 22:17:43","NULL","1","2025-07-14 22:17:43","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_FA_ENV_EVNT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_FA_ENV_EVNT AS GDW2_RESTORE.TMP_FA_ENV_EVNT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:13","singhp80","2025-07-12 07:57:13","NULL","3","2025-07-12 06:02:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BV_BPB_ACCT_COLL_ARRS_mk4","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.BV_BPB_ACCT_COLL_ARRS_mk4(BUSN_D,ACCT_IDNN_BK,PATY_IDNN_BK,ACCT_PATY_REL_X,SRCE_C,BPB_PDCT_F_1,BPB_COLL_PDCT_F_1,IS_IN_ARRS_F,WAS_IN_ARRS_F,IS_IN_ARRS_D,MIN_IS_IN_ARRS_D,MAX_NOT_IN_ARRS_D,OWN_BPB_MNGE_F,FNCL_DFCL_F,FD_CHNG_D,FNCL_STUS_CLSE_D)AS LOCKING ROW FOR ACCESS    SELECT         BD.Business_Date AS BUSN_D,        BAPR1.ACCT_IDNN_BK,         BAPR1.PATY_IDNN_BK,        BAPR1.ACCT_PATY_REL_X,		BAPR1.MSTR_SRCE_SYST_C AS SRCE_C,        CASE WHEN SUM( CASE WHEN ARR1.BPB_PDCT_F = 'Yes' THEN 1 ELSE 0 END ) > 0 then 'Yes' ELSE 'No' END AS BPB_PDCT_F_1,		CASE WHEN SUM( CASE WHEN BACA.BPB_COLL_PDCT_F = 'Yes' THEN 1 ELSE 0 END ) > 0 then 'Yes' ELSE 'No' END AS BPB_COLL_PDCT_F_1,        CASE WHEN SUM( CASE WHEN ARR1.IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE 'No' END AS IS_IN_ARRS_F,        CASE WHEN SUM( CASE WHEN ARR2.IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE 'No' END AS WAS_IN_ARRS_F,        MIN ( ARR1.IN_ARRS_SNCE_D) AS IS_IN_ARRS_D,		MIN ( ARR1.MIN_IS_IN_ARRS_D ) AS MIN_IS_IN_ARRS_D,				MAX( ARR1.MIN_NOT_IN_ARRS_D ) AS MAX_NOT_IN_ARRS_D,        CASE WHEN SUM ( CASE WHEN PCA.MNGE_BUSN_UNIT_C IN ('BPB', 'RM') THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE 'No' END AS OWN_BPB_MNGE_F,		CASE WHEN SUM ( CASE WHEN FD.STUS_C = 'Open' THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE  'No' END AS FNCL_DFCL_F,				MIN(CHNG_D) AS FD_CHNG_D,		MAX ( CASE WHEN FD.PATY_I IS NULL THEN NULL WHEN FD.STUS_C = 'Closed' THEN FD.CLSE_D ELSE NULL END )  AS FNCL_STUS_CLSE_D    FROM B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR1        --INNER JOIN B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE BD ON 1=1 AND STREAM_KEY=2237	INNER JOIN ( SELECT DATE '2020-10-06' AS Business_Date ) BD ON 1=1        INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR2        ON BAPR2.ACCT_IDNN_BK = BAPR1.ACCT_IDNN_BK        AND BAPR2.ACCT_PATY_REL_X not in ( 'Contact' , 'Guarantor')		AND BAPR1.ACCT_PATY_REL_X not in ( 'Contact' , 'Guarantor')        AND BD.Business_Date BETWEEN BAPR1.EFFT_D AND BAPR1.EXPY_D        AND BD.Business_Date BETWEEN BAPR2.EFFT_D AND BAPR2.EXPY_D        INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR3        ON BAPR3.PATY_IDNN_BK = BAPR2.PATY_IDNN_BK        AND BAPR3.ACCT_PATY_REL_X not in ( 'Contact' , 'Guarantor')        AND BD.Business_Date BETWEEN BAPR3.EFFT_D AND BAPR3.EXPY_D            INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCA        ON PCA.PATY_IDNN_BK = BAPR3.PATY_IDNN_BK        AND BD.Business_Date BETWEEN PCA.EFFT_D AND PCA.EXPY_D            INNER JOIN B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR BACA        ON BACA.ACCT_IDNN_BK = BAPR1.ACCT_IDNN_BK        AND BD.Business_Date BETWEEN BACA.EFFT_D AND BACA.EXPY_D		    INNER JOIN 		( 				SELECT ACCT_IDNN_BK, IN_ARRS_SNCE_D , BPB_PDCT_F,  EFFT_D, EXPY_D, 									MIN ( COALESCE ( IN_ARRS_SNCE_D, DATE '9999-12-31' )  )  OVER (PARTITION BY ACCT_IDNN_BK ) AS MIN_IS_IN_ARRS_D,									MAX ( CASE WHEN IN_ARRS_SNCE_D IS NULL THEN EXPY_D END) OVER (PARTITION BY ACCT_IDNN_BK ) AS MIN_NOT_IN_ARRS_D  				FROM  B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR  		) ARR1        ON ARR1.ACCT_IDNN_BK = BAPR3.ACCT_IDNN_BK        AND BD.Business_Date BETWEEN ARR1.EFFT_D AND ARR1.EXPY_D        	LEFT JOIN (					SELECT 					  '123' as evnt_i					, '123' as paty_i					, 'Open' as STUS_C -- min(case when ES.STUS_C = 'COMT' then 'Closed' else 'Open' end) as STUS_C					, Null as CLSE_D -- min(case when ES.STUS_C = 'COMT' then ES.EFFT_D else null end) as CLSE_D					, Null as CHNG_D --min(case when ES.STUS_C <> 'COMT' then ES.EFFT_D else null end) as CHNG_D		) FD		ON oreplace(FD.paty_i, 'CIFPT', 'SAP~PT~')  = BAPR1.PATY_IDNN_BK		    LEFT JOIN b_d36_v_bal_001_std_0.BV_ACCT_COLL_ATTR ARR2        ON ARR1.ACCT_IDNN_BK = ARR2.ACCT_IDNN_BK		AND BD.BUSINESS_DATE -1 BETWEEN ARR2.EFFT_D AND ARR2.EXPY_D    GROUP BY 1,2,3,4,5		   HAVING	   	   /*** Post-Delinquency **/	   	( 	   		BPB_COLL_PDCT_F_1 = 'Yes'  AND   ( OWN_BPB_MNGE_F = 'Yes'   OR  BPB_PDCT_F_1 = 'Yes'  )   			   		AND (	IS_IN_ARRS_F = 'Yes'  OR	( WAS_IN_ARRS_F = 'Yes' AND IS_IN_ARRS_F = 'No'  )	)		)						/** Pre-Delinquency**/		OR		   		FNCL_DFCL_F = 'Yes' 				/** Pre-Delinquency Exit **/		OR    		FNCL_STUS_CLSE_D = BUSN_D;","NULL","0","0","0","N ","NULL","NULL","2020-11-12 11:37:18","KOSTKAMA","2020-11-12 11:41:11","NULL","0","2020-11-12 13:30:18","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","PATY_INT_GRUP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.PATY_INT_GRUP AS GDW2_RESTORE.PATY_INT_GRUP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:10","singhp80","2025-07-12 07:55:10","NULL","31","2025-08-13 16:22:06","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","2","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_SM_CASE_STUS","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_SM_CASE_STUSAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS FORACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:46","perumabh","2025-07-14 22:08:46","NULL","1","2025-07-14 22:08:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","DIMN_MGMT_INFO_PDCT_HIER","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.DIMN_MGMT_INFO_PDCT_HIER(	 MGMT_INFO_PDCT_HIER_IDNN,	 MGMT_INFO_PG_C,	 MGMT_INFO_PG_M,	 MGMT_INFO_PDCG_C,	 MGMT_INFO_PDCG_M,	 MGMT_INFO_PDCT_SUB_CATG_C,	 MGMT_INFO_PDCT_SUB_CATG_M,	 MSTR_SRCE_SYST_C,	 DSPL_SEQN_N,	 DSPL_SEQN_BUSN_STRT_D,	 RECORD_DELETED_FLAG,	 BUSN_STRT_D,	 BUSN_END_D,	 EFFT_D,	 EXPY_D)AS LOCKING ROW FOR ACCESSSELECT	 MGMT_INFO_PDCT_HIER_IDNN,	 MGMT_INFO_PG_C,	 MGMT_INFO_PG_M,	 MGMT_INFO_PDCG_C,	 MGMT_INFO_PDCG_M,	 MGMT_INFO_PDCT_SUB_CATG_C,	 MGMT_INFO_PDCT_SUB_CATG_M,	 MSTR_SRCE_SYST_C,	 RCM.OPUT_COLM_7 AS DSPL_SEQN_N,	 RCM.BUSN_STRT_D AS DSPL_SEQN_BUSN_STRT_D,	 RECORD_DELETED_FLAG,	 MIN(RMIP.BUSN_STRT_D) AS BUSN_STRT_D,	 MAX(RMIP.BUSN_END_D) AS BUSN_END_D,	 MIN(RMIP.EFFT_D) AS EFFT_D,	 MAX(RMIP.EXPY_D) AS EXPY_D	   FROM B_D17_V_REF_001_STD_0.R_MGMT_INFO_PDCT_MAP RMIP          JOIN (		SEL OPUT_COLM_1, OPUT_COLM_3, OPUT_COLM_5, OPUT_COLM_7, BUSN_STRT_D, BUSN_END_D  					FROM B_D17_V_REF_001_STD_0.R_CFIG_MAP   					--FROM B_D17_D_inp_001_STD_0.R_CFIG_MAP_mk   					WHERE MAP_TYPE_M = 'MGMT_INFO_PDCT_HIER'   					  	AND RECORD_DELETED_FLAG=0  						AND EXPY_D='9999-12-31'  					GROUP BY 1,2,3,4,5,6  				)RCM  				  		ON RCM.OPUT_COLM_1 = RMIP.MGMT_INFO_PG_C  		AND RCM.OPUT_COLM_3 = RMIP.MGMT_INFO_PDCG_C  		AND RCM.OPUT_COLM_5 = RMIP.MGMT_INFO_PDCT_SUB_CATG_C  		AND RCM.BUSN_STRT_D <=  RMIP.BUSN_END_D   		AND RCM.BUSN_END_D >= RMIP.BUSN_STRT_D  WHERE RMIP.RECORD_DELETED_FLAG=0  AND RMIP.EXPY_D='9999-12-31'    GROUP BY 1,2,3,4,5,6,7,8,9,10 ,11    QUALIFY ROW_NUMBER() OVER (PARTITION BY  MGMT_INFO_PDCT_HIER_IDNN ORDER BY MGMT_INFO_PDCT_HIER_IDNN, DSPL_SEQN_BUSN_STRT_D DESC) = 1 ;","NULL","0","0","0","N ","NULL","NULL","2018-01-19 15:00:52","KOSTKAMA","2018-01-19 15:01:42","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_APPT_CODE_HM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_CODE_HM(        HLM_APPT_TYPE_CATG_I,        APPT_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CODE_HM FOR ACCESSSELECT        HLM_APPT_TYPE_CATG_I,        APPT_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CODE_HM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:08","perumabh","2025-07-14 22:18:08","NULL","1","2025-07-14 22:18:08","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_OVRD_FEE_FRQ_CL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_OVRD_FEE_FRQ_CL AS GDW2_RESTORE.MAP_CSE_OVRD_FEE_FRQ_CL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:59","singhp80","2025-07-12 07:56:59","NULL","29","2025-08-14 12:12:02","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2016","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2016 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2016-01-02' and '2017-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","2","2025-08-06 19:54:13","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT","1","T ","F ","NN  ","PUDBAI011","CREATE TABLE  K_STAR_CAD_PROD_DATA.BUSN_EVNT AS GDW2_RESTORE.BUSN_EVNT WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 18:11:18","PUDBAI011","2025-07-12 18:11:18","NULL","234","2025-08-09 09:27:36","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_CURR","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.DERV_ACCT_PATY_CURR ,NO FALLBACK ,      NO BEFORE JOURNAL,      NO AFTER JOURNAL,      CHECKSUM = DEFAULT      (       ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,       ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,       PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL        COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */       PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),       SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),       EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,       EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,       ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0        ) PRIMARY INDEX ( ACCT_I ) INDEX ( ASSC_ACCT_I ) INDEX ( PATY_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:47","perumabh","2025-07-14 22:04:47","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_RPAY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_RPAY AS GDW2_RESTORE.TMP_APPT_PDCT_RPAY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:41","singhp80","2025-07-12 07:56:41","NULL","3","2025-07-12 06:02:13","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","GRD_GNRC_MAP_BUSN_SEGM_PRTY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.GRD_GNRC_MAP_BUSN_SEGM_PRTYAS LOCK TABLE K_PDDSTG.GRD_GNRC_MAP_BUSN_SEGM_PRTYFOR ACCESS SELECT * FROM K_PDDSTG.GRD_GNRC_MAP_BUSN_SEGM_PRTY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:00","perumabh","2025-07-14 22:06:00","NULL","1","2025-07-14 22:06:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kuoje","GRD_RPRT_CALR_CLYR_ETL","1","V ","F ","NN  ","kuoje","/**--tc_nam: DIMN_DATE.sql^03.DDL.00.2**/       REPLACE VIEW kuoje.GRD_RPRT_CALR_CLYR_ETL (   CALR_CALR_D  ,CALR_DAY_SNAM_M  ,CALR_DAY_LONG_M  ,CALR_DAY_N  ,CALR_DAY_SNCE_1900_N  ,CALR_DATJ_D  ,CALR_NON_WORK_DAY_F  ,CALR_WKND_F  ,CALR_NON_WORK_DAY_TYPE_C  ,CALR_NON_WORK_DAY_M  ,CALR_WEEK_N  ,CALR_RPRT_YEAR_WEEK_N  ,CALR_WEEK_DAY_N  ,CALR_RPRT_WEEK_DAY_N  ,CALR_WEEK_SNCE_1900_N  ,CALR_WEEK_FRST_DAY_D  ,CALR_WEEK_LAST_DAY_D  ,CALR_WEEK_DAY_RNGE_X  ,CALR_RPRT_WEEK_DAY_RNGE_X  ,CLWK_RPRT_TMPD_STRT_D  ,CLWK_RPRT_TMPD_END_D  ,CLWK_RPRT_TMPD_LABL_M  ,CLWK_RPRT_TMPD_LABL_X  ,CALR_RPRT_WEEK_SNCE_1900_N  ,CALR_MNTH_N  ,CALR_MNTH_SNAM_M  ,CALR_MNTH_LONG_M  ,CALR_MNTH_YEAR_SNAM_M  ,CALR_MNTH_YEAR_LONG_M  ,CALR_MNTH_FRST_DAY_D  ,CALR_MNTH_LAST_DAY_D  ,CALR_MNTH_DAY_N  ,CALR_MNTH_WEEK_N  ,CALR_MNTH_SNCE_1900_N  ,CALR_QRTR_N  ,CALR_QRTR_MNTH_N  ,CALR_QRTR_SNAM_M  ,CALR_QRTR_LONG_M  ,CALR_QRTR_SNCE_1900_N  ,CALR_HFYR_N  ,CALR_HFYR_SNAM_M  ,CALR_HFYR_LONG_M  ,CALR_HFYR_SNCE_1900_N  ,CALR_YEAR_N  ,CLYR_RPRT_TMPD_LABL_M  ,CALR_YEAR_SNAM_M  ,CALR_YEAR_LONG_M  ,CLYR_RPRT_TMPD_LABL_X  ,CLYR_RPRT_TMPD_STRT_D  ,CLYR_RPRT_TMPD_END_D  ,CALR_LEAP_YEAR_F  ,CALR_YEAR_MONTH_N  ,CALR_RPRT_MNTH_WE_STRT_D  ,CALR_RPRT_MNTH_WE_END_D  ,CALR_QRTR_FRST_DAY_D  ,CALR_QRTR_LAST_DAY_D  ,CALR_HFYR_FRST_DAY_D  ,CALR_HFYR_LAST_DAY_D ) AS SELECT    CALR_CALR_D  ,CALR_DAY_SNAM_M  ,CALR_DAY_LONG_M  ,CALR_DAY_N  ,CALR_DAY_SNCE_1900_N  ,CALR_DATJ_D  ,CALR_NON_WORK_DAY_F  ,CALR_WKND_F  ,CALR_NON_WORK_DAY_TYPE_C  ,CALR_NON_WORK_DAY_M  ,CALR_WEEK_N  ,CALR_RPRT_YEAR_WEEK_N  ,CALR_WEEK_DAY_N  ,CALR_RPRT_WEEK_DAY_N  ,CALR_WEEK_SNCE_1900_N  ,CALR_WEEK_FRST_DAY_D  ,CALR_WEEK_LAST_DAY_D  ,CALR_WEEK_DAY_RNGE_X  ,CALR_RPRT_WEEK_DAY_RNGE_X  ,CLWK_RPRT_TMPD_STRT_D  ,CLWK_RPRT_TMPD_END_D  ,CLWK_RPRT_TMPD_LABL_M  ,CLWK_RPRT_TMPD_LABL_X  ,CALR_RPRT_WEEK_SNCE_1900_N  ,CALR_MNTH_N  ,CALR_MNTH_SNAM_M  ,CALR_MNTH_LONG_M  ,CALR_MNTH_YEAR_SNAM_M  ,CALR_MNTH_YEAR_LONG_M  ,CALR_MNTH_FRST_DAY_D  ,CALR_MNTH_LAST_DAY_D  ,CALR_MNTH_DAY_N  ,CALR_MNTH_WEEK_N  ,CALR_MNTH_SNCE_1900_N  ,CALR_QRTR_N  ,CALR_QRTR_MNTH_N  ,CALR_QRTR_SNAM_M  ,CALR_QRTR_LONG_M  ,CALR_QRTR_SNCE_1900_N  ,CALR_HFYR_N  ,CALR_HFYR_SNAM_M  ,CALR_HFYR_LONG_M  ,CALR_HFYR_SNCE_1900_N  ,CALR_YEAR_N  ,CLYR_RPRT_TMPD_LABL_M  ,CALR_YEAR_SNAM_M  ,CALR_YEAR_LONG_M  ,CLYR_RPRT_TMPD_LABL_X  ,CLYR_RPRT_TMPD_STRT_D  ,CLYR_RPRT_TMPD_END_D  ,CALR_LEAP_YEAR_F  ,CALR_YEAR_MONTH_N  ,CALR_RPRT_MNTH_WE_STRT_D  ,CALR_RPRT_MNTH_WE_END_D  ,CALR_QRTR_FRST_DAY_D  ,CALR_QRTR_LAST_DAY_D  ,CALR_HFYR_FRST_DAY_D  ,CALR_HFYR_LAST_DAY_D FROM PVTECH.GRD_RPRT_CALR_CLYR ;","NULL","0","0","0","N ","NULL","NULL","2015-07-02 15:11:07","kuoje","2015-07-13 17:23:52","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","PATY_INT_GRUP","1","V ","F ","NN  ","perumabh"," REPLACE VIEW K_PVTECH.PATY_INT_GRUP(        INT_GRUP_I,	 PATY_I,	 EFFT_D,	 EXPY_D,	 SRCE_SYST_C,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 PRIM_CLNT_F,	 REL_I,	 SRCE_SYST_PATY_INT_GRUP_I,	 ORIG_SRCE_SYST_PATY_TYPE_C,	 ORIG_SRCE_SYST_PATY_I,	 REL_C,	 VALD_FROM_D,	 VALD_TO_D,	 ROW_SECU_ACCS_C,	 PRIM_CLNT_SLCT_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.PATY_INT_GRUP FOR ACCESSSELECT        INT_GRUP_I,	 PATY_I,	 EFFT_D,	 EXPY_D,	 SRCE_SYST_C,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 PRIM_CLNT_F,	 REL_I,	 SRCE_SYST_PATY_INT_GRUP_I,	 ORIG_SRCE_SYST_PATY_TYPE_C,	 ORIG_SRCE_SYST_PATY_I,	 REL_C,	 VALD_FROM_D,	 VALD_TO_D,	 ROW_SECU_ACCS_C,	 PRIM_CLNT_SLCT_C  FROM        K_STAR_CAD_PROD_DATA.PATY_INT_GRUP WHERE (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:39:09","perumabh","2025-07-14 22:39:28","NULL","3","2025-07-14 23:45:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_BASE_ACCT_BALN_GL1","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.FACT_BASE_ACCT_BALN_GL1--this base view will give All BALANCE details at daily level for all daily measures--this base view does not deal with measures which have back dated transactions--please pass SNAP_D & MSUR_CODE_IDNN_BK(measure code) value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but this view used new new code block structure.(      MSUR_CODE_IDNN_BK    ,BALN_TYPE_LEAF_IDNN_BK     ,SNAP_D    ,ACCT_IDNN_HK    ,GL_DEPT_IDNN_BK   ,GL_OPER_UNIT_IDNN_BK   ,GL_SRCE_IDNN_BK    ,GL_PRJC_IDNN_BK   ,GL_BUSN_UNIT_IDNN_BK   ,GL_AFLT_IDNN_BK   ,GL_PDCT_IDNN_BK   ,GL_ACCT_IDNN_BK   ,GL_CNCY_IDNN_BK    ,CNCY_IDNN_BK    ,USGE_CNCY_CATG_IDNN_BK    ,MSUR_A    ,MSTR_SRCE_SYST_C    ,EFFT_D    ,EXPY_D    ,EFFT_TS    ,EXPY_TS    ,RECD_ISRT_DTTM )AS LOCKING ROW FOR ACCESSSELECT     MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,'UNKNOWN' AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- CCS GL Code blocks Balances     SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C         =       'BALN'--AND SMN.MSTR_SRCE_SYST_C    <>    'GDW-AFS'   --   'GDW2-CCS'--AND SMN.MSUR_CODE_IDNN_BK   NOT IN ('BALN_A')AND SMN.MSUR_A              <>       0)                  MSURINNER JOIN    B_D16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code Blockinner JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 UNION ALLSELECT    MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,COALESCE(SMI.MSUR_IDNN_SUB_BK     ,'UNKNOWN') AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- ALL Code blocks except  CCS AND FRL    SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C       =        'BALN'--AND SMN.MSTR_SRCE_SYST_C  =  'GDW-AFS'  --NOT IN  ('GDW2-CCS','FRL')AND SMN.MSUR_A            <> 0     )                  MSURINNER JOIN    B_D16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code BlockINNER JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 --fetch balance by balance type INNER JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_IDNN      SMI   ON  MSUR.MSUR_IDNN_HK         = SMI.MSUR_IDNN_HK                                                AND SMI.MSUR_IDNN_SUB_BK_M   IN ('BALN_TYPE_LEAF_IDNN_BK','ORIG_BALN_TYPE_C');","NULL","0","0","0","N ","NULL","NULL","2016-06-09 13:49:18","KOSTKAMA","2016-06-10 12:21:39","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","prtf_test_2","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.prtf_test_2AS LOCKING ROW FOR ACCESS (SELECTB_D00_F_GBL_001_STD_0.GETHASHKEY(HIER_NODE_QLFY_C,HIER_NODE_C)  AS HIER_NODE_IDNN_HK,B_D00_F_GBL_001_STD_0.GETHASHKEY(HIER_NODE_QLFY_C,HIER_NODE_C,ANCS_HIER_NODE_QLFY_C,ANCS_HIER_NODE_C) AS HIER_NODE_HIER_NODE_IDNN_HK ,B_D00_F_GBL_001_STD_0.GETHASHKEY(ANCS_HIER_NODE_QLFY_C,ANCS_HIER_NODE_C) AS REL_HIER_NODE_IDNN_HK,HIER_NODE_QLFY_C || '~'  || HIER_NODE_C AS  HIER_NODE_IDNN_BK,HIER_NODE_IDNN_BK || '~' || REL_HIER_NODE_IDNN_BK AS HIER_NODE_HIER_NODE_IDNN_BK,ANCS_HIER_NODE_QLFY_C || '~'  || ANCS_HIER_NODE_C AS  REL_HIER_NODE_IDNN_BK,HIER_NODE_C,MSTR_SRCE_SYST_C,BUSN_STRT_D,HIER_NODE_LEVL_N,HIER_NODE_M,HIER_M,HIER_NODE_LEAF_F,HIER_NODE_DSPL_SEQN_N,HIER_NODE_ANCS_LEVL_N,ANCS_HIER_NODE_C,ANCS_HIER_NODE_M,HIER_NODE_X,ROLE_C,HIER_NODE_QLFY_C,ANCS_HIER_NODE_QLFY_CFROM(    SEL                      AD.BUSINESS_DATE AS BUSN_STRT_D,                CAST('BPB_PRTF_DEPT_HIER' AS VARCHAR(20)) AS HIER_M,                CAST('GDW' AS VARCHAR(10)) AS MSTR_SRCE_SYST_C,	            CAST('ANCS' AS VARCHAR(10)) AS ROLE_C,                BASE.ENTY_NODE_C AS  HIER_NODE_C,                BASE.ENTY_ANCS_NODE_C AS ANCS_HIER_NODE_C,                BASE.ENTY_NODE_QLFY_C AS HIER_NODE_QLFY_C,                BASE.ENTY_LEVL_N AS HIER_NODE_LEVL_N,                BASE.ENTY_ANCS_LEVL_N AS HIER_NODE_ANCS_LEVL_N ,                BASE.ENTY_NODE_M AS HIER_NODE_M,                CASE     WHEN NODE_X_OFFS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'        ELSE NODE_X_OFFS.OPUT_COLM_1 END AS HIER_NODE_X,                BASE.ENTY_ANCS_NODE_M AS ANCS_HIER_NODE_M,                CASE   WHEN NODE_X_ANCS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'         ELSE NODE_X_ANCS.OPUT_COLM_1 END AS ANCS_HIER_NODE_X,                                            ENTY_ANCS_NODE_QLFY_C AS ANCS_HIER_NODE_QLFY_C,                            BASE.ENTY_NODE_LEAF_F AS HIER_NODE_LEAF_F,                                 CASE   WHEN BASE.ENTY_NODE_QLFY_C = 'DEPT' THEN MEMB.DSPL_SEQN_N                                 WHEN BASE.ENTY_NODE_QLFY_C <> 'DEPT' AND ENTY_LEVL_N - ENTY_ANCS_LEVL_N < 3 THEN row_number() OVER (PARTITION BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_C ORDER BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_M, ENTY_NODE_M, ENTY_NODE_C ASC)                                ELSE 1                                END AS HIER_NODE_DSPL_SEQN_N         FROM (                                                                                      /* Relationships between intermediate department levels - combinations between level 1 and 4 */                                                                                                               SEL       OFFSPRING_ANCS_DEPT_NODE_C AS ENTY_NODE_C                                                                    , DN_OFFS.NODE_M AS ENTY_NODE_M                                                                    , 'DEPT' AS ENTY_NODE_QLFY_C                                                                    , ANCS_ANCS_DEPT_NODE_C AS ENTY_ANCS_NODE_C                                                                    , DN_ANCS.NODE_M AS ENTY_ANCS_NODE_M                                                                    , 'DEPT' AS ENTY_ANCS_NODE_QLFY_C                                                                                                                                                                                                                                                                               , OFFSPRING_ANCS_LEVL_N AS ENTY_LEVL_N                                                                    , ANCS_ANCS_LEVL_N AS ENTY_ANCS_LEVL_N                                                                    , CASE    WHEN OFFSPRING_ANCS_DEPT_NODE_C = DEPT_IDNN_BK THEN 'Y'                                                                      WHEN OFFSPRING_ANCS_LEVL_N = 5 THEN 'Y' ELSE 'N' END AS ENTY_NODE_LEAF_F                                                                                                                                                                                   FROM  (                                                                                                                            SEL DEPT_IDNN_BK,                                                                            OFFSPRING.DEPT_NODE_C    AS DEPT_NODE_C,                                                                            OFFSPRING.ANCS_DEPT_NODE_C      AS OFFSPRING_ANCS_DEPT_NODE_C,                                                                            OFFSPRING.ANCS_LEVL_N      AS OFFSPRING_ANCS_LEVL_N,                                                                            ANCS.ANCS_DEPT_NODE_C       AS ANCS_ANCS_DEPT_NODE_C,                                                                            ANCS.ANCS_LEVL_N        AS ANCS_ANCS_LEVL_N                                                                                                                                                FROM B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR OFFSPRING                                                                                                                                        INNER JOIN B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR ANCS                                                                                        ON ANCS.DEPT_NODE_C = OFFSPRING.DEPT_NODE_C                                                                                         AND ANCS.ANCS_LEVL_N <= OFFSPRING.ANCS_LEVL_N                                                                                                                                                             INNER JOIN         B_S17_V_SHR_001_STD_0.H_DEPT HD    ON HD.DEPT_IDNN_BK = OFFSPRING.DEPT_NODE_C                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730' GROUP BY 1,2)  GDH ON GDH.DEPT_LEAF_NODE_C= OFFSPRING.DEPT_NODE_C                                                                                                                                          WHERE OFFSPRING.ANCS_LEVL_N <=4                                                                                                                                          QUALIFY               ROW_NUMBER() OVER (PARTITION BY OFFSPRING_ANCS_DEPT_NODE_C,  ANCS_ANCS_DEPT_NODE_C ORDER BY OFFSPRING_ANCS_DEPT_NODE_C, ANCS_ANCS_DEPT_NODE_C ASC) = 1                                                                                                                             ) BASE1                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730'GROUP BY 1,2)  GDF ON GDF.DEPT_LEAF_NODE_C = BASE1.DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_OFFS ON DN_OFFS.NODE_C = BASE1.OFFSPRING_ANCS_DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_ANCS ON DN_ANCS.NODE_C = BASE1.ANCS_ANCS_DEPT_NODE_C                                                        WHERE                ENTY_NODE_LEAF_F = 'N'                                                                                                       QUALIFY               ROW_NUMBER() OVER (PARTITION BY ENTY_NODE_C,  ENTY_ANCS_NODE_C ORDER BY ENTY_NODE_C, ENTY_ANCS_NODE_C ASC) = 1                                        UNION ALL                                                                                                 /* Empl vs. Prtf vs. Team vs. Leaf dept Relationships */                                                                                            SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_ANCS_NODE_C,                                                                                          ENTY_ANCS_NODE_M,                                                                                          ENTY_ANCS_NODE_QLFY_C,                                                                                           ENTY_LEVL_N,                                                                                          ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                           FROM                      B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER APHR                                                                                     INNER JOIN          B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDF ON GDF.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDF.DEPT_L2_NODE_C = 'NDEPT902730'                              --AND '2017-03-07' BETWEEN SDH.BUSN_STRT_D AND SDH.BUSN_END_D                                                                                                                                                                                       UNION ALL                                                                                                                                                /* Empl, Prtf, Team, Dept    vs. insetf   relationships */                                                                                                              SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_NODE_C AS ENTY_ANCS_NODE_C,                                                                                          ENTY_NODE_M AS ENTY_ANCS_NODE_M,                                                                                          ENTY_NODE_QLFY_C AS ENTY_ANCS_NODE_QLFY_C,                                                                                          ENTY_LEVL_N AS ENTY_NODE_LEVL_N,                                                                                          ENTY_LEVL_N AS ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                                                                                                                              FROM                    (  SEL DISTINCT   ENTY_NODE_C, ENTY_NODE_QLFY_C, ENTY_NODE_M,ENTY_LEVL_N                                                                                            FROM                      B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER  APHR                                                                                            INNER JOIN        B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDH ON GDH.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDH.DEPT_L2_NODE_C = 'NDEPT902730'                                                                                            WHERE                ENTY_NODE_QLFY_C <> 'DEPT'                                                                                     ) BASE1                                                                                                                   ","NULL","0","0","0","N ","NULL","NULL","2017-05-02 09:46:09","KOSTKAMA","2017-05-02 09:46:09","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","ARRS","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.ARRS AS (	SELECT 		CALR_D AS BUSINESS_DATE,		BAPR1.ACCT_IDNN_BK, 		--BAPR1.BPB_COLL_PDCT_F, 		--BAPR1.BPB_PDCT_F,  		BAPR1.PATY_IDNN_BK,		BAPR1.ACCT_PATY_REL_X,		--ARR1.IN_ARRS_SNCE_D AS IS_IN_ARRS_SNCE_D, 		--ARR2.IN_ARRS_SNCE_D AS WAS_IN_ARRS_SNCE_D, ARR1.EFFT_D, ARR1.EXPY_D 		CASE WHEN SUM( CASE WHEN ARR1.BPB_PDCT_F = 'Yes' THEN 1 ELSE 0 END ) > 0 then 'Yes' ELSE 'No' END AS BPB_PDCT_F,		CASE WHEN SUM( CASE WHEN ARR1.IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE 'No' END AS IS_IN_ARRS_FLAG,		CASE WHEN SUM( CASE WHEN ARR2.IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 0 THEN 'Yes' ELSE 'No' END AS WAS_IN_ARRS_FLAG,		MIN( ARR1.IN_ARRS_SNCE_D) AS IS_IN_ARRS_DATE/*	SELECT 		CALR_D AS BUSINESS_DATE,		BAPR1.ACCT_IDNN_BK AS BAPR1_ACCT, BAPR1.PATY_IDNN_BK AS BAPR1_PATY, BAPR1.ACCT_PATY_REL_X AS BAPR1_ACCT_PATY_REL_X,		BAPR2.ACCT_IDNN_BK AS BAPR2_ACCT, BAPR2.PATY_IDNN_BK AS BAPR2_PATY, BAPR2.ACCT_PATY_REL_X AS BAPR2_ACCT_PATY_REL_X,		BAPR3.ACCT_IDNN_BK AS BAPR3_ACCT, BAPR3.PATY_IDNN_BK AS BAPR3_PATY, BAPR3.ACCT_PATY_REL_X AS BAPR3_ACCT_PATY_REL_X,		ARR1.IN_ARRS_SNCE_D*/		FROM B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR1	INNER JOIN B_D36_V_BAL_001_STD_0.DIMN_DATE DD 	ON 1=1 		INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR2		ON BAPR2.ACCT_IDNN_BK = BAPR1.ACCT_IDNN_BK		AND BAPR2.ACCT_PATY_REL_X <> 'Contact Person' 		AND CALR_D BETWEEN BAPR1.EFFT_D AND BAPR1.EXPY_D		AND CALR_D BETWEEN BAPR2.EFFT_D AND BAPR2.EXPY_D		INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR3		ON BAPR3.PATY_IDNN_BK = BAPR2.PATY_IDNN_BK		AND BAPR3.ACCT_PATY_REL_X <> 'Contact Person' 		AND CALR_D BETWEEN BAPR3.EFFT_D AND BAPR3.EXPY_D			INNER JOIN B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ARR1		ON ARR1.ACCT_IDNN_BK = BAPR3.ACCT_IDNN_BK		AND ARR1.BPB_COLL_PDCT_F = 'Yes'  --ADDED		AND DD.CALR_D BETWEEN ARR1.EFFT_D AND ARR1.EXPY_D			LEFT JOIN B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ARR2		ON ARR1.ACCT_IDNN_BK = ARR2.ACCT_IDNN_BK		AND ARR2.EXPY_D = ARR1.EFFT_D -1		--WHERE ( ARR1.IN_ARRS_SNCE_D IS NOT NULL OR ARR2.IN_ARRS_SNCE_D IS NOT NULL )  AND  ARR1.BPB_COLL_PDCT_F = 'Yes'  		GROUP BY 1,2,3,4		HAVING IS_IN_ARRS_FLAG = 'Yes' OR  WAS_IN_ARRS_FLAG = 'Yes'	);","NULL","0","0","0","N ","NULL","NULL","2020-09-22 12:35:10","KOSTKAMA","2020-09-22 13:00:19","NULL","0","2020-09-22 13:15:42","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","CLS_UNID_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.CLS_UNID_PATY AS GDW2_RESTORE.CLS_UNID_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:34","singhp80","2025-07-12 07:56:34","NULL","29","2025-08-13 14:00:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_TRNF_OPTN","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_TRNF_OPTNAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_TRNF_OPTNFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_TRNF_OPTN;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:47","perumabh","2025-07-14 22:08:47","NULL","1","2025-07-14 22:08:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","THA_ACCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.THA_ACCT AS GDW2_RESTORE.THA_ACCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:38","singhp80","2025-07-12 07:55:38","NULL","29","2025-08-13 16:25:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","BUSN_EVNT","1","V ","F ","NN  ","perumabh"," --------------------------------------------------------------------------------REPLACE VIEW K_PVTECH.BUSN_EVNT(        EVNT_I,        SRCE_SYST_EVNT_I,        EVNT_ACTL_D,        SRCE_SYST_C,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        SRCE_SYST_EVNT_TYPE_I,        EVNT_ACTL_T,        ROW_SECU_ACCS_C,        EVNT_ACTV_TYPE_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.BUSN_EVNT FOR ACCESSSELECT        EVNT_I,        SRCE_SYST_EVNT_I,        EVNT_ACTL_D,        SRCE_SYST_C,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        SRCE_SYST_EVNT_TYPE_I,        EVNT_ACTL_T,        ROW_SECU_ACCS_C,        EVNT_ACTV_TYPE_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM        K_STAR_CAD_PROD_DATA.BUSN_EVNT  WHERE((/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */));","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:42:19","perumabh","2025-07-14 22:42:19","NULL","1","2025-07-14 22:42:19","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Khojeal","M_SCAN_DEV","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.M_SCAN_DEV   (  IN_R_ID          VARCHAR(50)     ,IN_PERD_DATE     DATE      ,IN_DEPT_IDNN_BK  VARCHAR(255)     ,IN_SCNO_IDNN_BK  VARCHAR(20)    ) AS       (   ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  BV_RSS_DEPT_RPRT_LINE <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       SELECT '1.  BV_RSS_DEPT_RPRT_LINE'    TBL_VIEW_NM,             BVDRL.*             FROM  A_D13_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE BVDRL    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_RPRT_LINE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------            SELECT              '2.  FACT_RSS_RPRT_LINE_AGGR   ' TBL_VIEW_NM            ,FRRLA.*             FROM  A_D13_V_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR  FRRLA    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_SALE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------        SELECT '3.  FACT_RSS_SALE_AGGR'  TBL_VIEW_NM,           SLAG.*,           RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,           RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,           RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,           RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK    FROM  A_D13_V_BAL_001_STD_0.FACT_RSS_SALE_AGGR SLAG     INNER JOIN    (          SELECT                  RLM0.MSUR_CODE_IDNN_BK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK          FROM A_D13_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0          WHERE  RLM0.EXPY_D       = '9999-12-31'          AND    RPRT_MAP_IDNN_BK  = :IN_R_ID            AND    SNAP_D            = :IN_PERD_DATE          AND    RLM0.SUMM_TYPE_C IS NULL           GROUP BY 1,2,3,4    ) RLLF    ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK    AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK    AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )    AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )    WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '4.  FACT_BASE_RSS_ACCT_SALE'  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_D13_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_D13_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '5.  FACT_BASE_RSS_ACCT_SALE_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_D13_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_D13_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '6.  FACT_BASE_RSS_OPOR_ITEM '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_D13_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_D13_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '7.  FACT_BASE_RSS_OPOR_ITEM_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_D13_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_D13_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AN","NULL","0","0","0","N ","NULL","NULL","2015-07-10 12:01:17","Khojeal","2015-07-10 12:01:17","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_APPT_COND","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_COND   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_COND FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_COND;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:00","perumabh","2025-07-14 22:18:00","NULL","1","2025-07-14 22:18:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","UTIL_PROS_ISAC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.UTIL_PROS_ISAC AS GDW2_RESTORE.UTIL_PROS_ISAC WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:40","singhp80","2025-07-12 07:55:40","NULL","608","2025-08-14 18:49:11","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"Khojeal","R_ID_Test_TRAL_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_TRAL_ST(  IN_R_ID VARCHAR(50)  ,MNTH_STRT_D DATE   ,MNTH_END_D DATE) AS ( SELECT          TRAL.R_ID       ,TRAL.DEPT_I                           AS TRL_DEPT_I       ,TRAL.PERD_D                           AS TRL_PERD_D       ,TRAL.MSUR_C                           AS TRL_MSUR_C       ,TRAL.PDCT_I                           AS TRL_PDCT_I       ,TRAL.BICD_PDCT_C                      AS TRL_BICD_PDCT_C       ,CAST ( TRAL.TRL_V AS DECIMAL (15,2) ) AS TRL_V       ,CAST ( TRAL.TRL_C AS DECIMAL (15,2) ) AS TRL_C              ,DEPT_KPI.*       -- --------------------------------------------          ,DEPT_KPI.A_V AS DIFF_A_V               -- For all trail plan , ACTL values are not applicable and should be populated as Zero       ,DEPT_KPI.A_C AS DIFF_A_C               -- For all trail plan , ACTL values are not applicable and should be populated as Zero       ,CAST ( (TRAL.TRL_V - DEPT_KPI.P_V) AS DECIMAL (15,2) ) AS DIFF_P_V       ,CAST ( (TRAL.TRL_C - DEPT_KPI.P_C) AS DECIMAL (15,2) ) AS DIFF_P_C       -- -----------------------------------------------       ,CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'          ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                     ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                               ELSE '3.Not Matching'                           END                     END              END  X_DIFF_A_V              ,CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'          ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                     ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                               ELSE '3.Not Matching'                           END                     END              END  X_DIFF_A_C              ,CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'          ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                     ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                               ELSE '3.Not Matching'                           END                     END               END  X_DIFF_P_V              ,CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'          ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                     ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                               ELSE '3.Not Matching'                           END                     END              END  X_DIFF_P_C                   FROM (    SELECT  PDCT.R_ID       ,TRAL.DEPT_I        ,TRAL.PDCT_I        ,PDCT.BICD_PDCT_C       ,TRAL.PERD_D       ,DEPT.ENTY_NODE_X        ,PDCT.MSUR_C        ,PDCT.REVE_MULTI_V              ,SUM(TRAL.HY_LEAD_AVGCLOSINGBAL) SUM_HY_LEAD_AVGCLOSINGBAL          ,SUM(TRAL.YTD_PLN_NBG)           SUM_YTD_PLN_NBG          ,SUM(TRAL.YTD_TRFIN)             SUM_YTD_TRFIN          ,SUM(TRAL.YTD_TRFOUT)            SUM_YTD_TRFOUT          ,CASE WHEN PDCT.MSUR_C  = 'LEADINAVGCLBALHY_A' THEN SUM(TRAL.HY_LEAD_AVGCLOSINGBAL)              WHEN PDCT.MSUR_C  = 'TRFIN_A'            THEN SUM(TRAL.YTD_TRFIN)             WHEN PDCT.MSUR_C  = 'TRFOUT_A'           THEN SUM(TRAL.YTD_TRFOUT)                 WHEN PDCT.MSUR_C  = 'PLN_NBG_A'          THEN SUM(TRAL.YTD_PLN_NBG)              ELSE 0         END  AS TRL_V              ,(TRL_V * PDCT.REVE_MULTI_V )AS TRL_C    FROM A_S07_D_TMP_001_STD_0.T_TRAIL_PLAN TRAL    INNER JOIN     (        SELECT            R_ACTL.OPUT_COLM_1  AS R_ID       , R_ACTL.INPT_COLM_3  AS MSUR_C        , R_ACTL.INPT_COLM_2  AS BICD_PDCT_C        , R_ACTL.INPT_COLM_8  AS PERD_C        , R_ACTL.INPT_COLM_10 AS AP_SPLIT_C       , R_ACTL.INPT_COLM_9  AS ACTL_MULTI_V         , R_REVE.INPT_COLM_9  AS REVE_MULTI_V         , PDCT.PLSE_PDCT_C    AS PLSE_PDCT_C       , R_ACTL.INPT_COLM_4  AS RM_TYPE_C              FROM  A_S07_V_REF_001_STD_0.R_CFIG_MAP R_ACTL        INNER JOIN A_S07_V_REF_001_STD_0.R_CFIG_MAP R_REVE        ON  R_ACTL.OPUT_COLM_1  = R_REVE.OPUT_COLM_1        AND R_ACTL.INPT_COLM_3  = R_REVE.INPT_COLM_3       AND R_ACTL.INPT_COLM_2  = R_REVE.INPT_COLM_2       AND R_ACTL.INPT_COLM_8  = R_REVE.INPT_COLM_8       AND R_ACTL.INPT_COLM_10 = R_REVE.INPT_COLM_10              LEFT JOIN  A_S07_D_MGTR.PLSE_BICD_PDCT_MAP PDCT        ON R_ACTL.INPT_COLM_2 = PDCT.BICD_PDCT_C               WHERE R_ACTL.OPUT_COLM_1    = :IN_R_ID        AND R_ACTL.INPT_COLM_1      = 'ACTL'       AND R_ACTL.MAP_TYPE_M       = 'RPRT_IDNN'        AND R_ACTL.MSTR_SRCE_SYST_C = 'GDW2'       AND R_ACTL.BUSN_UNIT_C      = 'RBS'        AND R_REVE.OPUT_COLM_1      = :IN_R_ID        AND R_REVE.INPT_COLM_1      = 'REVE'       AND R_REVE.MAP_TYPE_M       = 'RPRT_IDNN'        AND R_REVE.MSTR_SRCE_SYST_C = 'GDW2'       AND R_REVE.BUSN_UNIT_C      = 'RBS'            ) PDCT          ON TRAL.PDCT_I =   PDCT.PLSE_PDCT_C    AND CASE WHEN SUBSTR(TRAL.MSUR_CALC_I,1,2) = 'HY'  THEN 'HYTD'             WHEN SUBSTR(TRAL.MSUR_CALC_I,1,2) = 'FY'  THEN 'FYTD'        END  = PDCT.PERD_C               INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT    ON  SUBSTR(TRAL.DEPT_I,6) = DEPT.ENTY_NODE_C    AND DEPT.ENTY_HIER_M = 'DEPT'    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'    AND DEPT.SNAP_D      = :MNTH_END_D    --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                                         AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                                        WHERE TRAL.PERD_D = :MNTH_END_D            AND  ( PDCT.RM_TYPE_C = 'NA'            OR              TRAL.RM_TYPE_C IN             (            SEL DISTINCT  RM00.ENTY_NODE_C                        FROM  A_S07_D_REF_001_STD_0.R_CFIG_MAP                RCFIG            INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER    RM00            ON   RM00.ENTY_ANCS_NODE_C      = RCFIG.INPT_COLM_4                           WHERE RM00.ENTY_NODE_QLFY_C      = 'REL_MNGE_TYPE'            AND   RM00.ENTY_ANCS_NODE_QLFY_C = 'REL_MNGE_TYPE'            AND   RM00.ENTY_HIER_M           = 'RM_SALE_CHNL_HIER'            AND   RM00.ENTY_NODE_X           IS NULL              AND   RM00.SNAP_D                = :MNTH_END_D                        AND  RCFIG.OPUT_COLM_1     = :IN_R_ID             AND RCFIG.INPT_COLM_1      = 'ACTL'            AND RCFIG.MAP_TYPE_M       = 'RPRT_IDNN'             AND RCFIG.MSTR_SRCE_SYST_C = 'GDW2'            AND RCFIG.BUSN_UNIT_C      = 'RBS'             )        )            GROUP BY 1,2,3,4,5,6,7,8    HAVING  TRL_V NOT= 0     ) TRALFULL JOIN (-----------------------------------------------------------------    --FACT_KPI-DATA    SELECT  'NDEPT' || DEPT_I            AS DEPT_I           ,PERD_D           ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V           ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C           ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V           ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C           ,Q.ENTY_NODE_X    FROM    (               SELECT  SALE.DEPT_IDNN_BK AS DEPT_I            ,:MNTH_END_D /*SALE.SNAP_D */ AS PERD_D            ,SCNO_IDNN_BK AS SCNO_IDNN_BK            ,PERD_C AS PERD_C            ,DEPT.ENTY_NODE_X            ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                   THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))              END AS ACTL_MSUR_V            ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                  THEN SUM(RVNU_A)             END AS ACTL_RVNU_V            ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                  THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))              END AS PLAN_MSUR_V            ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                  THEN SUM(RVNU_A)             END AS PLAN_RVNU_V        FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT        ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C        AND DEPT.ENTY_HIER_M = 'DEPT'        --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'        AND DEPT.SNAP_D      = :MNTH_END_D        --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C        AND DEPT.ENTY_NODE_LEAF_F = 'Y'                                             AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                                                    AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID        AND SALE.SNAP_D BETWEEN :MNTH_STRT_D AND :MNTH_END_D         AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/        --AND SALE.DEPT_IDNN_BK = '000001'        GROUP BY 1,2,3,4,5    ) Q   GROUP BY 1,2,7) DEPT_KPI            ON  TRAL.DEPT_I   = DEPT_KPI.DEPT_IAND TRAL.PERD_D   = DEPT_KPI.PERD_D;) ;","NULL","0","0","0","N ","NULL","NULL","2015-07-24 10:22:59","Khojeal","2015-07-27 12:13:33","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","prtf_test_1","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.prtf_test_1AS LOCKING ROW FOR ACCESS (SELECTB_D00_F_GBL_001_STD_0.GETHASHKEY(HIER_NODE_QLFY_C,HIER_NODE_C)  AS HIER_NODE_IDNN_HK,B_D00_F_GBL_001_STD_0.GETHASHKEY(HIER_NODE_QLFY_C,HIER_NODE_C,ANCS_HIER_NODE_QLFY_C,ANCS_HIER_NODE_C) AS HIER_NODE_HIER_NODE_IDNN_HK ,B_D00_F_GBL_001_STD_0.GETHASHKEY(ANCS_HIER_NODE_QLFY_C,ANCS_HIER_NODE_C) AS REL_HIER_NODE_IDNN_HK,HIER_NODE_QLFY_C || '~'  || HIER_NODE_C AS  HIER_NODE_IDNN_BK,HIER_NODE_IDNN_BK || '~' || REL_HIER_NODE_IDNN_BK AS HIER_NODE_HIER_NODE_IDNN_BK,ANCS_HIER_NODE_QLFY_C || '~'  || ANCS_HIER_NODE_C AS  REL_HIER_NODE_IDNN_BK,HIER_NODE_C,MSTR_SRCE_SYST_C,BUSN_STRT_D,HIER_NODE_LEVL_N,HIER_NODE_M,HIER_M,HIER_NODE_LEAF_F,HIER_NODE_DSPL_SEQN_N,HIER_NODE_ANCS_LEVL_N,ANCS_HIER_NODE_C,ANCS_HIER_NODE_M,HIER_NODE_X,ROLE_C,HIER_NODE_QLFY_C,ANCS_HIER_NODE_QLFY_CFROM(    SEL                      AD.BUSINESS_DATE AS BUSN_STRT_D,                CAST('BPB_PRTF_DEPT_HIER' AS VARCHAR(20)) AS HIER_M,                CAST('GDW' AS VARCHAR(10)) AS MSTR_SRCE_SYST_C,	            CAST('ANCS' AS VARCHAR(10)) AS ROLE_C,                BASE.ENTY_NODE_C AS  HIER_NODE_C,                BASE.ENTY_ANCS_NODE_C AS ANCS_HIER_NODE_C,                BASE.ENTY_NODE_QLFY_C AS HIER_NODE_QLFY_C,                BASE.ENTY_LEVL_N AS HIER_NODE_LEVL_N,                BASE.ENTY_ANCS_LEVL_N AS HIER_NODE_ANCS_LEVL_N ,                BASE.ENTY_NODE_M AS HIER_NODE_M,                CASE     WHEN NODE_X_OFFS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'        ELSE NODE_X_OFFS.OPUT_COLM_1 END AS HIER_NODE_X,                BASE.ENTY_ANCS_NODE_M AS ANCS_HIER_NODE_M,                CASE   WHEN NODE_X_ANCS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'         ELSE NODE_X_ANCS.OPUT_COLM_1 END AS ANCS_HIER_NODE_X,                                            ENTY_ANCS_NODE_QLFY_C AS ANCS_HIER_NODE_QLFY_C,                            BASE.ENTY_NODE_LEAF_F AS HIER_NODE_LEAF_F,                                 CASE   WHEN BASE.ENTY_NODE_QLFY_C = 'DEPT' THEN MEMB.DSPL_SEQN_N                                 WHEN BASE.ENTY_NODE_QLFY_C <> 'DEPT' AND ENTY_LEVL_N - ENTY_ANCS_LEVL_N < 3 THEN row_number() OVER (PARTITION BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_C ORDER BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_M, ENTY_NODE_M, ENTY_NODE_C ASC)                                ELSE 1                                END AS HIER_NODE_DSPL_SEQN_N         FROM (                                                                                      /* Relationships between intermediate department levels - combinations between level 1 and 4 */                                                                                                               SEL       OFFSPRING_ANCS_DEPT_NODE_C AS ENTY_NODE_C                                                                    , DN_OFFS.NODE_M AS ENTY_NODE_M                                                                    , 'DEPT' AS ENTY_NODE_QLFY_C                                                                    , ANCS_ANCS_DEPT_NODE_C AS ENTY_ANCS_NODE_C                                                                    , DN_ANCS.NODE_M AS ENTY_ANCS_NODE_M                                                                    , 'DEPT' AS ENTY_ANCS_NODE_QLFY_C                                                                                                                                                                                                                                                                               , OFFSPRING_ANCS_LEVL_N AS ENTY_LEVL_N                                                                    , ANCS_ANCS_LEVL_N AS ENTY_ANCS_LEVL_N                                                                    , CASE    WHEN OFFSPRING_ANCS_DEPT_NODE_C = DEPT_IDNN_BK THEN 'Y'                                                                      WHEN OFFSPRING_ANCS_LEVL_N = 5 THEN 'Y' ELSE 'N' END AS ENTY_NODE_LEAF_F                                                                                                                                                                                   FROM  (                                                                                                                            SEL DEPT_IDNN_BK,                                                                            OFFSPRING.DEPT_NODE_C    AS DEPT_NODE_C,                                                                            OFFSPRING.ANCS_DEPT_NODE_C      AS OFFSPRING_ANCS_DEPT_NODE_C,                                                                            OFFSPRING.ANCS_LEVL_N      AS OFFSPRING_ANCS_LEVL_N,                                                                            ANCS.ANCS_DEPT_NODE_C       AS ANCS_ANCS_DEPT_NODE_C,                                                                            ANCS.ANCS_LEVL_N        AS ANCS_ANCS_LEVL_N                                                                                                                                                FROM B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR OFFSPRING                                                                                                                                        INNER JOIN B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR ANCS                                                                                        ON ANCS.DEPT_NODE_C = OFFSPRING.DEPT_NODE_C                                                                                         AND ANCS.ANCS_LEVL_N <= OFFSPRING.ANCS_LEVL_N                                                                                                                                                             INNER JOIN         B_S17_V_SHR_001_STD_0.H_DEPT HD    ON HD.DEPT_IDNN_BK = OFFSPRING.DEPT_NODE_C                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730' GROUP BY 1,2)  GDH ON GDH.DEPT_LEAF_NODE_C= OFFSPRING.DEPT_NODE_C                                                                                                                                          WHERE OFFSPRING.ANCS_LEVL_N <=4                                                                                                                                          QUALIFY               ROW_NUMBER() OVER (PARTITION BY OFFSPRING_ANCS_DEPT_NODE_C,  ANCS_ANCS_DEPT_NODE_C ORDER BY OFFSPRING_ANCS_DEPT_NODE_C, ANCS_ANCS_DEPT_NODE_C ASC) = 1                                                                                                                             ) BASE1                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730'GROUP BY 1,2)  GDF ON GDF.DEPT_LEAF_NODE_C = BASE1.DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_OFFS ON DN_OFFS.NODE_C = BASE1.OFFSPRING_ANCS_DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_ANCS ON DN_ANCS.NODE_C = BASE1.ANCS_ANCS_DEPT_NODE_C                                                        WHERE                ENTY_NODE_LEAF_F = 'N'                                                                                                       QUALIFY               ROW_NUMBER() OVER (PARTITION BY ENTY_NODE_C,  ENTY_ANCS_NODE_C ORDER BY ENTY_NODE_C, ENTY_ANCS_NODE_C ASC) = 1                                        UNION ALL                                                                                                 /* Empl vs. Prtf vs. Team vs. Leaf dept Relationships */                                                                                            SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_ANCS_NODE_C,                                                                                          ENTY_ANCS_NODE_M,                                                                                          ENTY_ANCS_NODE_QLFY_C,                                                                                           ENTY_LEVL_N,                                                                                          ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                           FROM                      B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER APHR                                                                                     INNER JOIN          B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDF ON GDF.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDF.DEPT_L2_NODE_C = 'NDEPT902730'                              --AND '2017-03-07' BETWEEN SDH.BUSN_STRT_D AND SDH.BUSN_END_D                                                                                                                                                                                       UNION ALL                                                                                                                                                /* Empl, Prtf, Team, Dept    vs. insetf   relationships */                                                                                                              SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_NODE_C AS ENTY_ANCS_NODE_C,                                                                                          ENTY_NODE_M AS ENTY_ANCS_NODE_M,                                                                                          ENTY_NODE_QLFY_C AS ENTY_ANCS_NODE_QLFY_C,                                                                                          ENTY_LEVL_N AS ENTY_NODE_LEVL_N,                                                                                          ENTY_LEVL_N AS ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                                                                                                                              FROM                    (  SEL DISTINCT   ENTY_NODE_C, ENTY_NODE_QLFY_C, ENTY_NODE_M,ENTY_LEVL_N                                                                                            FROM                      B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER  APHR                                                                                            INNER JOIN        B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDH ON GDH.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDH.DEPT_L2_NODE_C = 'NDEPT902730'                                                                                            WHERE                ENTY_NODE_QLFY_C <> 'DEPT'                                                                                     ) BASE1                                                                                                                   ","NULL","0","0","0","N ","NULL","NULL","2017-05-02 10:45:46","KOSTKAMA","2017-05-02 10:45:46","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ENV_PATY_TYPE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_TYPE AS GDW2_RESTORE.MAP_CSE_ENV_PATY_TYPE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:05","singhp80","2025-07-12 07:57:05","NULL","29","2025-08-14 12:24:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ODS_RULE","1","V ","F ","NN  ","perumabh","CREATE VIEW K_PVTECH.ODS_RULE(   RULE_CODE,   RULE_STEP_SEQN,   PRTY,   VALD_FROM,   VALD_TO,   RULE_DESN,   RULE_STEP_DESN,   LKUP1_TEXT,   LKUP1_NUMB,   LKUP1_DATE,   LKUP1_ADD_ATTR,   LKUP2_TEXT,   LKUP2_NUMB,   LKUP2_DATE,   LKUP2_ADD_ATTR,   RULE_CMMT,   UPDT_DTTS,   CRAT_DTTS) AS LOCKING ROW FOR ACCESS( SELECT RULE_CODE,   RULE_STEP_SEQN,   PRTY,   VALD_FROM,   VALD_TO,   RULE_DESN,   RULE_STEP_DESN,   LKUP1_TEXT,   LKUP1_NUMB,   LKUP1_DATE,   LKUP1_ADD_ATTR,   LKUP2_TEXT,   LKUP2_NUMB,   LKUP2_DATE,   LKUP2_ADD_ATTR,   RULE_CMMT,   UPDT_DTTS,   CRAT_DTTS FROM K_PVCBODS.ODS_RULE);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:46:57","perumabh","2025-07-14 22:46:57","NULL","1","2025-07-14 22:46:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_SM_CASE_STUS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS AS GDW2_RESTORE.MAP_CSE_SM_CASE_STUS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:50","singhp80","2025-07-12 07:56:50","NULL","29","2025-08-14 13:59:17","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_ORIG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ORIG AS GDW2_RESTORE.MAP_CSE_APPT_ORIG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:53","singhp80","2025-07-12 07:56:53","NULL","29","2025-08-13 15:48:41","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_LPC_DEPT_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_LPC_DEPT_HLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LPC_DEPT_HLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_LPC_DEPT_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:15:53","perumabh","2025-07-14 22:15:53","NULL","1","2025-07-14 22:15:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MOS_FCLY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MOS_FCLY AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MOS_FCLY  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.MOS_FCLY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:48","perumabh","2025-07-14 22:08:48","NULL","1","2025-07-14 22:08:48","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","ACCT_BALN_GL_MNLY","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.ACCT_BALN_GL_MNLY--this Export view gives All BALANCE and Average Balance details as Monthly measures (for month end date)--this base view does not deal with measures which have back dated transactions--please pass PERD_D value to fetch results faster(    MNTH_END_D ,ACCT_IDNN_BK ,ACCT_I ,MSTR_SRCE_SYST_C ,MSUR_CODE_IDNN_BK     ,GL_ACCT_IDNN_BK ,GL_PDCT_IDNN_BK ,GL_DEPT_IDNN_BK ,GL_AFLT_IDNN_BK ,GL_SRCE_IDNN_BK ,GL_OPER_UNIT_IDNN_BK ,GL_PRJC_IDNN_BK   ,GL_BUSN_UNIT_IDNN_BK ,GL_CNCY_IDNN_BK ,GRD_PDCT_IDNN_BK ,SRCE_MSUR_A  ,MSUR_A ,EFFT_D ,EXPY_D )AS LOCKING ROW FOR ACCESS SELECT MSUR.PERD_D   ,MSUR.ACCT_IDNN_BK   ,OREPLACE (MSUR.ACCT_IDNN_BK, '~', '') AS ACCT_I   ,CFIG.OPUT_COLM_1 AS MSTR_SRCE_SYST_C   ,CASE WHEN CJ.OPUT_COLM_1 = '1'     THEN 'NET_CLSE_BALN_A'     ELSE 'MNLY_NET_AVRG_CLSE_BALN_A'    END AS MSUR_CODE_IDNN_BK      ,MSUR.GL_ACCT_IDNN_BK   ,MSUR.GL_PDCT_IDNN_BK   ,MSUR.GL_DEPT_IDNN_BK   ,MSUR.GL_AFLT_IDNN_BK   ,MSUR.GL_SRCE_IDNN_BK   ,MSUR.GL_OPER_UNIT_IDNN_BK   ,MSUR.GL_PRJC_IDNN_BK     ,MSUR.GL_BUSN_UNIT_IDNN_BK   ,MSUR.GL_CNCY_IDNN_BK   ,MSUR.GRD_PDCT_IDNN_BK   ,CASE  WHEN CJ.OPUT_COLM_1 = '1'     THEN  MSUR.MSUR_A     ELSE  MSUR.AVG_MSUR_A    END AS SRCE_MSUR_A   ,(CAST(ROUND(SRCE_MSUR_A,2) AS DECIMAL(23,2)) * -1) AS MSUR_A    ,MSUR.EFFT_D   ,MSUR.EXPY_D     FROM   kostkama.FACT_ACCT_BALN_GL_MNLY  MSUR    INNER JOIN   B_S16_V_REF_001_STD_0.R_CFIG_MAP     CFIG  ON CFIG.MAP_TYPE_M      = 'GDW1_PBSDM_MSTR_SRCE_SYST_C'   AND CFIG.INPT_COLM_1    = MSUR.MSTR_SRCE_SYST_C   AND MSUR.PERD_D     BETWEEN CFIG.BUSN_STRT_D AND CFIG.BUSN_END_D   AND CFIG.EXPY_D     = '9999-12-31'   AND CFIG.RECORD_DELETED_FLAG = 0    CROSS JOIN      (SELECT OPUT_COLM_1 FROM B_S16_V_REF_001_STD_0.R_CFIG_MAP  WHERE MAP_TYPE_M       = 'ACCT_BALN_GL_MNLY_FLAG'    AND INPT_COLM_1       = 'CROSS_JOIN'    AND EXPY_D        =  DATE '9999-12-31'     AND RECORD_DELETED_FLAG     =  0 )            CJ     WHERE GL_CNCY_IDNN_BK      = 'AUD'  AND SRCE_MSUR_A      <> 0  AND MSUR.MSUR_CODE_IDNN_BK    IN ('NET_CLSE_BALN_A', 'CLSE_BALN_A');","NULL","0","0","0","N ","NULL","NULL","2016-07-07 15:11:30","KOSTKAMA","2016-07-07 15:31:35","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","THA_ACCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.THA_ACCT( THA_ACCT_I, ACCT_QLFY_C, EXT_D, CSL_CLNT_I, TRAD_ACCT_I, THA_ACCT_TYPE_C, THA_ACCT_STUS_C, PALL_BUSN_UNIT_I, PALL_DEPT_I, BALN_A, IACR_MTD_A, IACR_FYTD_A, DALY_AGGR_FEE_A, BALN_D, EFFT_D, EXPY_D, PROS_KEY_EFFT_I, PROS_KEY_EXPY_I) AS LOCKING TABLE K_STAR_CAD_PROD_DATA.THA_ACCT FOR ACCESSSELECT THA_ACCT_I, ACCT_QLFY_C, EXT_D, CSL_CLNT_I, TRAD_ACCT_I, THA_ACCT_TYPE_C, THA_ACCT_STUS_C, PALL_BUSN_UNIT_I, PALL_DEPT_I, BALN_A, IACR_MTD_A, IACR_FYTD_A, DALY_AGGR_FEE_A, BALN_D, EFFT_D, EXPY_D, PROS_KEY_EFFT_I, PROS_KEY_EXPY_I  FROM K_STAR_CAD_PROD_DATA.THA_ACCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:13:40","perumabh","2025-07-14 22:13:40","NULL","1","2025-07-14 22:13:40","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_136_24_R_MGMT_INFO_PDCT_MAP","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_136_24_R_MGMT_INFO_PDCT_MAP ------ This view generates a value for the MGMT_INFO_PDCT_HIER_IDNN column based on MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C(	GL_PDCT_IDNN_BK ,	POST_ALOC_GL_DEPT_IDNN_BK ,	PDCT_MTX_LEVL_1_C ,	PDCT_MTX_LEVL_1_M ,	PDCT_MTX_LEVL_2_C ,	PDCT_MTX_LEVL_2_M ,	PDCT_MTX_LEVL_3_C ,	PDCT_MTX_LEVL_3_M ,	PMGT_GRUP_CATG_C  ,	PMGT_GRUP_CATG_M  ,	PMGT_GRUP_SUB_CATG_C ,	PMGT_GRUP_SUB_CATG_M ,	MGMT_INFO_PG_C ,	MGMT_INFO_PG_M ,	MGMT_INFO_PDCG_C ,	MGMT_INFO_PDCG_M ,	MGMT_INFO_PDCT_SUB_CATG_C ,	MGMT_INFO_PDCT_SUB_CATG_M ,	MGMT_INFO_PDCT_HIER_IDNN ,   	BUSN_STRT_D ,	BUSN_END_D  ,	MSTR_SRCE_SYST_C,	CTLFW_DELTA_ACTION_CODE ) AS LOCKING	ROW FOR ACCESS (SELECT		STG.GL_PDCT_IDNN_BK ,	STG.POST_ALOC_GL_DEPT_IDNN_BK ,	STG.PDCT_MTX_LEVL_1_C ,	STG.PDCT_MTX_LEVL_1_M ,	STG.PDCT_MTX_LEVL_2_C ,	STG.PDCT_MTX_LEVL_2_M ,	STG.PDCT_MTX_LEVL_3_C ,	STG.PDCT_MTX_LEVL_3_M ,	STG.PMGT_GRUP_CATG_C  ,	STG.PMGT_GRUP_CATG_M  ,	STG.PMGT_GRUP_SUB_CATG_C ,	STG.PMGT_GRUP_SUB_CATG_M ,	STG.MGMT_INFO_PG_C ,	STG.MGMT_INFO_PG_M ,	STG.MGMT_INFO_PDCG_C ,	STG.MGMT_INFO_PDCG_M ,	STG.MGMT_INFO_PDCT_SUB_CATG_C ,	STG.MGMT_INFO_PDCT_SUB_CATG_M ,	DT.MGMT_INFO_PDCT_HIER_IDNN ,   	STG.BUSN_STRT_D ,	STG.BUSN_END_D  ,	'GRD' AS MSTR_SRCE_SYST_C,	'0' AS CTLFW_DELTA_ACTION_CODE	FROM	B_D17_D_INP_001_STD_0.TX_136_23_MGMT_INFO_PDCT_MAP STGLEFT JOIN (	SELECT MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C ,MIPHI AS MGMT_INFO_PDCT_HIER_IDNN	FROM 	( 		SELECT	TRIM(STG.MGMT_INFO_PG_C) MGMT_INFO_PG_C, 			TRIM(STG.MGMT_INFO_PDCG_C) MGMT_INFO_PDCG_C, 			TRIM(STG.MGMT_INFO_PDCT_SUB_CATG_C) MGMT_INFO_PDCT_SUB_CATG_C ,			MAX(MGMT_INFO_PDCT_HIER_IDNN) AS MIPHI 		FROM	B_D17_D_INP_001_STD_0.TX_136_23_MGMT_INFO_PDCT_MAP STG		INNER JOIN B_D17_V_REF_001_STD_0.R_MGMT_INFO_PDCT_MAP  EXDT			ON	TRIM(STG.MGMT_INFO_PG_C)=TRIM(EXDT.MGMT_INFO_PG_C)			AND	 TRIM(STG.MGMT_INFO_PDCG_C)=TRIM(EXDT.MGMT_INFO_PDCG_C)			AND	 TRIM(STG.MGMT_INFO_PDCT_SUB_CATG_C)=TRIM(EXDT.MGMT_INFO_PDCT_SUB_CATG_C)		GROUP	BY 1,2,3		)EXDT    ---- Pick  up the value for MGMT_INFO_PDCT_HIER_IDNN from an already existing value based on MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C	UNION ALL			SELECT MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C ,MIPHI 	FROM  	( 		SELECT TRIM(MGMT_INFO_PG_C) MGMT_INFO_PG_C, 			TRIM(MGMT_INFO_PDCG_C) MGMT_INFO_PDCG_C, 			TRIM(MGMT_INFO_PDCT_SUB_CATG_C) MGMT_INFO_PDCT_SUB_CATG_C,			(SELECT	COALESCE(MAX(MGMT_INFO_PDCT_HIER_IDNN) ,0)				FROM	B_D17_V_REF_001_STD_0.R_MGMT_INFO_PDCT_MAP RMAP				) AS MXKEY,							MXKEY + ROW_NUMBER()OVER(ORDER BY NDT.EFFT_D, MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C) AS MIPHI					FROM 		(				SELECT	TRIM(STG.MGMT_INFO_PG_C) MGMT_INFO_PG_C, 					TRIM(STG.MGMT_INFO_PDCG_C) MGMT_INFO_PDCG_C, 					TRIM(STG.MGMT_INFO_PDCT_SUB_CATG_C) MGMT_INFO_PDCT_SUB_CATG_C,					CFIG.EFFT_D					FROM			(	SEL 			MGMT_INFO_PG_C,			MGMT_INFO_PDCG_C,			MGMT_INFO_PDCT_SUB_CATG_C			FROM B_D17_D_INP_001_STD_0.TX_136_23_MGMT_INFO_PDCT_MAP			GROUP BY 1,2,3 ) STG						JOIN (SEL DISTINCT OPUT_COLM_1, OPUT_COLM_3, OPUT_COLM_5, EFFT_D FROM B_D17_D_REF_001_STD_0.R_CFIG_MAP WHERE MAP_TYPE_M =   'MGMT_INFO_PDCT_HIER' GROUP BY 1,2,3,4 ) CFIG 						ON    CFIG.OPUT_COLM_1 = STG.MGMT_INFO_PG_C 						AND CFIG.OPUT_COLM_3 = STG.MGMT_INFO_PDCG_C						AND CFIG.OPUT_COLM_5 = STG.MGMT_INFO_PDCT_SUB_CATG_C															LEFT JOIN 			(SEL 			MGMT_INFO_PG_C,			MGMT_INFO_PDCG_C,			MGMT_INFO_PDCT_SUB_CATG_C			FROM B_D17_V_REF_001_STD_0.R_MGMT_INFO_PDCT_MAP WHERE EXPY_D ='9999-12-31'			AND RECORD_DELETED_FLAG =0          			GROUP BY 1,2,3  )EXDT			ON 			STG.MGMT_INFO_PG_C=EXDT.MGMT_INFO_PG_C 				AND	 STG.MGMT_INFO_PDCG_C=EXDT.MGMT_INFO_PDCG_C 				AND STG.MGMT_INFO_PDCT_SUB_CATG_C=EXDT.MGMT_INFO_PDCT_SUB_CATG_C			WHERE EXDT.MGMT_INFO_PG_C IS NULL							AND	 EXDT.MGMT_INFO_PDCG_C IS NULL				AND	 EXDT.MGMT_INFO_PDCT_SUB_CATG_C IS NULL		)NDT 	)NWDT  --- Increment the value of MGMT_INFO_PDCT_HIER_IDNN for  a new combination of  MGMT_INFO_PG_C, MGMT_INFO_PDCG_C, MGMT_INFO_PDCT_SUB_CATG_C) DT	ON	TRIM(STG.MGMT_INFO_PG_C)=TRIM(DT.MGMT_INFO_PG_C )	AND	TRIM( STG.MGMT_INFO_PDCG_C)=TRIM(DT.MGMT_INFO_PDCG_C )	AND	 TRIM(STG.MGMT_INFO_PDCT_SUB_CATG_C)=TRIM(DT.MGMT_INFO_PDCT_SUB_CATG_C )			);","NULL","0","0","0","N ","NULL","NULL","2018-01-23 17:15:14","KOSTKAMA","2018-01-23 17:15:14","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_DEPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_DEPT AS GDW2_RESTORE.APPT_DEPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:29","singhp80","2025-07-12 07:55:29","NULL","29","2025-08-13 13:20:35","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","KUMARM9_HLS_GL_CODE_BLOK","1","V ","F ","NN  ","kumarm9","--------------------------------------------------------------------------------REPLACE VIEW KUMARM9.KUMARM9_HLS_GL_CODE_BLOK (MSUR_IDNN_HK                  ,MSUR_GL_IDNN_HK               ,GL_ACCT_IDNN_HK               ,GL_PDCT_IDNN_HK               ,GL_PRJC_IDNN_HK               ,DEPT_IDNN_HK                  ,EFFT_D                        ,EXPY_D                        ,RECORD_DELETED_FLAG           ,BUSN_STRT_D                   ,BUSN_END_D                    )AS LOCKING ROW FOR ACCESSSELECT LMGL.MSUR_IDNN_HK,LMGL.MSUR_GL_IDNN_HK,LMGL.GL_ACCT_IDNN_HK,LMGL.GL_PDCT_IDNN_HK,LMGL.GL_PRJC_IDNN_HK,LMGL.DEPT_IDNN_HK,LMGL.EFFT_D,LMGL.EXPY_D,LMGL.RECORD_DELETED_FLAG,SMGS.BUSN_STRT_D,SMGS.BUSN_END_DFROM P_V_USR_TEC_0.L_MSUR_NEW_GL LMGLINNER JOIN P_V_USR_TEC_0.S_MSUR_NEW_GL_STUS SMGSON LMGL.MSUR_IDNN_HK = SMGS.MSUR_IDNN_HKAND LMGL.MSUR_GL_IDNN_HK = SMGS.MSUR_GL_IDNN_HKAND SMGS.EXPY_D = '9999-12-31'AND LMGL.MSTR_SRCE_SYST_C  IN ('GDW2-HLS','GDW-MS')AND SMGS.MSTR_SRCE_SYST_C  IN ('GDW2-HLS','GDW-MS')AND LMGL.RECORD_DELETED_FLAG = 0AND SMGS.RECORD_DELETED_FLAG = 0  ;","NULL","0","0","0","N ","NULL","NULL","2017-08-28 11:08:18","kumarm9","2017-08-28 11:09:53","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_UNID_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_UNID_PATY AS GDW2_RESTORE.APPT_PDCT_UNID_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:48","singhp80","2025-07-12 07:55:48","NULL","28","2025-08-13 13:53:11","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","GRD_GNRC_MAP","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_GNRC_MAP	 AS LOCKING ROW FOR ACCESS	  SELECT * FROM  K_PDGRD.GRD_GNRC_MAP;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:19:11","perumabh","2025-07-14 22:19:11","NULL","5","2025-07-14 23:39:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kuoje","DIMN_DATE_TGT","1","V ","F ","NN  ","kuoje","/**--tc_nam: DIMN_DATE.sql^05.DDL.00.4**/     REPLACE VIEW kuoje.DIMN_DATE_TGT AS  SELECT    CLYR.CALR_CALR_D AS CALR_D  ,CLYR.CALR_DAY_LONG_M AS CALR_DAY_LONG_M   ,CLYR.CALR_DAY_N AS CALR_DAY_N  ,CLYR.CALR_WEEK_N AS CALR_WEEK_N  ,CLYR.CALR_MNTH_SNAM_M AS CALR_MNTH_SHRT_M   ,CLYR.CALR_MNTH_LONG_M AS CALR_MNTH_LONG_M   ,CLYR.CALR_MNTH_N AS CALR_MNTH_N  ,CLYR.CALR_QRTR_SNAM_M AS CALR_QRTR_SHRT_M   ,CLYR.CALR_MNTH_YEAR_SNAM_M AS CALR_MNTH_YEAR_SHRT_M  ,FNYR.FNCL_DAY_N AS FNCL_DAY_N  ,FNYR.FNCL_YEAR_LONG_M AS FNCL_YEAR_LONG_M   ,FNYR.FNCL_YEAR_SNAM_M AS FNCL_YEAR_SHRT_M   ,FNYR.FNCL_QRTR_SNAM_M AS FNCL_QRTR_SHRT_M  ,FNYR.FNCL_YEAR_N AS FNCL_YEAR_N  ,CLYR.CALR_DAY_SNAM_M AS CALR_DAY_SHRT_M   ,CLYR.CALR_WEEK_DAY_N AS CALR_WEEK_DAY_N  ,CLYR.CALR_MNTH_YEAR_LONG_M AS CALR_MNTH_YEAR_LONG_M   ,CLYR.CALR_QRTR_N AS CALR_QRTR_N  ,CLYR.CALR_QRTR_LONG_M AS CALR_QRTR_LONG_M  ,FNYR.FNCL_WEEK_N AS FNCL_WEEK_N  ,FNYR.FNCL_MNTH_N AS FNCL_MNTH_N   ,FNYR.FNCL_QRTR_N AS FNCL_QRTR_N  ,FNYR.FNCL_QRTR_LONG_M AS FNCL_QRTR_LONG_M   ,FNYR.FNCL_MNTH_YEAR_SNAM_M AS FNCL_MNTH_YEAR_SHRT_M  ,CLYR.CALR_YEAR_MONTH_N AS CALR_YEAR_MNTH_N  ,FNYR.FNCL_MNTH_SNAM_M AS FNCL_MNTH_SHRT_M  ,FNYR.FNCL_MNTH_LONG_M AS FNCL_MNTH_LONG_M   ,FNYR.FNCL_MNTH_YEAR_LONG_M AS FNCL_MNTH_YEAR_LONG_M  ,(FNYR.FNCL_YEAR_N * 100) + FNYR.FNCL_MNTH_N AS FNCL_YEAR_MNTH_N  ,CLYR.CALR_YEAR_N AS CALR_YEAR_N  ,CLYR.CALR_RPRT_YEAR_WEEK_N AS CALR_YEAR_WEEK_N  ,FNYR.FNCL_RPRT_YEAR_WEEK_N AS FNCL_YEAR_WEEK_N   ,(CLYR.CALR_YEAR_N * 100) + CLYR.CALR_QRTR_N AS CALR_YEAR_QRTR_N  ,(FNYR.FNCL_YEAR_N * 100) + FNYR.FNCL_QRTR_N AS FNCL_YEAR_QRTR_N   ,CLYR.CALR_YEAR_SNAM_M AS CALR_YEAR_SHRT_M  ,CLYR.CALR_YEAR_LONG_M AS CALR_YEAR_LONG_M   ,FNYR.FNYR_RPRT_TMPD_LABL_M AS FNCL_PERD_N   ,CLYR.CALR_MNTH_FRST_DAY_D AS CALR_MNTH_STRT_D   ,CLYR.CALR_MNTH_LAST_DAY_D AS CALR_MNTH_END_D   ,(CLYR.CALR_CALR_D - 1) AS CALR_PREV_D  ,(CLYR.CALR_CALR_D + 1) AS CALR_NEXT_D  ,CLYR.CALR_WEEK_FRST_DAY_D AS CALR_WEEK_STRT_D  ,CLYR.CALR_WEEK_LAST_DAY_D AS CALR_WEEK_END_D   ,CASE WHEN CLYR.CALR_CALR_D = CLYR.CALR_MNTH_FRST_DAY_D    THEN 'Y'    ELSE 'N'    END AS CALR_MNTH_STRT_DAY_F  ,CASE WHEN CLYR.CALR_CALR_D = CLYR.CALR_MNTH_LAST_DAY_D    THEN 'Y'    ELSE 'N'    END AS CALR_MNTH_END_DAY_F   ,PREV_CL_MNTH.CALR_MNTH_FRST_DAY_D AS CALR_PREV_MNTH_STRT_D  ,PREV_CL_MNTH.CALR_MNTH_LAST_DAY_D AS CALR_PREV_MNTH_END_D  ,(CLYR.CALR_WEEK_FRST_DAY_D - 7) AS CALR_PREV_WEEK_STRT_D  ,(CLYR.CALR_WEEK_LAST_DAY_D - 7) AS CALR_PREV_WEEK_END_D   ,CASE WHEN CLYR.CALR_CALR_D = CLYR.CALR_WEEK_FRST_DAY_D    THEN 'Y'    ELSE 'N'    END AS CALR_WEEK_STRT_F  ,CASE WHEN CLYR.CALR_CALR_D = CLYR.CALR_WEEK_LAST_DAY_D    THEN 'Y'    ELSE 'N'    END AS CALR_WEEK_END_F  ,FNYR.FNCL_CALR_D - 1 AS FNCL_PREV_D  ,FNYR.FNCL_CALR_D + 1 AS FNCL_NEXT_D  ,FNYR.FNCL_WEEK_FRST_DAY_D AS FNCL_WEEK_STRT_D  ,FNYR.FNCL_WEEK_LAST_DAY_D AS FNCL_WEEK_END_D  ,FNYR.FNCL_MNTH_FRST_DAY_D AS FNCL_MNTH_STRT_D  ,FNYR.FNCL_MNTH_LAST_DAY_D AS FNCL_MNTH_END_D   ,CASE WHEN FNYR.FNCL_CALR_D = FNYR.FNCL_MNTH_FRST_DAY_D    THEN 'Y'    ELSE 'N'    END AS FNCL_MNTH_STRT_DAY_F  ,CASE WHEN FNYR.FNCL_CALR_D = FNYR.FNCL_MNTH_LAST_DAY_D    THEN 'Y'    ELSE 'N'    END AS FNCL_MNTH_END_DAY_F  ,PREV_FN_MNTH.FNCL_MNTH_FRST_DAY_D AS FNCL_PREV_MNTH_STRT_D  ,PREV_FN_MNTH.FNCL_MNTH_LAST_DAY_D AS FNCL_PREV_MNTH_END_D  ,PREV_WEEK.FNCL_WEEK_FRST_DAY_D AS FNCL_PREV_WEEK_STRT_D   ,PREV_WEEK.FNCL_WEEK_LAST_DAY_D AS FNCL_PREV_WEEK_END_D  ,CASE WHEN FNYR.FNCL_CALR_D = FNYR.FNCL_WEEK_FRST_DAY_D    THEN 'Y'    ELSE 'N'    END AS FNCL_WEEK_STRT_F  ,CASE WHEN FNYR.FNCL_CALR_D = FNYR.FNCL_WEEK_LAST_DAY_D    THEN 'Y'    ELSE 'N'    END AS FNCL_WEEK_END_F  ,FNYR.FNCL_HFYR_N AS FNCL_HFYR_N  ,FNYR.FNCL_HFYR_SNAM_M AS FNCL_HFYR_SHRT_M  ,FNYR.FNCL_HFYR_LONG_M AS FNCL_HFYR_LONG_M  ,CLYR.CALR_HFYR_N AS CALR_HFYR_N  ,CLYR.CALR_HFYR_SNAM_M AS CALR_HFYR_SHRT_M  ,CLYR.CALR_HFYR_LONG_M AS CALR_HFYR_LONG_M  ,CLYR.CALR_NON_WORK_DAY_F AS CALR_NON_WORK_DAY_F  ,CLYR.CALR_NON_WORK_DAY_TYPE_C AS CALR_NON_WORK_DAY_TYPE_C  ,CLYR.CALR_NON_WORK_DAY_M AS CALR_NON_WORK_DAY_M  ,FNYR.FNCL_NON_WORK_DAY_F AS FNCL_NON_WORK_DAY_F  ,FNYR.FNCL_NON_WORK_DAY_TYPE_C AS FNCL_NON_WORK_DAY_TYPE_C  ,FNYR.FNCL_NON_WORK_DAY_M AS FNCL_NON_WORK_DAY_M  ,CAST (1 AS INTEGER) Ctlfw_Delta_Action_Code         FROM   kuoje.GRD_RPRT_CALR_CLYR_ETL CLYR          INNER JOIN  kuoje.GRD_RPRT_CALR_FNYR_ETL FNYR  ON    CLYR.CALR_CALR_D = FNYR.FNCL_CALR_D        LEFT  OUTER JOIN kuoje.GRD_RPRT_CALR_FNYR_ETL PREV_WEEK  ON    PREV_WEEK.FNCL_CALR_D = (FNYR.FNCL_WEEK_FRST_DAY_D - 1)        LEFT  OUTER JOIN  kuoje.GRD_RPRT_CALR_CLYR_ETL PREV_CL_MNTH ON    PREV_CL_MNTH.CALR_CALR_D = (CLYR.CALR_MNTH_FRST_DAY_D - 1)         LEFT  OUTER JOIN kuoje.GRD_RPRT_CALR_FNYR_ETL PREV_FN_MNTH  ON    PREV_FN_MNTH.FNCL_CALR_D = (FNYR.FNCL_MNTH_FRST_DAY_D - 1) ;","NULL","0","0","0","N ","NULL","NULL","2015-07-02 15:11:44","kuoje","2015-07-13 17:23:59","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_APPT_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_APPT_PDCT AS GDW2_RESTORE.ACCT_APPT_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:42","singhp80","2025-07-12 07:55:42","NULL","29","2025-08-13 13:08:38","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_NON_RM","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_NON_RM ,NO FALLBACK ,      NO BEFORE JOURNAL,      NO AFTER JOURNAL,      CHECKSUM = DEFAULT      (       ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,       ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,       PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL        COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */       PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),       SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),       EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,       EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,       ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0,    RANK_I INTEGER       /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder  Change  */       ) PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:02:42","perumabh","2025-07-14 22:02:42","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ADRS_TYPE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ADRS_TYPE AS GDW2_RESTORE.MAP_CSE_ADRS_TYPE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:09","singhp80","2025-07-12 07:57:09","NULL","29","2025-08-13 15:33:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","RTTM_EXTRACT","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.RTTM_EXTRACT(ALAS_VALU,ALAS_TYPE,alas_regr_dtts,ALAS_STUS)AS LOCKING ROW FOR ACCESSSELECT  derv.alas_valu AS ALAS_VALU--,derv.acct_numbr,derv.alas_type AS ALAS_TYPE,derv.alas_regr_dtts AS alas_regr_dtts,derv.alas_stus AS ALAS_STUS--,derv.cifFROM(SELECT  ALHR.ALAS_VALU_1 AS alas_valu--ACNT.EXTL_ACCT_NUMB AS acct_numbr,ALHR.ALAS_TYPE     AS alas_type                --f.ALAS_TYPE_NODE_FULL_M,,ALST.ALAS_INIT_REGR AS alas_regr_dtts  ,ALST.ALAS_STUS_CODE AS alas_stus--g.ALAS_STUS_NODE_FULL_M,--,cust.BUSN_PTNR_NUMB_IN_EXTL_SYST AS cifFROM(			SELECT A.* FROM			SVCBODS.BUSN_PTNR_ALAS_STUS a			JOIN			(SELECT ALAS_UNIQ_ID,MAX(strt_dtts_of_a_recd) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_STUS GROUP BY ALAS_UNIQ_ID			) a1			ON  A.ALAS_UNIQ_ID = a1.ALAS_UNIQ_ID			AND A.strt_dtts_of_a_recd = a1.maxtime			AND A.OBJC_DELT_INDA = '' 			AND A.END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000' 			AND A.stus_type = '01' 			               )ALST		LEFT JOIN		(			SELECT B.* FROM			SVCBODS.BUSN_PTNR_ALAS_DATA b			JOIN			(SELECT ALAS_UNIQ_ID,MAX(strt_dtts_of_a_recd) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_DATA GROUP BY ALAS_UNIQ_ID			)b1			ON b.ALAS_UNIQ_ID = b1.ALAS_UNIQ_ID			AND b.strt_dtts_of_a_recd = b1.maxtime			AND B.OBJC_DELT_INDA = '' 			AND B.END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000'     	)ALDTON ALST.ALAS_UNIQ_ID = ALDT.ALAS_UNIQ_IDLEFT JOIN			(			SELECT C.* FROM			SVCBODS.BUSN_PTNR_ALAS_HEAD  c			JOIN		    (		    SELECT ALAS_UNIQ_ID,MAX(last_chng_time_stmp) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_HEAD  GROUP BY ALAS_UNIQ_ID)c1			ON c.ALAS_UNIQ_ID = c1.ALAS_UNIQ_ID			AND c.last_chng_time_stmp = c1.maxtime			--AND c.OBJC_DELT_INDA = '' 				)ALHRON ALST.ALAS_UNIQ_ID = ALHR.ALAS_UNIQ_ID--AND ALHR.OBJC_DELT_INDA = ''/*LEFT JOIN		SVCBODS.ACCT_MSTR_DATA ACNT		ON ALDT.ALAS_OBJC_ID = ACNT.ACCT		AND ALDT.ALAS_OBJC_TYPE = 'ACCT'		AND ALDT.expy_d = '9999-12-31'	                                  LEFT JOIN 		(		SELECT * FROM			SVCBODS.BUSN_PTNR E		JOIN			(SELECT BUSN_PTNR_NUMB,MAX((LAST_CHNG_ON||LAST_CHNG_AT)) AS maxtime FROM SVCBODS.BUSN_PTNR GROUP BY BUSN_PTNR_NUMB		)e1		ON e.BUSN_PTNR_NUMB = e1.BUSN_PTNR_NUMB		AND (e.LAST_CHNG_ON||e.LAST_CHNG_AT) = e1.maxtime		) CustON ALHR.BUSN_PTNR  = CUST.BUSN_PTNR_NUMB*/)dervGROUP BY 1,2,3,4","NULL","0","0","0","N ","NULL","NULL","2017-10-17 14:39:51","kumarahe","2017-10-17 14:54:05","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT AS GDW2_RESTORE.APPT_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:19","singhp80","2025-07-12 07:55:19","NULL","30","2025-08-13 13:25:03","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_LOAN_FNDD_METH","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_LOAN_FNDD_METHAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_FNDD_METHFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_FNDD_METH;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:00","perumabh","2025-07-14 22:16:00","NULL","1","2025-07-14 22:16:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","ACCT_PATY_REL_THA","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.ACCT_PATY_REL_THA ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      THA_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Thaler Account Identifier' NOT NULL,      TRAD_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Trading Account Identifier' NOT NULL,      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL)PRIMARY INDEX ( TRAD_ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:46","perumabh","2025-07-14 22:04:46","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EXP_BALN_1","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.EXP_BALN_1(  	PERD_D	,MSUR_CODE_IDNN_BK	,ACCT_IDNN_BK	,GL_BUSN_UNIT_IDNN_BK	,GL_ACCT_IDNN_BK	,GL_DEPT_IDNN_BK	,GL_PDCT_IDNN_BK	,GL_AFLT_IDNN_BK	,GL_PRJC_IDNN_BK	,GL_CNCY_IDNN_BK	,GL_OPER_UNIT_IDNN_BK	,GL_SRCE_IDNN_BK	,USGE_CNCY_CATG_IDNN_BK	,GRD_PDCT_IDNN_BK	,MSTR_SRCE_SYST_C	,MSUR_A)AS LOCKING ROW FOR ACCESS  SELECT 	 PERD_D	,MSUR_CODE_IDNN_BK	,ACCT_IDNN_BK	,GL_BUSN_UNIT_IDNN_BK	,GL_ACCT_IDNN_BK	,GL_DEPT_IDNN_BK	,GL_PDCT_IDNN_BK	,GL_AFLT_IDNN_BK	,GL_PRJC_IDNN_BK	,GL_CNCY_IDNN_BK	,GL_OPER_UNIT_IDNN_BK	,GL_SRCE_IDNN_BK	,USGE_CNCY_CATG_IDNN_BK	,GRD_PDCT_IDNN_BK	,MSTR_SRCE_SYST_C	,MSUR_A		--FROM 	B_D16_V_BAL_001_STD_0.FACT_ACCT_BALN_GL_MNLY FBABG	FROM     KOSTKAMA.FACT_ACCT_BALN_GL_MNLY FBABG		INNER JOIN 	( SELECT CALR_MNTH_STRT_D, CALR_MNTH_END_D, COUNT (1) AS NUM_DAYS FROM B_D16_V_BAL_001_STD_0.DIMN_DATE GROUP BY 1,2 ) DD1 		ON FBABG.PERD_D 				BETWEEN DD1.CALR_MNTH_STRT_D AND DD1.CALR_MNTH_END_D     WHERE MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A'UNION ALL           SELECT     	 PERD_D    	,'MNLY_AVG_NET_CLSE_BALN' AS MSUR_CODE_IDNN_BK    	,ACCT_IDNN_BK    	,GL_BUSN_UNIT_IDNN_BK    	,GL_ACCT_IDNN_BK    	,GL_DEPT_IDNN_BK    	,GL_PDCT_IDNN_BK    	,GL_AFLT_IDNN_BK    	,GL_PRJC_IDNN_BK    	,GL_CNCY_IDNN_BK    	,GL_OPER_UNIT_IDNN_BK    	,GL_SRCE_IDNN_BK    	,USGE_CNCY_CATG_IDNN_BK    	,GRD_PDCT_IDNN_BK    	,MSTR_SRCE_SYST_C    	,AVG_MSUR_A AS MSUR_A    	    	--FROM 	B_D16_V_BAL_001_STD_0.FACT_ACCT_BALN_GL_MNLY FBABG	FROM     KOSTKAMA.FACT_ACCT_BALN_GL_MNLY FBABG    	INNER JOIN     	( SELECT CALR_MNTH_STRT_D, CALR_MNTH_END_D, COUNT (1) AS NUM_DAYS FROM B_D16_V_BAL_001_STD_0.DIMN_DATE GROUP BY 1,2 ) DD1     		ON FBABG.PERD_D 				BETWEEN DD1.CALR_MNTH_STRT_D AND DD1.CALR_MNTH_END_D                     WHERE MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A';","NULL","0","0","0","N ","NULL","NULL","2016-06-14 09:26:18","KOSTKAMA","2016-06-14 11:51:14","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_OVRD_FEE_FRQ_CL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_OVRD_FEE_FRQ_CLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_OVRD_FEE_FRQ_CLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_OVRD_FEE_FRQ_CL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:45","perumabh","2025-07-14 22:08:45","NULL","1","2025-07-14 22:08:45","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","INT_GRUP_DEPT","1","V ","F ","NN  ","perumabh","--Create New ViewREPLACE VIEW K_PVTECH.INT_GRUP_DEPT(        INT_GRUP_I,        DEPT_I,        DEPT_ROLE_C,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_DEPT FOR ACCESSSELECT        INT_GRUP_I,        DEPT_I,        DEPT_ROLE_C,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C  FROM        K_STAR_CAD_PROD_DATA.INT_GRUP_DEPT WHERE(/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:38:13","perumabh","2025-07-14 22:38:13","NULL","2","2025-07-14 23:45:39","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT AS GDW2_RESTORE.APPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:24","singhp80","2025-07-12 07:55:24","NULL","29","2025-08-13 13:17:59","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","TP_POC_VIEW_MERGED_VERSION","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.TP_POC_VIEW_MERGED_VERSION(   MNTH_END_D,        MSUR_ALL.ACCT_IDNN_HK,                         ACCT_IDNN_BK ,         GL_SRCE_IDNN_BK,        GL_BUSN_UNIT_IDNN_BK,                GL_ACCT_IDNN_BK,                GL_DEPT_IDNN_BK,            GL_PDCT_IDNN_BK,                         GL_AFLT_IDNN_BK,        GRD_PDCT_LEAF_NODE_C,        FNCL_MSUR_C,        CNCY_IDNN_BK,                         USGE_CNCY_CATG_IDNN_BK,                     MSTR_SRCE_SYST_C,                       MSUR_A,        ROW_SECU_ACCS_C,         EFFT_D,                               EXPY_D,                               CTL_ID,                               RECORD_DELETED_FLAG,                  PROCESS_NAME,                         PROCESS_ID,                           UPDATE_PROCESS_NAME,                  UPDATE_PROCESS_ID,                    EFFT_TS,                              EXPY_TS,                              RECD_ISRT_DTTM              ) ASLOCKING ROW FOR ACCESSSELECT        MNTH_END_D,        MSUR_ALL.ACCT_IDNN_HK,                         ACCT_IDNN_BK ,         GL_SRCE_IDNN_BK,        COALESCE(MSUR_ALL.GL_BUSN_UNIT_IDNN_BK      , 'UNKNOWN')        AS GL_BUSN_UNIT_IDNN_BK,                COALESCE(MSUR_ALL.GL_ACCT_IDNN_BK               , 'UNKNOWN')                AS GL_ACCT_IDNN_BK,                COALESCE(MSUR_ALL.GL_DEPT_IDNN_BK               , 'UNKNOWN')            AS GL_DEPT_IDNN_BK,            COALESCE(MSUR_ALL.GL_PDCT_IDNN_BK               , 'UNKNOWN')            AS GL_PDCT_IDNN_BK,                         COALESCE(MSUR_ALL.GL_AFLT_IDNN_BK               , 'UNKNOWN')            AS GL_AFLT_IDNN_BK,        COALESCE( ACCT_PDCT.GRD_PDCT_IDNN_BK        , 'UNKNOWN')                AS GRD_PDCT_LEAF_NODE_C,        MSUR_CODE_IDNN_BK                                                                                   AS FNCL_MSUR_C,        COF_WOF_GRUP_CNCY_IDNN_BK                                                                   AS CNCY_IDNN_BK,                         'GRUP'                                                                                                                  AS USGE_CNCY_CATG_IDNN_BK,                     CAST(MSUR_ALL.MSTR_SRCE_SYST_C AS VARCHAR(10))                      AS MSTR_SRCE_SYST_C,                       SUM(MSUR_ALL.MSUR_A)                                                                                AS MSUR_A,        0                                                                                                                           AS ROW_SECU_ACCS_C,         EFFT_D                                                                                                              AS EFFT_D,                               '9999-12-31'                                                                                                        AS EXPY_D,                               -1                                                                                                                      AS CTL_ID,                               0                                                                                                                           AS RECORD_DELETED_FLAG,                  'MANUAL'                                                                                                            AS PROCESS_NAME,                         -1                                                                                                                      AS PROCESS_ID,                           NULL                                                                                                                    AS UPDATE_PROCESS_NAME,                  NULL                                                                                                                    AS UPDATE_PROCESS_ID,                    CURRENT_TIMESTAMP                                                                                   AS EFFT_TS,                              TIMESTAMP'9999-12-31 23:59:59'                                                                      AS EXPY_TS,                              CURRENT_TIMESTAMP                                                                                   AS RECD_ISRT_DTTM  FROM (       /*To Fetch GTR-COF/WOF data*/ SELECT                       CASE            WHEN CWTM.PDCT_SRCE_SYST_C='SAP'  AND SAA.ROLE_CODE = 'MC01'   AND CWTM.GL_BUSN_UNIT_IDNN_BK='CB001' THEN COALESCE(LAIL.ACCT_IDNN_HK, HACT.ACCT_IDNN_HK)            WHEN  CWTM.PDCT_SRCE_SYST_C ='CBS'  AND CBSREL.OBJC_ACCT_I IS NOT NULL THEN CBSREL.ACCT_IDNN_HK            --WHEN  CWTM.PDCT_SRCE_SYST_C ='FAC' THEN COALESCE(MTXACCT.ACCT_I,FACACCT.ACCT_I,HACT.ACCT_IDNN_BK) --uncomment after view creation in dev2            --WHEN CWTM.PDCT_SRCE_SYST_C = 'LMS' THEN  HACT.ACCT_IDNN_HK    -- Not really needed as captured in ELSE part of Case statement --           WHEN CWTM.PDCT_SRCE_SYST_C = 'MID'    THEN HACT.ACCT_IDNN_HK  -- Not really needed as captured in ELSE part of Case statement          ELSE HACT.ACCT_IDNN_HK       END  AS ACCT_IDNN_HK                    ,  CASE                       WHEN  CWTM.PDCT_SRCE_SYST_C=        'SAP' AND SAA.ROLE_CODE = 'MC01'  AND CWTM.GL_BUSN_UNIT_IDNN_BK='CB001' THEN COALESCE(LAIL.ACCT_I, HACT.ACCT_IDNN_BK)            WHEN CWTM.PDCT_SRCE_SYST_C ='CBS'   AND CBSREL.OBJC_ACCT_I IS NOT NULL THEN CBSREL.ACCT_IDNN_BK            WHEN CWTM.PDCT_SRCE_SYST_C ='CBS'   AND CBSREL.OBJC_ACCT_I IS  NULL THEN HACT.ACCT_IDNN_BK               --WHEN  CWTM.PDCT_SRCE_SYST_C =      'FAC' THEN COALESCE(MTXACCT.ACCT_I,FACACCT.ACCT_I,HACT.ACCT_IDNN_BK) --uncomment after view creation in dev2                 WHEN CWTM.PDCT_SRCE_SYST_C =   'LMS' THEN   LAIMA.ACCT_I    --- should probably use HACT.ACCT_IDNN_BK in final and therefore this line can be removed?               ELSE HACT.ACCT_IDNN_BK          END  AS ACCT_IDNN_BK                                     ,MSUR_CODE_IDNN_BK                    ,SNAP_D                                                                                                                                                                                     AS MNTH_END_D          ,PDCT_SRCE_SYST_C        ,GL_DEPT_IDNN_BK                      ,GL_PDCT_IDNN_BK                      ,GL_BUSN_UNIT_IDNN_BK                 ,GL_ACCT_IDNN_BK                      ,GL_AFLT_IDNN_BK                      ,GL_SRCE_IDNN_BK                      ,SUM(COF_WOF_GRUP_CNCY_A           )                                                                                                                                AS MSUR_A        ,COF_WOF_GRUP_CNCY_IDNN_BK            ,CWTM.MSTR_SRCE_SYST_C                    , MNTH_END_D                                                                                                                                                                             AS EFFT_D       ,CWTM.ACCT_IDNN_HK                                                                                                                                                           AS BASE_ACCT_IDNN_HK   FROM    (SELECT        ACCT_IDNN_HK                         ,MSUR_CODE_IDNN_BK                    ,DATE '2017-11-30' AS SNAP_D            ,PDCT_SRCE_SYST_C                          ,GL_DEPT_IDNN_BK                      ,GL_PDCT_IDNN_BK                      ,GL_BUSN_UNIT_IDNN_BK                 ,GL_ACCT_IDNN_BK                      ,GL_AFLT_IDNN_BK                      ,GL_SRCE_IDNN_BK                      ,SUM(CWTM.COF_WOF_GRUP_CNCY_A)   AS COF_WOF_GRUP_CNCY_A                  ,COF_WOF_GRUP_CNCY_IDNN_BK            ,MSTR_SRCE_SYST_C                     ,DATE '2017-12-04' EFFT_D                                                                                                    FROM P_V_USR_TEC_0.S_ACCT_COF_WOF     CWTMWHERE BUSN_EFFT_D BETWEEN '2017-11-01' AND '2017-11-30'AND CWTM.MSTR_SRCE_SYST_C = 'GTR'--AND cwtm.efft_d <=  DATE '2017-12-04'AND PDCT_SRCE_SYST_CIN('AFS'      ,'BCB'      ,'BCC'      ,'BOS'     ,'BQM'      ,'CBS'      ,'CCS'      ,'DMM'      ,'FAC'      ,'GTR'      ,'HLS'      ,'MLS'      ,'MRX'      ,'SAP'      ,'SAV'      ,'TAH'      ,'TRM'      ,'WSS'       )GROUP BY 1,2,3,4,5,6,7,8,9,10,12,13,14)  CWTM       -- U_D_DSV_001_BPB_0.GR_S_ACCT_COF_WOF  CWTM INNER JOIN  P_V_USR_TEC_0.H_ACCT HACT    ON                  CWTM.ACCT_IDNN_HK = HACT.ACCT_IDNN_HK    AND             CWTM.COF_WOF_GRUP_CNCY_IDNN_BK = 'AUD' /* SAP roll up to Master Contract  - START */LEFT JOIN P_V_USR_TEC_0.S_ACCT_ACCT SAA            ON CWTM.ACCT_IDNN_HK = SAA.REL_ACCT_IDNN_HK            AND CWTM.SNAP_D BETWEEN SAA.BUSN_STRT_D AND SAA.BUSN_END_D              AND SAA.ACCT_IDNN_HK             NOT IN (                                  SELECT LAP.ACCT_IDNN_HK                                   FROM P_V_USR_TEC_0.H_GRD_PDCT HP                                     INNER JOIN PVTECH.GRD_GNRC_MAP_CURR GNRC                                      ON HP.GRD_PDCT_IDNN_BK =  GNRC.SRCE_CHAR_1_C                                      AND GNRC.MAP_TYPE_C = 'SAP_MCC_MC_EXCL_INCL'                                      AND GNRC.TARG_CHAR_C = 'PDCT'                                     INNER JOIN P_V_USR_TEC_0.L_ACCT_PDCT LAP                                       ON HP.GRD_PDCT_IDNN_HK = LAP.GRD_PDCT_IDNN_HK                                    AND LAP.RECORD_DELETED_FLAG = 0                                    AND LAP.EXPY_D = DATE '9999-12-31'                                    AND HP.RECORD_DELETED_FLAG = 0                                    AND HP.EXPY_D = DATE '9999-12-31'                                   INNER JOIN  P_V_USR_TEC_0.S_ACCT_PDCT SAG                                       ON LAP.ACCT_PDCT_IDNN_HK = SAG.ACCT_PDCT_IDNN_HK                                    AND SAG.RECORD_DELETED_FLAG = 0                                    AND SAG.EXPY_D = DATE '9999-12-31'                                    AND LAP.RECORD_DELETED_FLAG = 0                                    AND LAP.EXPY_D = DATE '9999-12-31'                                    AND CWTM.SNAP_D BETWEEN SAG.BUSN_STRT_D AND SAG.BUSN_END_D              )            AND SAA.ROLE_CODE = 'MC01'              AND SAA.ACCT_HIER_NODE_M = 'ULTIMATE PARENT'            AND SAA.MSTR_SRCE_SYST_C = 'SAP'            AND SAA.EXPY_D = DATE '9999-12-31'              AND SAA.RECORD_DELETED_FLAG = 0             LEFT OUTER JOIN     P_V_USR_TEC_0.L_ACCT_IM_ACCT LAIL ON  COALESCE(SAA.ACCT_IDNN_HK, CWTM.ACCT_IDNN_HK) = LAIL.ACCT_IDNN_HK            AND LAIL.MSTR_SRCE_SYST_C = 'SAP'            AND LAIL.EXPY_D = DATE '9999-12-31'             /* SAP roll up to Master Contract  - END */  /* LMS Mapping  - START */LEFT OUTER JOIN  P_V_USR_TEC_0.L_ACCT_IM_ACCT LAIMA  ON  CWTM.ACCT_IDNN_HK = LAIMA.ACCT_IDNN_HK/* LMS Mapping  - END */  /* CBS Deal to CBS Facility Mapping  - START */LEFT OUTER JOIN( SELECT AL.SUBJ_ACCT_I, AL.OBJC_ACCT_I , HA.ACCT_IDNN_HK , HA.ACCT_IDNN_BK    FROM PVTECH.ACCT_REL  AL    JOIN PVTECH.ACCT_BASE AB    ON   AL.OBJC_ACCT_I = AB.ACCT_I    AND AB.SRCE_SYST_C = 'CBS'    AND AB.ACCT_CLAS_TYPE_C = 'ACCT'         JOIN p_v_usr_tec_0.h_acct HA    ON AB.SRCE_SYST_ACCT_N = HA.SRCE_ACCT_N    AND ha.acct_qlfy_c = 'cl'           WHERE AL.SRCE_SYST_C='CBS'     AND AL.REL_C= 'CHIL'     AND AL.REL_EXPY_D = '9999-12-31'     GROUP BY 1,2,3,4 )  CBSREL  ON  LAIMA.ACCT_I = CBSREL.SUBJ_ACCT_I/* CBS Deal to CBS Facility Mapping - END */   /* FACIT_LOAN_ID to MATRIX_ACCT/Facility mapping  - START */ /*LEFT OUTER JOIN PVTECH.FAC_LOAN_PERD_WORK FLPW     ON OREPLACE(HACT.ACCT_IDNN_BK,'FAC~FL~','') = CAST(FLPW.LOAN_I AS VARCHAR(50))    AND CWTM.SNAP_D BETWEEN FLPW.STRT_D AND FLPW.END_D -1 LEFT OUTER JOIN(        SELECT ACCT_I,SRCE_SYST_ACCT_N        FROM PVTECH.ACCT_BASE        WHERE SRCE_SYST_C = 'MTX')  MTXACCTON CAST(FLPW.MATR_TKET_N AS VARCHAR(255)) = MTXACCT.SRCE_SYST_ACCT_N  LEFT OUTER JOIN PVTECH.FAC_LOAN_DETL FLD    ON OREPLACE(HACT.ACCT_IDNN_BK,'FAC~FL~','') = CAST(FLD.LOAN_I AS VARCHAR(50))    AND CWTM.SNAP_D BETWEEN FLD.EFFT_D AND FLD.EXPY_D LEFT OUTER JOIN(        SELECT ACCT_I,SRCE_SYST_ACCT_N        FROM PVTECH.ACCT_BASE        WHERE SRCE_SYST_C = 'FAC')  FACACCTON CAST(FLD.FCLY_I AS VARCHAR(255)) = FACACCT.SRCE_SYST_ACCT_N*/   /* FACIT_LOAN_ID to MATRIX_ACCT/Facility mapping  - END */  GROUP BY ","NULL","0","0","0","N ","NULL","NULL","2018-04-04 12:30:01","kumarm9","2018-04-05 16:06:51","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_PL_ACQR_TYPE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_PL_ACQR_TYPEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PL_ACQR_TYPEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_PL_ACQR_TYPE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:46","perumabh","2025-07-14 22:08:46","NULL","1","2025-07-14 22:08:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_PAYT_FREQ","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_PAYT_FREQAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PAYT_FREQFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_PAYT_FREQ;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:45","perumabh","2025-07-14 22:08:45","NULL","1","2025-07-14 22:08:45","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_HLM_APP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_HLM_APP AS GDW2_RESTORE.TMP_HLM_APP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:54","singhp80","2025-07-12 07:56:54","NULL","3","2025-07-12 06:02:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","MCR_FACT_ACCT_FNCL_MSUR_CLSE_BALANCE","1","M ","F ","NN  ","kumarm9","REPLACE MACRO KUMARM9.MCR_FACT_ACCT_FNCL_MSUR_CLSE_BALANCE (DT DATE, SRC VARCHAR(5) ) AS (    DELETE FROM B_D17_D_TMP_001_STD_0.FACT_ACCT_FNCL_MSUR    WHERE PERD_D = :DT AND MSUR_C = 'NET_CLSE_BALN_A' AND MSTR_SRCE_SYST_C = :SRC;    INSERT INTO B_D17_D_TMP_001_STD_0.FACT_ACCT_FNCL_MSUR            SEL                 :DT AS PERD_D                                        ,'WEEK' AS PERD_C                                        ,HA.ACCT_IDNN_HK                                  ,HA.ACCT_IDNN_BK                                  ,GL_PDCT_IDNN_BK                               ,GL_DEPT_IDNN_BK                 ,NULL AS GRD_PDCT_IDNN_BK                              ,HA.MSTR_SRCE_SYST_C                   ,'AUD' AS CNCY_C                                        ,'GRUP' AS USGE_CNCY_CATG_IDNN_BK                --,'Closing Balance' AS MSUR_C                                        ,'NET_CLSE_BALN_A' AS MSUR_C                ,MSUR_A                 ,NULL AS EFFT_D                                        ,NULL AS EXPY_D                                FROM P_V_USR_TEC_0. FACT_BASE_HLS_BALN_GL BASE        JOIN P_V_USR_TEC_0.H_ACCT HA             ON HA.ACCT_IDNN_HK = BASE.ACCT_IDNN_HK                  WHERE SNAP_D =:DT AND BASE.EXPY_D = '9999-12-31'         AND MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A'        AND HA.MSTR_SRCE_SYST_C = :SRC    ;);","NULL","0","0","0","N ","NULL","NULL","2017-08-28 10:34:24","kumarm9","2017-08-28 16:30:25","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_DOCU_METH","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_DOCU_METH AS GDW2_RESTORE.MAP_CSE_DOCU_METH WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:06","singhp80","2025-07-12 07:57:06","NULL","29","2025-08-13 16:12:08","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_11_ACCT_PATY_PRTF_MNLY_TEST2","1","V ","F ","NN  ","KOSTKAMA","--sel * from b_d17_v_bal_001_std_0.FACT_ACCT_FNCL_GL_MSUR_MNLY WHERE MSTR_SRCE_SYST_C = 'AFS'REPLACE VIEW KOSTKAMA.TX_300_11_ACCT_PATY_PRTF_MNLY_TEST2--REPLACE VIEW B_D17_V_INP_001_STD_0. TX_300_11_ACCT_PATY_PRTF_MNLY(       ACCT_IDNN_HK,        ACCT_IDNN_BK,        MSTR_SRCE_SYST_C,        PATY_IDNN_HK,        PATY_IDNN_BK,        PATY_OWN_PRTF_IDNN_BK,        PATY_CRSK_PRTF_IDNN_BK,        PATY_SEGM_PRTF_IDNN_BK,        VALD_PATY_PRTF_F,        INTR_PATY_PRTF_F,        PATY_OWN_PRTF_MNGE_F,        PATY_CRSK_MNGE_F,        PREV_FYE_CRSK_MNGE_F,                                         ROW_SECU_ACCS_C   ,         CTLFW_DELTA_ACTION_CODE            )AS SELECT     HA.ACCT_IDNN_HK,HA.ACCT_IDNN_BK,HA.MSTR_SRCE_SYST_C                ,GM.PATY_IDNN_HK                 ,GM.PATY_IDNN_BK,GM.PRTF_IDNN_BK  AS PATY_OWN_PRTF_IDNN_BK,GM.CRS_PRTF_IDNN_BK       AS PATY_CRSK_PRTF_IDNN_BK      ,GM.PATY_SEGM_PRTF_IDNN_BK ,GM.VALD_PATY_F AS VALD_PATY_PRTF_F,GM.INTR_PATY_F AS INTR_PATY_PRTF_F,GM.PRTF_MNGE_F AS PATY_OWN_PRTF_MNGE_F,GM.CRSK_MGMT_F AS PATY_CRSK_MNGE_F,GM.PREV_FYE_CRSK_MNGE_F,GM. ROW_SECU_ACCS_C  ,0 AS CTLFW_DELTA_ACTION_CODEFROM       (                              						SEL  ACCT_IDNN_HK  --                            						SEL MSTR_SRCE_SYST_C, COUNT(DISTINCT ACCT_IDNN_HK)                              						FROM (                                                            SEL ACCT_IDNN_HK, CAST(MSTR_SRCE_SYST_C AS VARCHAR(10)) AS MSTR_SRCE_SYST_C                                                           FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_BALN_GL_MNLY FACT                                                           WHERE MNTH_END_D < '2018-04-30'                                                           --AND MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A'                                                           GROUP BY 1,2                                                                                                                       UNION ALL                                                                                                                       SEL ACCT_IDNN_HK, MSTR_SRCE_SYST_C                                                           FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_FNCL_GL_MSUR_MNLY FACT                                                           WHERE MNTH_END_D < '2018-04-30'                                                            GROUP BY 1,2                                                                                                                       UNION ALL                                                                                                                       SEL ACCT_IDNN_HK, MSTR_SRCE_SYST_C                                                           FROM B_D17_V_SHR_001_STD_0.H_ACCT HA                                                           WHERE EFFT_D > '2018-03-31'                                                           GROUP BY 1,2                                                           ) A                                                           GROUP BY 1                                                           													)BASEINNER JOIN   B_D17_V_SHR_001_STD_0.H_ACCT HA		ON HA.ACCT_IDNN_HK = BASE.ACCT_IDNN_HKLEFT JOIN 				(				SELECT						COALESCE(A.PATY_IDNN_HK, '696B031073E74BF2CB98E5EF201D4AA3') AS PATY_IDNN_HK,						A.ACCT_IDNN_HK AS ACCT_IDNN_HK				FROM              		   		               (               		   		               		SELECT                    			            	sap.PATY_IDNN_HK,         			                        	sap.ACCT_PATY_IDNN_HK,          			                       		sap.ACCT_IDNN_HK,            			                    	sap.BUSN_STRT_D,                        			        	sap.BUSN_END_D                                				FROM  B_D17_V_BUS_001_STD_0.S_ACCT_PATY SAP                               				INNER JOIN B_D17_V_BAL_001_STD_0.DIMN_DATE DD                               				ON DD.CALR_D = ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)                               				AND   SAP.PRFR_PATY_F = 'Y'                                 				AND SAP.BUSN_STRT_D <= DD.CALR_D                               				AND SAP.BUSN_END_D >=DD.CALR_MNTH_STRT_D                               				AND  SAP.EXPY_D = '9999-12-31'                               				AND  SAP.RECORD_DELETED_FLAG = 0                                				WHERE SAP.ACCT_PATY_IDNN_HK IN ( SEL ACCT_PATY_IDNN_HK FROM B_D17_V_SHR_001_STD_0.L_ACCT_PATY                                                                                                       WHERE EXPY_D ='9999-12-31' AND RECORD_DELETED_FLAG=0)												                              				--QUALIFY ROW_NUMBER() OVER (PARTITION BY ACCT_IDNN_HK ORDER BY BUSN_STRT_D DESC ) = 1 											)A						)	  SAP						ON HA.ACCT_IDNN_HK=SAP.ACCT_IDNN_HKINNER JOIN  ( 			SEL                             HP.PATY_IDNN_HK,                 							HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK NOT IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D                UNION ALL                                 SEL                             HP.PATY_IDNN_HK,                                                                                                                                 HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK  IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D                                  ) GM                			ON  SAP.PATY_IDNN_HK=GM.PATY_IDNN_HK;","NULL","0","0","0","N ","NULL","NULL","2018-06-15 16:26:46","KOSTKAMA","2018-06-15 16:44:14","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_CNTY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CNTY AS GDW2_RESTORE.MAP_CSE_CNTY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:49","singhp80","2025-07-12 07:56:49","NULL","29","2025-08-13 16:08:31","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","MSTR_CNCT_BALN_TRNF_PRTP","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.MSTR_CNCT_BALN_TRNF_PRTP AS GDW2_RESTORE.MSTR_CNCT_BALN_TRNF_PRTP WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:37","PUDBAI016","2025-08-21 21:47:37","NULL","1","2025-08-22 11:37:44","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_PRTF_ACCT_STAG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_PRTF_ACCT_STAGAS LOCK TABLE K_PDDSTG.DERV_PRTF_ACCT_STAGFOR ACCESS SELECT * FROM K_PDDSTG.DERV_PRTF_ACCT_STAG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:59","perumabh","2025-07-14 22:05:59","NULL","1","2025-07-14 22:05:59","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVPATY","UTIL_PROS_ISAC","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVPATY.UTIL_PROS_ISAC(        PROS_KEY_I,        CONV_M,        CONV_TYPE_M,        PROS_RQST_S,        PROS_LAST_RQST_S,        PROS_RQST_Q,        BTCH_RUN_D,        BTCH_KEY_I,        SRCE_SYST_M,        SRCE_M,        TRGT_M,        SUCC_F,        COMT_F,        COMT_S,        MLTI_LOAD_EFFT_D,        SYST_S,        MLTI_LOAD_COMT_S,        SYST_ET_Q,        SYST_UV_Q,        SYST_INS_Q,        SYST_UPD_Q,        SYST_DEL_Q,        SYST_ET_TABL_M,        SYST_UV_TABL_M,        SYST_HEAD_ET_TABL_M,        SYST_HEAD_UV_TABL_M,        SYST_TRLR_ET_TABL_M,        SYST_TRLR_UV_TABL_M,        PREV_PROS_KEY_I,        HEAD_RECD_TYPE_C,        HEAD_FILE_M,        HEAD_BTCH_RUN_D,        HEAD_FILE_CRAT_S,        HEAD_GENR_PRGM_M,        HEAD_BTCH_KEY_I,        HEAD_PROS_KEY_I,        HEAD_PROS_PREV_KEY_I,        TRLR_RECD_TYPE_C,        TRLR_RECD_Q,        TRLR_HASH_TOTL_A,        TRLR_COLM_HASH_TOTL_M,        TRLR_EROR_RECD_Q,        TRLR_FILE_COMT_S,        TRLR_RECD_ISRT_Q,        TRLR_RECD_UPDT_Q,        TRLR_RECD_DELT_Q)    AS LOCKING TABLE K_PDPATY.UTIL_PROS_ISAC FOR ACCESSSELECT        PROS_KEY_I,        CONV_M,        CONV_TYPE_M,        PROS_RQST_S,        PROS_LAST_RQST_S,        PROS_RQST_Q,        BTCH_RUN_D,        BTCH_KEY_I,        SRCE_SYST_M,        SRCE_M,        TRGT_M,        SUCC_F,        COMT_F,        COMT_S,        MLTI_LOAD_EFFT_D,        SYST_S,        MLTI_LOAD_COMT_S,        SYST_ET_Q,        SYST_UV_Q,        SYST_INS_Q,        SYST_UPD_Q,        SYST_DEL_Q,        SYST_ET_TABL_M,        SYST_UV_TABL_M,        SYST_HEAD_ET_TABL_M,        SYST_HEAD_UV_TABL_M,        SYST_TRLR_ET_TABL_M,        SYST_TRLR_UV_TABL_M,        PREV_PROS_KEY_I,        HEAD_RECD_TYPE_C,        HEAD_FILE_M,        HEAD_BTCH_RUN_D,        HEAD_FILE_CRAT_S,        HEAD_GENR_PRGM_M,        HEAD_BTCH_KEY_I,        HEAD_PROS_KEY_I,        HEAD_PROS_PREV_KEY_I,        TRLR_RECD_TYPE_C,        TRLR_RECD_Q,        TRLR_HASH_TOTL_A,        TRLR_COLM_HASH_TOTL_M,        TRLR_EROR_RECD_Q,        TRLR_FILE_COMT_S,        TRLR_RECD_ISRT_Q,        TRLR_RECD_UPDT_Q,        TRLR_RECD_DELT_Q  FROM        K_PDPATY.UTIL_PROS_ISAC;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:12:49","perumabh","2025-07-14 22:12:49","NULL","1","2025-07-14 22:12:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_PDCT_FEAT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_PDCT_FEATAS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_FEATFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.APPT_PDCT_FEAT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:55","perumabh","2025-07-14 22:20:55","NULL","1","2025-07-14 22:20:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDATA","PATY_INT_GRUP_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDATA.PATY_INT_GRUP_CURR(        INT_GRUP_I, PATY_I, EFFT_D, EXPY_D, SRCE_SYST_C, PRIM_CLNT_F, REL_I, SRCE_SYST_PATY_INT_GRUP_I, ORIG_SRCE_SYST_PATY_TYPE_C, ORIG_SRCE_SYST_PATY_I, REL_C, VALD_FROM_D, VALD_TO_D, PRIM_CLNT_SLCT_C, GDW_EFFT_D)     ASSELECT        INT_GRUP_I,        PATY_I,        EFFT_D,        EXPY_D,        SRCE_SYST_C,        PRIM_CLNT_F,        REL_I,        SRCE_SYST_PATY_INT_GRUP_I,        ORIG_SRCE_SYST_PATY_TYPE_C,        ORIG_SRCE_SYST_PATY_I,        REL_C,        VALD_FROM_D,        VALD_TO_D,        PRIM_CLNT_SLCT_C,  (SELECT GDW_EFFT_D FROM K_PVDATA.GDW_EFFT_DATE) AS GDW_EFFT_D  FROM        K_PVTECH.PATY_INT_GRUPWHERE         GDW_EFFT_D BETWEEN EFFT_D AND EXPY_D;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:45:47","perumabh","2025-07-14 23:45:47","NULL","1","2025-07-14 23:45:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2015","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2015 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2015-01-02' and '2016-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:26","KUCB2220","2025-08-06 18:19:26","NULL","2","2025-08-06 19:09:22","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","UTIL_PROS_ISAC","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.UTIL_PROS_ISAC AS LOCKING TABLE K_STAR_CAD_PROD_DATA.UTIL_PROS_ISAC FOR ACCESS SELECT * FROM K_STAR_CAD_PROD_DATA.UTIL_PROS_ISAC;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:09:16","perumabh","2025-07-14 22:09:16","NULL","5","2025-08-13 19:25:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","VARIABLES","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.VARIABLES AS (SEL DATE '2018-04-13' AS DT, 1.05 AS GROWTH_RATE );","NULL","0","0","0","N ","NULL","NULL","2018-04-19 11:06:44","KOSTKAMA","2018-04-19 11:06:44","NULL","1","2023-07-14 03:38:09","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_LOAN_FNDD_METH","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_FNDD_METH AS GDW2_RESTORE.MAP_CSE_LOAN_FNDD_METH WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:05","singhp80","2025-07-12 07:57:05","NULL","29","2025-08-14 12:31:44","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","RTTM_EXTRACT_HEAD","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.RTTM_EXTRACT_HEAD(ALAS_VALU,ALAS_TYPE,alas_regr_dtts,ALAS_STUS)AS LOCKING ROW FOR ACCESSSELECT  derv.alas_valu AS ALAS_VALU--,derv.acct_numbr,derv.alas_type AS ALAS_TYPE,derv.alas_regr_dtts AS alas_regr_dtts,derv.alas_stus AS ALAS_STUS--,derv.cifFROM(SELECT  ALHR.ALAS_VALU_1 AS alas_valu--ACNT.EXTL_ACCT_NUMB AS acct_numbr,ALHR.ALAS_TYPE     AS alas_type                --f.ALAS_TYPE_NODE_FULL_M,,ALST.ALAS_INIT_REGR AS alas_regr_dtts  ,ALST.ALAS_STUS_CODE AS alas_stus--g.ALAS_STUS_NODE_FULL_M,--,cust.BUSN_PTNR_NUMB_IN_EXTL_SYST AS cifFROM			(			SELECT C.* FROM			SVCBODS.BUSN_PTNR_ALAS_HEAD  c			JOIN		    (		    SELECT ALAS_VALU_1,MAX(last_chng_time_stmp) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_HEAD WHERE OBJC_DELT_INDA = ''  GROUP BY ALAS_VALU_1)c1			ON c.ALAS_VALU_1 = c1.ALAS_VALU_1			AND c.last_chng_time_stmp = c1.maxtime			WHERE C.OBJC_DELT_INDA = '' 							)ALHRINNER JOIN		(			SELECT A.* FROM			SVCBODS.BUSN_PTNR_ALAS_STUS a			JOIN			(SELECT ALAS_UNIQ_ID,MAX(strt_dtts_of_a_recd) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_STUS WHERE OBJC_DELT_INDA = '' 			AND END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000' 			--AND stus_type = '01'  			GROUP BY ALAS_UNIQ_ID			) a1			ON  A.ALAS_UNIQ_ID = a1.ALAS_UNIQ_ID			AND A.strt_dtts_of_a_recd = a1.maxtime				WHERE A.stus_type = '01'			AND A.OBJC_DELT_INDA = '' 			AND A.END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000'  						               )ALSTON ALHR.ALAS_UNIQ_ID = ALST.ALAS_UNIQ_ID 		LEFT JOIN		(			SELECT B.* FROM			SVCBODS.BUSN_PTNR_ALAS_DATA b			JOIN			(SELECT ALAS_UNIQ_ID,MAX(strt_dtts_of_a_recd) AS maxtime FROM SVCBODS.BUSN_PTNR_ALAS_DATA  WHERE OBJC_DELT_INDA = '' 			AND END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000'  GROUP BY ALAS_UNIQ_ID			)b1			ON b.ALAS_UNIQ_ID = b1.ALAS_UNIQ_ID			AND b.strt_dtts_of_a_recd = b1.maxtime			WHERE b.OBJC_DELT_INDA = '' 			AND b.END_DTTS_OF_A_RECD = '9999-12-31 23:59:59.000000' 	    	)ALDTON ALHR.ALAS_UNIQ_ID = ALDT.ALAS_UNIQ_ID--AND ALHR.OBJC_DELT_INDA = ''/*LEFT JOIN		SVCBODS.ACCT_MSTR_DATA ACNT		ON ALDT.ALAS_OBJC_ID = ACNT.ACCT		AND ALDT.ALAS_OBJC_TYPE = 'ACCT'		AND ALDT.expy_d = '9999-12-31'	                                  LEFT JOIN 		(		SELECT * FROM			SVCBODS.BUSN_PTNR E		JOIN			(SELECT BUSN_PTNR_NUMB,MAX((LAST_CHNG_ON||LAST_CHNG_AT)) AS maxtime FROM SVCBODS.BUSN_PTNR GROUP BY BUSN_PTNR_NUMB		)e1		ON e.BUSN_PTNR_NUMB = e1.BUSN_PTNR_NUMB		AND (e.LAST_CHNG_ON||e.LAST_CHNG_AT) = e1.maxtime		) CustON ALHR.BUSN_PTNR  = CUST.BUSN_PTNR_NUMB*/)dervGROUP BY 1,2,3,4","NULL","0","0","0","N ","NULL","NULL","2017-10-17 15:48:30","kumarahe","2017-10-25 10:40:22","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","DERV_PRTF_OWN_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_PRTF_OWN_REL(        INT_GRUP_I,	 DERV_PRTF_TYPE_C,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 DERV_PRTF_ROLE_C,	 ROLE_PLAY_TYPE_X,	 ROLE_PLAY_I,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_OWN_REL FOR ACCESSSELECT        INT_GRUP_I,	 DERV_PRTF_TYPE_C,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 DERV_PRTF_ROLE_C,	 ROLE_PLAY_TYPE_X,	 ROLE_PLAY_I,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C  FROM        K_STAR_CAD_PROD_DATA.DERV_PRTF_OWN_REL WHERE ( (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */)    );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:43:51","perumabh","2025-07-14 22:43:51","NULL","1","2025-07-14 22:43:51","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_ROW_SECU_FIX","1","T ","F ","NN  ","perumabh","  CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_ROW_SECU_FIX ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,      DERV_ACCT_PATY_ROW_SECU_ACCS_C INTEGER TITLE 'DERV ACCT_PATY ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0,      ACCT_PATY_ROW_SECU_ACCS_C INTEGER TITLE 'ACCT_PATY ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0 )PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:27","perumabh","2025-07-14 22:04:27","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_PL_ACQR_TYPE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PL_ACQR_TYPE AS GDW2_RESTORE.MAP_CSE_PL_ACQR_TYPE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:02","singhp80","2025-07-12 07:57:02","NULL","29","2025-08-14 12:16:54","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_ADD","1","T ","F ","NN  ","perumabh","  CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_ADD ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,      ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,      PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL       COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */      PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),      SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,      ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0)PRIMARY INDEX ( ACCT_I )INDEX ( PATY_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:49","perumabh","2025-07-14 22:04:49","NULL","21","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","ACCT_REL_WSS_DITPS","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.ACCT_REL_WSS_DITPSAS LOCK TABLE K_PDDSTG.ACCT_REL_WSS_DITPSFOR ACCESS SELECT * FROM K_PDDSTG.ACCT_REL_WSS_DITPS;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:56","perumabh","2025-07-14 22:05:56","NULL","1","2025-07-14 22:05:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"karsa","S00_FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTD","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.S00_FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTD-- ----------------------------------------------------------------------- VIEW NAME:     B_S42_V_BAL_001_STD_0.FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTN---- DESCRIPTION: ---- This transformation view provides Employee Report Line Data  for an Employee and tags his ""LATEST DEPARTMENT"" --to the complete data set including history-- Its also provides Department/Area/Region/DT_MM/DT_RSS  ""TOTALS"" ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------------------------------- 1.0              Lakshmi Kongara     Initial version-- 1.1              Nandini Kumar         Added Comments-- 2.0              Nandini Kumar        Removed Restriction to National Level-- 2.1              Nandini Kumar		 Restrict to only job families required for reporting --2.2              Thomas Nguyen      Remove TOTAL union all and job family filter code-- ----- ---------- ------------------- --------------------------------------------------------(     SNAP_D	 ,PERD_C	 ,RPRT_LINE_I	 ,EMPL_IDNN_BK	 ,EMPL_DEPT_IDNN_BK	 ,JOB_FMLY_C     ,MSTR_SRCE_SYST_C	,ACTL_RVNU_A                   	,ACTL_MSUR_A                   	,ACTL_MSUR_Q                   	,ACTL_MSUR_R                   	,PLAN_RVNU_A                   	,PLAN_MSUR_A                   	,PLAN_MSUR_Q                   	,PLAN_MSUR_R )AS LOCKING ROW FOR ACCESS/*****************************************************************************************************//*Pick latest  Department/Area/Region/DT_MM/DT_RSS  for an employee *//* Grain is at an Employee level with latest department and area and region information *//*****************************************************************************************************/SELECT 	  LAT_DEPT.SNAP_D	 ,LAT_DEPT.PERD_C	 ,LAT_DEPT.RPRT_LINE_I	 ,LAT_DEPT.EMPL_IDNN_BK	 ,B.ENTY_ANCS_NODE_C AS EMPL_DEPT_IDNN_BK	 ,LAT_DEPT.JOB_FMLY_C	 ,LAT_DEPT.MSTR_SRCE_SYST_C	, SUM(LAT_DEPT.ACTL_RVNU_A)  AS  ACTL_RVNU_A 	, SUM(LAT_DEPT.ACTL_MSUR_A)  AS  ACTL_MSUR_A 	, SUM(LAT_DEPT.ACTL_MSUR_Q)  AS ACTL_MSUR_Q	, SUM(LAT_DEPT.ACTL_MSUR_R)  AS ACTL_MSUR_R	, SUM(LAT_DEPT.PLAN_RVNU_A)  AS  PLAN_RVNU_A 	, SUM(LAT_DEPT.PLAN_MSUR_A)  AS PLAN_MSUR_A	, SUM(LAT_DEPT.PLAN_MSUR_Q)  AS PLAN_MSUR_Q	, SUM(LAT_DEPT.PLAN_MSUR_R)  AS PLAN_MSUR_RFROM (		SELECT		FERL.SNAP_D		,FERL.PERD_C		,FERL.RPRT_LINE_I		,FERL.EMPL_IDNN_BK		,DEPT.DEPT_IDNN_BK		,JOBF.JOB_FMLY_C		,FERL.MSTR_SRCE_SYST_C    	, SUM(FERL.ACTL_RVNU_A)  AS ACTL_RVNU_A 		,SUM(FERL.ACTL_MSUR_A)  AS ACTL_MSUR_A		,SUM(FERL.ACTL_MSUR_Q)  AS ACTL_MSUR_Q		,SUM(FERL.ACTL_MSUR_R)  AS ACTL_MSUR_R		, SUM(FERL.PLAN_RVNU_A)  AS PLAN_RVNU_A 		,SUM(FERL.PLAN_MSUR_A)  AS PLAN_MSUR_A		,SUM(FERL.PLAN_MSUR_Q)  AS PLAN_MSUR_Q		,SUM(FERL.PLAN_MSUR_R)  AS PLAN_MSUR_R				FROM              B_S00_V_BAL_001_STD_0.FACT_RSS_EMPL_RPRT_LINE_AGGR  FERL		-- Get Employees whose status is 'ACT',''LWP','LOA'INNER JOIN  (  SELECT  HEMP.EMPL_IDNN_BKFROM B_S42_V_SHR_001_STD_0.H_EMPL  HEMPINNER JOIN B_S42_V_BUS_001_STD_0.S_EMPL_DETL  SEMPON SEMP.EMPL_IDNN_HK = HEMP.EMPL_IDNN_HKAND SEMP.EXPY_D = '9999-12-31'AND SEMP.RECORD_DELETED_FLAG = 0AND  SEMP.BUSN_END_D ='9999-12-31'AND SEMP.EMPL_STUS_C IN ('ACT', 'LWP', 'LOA') GROUP BY 1) EMPLON  FERL.EMPL_IDNN_BK = EMPL.EMPL_IDNN_BK-- Get the latest department of an employeeINNER JOIN (			SELECT  				   HEMP.EMPL_IDNN_BK                  ,HDEPT.DEPT_IDNN_BK           FROM B_S00_V_SHR_001_STD_0.H_EMPL                                HEMP           INNER JOIN B_S00_V_SHR_001_STD_0.L_EMPL_DEPT                     LEMD               ON HEMP.EMPL_IDNN_HK = LEMD.EMPL_IDNN_HK               AND LEMD.RECORD_DELETED_FLAG = 0               AND LEMD.EXPY_D = '9999-12-31'               AND HEMP.RECORD_DELETED_FLAG = 0               AND HEMP.EXPY_D = '9999-12-31'           INNER JOIN B_S00_V_BUS_001_STD_0.S_EMPL_DEPT                     SEMD               ON LEMD.EMPL_DEPT_IDNN_HK = SEMD.EMPL_DEPT_IDNN_HK               AND SEMD.EXPY_D = '9999-12-31'               AND SEMD.RECORD_DELETED_FLAG = 0			   AND SEMD.BUSN_END_D = '9999-12-31'           INNER JOIN B_S00_V_SHR_001_STD_0.H_DEPT                          HDEPT               ON HDEPT.DEPT_IDNN_HK = LEMD.DEPT_IDNN_HK               AND HDEPT.RECORD_DELETED_FLAG = 0               AND HDEPT.EXPY_D = '9999-12-31'        GROUP BY 1,2     ) DEPTON FERL.EMPL_IDNN_BK =DEPT.EMPL_IDNN_BK-- Get the latest job family of an employeeINNER JOIN(	 SELECT 	 EMPL_IDNN_BK	 ,HIER.ENTY_ANCS_NODE_C  AS JOB_FMLY_C	 FROM 				B_S00_V_BAL_001_STD_0.DIMN_EMPL        			 EMPLD	 INNER JOIN  	B_S00_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER 	 HIER	 ON EMPLD.EMPL_JOB_C 	=	HIER.ENTY_NODE_C	 AND HIER.ENTY_HIER_M  =	'JOB'	 AND HIER.SNAP_D 			= ( SELECT MAX(SNAP_D) FROM  B_S00_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER HIER)	 AND HIER.ENTY_ANCS_LEVL_N=HIER.ENTY_LEVL_N -1	 WHERE EXPY_D ='9999-12-31' 	 AND RECORD_DELETED_FLAG=0 	 AND BUSN_END_D ='9999-12-31'            	 )	 JOBFON  FERL.EMPL_IDNN_BK =JOBF.EMPL_IDNN_BKWHERE FERL.EXPY_D ='9999-12-31'AND   FERL.RECORD_DELETED_FLAG=0GROUP BY 1,2,3,4,5,6,7) LAT_DEPT  -- AGGR BASED ON THE LATEST HIERARCHY FOR A GIVEN FINANCIAL YEARINNER JOIN (   SELECT 				    M000.CALR_D             			  AS SNAP_D                   ,M000.FNCL_YEAR_END_D    AS FNCL_YEAR_END_D             FROM B_S00_V_BAL_001_STD_0.DIMN_DATE M000             WHERE M000.CALR_MNTH_END_DAY_F = 'Y' )                                                    C000 ON LAST_DAY(LAT_DEPT.SNAP_D) = C000.SNAP_DINNER JOIN (               SELECT HIER.SNAP_D                                               AS SNAP_D                     , HIER.ENTY_NODE_C                                    AS ENTY_NODE_C                                            , HIER.ENTY_ANCS_NODE_C                                    AS ENTY_ANCS_NODE_C                    , CALC.FNCL_YEAR_END_D                                      AS FNCL_YEAR_END_D                     , MAX(HIER.SNAP_D) OVER (PARTITION BY CALC.FNCL_YEAR_END_D) AS MAX_HIER_SNAP_D                          FROM B_S00_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER    HIER                INNER JOIN ( SELECT M000.CALR_D             AS SNAP_D                                  ,M000.FNCL_YEAR_END_D    AS FNCL_YEAR_END_D                           FROM B_S00_V_BAL_001_STD_0.DIMN_DATE M000                            WHERE M000.CALR_MNTH_END_DAY_F = 'Y'                          )                                          CALC                ON HIER.SNAP_D = CALC.SNAP_D			   WHERE  HIER.ENTY_HIER_M='DEPT'                QUALIFY MAX_HIER_SNAP_D = HIER.SNAP_D            )                                                             B ON       B.FNCL_YEAR_END_D = C000.FNCL_YEAR_END_DAND LAT_DEPT.DEPT_IDNN_BK = B.ENTY_NODE_CGROUP BY 1,2,3,4,5,6,7;","NULL","0","0","0","N ","NULL","NULL","2021-01-12 15:34:09","karsa","2021-01-12 15:34:09","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_FEAT_OVRD_REAS_HL_D","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_FEAT_OVRD_REAS_HL_DAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HL_DFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HL_D;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:31","perumabh","2025-07-14 22:16:31","NULL","1","2025-07-14 22:16:31","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","GRD_GNRC_MAP_DERV_PATY_HOLD","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.GRD_GNRC_MAP_DERV_PATY_HOLDAS LOCK TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLDFOR ACCESS SELECT * FROM K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLD;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:00","perumabh","2025-07-14 22:06:00","NULL","1","2025-07-14 22:06:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","DERV_PRTF_ACCT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_ACCT_REL AS GDW2_RESTORE.DERV_PRTF_ACCT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:36","singhp80","2025-07-12 07:55:36","NULL","33","2025-08-22 11:36:49","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_FEAT_PEXA","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_FEAT_PEXA AS GDW2_RESTORE.TMP_APPT_PDCT_FEAT_PEXA WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:45","singhp80","2025-07-12 07:56:45","NULL","3","2025-07-12 06:02:16","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDTRPC","WKND_PBLC_HLDY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDTRPC.WKND_PBLC_HLDY AS GDW2_RESTORE.WKND_PBLC_HLDY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:36","singhp80","2025-07-12 07:56:36","NULL","26","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","KUMARM9_HLS_ACCT_NEW","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.KUMARM9_HLS_ACCT_NEW (MSUR_IDNN_HK,ACCT_IDNN_HK,ACCT_IDNN_BK,ACCT_IDNN_BK_MS,ACCT_IDNN_HK_MS)AS LOCKING ROW FOR ACCESSSEL LAMN.MSUR_IDNN_HK,HA.ACCT_IDNN_HK,HA.ACCT_IDNN_BK ,OREPLACE(HA.ACCT_IDNN_BK,'~HL', '~MS')  AS ACCT_IDNN_BK_MS,b_D00_F_GBL_001_STD_0.GETHASHKEY(ACCT_IDNN_BK_MS) AS ACCT_IDNN_HK_MSFROM P_V_USR_TEC_0.L_ACCT_MSUR_NEW  LAMNJOIN P_V_USR_TEC_0.H_ACCT HAON HA.ACCT_IDNN_HK = LAMN.ACCT_IDNN_HKAND HA.EXPY_D = '9999-12-31'AND HA.RECORD_DELETED_FLAG = 0 AND HA.MSTR_SRCE_SYST_C ='HLS'AND LAMN.MSTR_SRCE_SYST_C  IN ('GDW2-HLS' , 'GDW-MS')AND LAMN.EXPY_D='9999-12-31'AND LAMN.RECORD_DELETED_FLAG = 0 ;","NULL","0","0","0","N ","NULL","NULL","2017-08-28 11:07:53","kumarm9","2017-08-28 11:10:51","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_PACK_PDCT_PL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_PACK_PDCT_PLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_PLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_PL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:45","perumabh","2025-07-14 22:08:45","NULL","1","2025-07-14 22:08:45","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","CTLFW_STREAM_BUSDATE","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.CTLFW_STREAM_BUSDATE AS ( SEL DATE '2017-10-20' AS BUSINESS_DATE, 1394 AS STREAM_KEY );","NULL","0","0","0","N ","NULL","NULL","2018-01-25 13:42:09","KOSTKAMA","2018-01-25 13:43:06","NULL","1","2023-07-14 03:37:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kuoje","GRD_RPRT_CALR_FNYR_ETL","1","V ","F ","NN  ","kuoje","/**--tc_nam: DIMN_DATE.sql^04.DDL.00.3**/     REPLACE VIEW kuoje.GRD_RPRT_CALR_FNYR_ETL (   FNCL_CALR_D  ,FNCL_DAY_SNAM_M  ,FNCL_DAY_LONG_M  ,FNCL_DAY_N  ,FNCL_DAY_SNCE_1900_N  ,FNCL_DATJ_D  ,FNCL_NON_WORK_DAY_F  ,FNCL_WKND_F  ,FNCL_NON_WORK_DAY_TYPE_C  ,FNCL_NON_WORK_DAY_M  ,FNCL_WEEK_N  ,FNCL_RPRT_YEAR_WEEK_N  ,FNCL_WEEK_DAY_N  ,FNCL_RPRT_WEEK_DAY_N  ,FNCL_WEEK_SNCE_1900_N  ,FNCL_WEEK_FRST_DAY_D  ,FNCL_WEEK_LAST_DAY_D  ,FNCL_WEEK_DAY_RNGE_X  ,FNCL_RPRT_WEEK_DAY_RNGE_X  ,FNWK_RPRT_TMPD_STRT_D  ,FNWK_RPRT_TMPD_END_D  ,FNWK_RPRT_TMPD_LABL_M  ,FNWK_RPRT_TMPD_LABL_X  ,FNCL_RPRT_WEEK_SNCE_1900_N  ,FNCL_MNTH_N  ,FNCL_MNTH_SNAM_M  ,FNCL_MNTH_LONG_M  ,FNCL_MNTH_YEAR_SNAM_M  ,FNCL_MNTH_YEAR_LONG_M  ,FNCL_MNTH_FRST_DAY_D  ,FNCL_MNTH_LAST_DAY_D  ,FNCL_MNTH_DAY_N  ,FNCL_MNTH_WEEK_N  ,FNCL_MNTH_SNCE_1900_N  ,FNCL_QRTR_N  ,FNCL_QRTR_MNTH_N  ,FNCL_QRTR_SNAM_M  ,FNCL_QRTR_LONG_M  ,FNCL_QRTR_SNCE_1900_N  ,FNCL_HFYR_N  ,FNCL_HFYR_SNAM_M  ,FNCL_HFYR_LONG_M  ,FNCL_HFYR_SNCE_1900_N  ,FNCL_YEAR_N  ,FNYR_RPRT_TMPD_LABL_M  ,FNCL_YEAR_SNAM_M  ,FNCL_YEAR_LONG_M  ,FNYR_RPRT_TMPD_LABL_X  ,FNYR_RPRT_TMPD_STRT_D  ,FNYR_RPRT_TMPD_END_D  ,FNCL_LEAP_YEAR_F  ,FNCL_YEAR_MONTH_N  ,FNCL_RPRT_MNTH_WE_STRT_D  ,FNCL_RPRT_MNTH_WE_END_D  ,FNCL_QRTR_FRST_DAY_D  ,FNCL_QRTR_LAST_DAY_D  ,FNCL_HFYR_FRST_DAY_D  ,FNCL_HFYR_LAST_DAY_D ) AS SELECT    FNCL_CALR_D  ,FNCL_DAY_SNAM_M  ,FNCL_DAY_LONG_M  ,FNCL_DAY_N  ,FNCL_DAY_SNCE_1900_N  ,FNCL_DATJ_D  ,FNCL_NON_WORK_DAY_F  ,FNCL_WKND_F  ,FNCL_NON_WORK_DAY_TYPE_C  ,FNCL_NON_WORK_DAY_M  ,FNCL_WEEK_N  ,FNCL_RPRT_YEAR_WEEK_N  ,FNCL_WEEK_DAY_N  ,FNCL_RPRT_WEEK_DAY_N  ,FNCL_WEEK_SNCE_1900_N  ,FNCL_WEEK_FRST_DAY_D  ,FNCL_WEEK_LAST_DAY_D  ,FNCL_WEEK_DAY_RNGE_X  ,FNCL_RPRT_WEEK_DAY_RNGE_X  ,FNWK_RPRT_TMPD_STRT_D  ,FNWK_RPRT_TMPD_END_D  ,FNWK_RPRT_TMPD_LABL_M  ,FNWK_RPRT_TMPD_LABL_X  ,FNCL_RPRT_WEEK_SNCE_1900_N  ,FNCL_MNTH_N  ,FNCL_MNTH_SNAM_M  ,FNCL_MNTH_LONG_M  ,FNCL_MNTH_YEAR_SNAM_M  ,FNCL_MNTH_YEAR_LONG_M  ,FNCL_MNTH_FRST_DAY_D  ,FNCL_MNTH_LAST_DAY_D  ,FNCL_MNTH_DAY_N  ,FNCL_MNTH_WEEK_N  ,FNCL_MNTH_SNCE_1900_N  ,FNCL_QRTR_N  ,FNCL_QRTR_MNTH_N  ,FNCL_QRTR_SNAM_M  ,FNCL_QRTR_LONG_M  ,FNCL_QRTR_SNCE_1900_N  ,FNCL_HFYR_N  ,FNCL_HFYR_SNAM_M  ,FNCL_HFYR_LONG_M  ,FNCL_HFYR_SNCE_1900_N  ,FNCL_YEAR_N  ,FNYR_RPRT_TMPD_LABL_M  ,FNCL_YEAR_SNAM_M  ,FNCL_YEAR_LONG_M  ,FNYR_RPRT_TMPD_LABL_X  ,FNYR_RPRT_TMPD_STRT_D  ,FNYR_RPRT_TMPD_END_D  ,FNCL_LEAP_YEAR_F  ,FNCL_YEAR_MONTH_N  ,FNCL_RPRT_MNTH_WE_STRT_D  ,FNCL_RPRT_MNTH_WE_END_D  ,FNCL_QRTR_FRST_DAY_D  ,FNCL_QRTR_LAST_DAY_D  ,FNCL_HFYR_FRST_DAY_D  ,FNCL_HFYR_LAST_DAY_D FROM PVTECH.GRD_RPRT_CALR_FNYR ;","NULL","0","0","0","N ","NULL","NULL","2015-07-02 15:11:08","kuoje","2015-07-13 17:23:56","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_TRNF_DETL","1","T ","F ","NN  ","singhp80","--CREATE TABLE K_PDGRD.GRD_GNRC_MAP AS GDW2_RESTORE.GRD_GNRC_MAP WITH DATA AND STATS; -- CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_TRNF_DETL AS GDW2_RESTORE.APPT_TRNF_DETL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:31","singhp80","2025-07-12 07:56:31","NULL","30","2025-08-13 13:56:54","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","CBA_FNCL_SERV_GL_DATA","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.CBA_FNCL_SERV_GL_DATA AS GDW2_RESTORE.CBA_FNCL_SERV_GL_DATA WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:37","PUDBAI016","2025-08-21 21:47:37","NULL","1","2025-08-22 11:37:39","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_PACK_PDCT_PL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_PL AS GDW2_RESTORE.MAP_CSE_PACK_PDCT_PL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:02","singhp80","2025-07-12 07:57:02","NULL","29","2025-08-14 12:18:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CMS_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CMS_PDCT	AS LOCKING TABLE K_PDCMS.MAP_CMS_PDCT	FOR ACCESS SEL *	FROM K_PDCMS.MAP_CMS_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:16","perumabh","2025-07-14 22:18:16","NULL","1","2025-07-14 22:18:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_REL AS GDW2_RESTORE.TMP_APPT_PDCT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:50","singhp80","2025-07-12 07:56:50","NULL","3","2025-07-12 06:02:21","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","INT_GRUP_EMPL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_EMPL AS GDW2_RESTORE.INT_GRUP_EMPL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:53","singhp80","2025-07-12 07:55:53","NULL","29","2025-08-13 15:29:39","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BPB_PRTF_DEPT_HIER","1","V ","F ","NN  ","KOSTKAMA","/**  Test BDV portfolio hierachy for volume of everyday changes   *****/REPLACE VIEW KOSTKAMA.BPB_PRTF_DEPT_HIER      AS (        SEL                        SHN.HIER_NODE_C AS ENTY_NODE_C,                     SHN.HIER_NODE_M AS ENTY_NODE_M,                    HIER_NODE_LEVL_N AS ENTY_LEVL_N,                    SHNREL.HIER_NODE_C AS ANCS_ENTY_NODE_C,                     SHNREL.HIER_NODE_M AS ANCS_ENTY_NODE_M,                     HIER_NODE_ANCS_LEVL_N AS ANCS_LVL_N,                    SHNHN.HIER_NODE_DSPL_SEQN_N                            FROM   P_V_USR_TEC_0.S_HIER_NODE_HIER_NODE SHNHN                 INNER JOIN  P_V_USR_TEC_0.L_HIER_NODE_HIER_NODE LHNHN                     ON LHNHN.HIER_NODE_HIER_NODE_IDNN_HK = SHNHN.HIER_NODE_HIER_NODE_IDNN_HK                    AND SHNHN.HIER_M  = 'BPB_PRTF_DEPT_HIER'                    AND CURRENT_DATE BETWEEN SHNHN.BUSN_STRT_D AND SHNHN.BUSN_END_D                    AND SHNHN.EXPY_D = '9999-12-31'                    AND SHNHN.RECORD_DELETED_FLAG = 0                INNER JOIN  P_V_USR_TEC_0.S_HIER_NODE SHN                     ON SHN.HIER_NODE_IDNN_HK = LHNHN.HIER_NODE_IDNN_HK                    AND CURRENT_DATE BETWEEN SHN.BUSN_STRT_D AND SHN.BUSN_END_D                    AND SHN.EXPY_D = '9999-12-31'                    AND SHN.RECORD_DELETED_FLAG = 0                INNER JOIN  P_V_USR_TEC_0.S_HIER_NODE SHNREL                     ON SHNREL.HIER_NODE_IDNN_HK = LHNHN.REL_HIER_NODE_IDNN_HK                    AND CURRENT_DATE BETWEEN SHNREL.BUSN_STRT_D AND SHNREL.BUSN_END_D                    AND SHNREL.EXPY_D = '9999-12-31'                    AND SHNREL.RECORD_DELETED_FLAG = 0           );","NULL","0","0","0","N ","NULL","NULL","2018-03-21 16:04:21","KOSTKAMA","2018-03-21 16:07:53","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","GRD_DEPT_FLAT_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_DEPT_FLAT_CURRAS LOCKING TABLE K_PDGRD.GRD_DEPT_FLAT_CURR FOR ACCESSselect *from K_PDGRD.GRD_DEPT_FLAT_CURR;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:19:16","perumabh","2025-07-14 22:19:16","NULL","1","2025-07-14 22:19:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Kattas1","DBC_Daily_Tperf","1","V ","F ","NN  ","Kattas1","REPLACE VIEW kattas1.DBC_Daily_TperfASSELECT         /* Query information */         --dlt.LogDate         --,         dlt.UserName         ,dlt.AppId         ,dlt.ClientId         ,'QueryId: '||dlt.QueryId||' ' AS QueryId         ,CAST (dlt.StartTime AS DATE) AS QueryDate         ,CAST (dlt.StartTime AS TIME) AS QueryTime         ,TD_SYSFNLIB.oreplace(dlt.QueryBand,  '=S>', '') AS QueryBand         /* CPU details */         ,dlt.AMPCPUTime         ,dlt.ParserCPUTime         ,(dlt.AMPCPUTime + dlt.ParserCPUTime) * 1.15 * tperf.SystemTperf / ( tperf.NbrTPANodes * tperf.CpusPerNode * 3600.00) AS TPerfHr         ,dlt.MaxAMPCPUTime * dlt.NumOfActiveAMPs + dlt.ParserCPUTime AS ImpactCPUSecs         ,CAST((EXTRACT(HOUR FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT(SECOND FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ParseTimeSecs         ,CAST((EXTRACT (HOUR FROM ((dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT (SECOND FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ElapsedTimeSecs         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.AMPCPUTimeNorm / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPCPUTimeNorm / (dlt.AMPCPUTimeNorm / tperf.NbrAMPs)         END (DEC (8, 2)) AS CPU_Skew         /* IO details */         ,dlt.TotalIOCount         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.TotalIOCount / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPIO / (dlt.TotalIOCount / tperf.NbrAMPs)         END (DEC (8, 2)) AS IO_Skew         /* CPU / IO interaction */         ,CASE                  WHEN dlt.AMPCPUTime       < 1                  OR dlt.TotalIOCount = 0                           THEN 0                           ELSE (dlt.AMPCPUTime * 1000) / dlt.TotalIOCount         END (DEC (6, 2)) AS PJI         ,CASE                  WHEN dlt.AMPCPUTime     < 1                  OR dlt.AMPCPUTime = 0                           THEN 0                           ELSE dlt.TotalIOCount / (dlt.AMPCPUTime * 1000)         END (DEC (6, 2)) AS UII         /* Estimate vs actual from DBQLStepTbl */         ,dsst.ActTotalCPUCost         ,dsst.EstTotalCPUCost         ,(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/NULLIFZERO(dsst.EstTotalCPUCost) AS TotalCPUCostDiffRatio         ,dsst.ActTotalRowCount           ,dsst.EstTotalRowCount          ,(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/NULLIFZERO(dsst.EstTotalRowCount) AS TotalRowCountDiffRatio              ,dsst.ActTotalIOCount         ,dsst.EstTotalIOCount                ,(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/NULLIFZERO(dsst.EstTotalIOCount) AS TotalIOCountDiffRatio                 /* General result and processing info */         ,dlt.NumSteps         ,dlt.ErrorCode         ,SUBSTRING (dlt.ErrorText FROM 1 FOR 100) AS ErrorText         ,dlt.SpoolUsage         ,dlt.NumResultRows         ,TD_SYSFNLIB.oreplace(TD_SYSFNLIB.oreplace((SUBSTRING(dst.SQLTextInfo FROM 1 FOR 5000)),  '0A'XC, ' '),'0D'XC, ' ') AS QueryText         /* Details about why query shown */         ,CASE                  WHEN ErrorText IS NOT NULL                           THEN 'ErrorText '                           ELSE ''         END                  ||         CASE                  WHEN ParseTimeSecs > 10.0                           THEN 'ParseTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN ElapsedTimeSecs    > 300.0                           THEN 'ElapsedTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.ParserCPUTime > 10.00                           THEN 'ParseCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.AMPCPUTime > 3000.00                           THEN 'AMPCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN ImpactCPUSecs > 5000.00                           THEN 'ImpactCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN TPerfHr > 20.00                           THEN 'TPerfHr '                           ELSE ''         END                  ||         CASE                  WHEN (                                    CPU_Skew      > 10.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'CPU_Skew '                           ELSE ''         END                  ||         CASE                  WHEN dlt.TotalIOCount      > 20000.0                           THEN 'IO '                           ELSE ''         END                  ||         CASE                  WHEN (                                    IO_Skew      > 10.0                           AND      TotalIOCount > 500000                           )                           THEN 'IO_Skew '                           ELSE ''         END                  ||         CASE                  WHEN (                                    PJI           > 3.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'PJI '                           ELSE ''         END                  ||         CASE                  WHEN (                                    UII          > 3.0                           AND      TotalIOCount > 15000                           )                           THEN 'UII '                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalCPUCost - dsst.EstTotalCPUCost) > 2000                    THEN                       CASE  WHEN dsst.EstTotalCPUCost = 0                         THEN 'EstimatedCPU '                        WHEN ABS(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/dsst.EstTotalCPUCost > 10                                THEN 'EstimatedCPU '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalRowCount - dsst.EstTotalRowCount) > 10000                    THEN                       CASE  WHEN dsst.EstTotalRowCount = 0                         THEN 'EstimatedRowCount '                        WHEN ABS(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/dsst.EstTotalRowCount > 10                                THEN 'EstimatedRowCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalIOCount - dsst.EstTotalIOCount) > 100000                    THEN                       CASE  WHEN dsst.EstTotalIOCount = 0                         THEN 'EstimatedIOCount '                        WHEN ABS(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/dsst.EstTotalIOCount > 10                                THEN 'EstimatedIOCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN SpoolUsage > 500e9                           THEN 'SpoolUsage '                           ELSE ''         END AS Issue_IdentifierFROM /* Use DBQLogTbl as primary table */  PDCRINFO.DBQLogTbl_DBC dlt   INNER JOIN  /* Use DBQLSQLTbl information to identify submitted SQL */  PDCRINFO.DBQLSQLTbl_DBC dst    --ON dlt.LogDate = dst.LogDate    --AND     ON dlt.ProcId = dst.ProcId    AND dlt.QueryId = dst.QueryId    AND dst.SQLRowNo = 1    INNER JOIN  /* Use DBQLStepTbl information to identify differences between optimiser estimates and actuals */  (  SELECT     --LogDate    --,    QueryID    ,ProcID    ,SUM(EstCPUCost) AS EstTotalCPUCost    ,SUM(CPUTime) AS ActTotalCPUCost    ,SUM(EstRowCount) AS EstTotalRowCount    ,SUM(RowCount) AS ActTotalRowCount    ,SUM(EstIOCost) AS EstTotalIOCount    ,SUM(IOcount) AS ActTotalIOCount  FROM  PDCRINFO.DBQLStepTbl_DBC  GROUP BY    --LogDate   --,   QueryID   ,ProcID  ) dsst    --ON dlt.LogDate = dsst.LogDate    --AND     ON dlt.ProcId = dsst.ProcId    AND dlt.QueryId = dsst.QueryId    INNER JOIN  /* Use CBA system table to calculate TPerfHr figures */  PDCRINFO.cba_Syst_TPerf tperf    ON current_date BETWEEN tperf.FromDate AND tperf.ToDateWHERE     dlt.UserName ='kattas1' and CAST (dlt.StartTime AS DATE) = current_date;","NULL","0","0","0","N ","NULL","NULL","2016-05-06 18:43:58","Kattas1","2016-05-06 18:43:58","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","DERV_ACCT_PATY_ADD","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_ADDAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_ADDFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_ADD;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:56","perumabh","2025-07-14 22:05:56","NULL","1","2025-07-14 22:05:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_QLFY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_QLFY   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QLFY FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QLFY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:32","perumabh","2025-07-14 22:17:32","NULL","1","2025-07-14 22:17:32","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Khojeal","M_RId32_SCAN_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.M_RId32_SCAN_ST   (  IN_R_ID          VARCHAR(50)     ,IN_PERD_DATE     DATE      ,IN_DEPT_IDNN_BK  VARCHAR(255)     ,IN_SCNO_IDNN_BK  VARCHAR(20)    ) AS       (   ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  BV_RSS_DEPT_RPRT_LINE <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       SELECT '1.  BV_RSS_DEPT_RPRT_LINE'    TBL_VIEW_NM,             BVDRL.*             FROM  A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE BVDRL    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_RPRT_LINE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------            SELECT              '2.  FACT_RSS_RPRT_LINE_AGGR   ' TBL_VIEW_NM            ,FRRLA.*             FROM  A_S07_V_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR  FRRLA    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_SALE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------        SELECT '3.  FACT_RSS_SALE_AGGR'  TBL_VIEW_NM,           SLAG.*,           RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,           RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,           RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,           RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK    FROM  A_S07_V_BAL_001_STD_0.FACT_RSS_SALE_AGGR SLAG     INNER JOIN    (          SELECT                  RLM0.MSUR_CODE_IDNN_BK                ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK          FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0          WHERE  RLM0.EXPY_D       = '9999-12-31'          AND    RPRT_MAP_IDNN_BK  = :IN_R_ID            AND    SNAP_D            = :IN_PERD_DATE          AND    RLM0.SUMM_TYPE_C IS NULL           GROUP BY 1,2,3,4    ) RLLF    ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK    AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK    AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )    AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )    WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_S00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '4.  FACT_BASE_RSS_ACCT_SALE'  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_S00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '5.  FACT_BASE_RSS_ACCT_SALE_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_S00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '6.  FACT_BASE_RSS_OPOR_ITEM '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_S00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '7.  FACT_BASE_RSS_OPOR_ITEM_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_S00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE          ","NULL","0","0","0","N ","NULL","NULL","2015-07-09 12:41:43","Khojeal","2015-07-09 12:41:43","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","WRK_APPT_PDCT_FEAT_INT_RT_AMT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_PDCT_FEAT_INT_RT_AMT AS GDW2_RESTORE.WRK_APPT_PDCT_FEAT_INT_RT_AMT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:42","singhp80","2025-07-12 07:56:42","NULL","3","2025-07-12 06:02:15","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ADRS_TYPE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ADRS_TYPE   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ADRS_TYPE FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ADRS_TYPE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:16","perumabh","2025-07-14 22:18:16","NULL","1","2025-07-14 22:18:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kumarm9","S_PATY_GRUP_DETL_ONE_OFF","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.S_PATY_GRUP_DETL_ONE_OFFASSELECTA.PATY_I AS PATY_I,A.PATY_IDNN_HK AS PATY_IDNN_HK,A.PATY_GRUP_I AS PATY_GRUP_I,A.PATY_GRUP_TYPE_C AS PATY_GRUP_TYPE_C,A.PRIM_PATY_F AS PRIM_PATY_F,A.PATY_GRUP_M AS PATY_GRUP_M,A.PRIM_PATY_SLCT_C AS PRIM_PATY_SLCT_C,A.BUSN_STRT_D AS BUSN_STRT_D,COALESCE(MAX((A.BUSN_STRT_D-1)) OVER (PARTITION BY A.PATY_IDNN_HK  ORDER BY A.BUSN_STRT_D ASC ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING),         cast( '9999-12-31' AS DATE                         ) )as BUSN_END_D,A.MSTR_SRCE_SYST_C AS MSTR_SRCE_SYST_C,A.ROW_SECU_ACCS_C AS ROW_SECU_ACCS_C,A.EFFT_D AS EFFT_D,A.EXPY_D AS EXPY_D,0 AS RECORD_DELETED_FLAG,136 AS CTL_ID,'MANUAL' AS PROCESS_NAME,0 AS PROCESS_ID,NULL AS UPDATE_PROCESS_NAME,NULL AS UPDATE_PROCESS_ID,CAST (CURRENT_TIMESTAMP AS TIMESTAMP (6)) AS RECD_ISRT_DTTM ,CAST (CURRENT_TIMESTAMP AS TIMESTAMP (6)) AS EFFT_TS,CAST('9999-12-31 23:59:59.999999' AS TIMESTAMP(6)) AS EXPY_TSFROM( SELECT PIG.PATY_I,B_D00_F_GBL_001_STD_0.GETHASHKEY(PIG.SRCE_SYST_C||'~'||SUBSTRING(PIG.PATY_I FROM 4 FOR 2)||'~'||SUBSTRING(PIG.PATY_I FROM 6 FOR LENGTH(PIG.PATY_I) - 5)) AS  PATY_IDNN_HK,IG.INT_GRUP_I AS PATY_GRUP_I,IG.INT_GRUP_TYPE_C  AS PATY_GRUP_TYPE_C,PIG.PRIM_CLNT_F AS PRIM_PATY_F,IG.INT_GRUP_M AS PATY_GRUP_M                   ,PIG.PRIM_CLNT_SLCT_C AS PRIM_PATY_SLCT_C              ,PIG.VALD_FROM_D AS BUSN_STRT_D,PIG.VALD_TO_D AS BUSN_END_D,PIG.SRCE_SYST_C AS MSTR_SRCE_SYST_C,PIG.ROW_SECU_ACCS_C AS ROW_SECU_ACCS_C,PIG.EFFT_D AS EFFT_D,PIG.EXPY_D AS EXPY_D        FROM B_D17_V_COX_001_STD_0.PATY_INT_GRUP PIG  INNER JOIN B_D17_V_COX_001_STD_0.INT_GRUP IG ON PIG.INT_GRUP_I=IG.INT_GRUP_I AND PIG.SRCE_SYST_C=IG.SRCE_SYST_C INNER JOIN B_D17_V_REF_001_STD_0.R_CFIG_MAP RCM                  ON PIG.SRCE_SYST_C=RCM.INPT_COLM_1  AND PIG.REL_C =RCM.INPT_COLM_2  AND RCM.MAP_TYPE_M='PATY_GRUP'  AND  RCM.BUSN_UNIT_C='BPB'WHERE 1=1AND PIG.EFFT_D <=  '2016-07-30'QUALIFY ROW_NUMBER() OVER(PARTITION BY PATY_I,PATY_GRUP_I,PRIM_PATY_F,PATY_GRUP_TYPE_C,MSTR_SRCE_SYST_C,PATY_GRUP_M,PRIM_PATY_SLCT_C ORDER BY BUSN_STRT_D ASC) = 1)A;","NULL","0","0","0","N ","NULL","NULL","2017-01-25 09:41:49","kumarm9","2017-01-25 09:41:49","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kuoje","HLS_BDV_OPEN_BALN_TGT_MNLY","1","V ","F ","NN  ","kuoje","/**--tc_nam: HLS_BDV_MSUR_OPEN_BALN_MNLY.sql^03.DDL.00.2**/    REPLACE VIEW kuoje.HLS_BDV_OPEN_BALN_TGT_MNLY AS 	SELECT	 	     SMMS.SNAP_D         ,LAMN.ACCT_IDNN_HK         ,LMGL.BUSN_UNIT_IDNN_HK         ,LMGL.GL_ACCT_IDNN_HK         ,LMGL.DEPT_IDNN_HK         ,LMGL.GL_OPER_UNIT_IDNN_HK /**--,LMGL.GL_CNCY_IDNN_BK**/         ,LMGL.GL_PDCT_IDNN_HK         ,LMGL.GL_PRJC_IDNN_HK         ,LMGL.AFLT_IDNN_HK /**--,LMGL.GL_SRCE_IDNN_BK**/         ,SMMS.MSUR_QLFY_C 		,SMMS.MSTR_SRCE_SYST_C 		,SUM(CASE WHEN SMMS.MSUR_CODE_IDNN_BK IN ('DR_OPEN_BALN_A') THEN SMMS.MSUR_A ELSE 0 END) AS DR_OPEN_BALN_A 		,SUM(CASE WHEN SMMS.MSUR_CODE_IDNN_BK IN ('CR_OPEN_BALN_A') THEN SMMS.MSUR_A ELSE 0 END) AS CR_OPEN_BALN_A 		,SUM(CASE WHEN SMMS.MSUR_CODE_IDNN_BK IN ('NET_OPEN_BALN_A') THEN SMMS.MSUR_A ELSE 0 END) AS NET_OPEN_BALN_A 	 	FROM a_T01_v_shr_001_std_0.L_ACCT_MSUR_NEW LAMN 	 	INNER JOIN a_T01_v_bus_001_std_0.S_MSUR_MNLY_SNAP  SMMS 	ON LAMN.MSUR_IDNN_HK = SMMS.MSUR_IDNN_HK      	LEFT OUTER JOIN  	( 		SELECT LMGL.* FROM a_T01_v_shr_001_std_0.L_MSUR_NEW_GL LMGL 		INNER JOIN a_T01_v_bus_001_std_0.S_MSUR_NEW_GL_STUS SMGS 		ON LMGL.MSUR_GL_IDNN_HK = SMGS.MSUR_GL_IDNN_HK 		AND LMGL.MSUR_IDNN_HK = SMGS.MSUR_IDNN_HK 		AND '2015-06-30'  BETWEEN SMGS.BUSN_STRT_D AND SMGS.BUSN_END_D 		AND SMGS.EXPY_D = '9999-12-31' 	) LMGL 	ON SMMS.MSUR_IDNN_HK = LMGL.MSUR_IDNN_HK      	WHERE SMMS.MSTR_SRCE_SYST_C  IN ('GDW2-HLS', 'GDW-MS') 	AND SMMS.SNAP_D ='2015-06-30'  	AND SMMS.MSUR_QLFY_C = 'BALN' 	AND SMMS.MSUR_CODE_IDNN_BK IN ('DR_OPEN_BALN_A','CR_OPEN_BALN_A','NET_OPEN_BALN_A') /**--AND LAMN.ACCT_IDNN_HK IN ('18A877C1102DD24C4B9035B36FC84369', 'BE834BB709E9A14D9DF875AACECC858F')**/ 	GROUP BY 1,2,3,4,5,6,7,8,9,10,11--,12,13 	;","NULL","0","0","0","N ","NULL","NULL","2015-07-16 14:32:00","kuoje","2015-07-16 14:32:00","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_APPT_QSTN_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_QSTN_HL(        QA_QUESTION_ID,        QSTN_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_HL FOR ACCESSSELECT        QA_QUESTION_ID,        QSTN_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:29","perumabh","2025-07-14 22:17:29","NULL","1","2025-07-14 22:17:29","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TCF_DATE","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TCF_DATE AS (SEL DATE '2017-12-31' AS BUSINESS_DATE, DATE '2018-02-28' AS REL_DATE);","NULL","0","0","0","N ","NULL","NULL","2018-04-10 10:02:26","KOSTKAMA","2018-04-10 14:51:48","NULL","1","2023-07-14 03:38:06","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FEAT AS GDW2_RESTORE.MAP_CSE_APPT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:01","singhp80","2025-07-12 07:57:01","NULL","29","2025-08-13 15:45:17","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","EVNT","1","V ","F ","NN  ","perumabh","--------------------------------------------------------------------------------REPLACE VIEW K_PVTECH.EVNT(        EVNT_I,        EVNT_ACTV_TYPE_C,        INVT_EVNT_F,        FNCL_ACCT_EVNT_F,        CTCT_EVNT_F,        BUSN_EVNT_F,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        FNCL_NVAL_EVNT_F,        INCD_F,        INSR_EVNT_F,        INSR_NVAL_EVNT_F,        ROW_SECU_ACCS_C,        FNCL_GL_EVNT_F,        AUTT_AUTN_EVNT_F,        COLL_EVNT_F,        SRCE_SYST_C,        EVNT_REAS_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.EVNT FOR ACCESSSELECT        EVNT_I,        EVNT_ACTV_TYPE_C,        INVT_EVNT_F,        FNCL_ACCT_EVNT_F,        CTCT_EVNT_F,        BUSN_EVNT_F,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        FNCL_NVAL_EVNT_F,        INCD_F,        INSR_EVNT_F,        INSR_NVAL_EVNT_F,        ROW_SECU_ACCS_C,        FNCL_GL_EVNT_F,        AUTT_AUTN_EVNT_F,        COLL_EVNT_F,        SRCE_SYST_C,        EVNT_REAS_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM        K_STAR_CAD_PROD_DATA.EVNT  WHERE  ((/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */));","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:44:08","perumabh","2025-07-14 22:44:08","NULL","1","2025-07-14 22:44:08","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_TU_APPT_C","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_TU_APPT_C AS GDW2_RESTORE.MAP_CSE_TU_APPT_C WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:10","singhp80","2025-07-12 07:57:10","NULL","29","2025-08-14 12:43:05","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","ACCT_PATY_REL_WSS","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.ACCT_PATY_REL_WSS ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,      ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,      PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL       COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */      PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),      SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,      ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0 )PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:02:57","perumabh","2025-07-14 22:02:57","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_PACK_PDCT_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_PACK_PDCT_HLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_HLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:45","perumabh","2025-07-14 22:08:45","NULL","1","2025-07-14 22:08:45","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","GRD_GNRC_MAP_DERV_PATY_HOLD","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_GNRC_MAP_DERV_PATY_HOLD(MAP_TYPE_C,PATY_ACCT_REL_X,PATY_ACCT_REL_C,EFFT_D,EXPY_D) ASSELECTMAP_TYPE_C,TARG_CHAR_C AS PATY_ACCT_REL_X,SRCE_CHAR_1_C AS PATY_ACCT_REL_C,EFFT_D   ,EXPY_DFROM K_PVTECH.GRD_GNRC_MAP_CURRWHERE MAP_TYPE_C = 'DERV_ACCT_PATY_HOLD_REL_MAP';","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:39:39","perumabh","2025-07-14 23:39:39","NULL","1","2025-07-14 23:39:39","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","MCR_SEGM_ATTR","1","M ","F ","NN  ","KOSTKAMA","REPLACE MACRO KOSTKAMA.MCR_SEGM_ATTR (DT DATE) AS (                         DELETE FROM B_D17_D_BUS_001_STD_0.STAG_PATY_ATTR WHERE SNAP_D = :DT;DELETE FROM B_D17_D_BUS_001_STD_0.S_SEGM_PATY_ATTR WHERE SNAP_D = :DT;                                        INSERT INTO   B_D17_D_BUS_001_STD_0.S_SEGM_PATY_ATTR                      SEL                     DATE  '2017-07-21' AS SNAP_D,                     BASE.PATY_IDNN_HK, PATY_IDNN_BK,                    BASE.PRTF_IDNN_HK, BASE.PRTF_IDNN_BK,                    CASE WHEN CRS_Y.PRTF_IDNN_HK IS NULL THEN 'N' ELSE 'Y' END AS CRS_F                FROM KOSTKAMA.PATY_PRTF BASE                LEFT JOIN (                                     SEL   PATY_IDNN_HK ,  LPD.PRTF_IDNN_HK, DD.*                                                                                                 FROM  KOSTKAMA.PATY_PRTF  SPA                            JOIN  B_D17_V_SHR_001_STD_0.L_PRTF_DEPT LPD                                         ON LPD.PRTF_IDNN_HK = SPA.PRTF_IDNN_HK                                        AND SPA.SNAP_D =  '2017-07-21'                             JOIN B_D17_V_BUS_001_STD_0.S_PRTF_DEPT SPD                                         ON SPD.PRTF_DEPT_IDNN_HK = LPD.PRTF_DEPT_IDNN_HK                                         AND '2017-07-21'  BETWEEN SPD.BUSN_STRT_D AND SPD.BUSN_END_D                                        AND SPD.EXPY_D = '9999-12-31'                                        AND SPD.RECORD_DELETED_FLAG = 0                            JOIN B_D17_V_SHR_001_STD_0.H_DEPT HD ON HD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                            JOIN B_D17_V_BAL_001_STD_0.DIMN_DEPT DD                                         ON DD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                                         AND DEPT_L2_NODE_C = 'NDEPT990954'                                         AND  '2017-07-21'    BETWEEN DD.BUSN_STRT_D AND DD.BUSN_END_D                                         AND DD.RECORD_DELETED_FLAG = 0 AND DD.EXPY_D = '9999-12-31'                                              ) CRS_Y  ON CRS_Y.PATY_IDNN_HK = BASE.PATY_IDNN_HK                LEFT JOIN  (                                            SEL   LPD.PRTF_IDNN_HK                                                 FROM B_D17_V_SHR_001_STD_0.L_PRTF_DEPT LPD                                             JOIN B_D17_V_BUS_001_STD_0.S_PRTF_DEPT SPD                                                             ON SPD.PRTF_DEPT_IDNN_HK = LPD.PRTF_DEPT_IDNN_HK                                                             AND  '2017-07-21'   BETWEEN SPD.BUSN_STRT_D AND SPD.BUSN_END_D                                                             AND SPD.EXPY_D = '9999-12-31'                                            JOIN B_D17_V_SHR_001_STD_0.H_DEPT HD ON HD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                                            JOIN B_D17_V_BAL_001_STD_0.DIMN_DEPT DD                                                             ON DD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                                                             AND DEPT_L2_NODE_C = 'NDEPT990954'                                                             AND  '2017-07-21'   BETWEEN DD.BUSN_STRT_D AND DD.BUSN_END_D                                                             AND DD.RECORD_DELETED_FLAG = 0 AND DD.EXPY_D = '9999-12-31'                                          ) RISK_PRTF                                           ON RISK_PRTF .PRTF_IDNN_HK = BASE.PRTF_IDNN_HK                                     WHERE BASE.SNAP_D BETWEEN CAST(  '2017-07-21'  AS DATE) - INTERVAL '80' DAY  AND:DT        AND RISK_PRTF.PRTF_IDNN_HK IS NULL        QUALIFY MAX(SNAP_D) OVER (PARTITION BY BASE.PATY_IDNN_HK)  = SNAP_D        ;);","NULL","0","0","0","N ","NULL","NULL","2017-09-15 13:42:24","KOSTKAMA","2017-09-15 14:09:32","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_UNID_PATY_CATG_PL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_UNID_PATY_CATG_PL AS GDW2_RESTORE.MAP_CSE_UNID_PATY_CATG_PL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:09","singhp80","2025-07-12 07:57:09","NULL","31","2025-08-14 12:41:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PPSRCCS","SP_LOG_ERROR","2","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:05:38","perumabh","2025-07-14 23:10:26","NULL","2","2025-07-14 23:10:27","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"kumars17","sas_1795623646","1","T ","F ","NN  ","kumars17","CREATE MULTISET TABLE kumars17.""sas_1795623646"" (""VALUE"" FLOAT,""DEROG"" FLOAT,""DELINQ"" FLOAT,""CLAGE"" FLOAT,""NINQ"" FLOAT,""CLNO"" FLOAT,""DEBTINC"" FLOAT,""smmsid"" FLOAT);COMMIT WORK","NULL","0","0","0","N ","NULL","NULL","2016-11-24 16:20:52","kumars17","2016-11-24 16:20:52","NULL","NULL","NULL","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","DEFAULT","NULL","NULL","0 ","0","TD_Map1","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_SM_CASE_STUS_REAS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS_REAS AS GDW2_RESTORE.MAP_CSE_SM_CASE_STUS_REAS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:45","singhp80","2025-07-12 07:56:45","NULL","32","2025-08-22 09:37:00","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KHANA15","gss_resusage_td150","1","M ","F ","NN  ","KHANA15","replace macro khana15.gss_resusage_td150( BEGINDATE (DATE, DEFAULT DATE), ENDDATE (DATE, DEFAULT DATE), BEGINTIME (INT, DEFAULT 0), ENDTIME (INT, DEFAULT 240000))AS (sel'TD15v1.72' (named ""Version""),spma_dt.LogDate (named ""LogDate""),cast(spma_dt.LogDay as char(3)) (named ""LogDOW""),spma_dt.LogTime (named ""LogTime""),cast((spma_dt.LogDate || ' ' || spma_dt.LogTime) as timestamp(0)) (named ""Timestamp""),extract(hour from ""Timestamp"") (named ""Hour""),extract(minute from ""Timestamp"") / 10 * 10 (named ""Minute10""),SPMAInterval (named ""RSSInterval"") /* System data */ ,spma_dt.NodeType (Named ""NodeGen""),case when spma_dt.vproc1 > 0 then spma_dt.vproc1else 'PE-only Node'end (Named ""AMPS""),spma_dt.NCPUs (Named ""CPUs""),info.infodata (named ""DBSRelease"") ,PM_COD (Named ""PMCOD""),WM_COD (Named ""WMCOD""),IO_COD (Named ""IOCOD"") ,cast(((casewhen ( NodeGen in ('6800','6800H','1800','2800','680'))  then 5.35 * CPUswhen ( NodeGen in ('6750','6750H','6750P','6750HX','6750X','675','675HDD','2750','2755','1750')) then 5 * CPUswhen ( NodeGen in ('6700','6700H','2700','1700','670H','6700HDD') and CPUs = 32) then 167.74when ( NodeGen in ('6700','6700C','670C') and CPUs = 16) then 99.19when ( NodeGen in ('6690','6690H','2690') and CPUs = 24) then 132.25when ( NodeGen in ('6680','6650H','6650','5650H','5650','4650','2650','1650') and CPUs = 24) then 129.03when ( NodeGen in ('6650C','6650','5650C','5650','560C') and CPUs = 12 ) then 68.38when ( NodeGen in ('5600H','5600','560H','4600','2580','1600','1580') and CPUs = 16) then 86.02when ( NodeGen in ('5600C','5600','560C') and CPUs = 8) then 45.59when ( NodeGen in ('5550','2550','1550') and CPUs = 8) then 50.89when ( NodeGen in ('5550','5555') and CPUs = 4) then 27.63when ( NodeGen in ('5500H','5500','2500') and CPUs = 4) then 31.72when ( NodeGen in ('5500C','5500') and CPUs = 2) then 16.81when NodeGen = '5450' then 13.36when NodeGen = '5400' then 11.72when NodeGen in ('5380','4980') then 8.80when NodeGen in ('5350','4950') then 6.13when NodeGen in ('5300','4900') then 4.68else 0end) ) as decimal(5,2)) (named ""NodeT"") /*** end grouping fields ***/ , ( (0.005 * (TtlPosReadSecGen + TtlPreReadSecGen + 2*TtlWriteSecGen)) +(TtlReadMBSecGen + 2*TtlWriteMBSecGen)/150 ) / .8 (format 'ZZ,ZZ9.9')(named ""D""),NodeT * NumNodes * AvgCPUBusy / 100 /.8 (format 'ZZ,ZZ9.9') (Named ""T""),min(MemSizeGB) (Named ""MinMemSizeGB""),max(MemSizeGB) (Named ""MaxMemSizeGB""),count(distinct(spma_dt.NodeID)) (Named ""NumNodes"") /* SPMA data */ ,sum(CPUUtil) / NumNodes / CPUs / RSSInterval (format 'ZZ9.9') (named ""AvgCPUBusy""),max(CPUUtil) / CPUs / RSSInterval (format 'ZZ9.9') (named ""MaxCPUBusy""),sum(OSPctCPU) / NumNodes (format 'ZZ9.9') (named ""AvgPctOSCPU""),max(OSPctCPU)(format 'ZZ9.9') (named ""MaxPctOSCPU""),sum(IOWaitCPUUtil) / NumNodes / CPUs / RSSInterval (format 'ZZ9.9') (named ""AvgPctIOWait""),sum(RunQSz) / NumNodes (format 'z,zz9.9') (named ""AvgRunQSz""),max(MaxRunQSz) (format 'z,zz9.9') (named ""MaxRunQSz""),max(IOWaitCPUUtil) / CPUs / RSSInterval (format 'ZZ9.9') (named ""MaxPctIOWait""),zeroifnull( sum(SPMAPhysReads + SPMAPhysPreReads) /nullifzero(sum(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites)) * 100) (format 'ZZ9.9') (named ""PctReadsCnt""),zeroifnull( sum(SPMAPhysReadKB + SPMAPhysPreReadKB) /nullifzero(sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB)) * 100) (format 'ZZ9.9') (named ""PctReadsKB"") ,sum(SPMAPhysReads) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgPosReadSec""),sum(SPMAPhysPreReads) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgPreReadSec""),sum(SPMAPhysWrites) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgWriteSec"") ,sum(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""AvgIOPsSec""),max(SPMAPhysReads + SPMAPhysPreReads + SPMAPhysWrites) / RSSInterval (format 'ZZ,ZZ9.9') (named ""MaxIOPsSec""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgMBSecNode""),max(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'ZZZ,ZZ9.9') (named ""MaxMBSecNode""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgReadMBSecNode""),sum(SPMAPhysWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9') (named ""AvgWriteMBSecNode"") ,sum(SPMAPhysReadKB + SPMAPhysPreReadKB + SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlMBSecGen""),sum(SPMAPhysReadKB + SPMAPhysPreReadKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlReadMBSecGen""),sum(SPMAPhysWriteKB) / 1024.0 / RSSInterval (format 'Z,ZZZ,ZZ9.9') (named ""TtlWriteMBSecGen"") ,sum(SPMAPhysReads) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlPosReadSecGen""),sum(SPMAPhysPreReads) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlPreReadSecGen""),sum(SPMAPhysWrites) / RSSInterval (format 'Z,ZZZ,ZZZ,ZZ9.9') (named ""TtlWriteSecGen"") ,zeroifnull( TtlReadMBSecGen / nullifzero(TtlPosReadSecGen + TtlPreReadSecGen) * 1024.0 ) (format 'Z,ZZ9.9') (named ""KBRead""),zeroifnull( TtlWriteMBSecGen / nullifzero(TtlWriteSecGen) * 1024.0 ) (format 'Z,ZZ9.9')(named ""KBWrite"") /* SVPR Cache Effectiveness */ ,zeroifnull(CASEWHEN TtlPhyPermReadMBSecNode_SVPR > LogPermReadMBSecNode_SVPR THEN 0ELSE (LogPermReadMBSecNode_SVPR - TtlPhyPermReadMBSecNode_SVPR)/ nullifzero(LogPermReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""PermCacheEffKB""),zeroifnull(CASEWHEN TtlPhySpoolReadMBSecNode_SVPR > LogSpoolReadMBSecNode_SVPR THEN 0ELSE (LogSpoolReadMBSecNode_SVPR - TtlPhySpoolReadMBSecNode_SVPR)/ nullifzero(LogSpoolReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""SpoolCacheEffKB""),zeroifnull(CASEWHEN TtlPhyReadMBSecNode_SVPR > TtlLogReadMBSecNode_SVPR THEN 0ELSE (TtlLogReadMBSecNode_SVPR - TtlPhyReadMBSecNode_SVPR)/ nullifzero(TtlLogReadMBSecNode_SVPR) * 100END) (FORMAT 'ZZ9.9', named ""TotalCacheEffKB"") ,zeroifnull( (LogPermReadSecNode_SVPR-TtlPhyPermReadsSecNode_SVPR)/ nullifzero(LogPermReadSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermCacheEffCnt""),zeroifnull( (LogSpoolReadSecNode_SVPR-TtlPhySpoolReadsSecNode_SVPR)/ nullifzero(LogSpoolReadSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolCacheEffCnt"") ,zeroifnull( (LogPermDBSecNode_SVPR-PhyPermDBSecNode_SVPR)/ nullifzero(LogPermDBSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermDBCacheEffCnt""),zeroifnull( (LogPermCISecNode_SVPR-PhyPermCISecNode_SVPR)/ nullifzero(LogPermCISecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""PermCICacheEffCnt"") ,zeroifnull( (LogSpoolDBSecNode_SVPR-PhySpoolDBSecNode_SVPR)/ nullifzero(LogSpoolDBSecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolDBCacheEffCnt""),zeroifnull( (LogSpoolCISecNode_SVPR-PhySpoolCISecNode_SVPR)/ nullifzero(LogSpoolCISecNode_SVPR) * 100) (FORMAT 'ZZ9.9', named ""SpoolCICacheEffCnt"") /* SVPR I/O Metrics */ ,sum(LogPermDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermDBSecNode_SVPR""),sum(LogPermCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermCISecNode_SVPR""),sum(LogSpoolDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolDBSecNode_SVPR""),sum(LogSpoolCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolCISecNode_SVPR"") ,sum(PhySpoolCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolDBSecNode_SVPR""),sum(PhySpoolDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolCISecNode_SVPR""),sum(PhyPermDBRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermDBSecNode_SVPR""),sum(PhyPermCIRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermCISecNode_SVPR"") ,sum(LogPermRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogPermReadSecNode_SVPR""),sum(LogSpoolRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""LogSpoolReadSecNode_SVPR""),sum(LogPermReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""LogPermReadMBSecNode_SVPR""),sum(LogSpoolReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""LogSpoolReadMBSecNode_SVPR"") ,sum(PhyPermReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermPosReadMBSecNode_SVPR""),sum(PhyPermPreReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermPreReadMBSecNode_SVPR""),sum(PhySpoolReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolPosReadMBSecNode_SVPR""),sum(PhySpoolPreReadKB) / 1024 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolPreReadMBSecNode_SVPR"") ,sum(PhyPermRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermPosReadSecNode_SVPR""),sum(PhyPermPreRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermPreReadSecNode_SVPR""),sum(PhySpoolRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolPosReadSecNode_SVPR""),sum(PhySpoolPreRead) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolPreReadSecNode_SVPR"") ,sum(PhyPermWrite) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhyPermWriteSecNode_SVPR""),sum(PhySpoolWrite) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""PhySpoolWriteSecNode_SVPR""),sum(PhyPermWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhyPermWriteMBSecNode_SVPR""),sum(PhySpoolWriteKB) / 1024.0 / NumNodes / RSSInterval (format 'ZZZ,ZZ9.9')(named ""PhySpoolWriteMBSecNode_SVPR"") ,PhyPermPosReadMBSecNode_SVPR + PhyPermPreReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhyPermReadMBSecNode_SVPR""),PhySpoolPosReadMBSecNode_SVPR + PhySpoolPreReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhySpoolReadMBSecNode_SVPR""),PhyPermWriteMBSecNode_SVPR + PermAgedWriteMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhyPermWriteMBSecNode_SVPR""),PhySpoolWriteMBSecNode_SVPR + SpoolAgedWriteMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlPhySpoolWriteMBSecNode_SVPR"") ,PhyPermPosReadSecNode_SVPR + PhyPermPreReadSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyPermReadsSecNode_SVPR""),PhySpoolPosReadSecNode_SVPR + PhySpoolPreReadSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhySpoolReadsSecNode_SVPR""),PhyPermWriteSecNode_SVPR + PhyPermWriteSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyWriteSecNode_SVPR""),PhyPermWriteMBSecNode_SVPR + PhySpoolWriteMBSecNode_SVPR (format 'ZZ,ZZ9.9')(named ""TtlPhyWriteMBSecNode_SVPR"") ,LogPermReadMBSecNode_SVPR + LogSpoolReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(named ""TtlLogReadMBSecNode_SVPR""),TtlPhyPermReadMBSecNode_SVPR + TtlPhySpoolReadMBSecNode_SVPR (format 'ZZZ,ZZ9.9')(format 'ZZZ,ZZ9.9')(named ""TtlPhyReadMBSecNode_SVPR"") /* SVPR extended perm db caching information */ ,sum(FCRRequests) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadRequestsSecNode_SVPR""),sum(SuccessfulFCRs) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadSecNode_SVPR""),sum(FCRBlocksRead) / NumNodes / RSSInterval (format 'ZZ,ZZZ,ZZ9.9') (named ""FCRBlocksRead"")(named ""CylReadBlocksSecNode_SVPR""),sum(FCRDeniedThresh) / NumNodes / RSSInterval (format 'ZZ,ZZ9.9') (named ""CylReadDenThrSecNode_SVPR""),sum(FCRDeniedCache)  / NumNodes / RSSInterval (format 'ZZ,ZZ9.9')(named ""CylReadDenCacheSecNode_SVPR"") ,sum(PermDirtyRelease) / NumNodes / RSSInterval (named ""PermDirtyRelSecNode_SVPR""),sum(PermCleanRelease) / NumNodes / RSSInterval (named ""PermCleanRelSecNode_SVPR""),sum(PermDirtyReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""PermDirtyRelMBSecNode_SVPR""),sum(PermCleanReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""PermCleanRelMBSecNode_SVPR""),sum(PermDirtyAgedWriteKB) / 1024.0 / NumNodes / RSSInterval(named ""PermAgedWriteMBSecNode_SVPR"") ,sum(SpoolDirtyRelease) / NumNodes / RSSInterval (named ""SpoolDirtyRelSecNode_SVPR""),sum(SpoolCleanRelease) / NumNodes / RSSInterval (named ""SpoolCleanRelSecNode_SVPR""),sum(SpoolDirtyReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolDirtyRelMBSecNode_SVPR""),sum(SpoolCleanReleaseKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolCleanRelMBSecNode_SVPR""),sum(SpoolDirtyAgedWriteKB) / 1024.0 / NumNodes / RSSInterval(named ""SpoolAgedWriteMBSecNode_SVPR"") ,sum(WALTJWriteKB)  / 1024.0 / NumNodes / RSSInterval (named ""WALTJWriteMBSecNode_SVPR""),sum(WALTJDirtyReleaseKB)  / 1024.0 / NumNodes / RSSInterval (named ""WALTJDirtyRelMBSecNode_SVPR""),sum(PhysWALTJReadKB) / 1024.0 / NumNodes / RSSInterval (named ""PhysWALTJReadMBSecNode_SVPR"") /* SPMA Physical Bynet */ ,sum(PtPReads) / NumNodes / RSSInterval (format 'ZZ,ZZ","NULL","0","0","0","N ","NULL","NULL","2017-07-06 14:56:46","KHANA15","2017-07-06 14:58:40","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","GRD_RPRT_CALR_FNYR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_RPRT_CALR_FNYR AS LOCKING TABLE K_PDGRD.GRD_RPRT_CALR_FNYR FOR ACCESS SEL * FROM K_PDGRD.GRD_RPRT_CALR_FNYR;","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:36:58","perumabh","2025-08-22 11:36:58","NULL","1","2025-08-22 11:36:58","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_PDCT_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_PDCT_RELAS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_RELFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.APPT_PDCT_REL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:55","perumabh","2025-07-14 22:20:55","NULL","1","2025-07-14 22:20:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_RM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_RMAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_RMFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_RM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:58","perumabh","2025-07-14 22:05:58","NULL","1","2025-07-14 22:05:58","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_ACCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_ACCT AS GDW2_RESTORE.TMP_APPT_PDCT_ACCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:44","singhp80","2025-07-12 07:56:44","NULL","3","2025-07-12 06:02:15","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDPATY","ACCT_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDPATY.ACCT_PATY AS GDW2_RESTORE.ACCT_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:54:52","singhp80","2025-07-12 07:54:52","NULL","546","2025-08-21 16:17:11","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","INT_GRUP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.INT_GRUP AS GDW2_RESTORE.INT_GRUP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:33","singhp80","2025-07-12 07:55:33","NULL","29","2025-08-13 15:25:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_6_PDCTSWCHREFN","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_300_6_PDCTSWCHREFN ASLOCKING ROW FOR ACCESS (        SEL             ACCT_IDNN_HK                  			,PERD_D                        			,PERD_C                        			,PATY_IDNN_HK                  			,PATY_IDNN_BK                  			,SALE_GRUP_I                   			,PRTF_IDNN_BK                  			,RUNOFF_MGMT_INFO_PDCT_HIER_IDNN AS MGMT_INFO_PDCT_HIER_IDNN			,CRSK_F                        			,CNCY_IDNN_BK                  			,USGE_CNCY_CATG_IDNN_BK        			,FNCL_MSUR_C                   			,MSUR_A                        			,MSTR_SRCE_SYST_C              			,GL_SRCE_IDNN_BK               			,ROW_SECU_ACCS_C           FROM KOSTKAMA.TX_300_4_PDCTSWCHREFN_REFIN         UNION ALL        SEL            ACCT_IDNN_HK                  			,PERD_D                        			,PERD_C                        			,PATY_IDNN_HK                  			,PATY_IDNN_BK                  			,SALE_GRUP_I                   			,PRTF_IDNN_BK                  			,RUNOFF_MGMT_INFO_PDCT_HIER_IDNN AS MGMT_INFO_PDCT_HIER_IDNN			,CRSK_F                        			,CNCY_IDNN_BK                  			,USGE_CNCY_CATG_IDNN_BK        			,FNCL_MSUR_C                   			,MSUR_A                        			,MSTR_SRCE_SYST_C              			,GL_SRCE_IDNN_BK               			,ROW_SECU_ACCS_C   					 FROM KOSTKAMA.TX_300_5_PDCTSWCHREFN_PDSWCH);","NULL","0","0","0","N ","NULL","NULL","2018-01-17 10:38:57","KOSTKAMA","2018-01-17 10:38:57","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_APPT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_REL AS GDW2_RESTORE.TMP_APPT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:44","singhp80","2025-07-12 07:56:44","NULL","3","2025-07-12 06:02:16","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ENV_EVNT_ACTV_TYPE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ENV_EVNT_ACTV_TYPEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_EVNT_ACTV_TYPEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_EVNT_ACTV_TYPE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:49","perumabh","2025-07-14 22:16:49","NULL","1","2025-07-14 22:16:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ACCT_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_PDCT(        ACCT_I,        EFFT_D,        EXPY_D,        PDCT_N,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        MFTR_PDCT_I,        SRCE_SYST_C,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_PDCT FOR ACCESSSELECT        ACCT_I,        EFFT_D,        EXPY_D,        PDCT_N,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        MFTR_PDCT_I,        SRCE_SYST_C,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM (SELECT        ACCT_I,        EFFT_D,        EXPY_D,        PDCT_N,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        CASE WHEN ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C,        MFTR_PDCT_I,        SRCE_SYST_C,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM        K_STAR_CAD_PROD_DATA.ACCT_PDCT ) ACCT_PDCT  WHERE RECORD_DELETED_FLAG = 0 AND ( (/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */));","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:36:44","perumabh","2025-08-22 11:36:44","NULL","1","2025-08-22 11:36:44","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PURP_CL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PURP_CLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:42","perumabh","2025-07-14 22:17:42","NULL","1","2025-07-14 22:17:42","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_STUS_REAS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_STUS_REAS AS GDW2_RESTORE.TMP_APPT_STUS_REAS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:33","singhp80","2025-07-12 07:56:33","NULL","3","2025-07-12 06:02:08","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","PATY_REL","1","V ","F ","NN  ","perumabh","--Replace K_PVTECH.PATY_REL:REPLACE VIEW K_PVTECH.PATY_REL(        PATY_I,	 RELD_PATY_I,	 REL_I,	 REL_REAS_C,	 REL_TYPE_C,	 SRCE_SYST_C,	 PATY_ROLE_C,	 REL_STUS_C,	 REL_LEVL_C,	 REL_EFFT_D,	 REL_EXPY_D,	 SRCE_SYST_REL_I,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 ROW_SECU_ACCS_C,	 RISK_AGGR_F)    AS LOCKING TABLE K_PDPATY.PATY_REL FOR ACCESSSELECT        PATY_I,	 RELD_PATY_I,	 REL_I,	 REL_REAS_C,	 REL_TYPE_C,	 SRCE_SYST_C,	 PATY_ROLE_C,	 REL_STUS_C,	 REL_LEVL_C,	 REL_EFFT_D,	 REL_EXPY_D,	 SRCE_SYST_REL_I,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 ROW_SECU_ACCS_C,	 RISK_AGGR_F  FROM        K_PDPATY.PATY_REL Where (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:37:53","perumabh","2025-07-14 22:37:53","NULL","1","2025-07-14 22:37:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ORIG_APPT_SRCE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE AS GDW2_RESTORE.MAP_CSE_ORIG_APPT_SRCE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:05","singhp80","2025-07-12 07:57:05","NULL","29","2025-08-14 12:28:26","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_FA_UTAK","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_FA_UTAK AS GDW2_RESTORE.TMP_FA_UTAK WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:11","singhp80","2025-07-12 07:57:11","NULL","3","2025-07-12 06:02:27","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","GRD_GNRC_MAP_DERV_PATY_REL","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_REL ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      MAP_TYPE_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'MAPPING TYPE CODE' NOT NULL,      SRCE_SYST_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code',      REL_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Relationship Code',      ACCT_I_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Code',      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31') PRIMARY INDEX ( REL_C );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:26","perumabh","2025-07-14 22:04:26","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ORIG_APPT_SRCE_HM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ORIG_APPT_SRCE_HM(        HL_BUSN_CHNL_CAT_I,        ORIG_APPT_SRCE_SYST_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE_HM FOR ACCESSSELECT        HL_BUSN_CHNL_CAT_I,        ORIG_APPT_SRCE_SYST_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE_HM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:15:37","perumabh","2025-07-14 22:15:37","NULL","1","2025-07-14 22:15:37","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_UNID_PATY_GNRC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_UNID_PATY_GNRC AS GDW2_RESTORE.TMP_UNID_PATY_GNRC WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:32","singhp80","2025-07-12 07:56:32","NULL","3","2025-07-12 06:02:07","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DERV_ACCT_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_ACCT_PATY( ACCT_I                        ,PATY_I   ,ASSC_ACCT_I                 ,PATY_ACCT_REL_C               ,PRFR_PATY_F                   ,SRCE_SYST_C                   ,EFFT_D                        ,EXPY_D,PROS_KEY_EFFT_I,PROS_KEY_EXPY_I,ROW_SECU_ACCS_C)     AS LOCKING TABLE K_STAR_CAD_PROD_DATA.DERV_ACCT_PATY FOR ACCESS SELECT ACCT_I                        ,PATY_I   ,ASSC_ACCT_I                 ,PATY_ACCT_REL_C               ,PRFR_PATY_F                   ,SRCE_SYST_C                   ,EFFT_D                        ,EXPY_D ,PROS_KEY_EFFT_I,PROS_KEY_EXPY_I,ROW_SECU_ACCS_C    FROM ( SELECT ACCT_I                        ,PATY_I   ,ASSC_ACCT_I                 ,PATY_ACCT_REL_C               ,PRFR_PATY_F                   ,SRCE_SYST_C                   ,EFFT_D                        ,EXPY_D ,PROS_KEY_EFFT_I,PROS_KEY_EXPY_I,CASE WHEN ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C    FROMSTAR_CAD_PROD_DATA.DERV_ACCT_PATY ) DERV_ACCT_PATYWHERE        (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:42:26","perumabh","2025-07-14 22:42:26","NULL","1","2025-07-14 22:42:26","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_CMPE_IDNN","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_CMPE_IDNN   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CMPE_IDNN FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_CMPE_IDNN;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:17","perumabh","2025-07-14 22:17:17","NULL","1","2025-07-14 22:17:17","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDGRD","GRD_GNRC_MAP","1","T ","F ","NN  ","singhp80","CREATE SET TABLE K_PDGRD.GRD_GNRC_MAP ,FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO,     MAP = TD_MAP1     (      GNRC_MAP_GENR_I INTEGER GENERATED ALWAYS AS IDENTITY           (START WITH 1             INCREMENT BY 1             MINVALUE -2147483647             MAXVALUE 2147483647             CYCLE),      MAP_TYPE_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'MAPPING TYPE CODE' NOT NULL,      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      TARG_NUMC_C INTEGER TITLE 'TARGET NUMERIC CODE' COMPRESS ,      TARG_CHAR_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'TARGET CHARACTER CODE',      SRCE_NUMC_1_C INTEGER TITLE 'SOURCE NUMERIC 1 CODE' COMPRESS ,      SRCE_CHAR_1_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 1 CODE',      SRCE_NUMC_2_C INTEGER TITLE 'SOURCE NUMERIC 2 CODE' COMPRESS ,      SRCE_CHAR_2_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 2 CODE',      SRCE_NUMC_3_C INTEGER TITLE 'SOURCE NUMERIC 3 CODE' COMPRESS ,      SRCE_CHAR_3_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 3 CODE',      SRCE_NUMC_4_C INTEGER TITLE 'SOURCE NUMERIC 4 CODE' COMPRESS ,      SRCE_CHAR_4_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 4 CODE',      SRCE_NUMC_5_C INTEGER TITLE 'SOURCE NUMERIC 5 CODE' COMPRESS ,      SRCE_CHAR_5_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 5 CODE',      SRCE_NUMC_6_C INTEGER TITLE 'SOURCE NUMERIC 6 CODE' COMPRESS ,      SRCE_CHAR_6_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 6 CODE',      SRCE_NUMC_7_C INTEGER TITLE 'SOURCE NUMERIC 7 CODE' COMPRESS ,      SRCE_CHAR_7_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'SOURCE CHARACTER 7 CODE',      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31')UNIQUE PRIMARY INDEX ( GNRC_MAP_GENR_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:58:29","singhp80","2025-07-12 07:58:29","NULL","33","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","GRD_GNRC_MAP_PATY_HOLD_PRTY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.GRD_GNRC_MAP_PATY_HOLD_PRTYAS LOCK TABLE K_PDDSTG.GRD_GNRC_MAP_PATY_HOLD_PRTYFOR ACCESS SELECT * FROM K_PDDSTG.GRD_GNRC_MAP_PATY_HOLD_PRTY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:01","perumabh","2025-07-14 22:06:01","NULL","1","2025-07-14 22:06:01","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_DEL","1","T ","F ","NN  ","perumabh","  CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_DEL ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,      ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,      PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL       COMPRESS ('DEL   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */      PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),      SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,      ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0)PRIMARY INDEX ( ACCT_I )INDEX ( PATY_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:48","perumabh","2025-07-14 22:04:48","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","INT_GRUP_DEPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_DEPT AS GDW2_RESTORE.INT_GRUP_DEPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:36","singhp80","2025-07-12 07:56:36","NULL","30","2025-08-13 15:27:48","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"karsa","BV_RSS_DEPT_PLAN","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.BV_RSS_DEPT_PLAN-- ----------------------------------------------------------------------- VIEW NAME:     B_S42_V_BAL_001_STD_0.BV_RSS_DEPT_PLAN---- DESCRIPTION: One to One View on top of B_S42_V_BAL_001_STD_0.BV_RSS_DEPT_PLAN--                         ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------- 1.0	2018-02-22			Prem				 Initial Verison-- -------------------------------------------------------------------------(   DEPT_IDNN_BK  ,MSUR_HIER_NODE_IDNN_BK  ,PDCT_HIER_NODE_IDNN_BK  ,RM_HIER_NODE_IDNN_BK  ,MSUR_TYPE_C  ,PERD_D  ,PERD_C  ,PLAN_A  ,PLAN_Q  ,PLAN_R  ,MSTR_SRCE_SYST_C  ,EFFT_D  ,EXPY_D  )AS LOCKING ROW FOR ACCESSSELECT   DEPT.DEPT_IDNN_BK                  AS DEPT_IDNN_BK  ,MSUR.HIER_NODE_C                   AS MSUR_HIER_NODE_IDNN_BK  ,PDCT.HIER_NODE_C                   AS PDCT_HIER_NODE_IDNN_BK  ,RLM.HIER_NODE_C                    AS RM_HIER_NODE_IDNN_BK  ,HIER.OPUT_COLM_2                   AS MSUR_TYPE_C  ,PLAN.PERD_D  ,PLAN.PERD_C  ,PLAN.PLAN_A  ,PLAN.PLAN_Q  ,PLAN.PLAN_R  ,PLAN.MSTR_SRCE_SYST_C  ,PLAN.EFFT_D  ,PLAN.EXPY_D  FROM B_S42_D_BUS_001_STD_0.LT_DEPT_PLAN                       PLAN                                                              INNER JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                  MSURON PLAN.MSUR_HIER_NODE_IDNN_HK = MSUR.HIER_NODE_IDNN_HK       AND MSUR.HIER_NODE_QLFY_C = 'MSUR'                            AND MSUR.EXPY_D = DATE '9999-12-31'                                                                                         INNER JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                  PDCTON PLAN.PDCT_HIER_NODE_IDNN_HK = PDCT.HIER_NODE_IDNN_HK       AND PDCT.HIER_NODE_QLFY_C = 'PDCT'                            AND PDCT.EXPY_D = DATE '9999-12-31'                                                                                         INNER JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                  RLMON PLAN.SALE_CHNL_HIER_NODE_IDNN_HK = RLM.HIER_NODE_IDNN_HKAND RLM.HIER_NODE_QLFY_C = 'REL_MNGE_TYPE'AND RLM.EXPY_D = DATE '9999-12-31'INNER JOIN B_S42_V_SHR_001_STD_0.H_DEPT                       DEPTON PLAN.DEPT_IDNN_HK = DEPT.DEPT_IDNN_HKAND DEPT.RECORD_DELETED_FLAG = 0AND DEPT.EXPY_D = DATE '9999-12-31'--Use the Config Entries for MSUR MappingINNER JOIN (    SELECT  CNFG.OPUT_COLM_1          , CNFG.OPUT_COLM_2             , CNFG.BUSN_STRT_D          , CNFG.BUSN_END_D                      FROM B_S42_V_REF_001_STD_0.R_CFIG_MAP                     CNFG         INNER  JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE             NODE    ON  CNFG.OPUT_COLM_1= NODE.HIER_NODE_C    AND  NODE.HIER_NODE_QLFY_C = 'MSUR'        WHERE MAP_TYPE_M = 'RSS_PLSE_MSUR_MAP'    AND CNFG.EXPY_D = '9999-12-31'    AND CNFG.RECORD_DELETED_FLAG = 0    AND CNFG.OPUT_COLM_6 = 'PLN' GROUP BY 1,2,3,4)                                                             HIERON MSUR.HIER_NODE_C = HIER.OPUT_COLM_1AND  PLAN.PERD_D BETWEEN HIER.BUSN_STRT_D AND HIER.BUSN_END_DWHERE PLAN.RECORD_DELETED_FLAG = 0AND PLAN.EXPY_D = DATE '9999-12-31';","NULL","0","0","0","N ","NULL","NULL","2020-11-03 16:27:45","karsa","2020-11-03 16:27:45","NULL","0","2020-11-19 13:52:25","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","ACCT_PATY_REL_WSS","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.ACCT_PATY_REL_WSSAS LOCK TABLE K_PDDSTG.ACCT_PATY_REL_WSSFOR ACCESS SELECT * FROM K_PDDSTG.ACCT_PATY_REL_WSS;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:55","perumabh","2025-07-14 22:05:55","NULL","1","2025-07-14 22:05:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT AS GDW2_RESTORE.TMP_APPT_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:41","singhp80","2025-07-12 07:56:41","NULL","3","2025-07-12 06:02:14","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_SM_CASE_STUS_REAS","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_SM_CASE_STUS_REASAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS_REASFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_SM_CASE_STUS_REAS;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:46","perumabh","2025-07-14 22:08:46","NULL","1","2025-07-14 22:08:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_RELAS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_RELFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.APPT_REL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:56","perumabh","2025-07-14 22:20:56","NULL","1","2025-07-14 22:20:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","WUL_NON_SAP_ACCT","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.WUL_NON_SAP_ACCT AS GDW2_RESTORE.WUL_NON_SAP_ACCT WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:45","PUDBAI016","2025-08-21 21:47:45","NULL","1","2025-08-22 11:38:00","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","ACCT_MSTR_CYT_DATA","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.ACCT_MSTR_CYT_DATA AS GDW2_RESTORE.ACCT_MSTR_CYT_DATA WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:08","PUDBAI016","2025-08-21 21:47:08","NULL","1","2025-08-22 11:37:13","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","check_","1","V ","F ","NN  ","KOSTKAMA","create view check_ as (SELECT B_D00_F_GBL_001_STD_0.GETHASHKEY(UPPER(TRIM(PERD_C))||'~'||CAST(PERD_D AS DATE FORMAT 'yyyymmdd')||'~'|| UPPER(TRIM(COALESCE (DEPT_NODE_C,'UNKN')))||'~'||UPPER(TRIM(COALESCE (TEAM_I,'UNKN')))||'~'||UPPER(TRIM(COALESCE(PRTF_IDNN_BK,'UNKN')))||'~'||UPPER(TRIM(COALESCE(EMPL_IDNN_BK,'UNKN')))||'~'||UPPER(TRIM(COALESCE(INTA_PATY_TYPE_X,'UNKN')))||'~'||UPPER(TRIM(COALESCE(INTA_TYPE_C,'UNKN')))||'~'||UPPER(TRIM(COALESCE(BUSN_REVW_F,'U')))||'~'||UPPER(TRIM(COALESCE(PRIM_CLNT_F,'U')))||'~'||UPPER(TRIM(MSUR_C))||'~'||UPPER(TRIM(MSTR_SRCE_SYST_C)) ) AS DLTA_I,PERD_C,PERD_D,DEPT_GRUP_C,DEPT_NODE_C,TEAM_I,PRTF_IDNN_BK,EMPL_IDNN_BK,INTA_PATY_TYPE_X,INTA_TYPE_C,BUSN_REVW_F,PRIM_CLNT_F,MSTR_SRCE_SYST_C,MSUR_C,SUM (MSUR_Q) AS MSUR_QFROM(		--- Aggregate detail data at Team Level 				SELECT 		--DLTA_I,		PERD_C,		PERD_D,		DEPT_GRUP_C,		DEPT_NODE_C,		TEAM_I,		CAST (NULL AS VARCHAR(30)) AS PRTF_IDNN_BK,		CAST (NULL AS VARCHAR(30)) AS EMPL_IDNN_BK,		INTA_PATY_TYPE_X,		INTA_TYPE_C,		BUSN_REVW_F,		PRIM_CLNT_F,		MSTR_SRCE_SYST_C,		MSUR_C,		SUM(MSUR_Q) AS MSUR_Q				FROM		B_D17_V_INP_001_STD_0.TX_255_7_1_BPB_INTA_AGGR_STAG ---This view will calculate the component measure values at Portfolio Level / Employee Level 		 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13		 		UNION ALL		 		--- Aggregate detail data at Centre Level  and above		 		SELECT 		--DLTA_I,		PERD_C,		PERD_D,		DEPT_GRUP_C,		BU_DTL.BU_NODE_C AS DEPT_NODE_C,		CAST (NULL AS VARCHAR(30)) AS TEAM_I,		CAST (NULL AS VARCHAR(30)) AS PRTF_IDNN_BK,		CAST (NULL AS VARCHAR(30)) AS EMPL_IDNN_BK,		INTA_PATY_TYPE_X,		INTA_TYPE_C,		BUSN_REVW_F,		PRIM_CLNT_F,		MSTR_SRCE_SYST_C,		MSUR_C,		SUM(MSUR_Q) AS MSUR_Q				FROM		B_D17_V_INP_001_STD_0.TX_255_7_1_BPB_INTA_AGGR_STAG STAG---This view will calculate the component measure values at Portfolio Level / Employee Level 				INNER JOIN				 		 (		 SELECT 				      SHN.HIER_NODE_C AS BU_NODE_C		     ,SHN.HIER_NODE_M AS BU_NODE_M		     ,SHN.HIER_NODE_X AS BU_NODE_X		     ,HHN.HIER_NODE_C AS DEPT_NODE_C		      FROM		      B_D17_V_BUS_001_STD_0.H_HIER_NODE HHN				       INNER JOIN		           (   		           SELECT 		          CSB.BUSINESS_DATE-1 AS ETL_SLICE_D		              FROM		               B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE CSB		               WHERE 1=1		               AND CSB.STREAM_KEY =1194		                         ) BTCH		           ON 1=1       				       INNER JOIN		       B_D17_V_BUS_001_STD_0.S_HIER_NODE_HIER_NODE SHNHN		       		       ON HHN.HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_IDNN_HK		       AND  SHNHN.HIER_M ='BPB_PRTF_DEPT_HIER' 		       AND SHNHN.HIER_NODE_ANCS_LEVL_N <6		       AND BTCH.ETL_SLICE_D BETWEEN SHNHN.BUSN_STRT_D AND SHNHN.BUSN_END_D		       AND SHNHN.EXPY_D ='9999-12-31'		       AND HHN.EXPY_D='9999-12-31'		        		       INNER JOIN		       B_D17_V_SHR_001_STD_0.L_HIER_NODE_HIER_NODE LHNHN		       ON LHNHN.HIER_NODE_HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_HIER_NODE_IDNN_HK		       AND LHNHN.EXPY_D ='9999-12-31'		       		       INNER JOIN		       B_D17_V_BUS_001_STD_0.S_HIER_NODE SHN		       ON SHN.HIER_NODE_IDNN_HK =LHNHN.REL_HIER_NODE_IDNN_HK		       AND BTCH.ETL_SLICE_D BETWEEN SHN.BUSN_STRT_D AND SHN.BUSN_END_D		       AND SHN.EXPY_D ='9999-12-31'		              		       WHERE		        HHN. HIER_NODE_QLFY_C ='DEPT'		        AND HHN. RECORD_DELETED_FLAG=0		        AND SHN. RECORD_DELETED_FLAG=0		        AND SHNHN. RECORD_DELETED_FLAG=0		        AND LHNHN. RECORD_DELETED_FLAG=0		        --GROUP BY 1,2,3		 ) BU_DTL		 		 ON BU_DTL.DEPT_NODE_C =STAG.DEPT_NODE_C				 GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13		 		 		 UNION ALL			--- Portfolio count & Aggregate				SELECT 		--DLTA_I,		'WEEK' AS PERD_C,		ETL_SLICE_D AS PERD_D,		'BPB_PRTF_DEPT' AS DEPT_GRUP_C,		DEPT_NODE_C,		TEAM_C AS TEAM_I,		CAST (NULL AS VARCHAR(30)) AS PRTF_IDNN_BK,		CAST (NULL AS VARCHAR(30)) AS EMPL_IDNN_BK,		CAST (NULL AS VARCHAR(30)) AS INTA_PATY_TYPE_X,		CAST (NULL AS VARCHAR(30)) AS INTA_TYPE_C,		CAST (NULL AS VARCHAR(30)) AS BUSN_REVW_F,		CAST (NULL AS VARCHAR(30)) AS PRIM_CLNT_F,		'GDW' AS MSTR_SRCE_SYST_C,		'PRTF_Q' AS MSUR_C,		MSUR_Q						FROM				(						SELECT 									ETL_SLICE_D,									TEAM.BU_NODE_C AS TEAM_C,									TEAM.BU_NODE_M AS TEAM_M,									TEAM.BU_NODE_X AS TEAM_X,									CENT.BU_NODE_C AS DEPT_NODE_C,									CENT.BU_NODE_M AS DEPT_NODE_M,									CENT.BU_NODE_X AS DEPT_NODE_X,									MSUR_Q						 FROM 												(															SELECT 									 	  ETL_SLICE_D									  	 ,SHN.HIER_NODE_C AS BU_NODE_C									     ,SHN.HIER_NODE_M AS BU_NODE_M									     ,SHN.HIER_NODE_X AS BU_NODE_X									     ,COUNT(DISTINCT HHN.HIER_NODE_C) AS MSUR_Q									 									      FROM									      B_D17_V_BUS_001_STD_0.H_HIER_NODE HHN																		       INNER JOIN									           (   									           SELECT 									          CSB.BUSINESS_DATE-1 AS ETL_SLICE_D									              FROM									               B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE CSB									               WHERE 1=1									               AND CSB.STREAM_KEY =1194									                         ) BTCH									           ON 1=1       																		       INNER JOIN									       B_D17_V_BUS_001_STD_0.S_HIER_NODE_HIER_NODE SHNHN									       									       ON HHN.HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_IDNN_HK									       AND  SHNHN.HIER_M ='BPB_PRTF_DEPT_HIER' 									       AND SHNHN.HIER_NODE_ANCS_LEVL_N  = 6									       AND BTCH.ETL_SLICE_D BETWEEN SHNHN.BUSN_STRT_D AND SHNHN.BUSN_END_D									       AND SHNHN.EXPY_D ='9999-12-31'									       AND HHN.EXPY_D='9999-12-31'									        									       INNER JOIN									       B_D17_V_SHR_001_STD_0.L_HIER_NODE_HIER_NODE LHNHN									       ON LHNHN.HIER_NODE_HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_HIER_NODE_IDNN_HK									       AND LHNHN.EXPY_D ='9999-12-31'									       									       INNER JOIN									       B_D17_V_BUS_001_STD_0.S_HIER_NODE SHN									       ON SHN.HIER_NODE_IDNN_HK =LHNHN.REL_HIER_NODE_IDNN_HK									       AND BTCH.ETL_SLICE_D BETWEEN SHN.BUSN_STRT_D AND SHN.BUSN_END_D									       AND SHN.EXPY_D ='9999-12-31'									              									       WHERE									        HHN. HIER_NODE_QLFY_C ='EMPL'									        AND HHN. RECORD_DELETED_FLAG=0									        AND SHN. RECORD_DELETED_FLAG=0									        AND SHNHN. RECORD_DELETED_FLAG=0									        AND LHNHN. RECORD_DELETED_FLAG=0									        GROUP BY 1,2,3,4	) TEAM													        									        LEFT OUTER JOIN 										        									      (  SELECT 									 																	  	  SHN.HIER_NODE_C AS BU_NODE_C												     ,SHN.HIER_NODE_M AS BU_NODE_M												     ,SHN.HIER_NODE_X AS BU_NODE_X												     ,SHNHN.HIER_NODE_ANCS_LEVL_N												     ,HHN.HIER_NODE_C AS DEPT_NODE_C												     ,SHNHN.HIER_NODE_LEVL_N									 									      FROM									      B_D17_V_BUS_001_STD_0.H_HIER_NODE HHN																		       INNER JOIN									           (   									           SELECT 									          CSB.BUSINESS_DATE-1 AS ETL_SLICE_D									              FROM									               B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE CSB									               WHERE 1=1									               AND CSB.STREAM_KEY =1194									                         ) BTCH									           ON 1=1       																		       INNER JOIN									       B_D17_V_BUS_001_STD_0.S_HIER_NODE_HIER_NODE SHNHN									       									       ON HHN.HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_IDNN_HK									       AND  SHNHN.HIER_M ='BPB_PRTF_DEPT_HIER' 									       AND SHNHN.HIER_NODE_ANCS_LEVL_N  = 5									       AND BTCH.ETL_SLICE_D BETWEEN SHNHN.BUSN_STRT_D AND SHNHN.BUSN_END_D									       AND SHNHN.EXPY_D ='9999-12-31'									       AND HHN.EXPY_D='9999-12-31'									        									       INNER JOIN									       B_D17_V_SHR_001_STD_0.L_HIER_NODE_HIER_NODE LHNHN									       ON LHNHN.HIER_NODE_HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_HIER_NODE_IDNN_HK									       AND LHNHN.EXPY_D ='9999-12-31'									       									       INNER JOIN									       B_D17_V_BUS_001_STD_0.S_HIER_NODE SHN									       ON SHN.HIER_NODE_IDNN_HK =LHNHN.REL_HIER_NODE_IDNN_HK									       AND BTCH.ETL_SLICE_D BETWEEN SHN.BUSN_STRT_D AND SHN.BUSN_END_D									       AND SHN.EXPY_D ='9999-12-31'									              									       WHERE									        SHNHN.HIER_NODE_LEVL_N = 6									        AND HHN. RECORD_DELETED_FLAG=0									        AND SHN. RECORD_DELETED_FLAG=0									        AND SHNHN. RECORD_DELETED_FLAG=0									        AND LHNHN. RECORD_DELETED_FLAG=0							        ) CENT						        						        ON TEAM.BU_NODE_C = CENT.DEPT_NODE_C	        	        UNION	        					        SELECT 					        				ETL_SLICE_D,											CAST(NULL AS VARCHAR(30)) AS TEAM_C,											CAST(NULL AS VARCHAR(30)) AS TEAM_M,											CAST(NULL AS VARCHAR(30)) AS TEAM_X,											CENT.BU_NODE_C AS DEPT_NODE_C,											CENT.BU_NODE_M AS DEPT_NODE_M,											CENT.BU_NODE_X AS DEPT_NODE_X,											MSUR_Q							 FROM 													(																SELECT 										 	  ETL_SLICE_D										  	 ,SHN.HIER_NODE_C AS BU_NODE_C										     ,SHN.HIER_NODE_M AS BU_NODE_M										     ,SHN.HIER_NODE_X AS BU_NODE_X										     ,COUNT(DISTINCT HHN.HIER_NODE_C) AS MSUR_Q										 										      FROM										      B_D17_V_BUS_001_STD_0.H_HIER_NODE HHN																				       INNER JOIN										           (   										           SELECT 										          CSB.BUSINESS_DATE-1 AS ETL_SLICE_D										              FROM										               B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE CSB										               WHERE 1=1										               AND CSB.STREAM_KEY =1194										                         ) BTCH										           ON 1=1       																				       INNER JOIN										       B_D17_V_BUS_001_STD_0.S_HIER_NODE_HIER_NODE SHNHN										       										       ON HHN.HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_IDNN_HK										       AND  SHNHN.HIER_M ='BPB_PRTF_DEPT_HIER' 										       AND SHNHN.HIER_NODE_ANCS_LEVL_N  < 6										       AND BTCH.ETL_SLICE_D BETWEEN SHNHN.BUSN_STRT_D AND SHNHN.BUSN_END_D										       AND SHNHN.EXPY_D ='9999-12-31'										       AND HHN.EXPY_D='9999-12-31'										        										       INNER JOIN										       B_D17_V_SHR_001_STD_0.L_HIER_NODE_HIER_NODE LHNHN										       ON LHNHN.HIER_NODE_HIER_NODE_IDNN_HK=SHNHN.HIER_NODE_HIER_NODE_IDNN_HK										       AND LHNHN.EXPY_D ='9999-12-31'										       										       INNER JOIN										       B_D17_V_BUS_001_STD_0.S_HIER_NODE SHN										       ON SHN.HIER_NODE_IDNN_HK =LHNHN.REL_HIER_NODE_IDNN_HK										       AND BTCH.ETL_SLICE_D BETWEEN SHN.BUSN_STRT_D AND SHN.BUSN_END_D										       AND SHN.EXPY_D ='9999-12-31'										              										       WHERE										        HHN. HIER_NODE_QLFY_C ='EMPL'										        AND HHN. RECORD_DELETED_FLAG=0										        AND SHN. RECORD_DELETED_FLAG=0										        AND SHNHN. RECORD_DELETED_FLAG=0										        AND LHNHN. RECORD_DELETED_FLAG=0										        GROUP BY 1,2,3,4							        ) CENT					) PRTFM				           ) OVRALL GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14);","NULL","0","0","0","N ","NULL","NULL","2017-05-23 12:03:58","KOSTKAMA","2017-05-23 12:03:58","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","ACCT_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_REL(        SUBJ_ACCT_I,        OBJC_ACCT_I,        REL_C,        EFFT_D,        EXPY_D,        STRT_D,        REL_EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        REL_STUS_C,        SRCE_SYST_C,        SUBJ_ACCT_LEVL_N,        OBJC_ACCT_LEVL_N,        CRIN_SHRE_P,        DR_INT_SHRE_P,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_REL FOR ACCESSSELECT        SUBJ_ACCT_I,        OBJC_ACCT_I,        REL_C,        EFFT_D,        EXPY_D,        STRT_D,        REL_EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        REL_STUS_C,        SRCE_SYST_C,        SUBJ_ACCT_LEVL_N,        OBJC_ACCT_LEVL_N,        CRIN_SHRE_P,        DR_INT_SHRE_P,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM (SELECT        SUBJ_ACCT_I,        OBJC_ACCT_I,        REL_C,        EFFT_D,        EXPY_D,        STRT_D,        REL_EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        CASE WHEN SUBJ_ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C,        REL_STUS_C,        SRCE_SYST_C,        SUBJ_ACCT_LEVL_N,        OBJC_ACCT_LEVL_N,        CRIN_SHRE_P,        DR_INT_SHRE_P,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM        K_STAR_CAD_PROD_DATA.ACCT_REL ) ACCT_REL  WHERE(/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:41:33","perumabh","2025-07-14 22:41:33","NULL","1","2025-07-14 22:41:33","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","DERV_PRTF_OWN_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_OWN_REL AS GDW2_RESTORE.DERV_PRTF_OWN_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:37","singhp80","2025-07-12 07:56:37","NULL","29","2025-08-13 14:58:02","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_ASET","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_ASET AS GDW2_RESTORE.TMP_APPT_ASET WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:48","singhp80","2025-07-12 07:56:48","NULL","3","2025-07-12 06:02:19","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_LOAN_TERM_PL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_TERM_PL AS GDW2_RESTORE.MAP_CSE_LOAN_TERM_PL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:56","singhp80","2025-07-12 07:56:56","NULL","30","2025-08-14 12:05:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ENV_CHLD_PATY_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_CHLD_PATY_REL AS GDW2_RESTORE.MAP_CSE_ENV_CHLD_PATY_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:08","singhp80","2025-07-12 07:57:08","NULL","29","2025-08-14 12:36:45","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_PURP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_PURP AS GDW2_RESTORE.TMP_APPT_PDCT_PURP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:34","singhp80","2025-07-12 07:56:34","NULL","3","2025-07-12 06:02:09","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","CBA_FNCL_SERV_GL_DATA_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.CBA_FNCL_SERV_GL_DATA_CURR(	RECD_CNT,	INTR_CNCT_ID,	INTR_OBJC_IDNN,	SRCE_SYST_ISAC_CODE,	OBJC_BDT_APPT,	OBJC_FUNC,	CHNG_TIME_STMP,	VALD_FROM,	ACTL_VALD_END,	LAST_CHNG_BY,	BUSN_TRAN_CATG,	SALE_PDCT,	DEPT_ID,	AFLT,	ALT_PDCT_ID,	SHRT_FORM_TIME_STMP,	MIGR_GRUP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND)	AS LOCKING TABLE K_PDCBODS.CBA_FNCL_SERV_GL_DATA FOR ACCESSSELECT	RECD_CNT,	INTR_CNCT_ID,	INTR_OBJC_IDNN,	SRCE_SYST_ISAC_CODE,	OBJC_BDT_APPT,	OBJC_FUNC,	CHNG_TIME_STMP,	VALD_FROM,	ACTL_VALD_END,	LAST_CHNG_BY,	BUSN_TRAN_CATG,	SALE_PDCT,	DEPT_ID,	AFLT,	ALT_PDCT_ID,	SHRT_FORM_TIME_STMP,	MIGR_GRUP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND  FROM	K_PDCBODS.CBA_FNCL_SERV_GL_DATA  WHERE  IS_CURR_IND = 1  /* Retrieve only the ""Current"" record per Primary Key */		AND	((/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */));","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:39","perumabh","2025-08-22 11:37:39","NULL","1","2025-08-22 11:37:39","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_GDW_APPT_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_GDW_APPT_PDCT AS GDW2_RESTORE.TMP_GDW_APPT_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:11","singhp80","2025-07-12 07:57:11","NULL","4","2025-07-12 06:06:31","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","tmp_appt_paty","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.tmp_appt_paty AS GDW2_RESTORE.tmp_appt_paty WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:47","singhp80","2025-07-12 07:55:47","NULL","3","2025-07-12 06:02:03","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDATA","INT_GRUP_DEPT_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDATA.INT_GRUP_DEPT_CURR(        INT_GRUP_I,        DEPT_I,        DEPT_ROLE_C,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        EFFT_D,        EXPY_D,        GDW_EFFT_D)     ASSELECT        INT_GRUP_I,        DEPT_I,        DEPT_ROLE_C,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        EFFT_D,        EXPY_D,  (SELECT GDW_EFFT_D FROM K_PVDATA.GDW_EFFT_DATE) AS GDW_EFFT_D  FROM        K_PVTECH.INT_GRUP_DEPTWHERE         GDW_EFFT_D BETWEEN EFFT_D AND EXPY_D;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:45:39","perumabh","2025-07-14 23:45:39","NULL","1","2025-07-14 23:45:39","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_4_PDCTSWCHREFN_REFIN","1","V ","F ","NN  ","KOSTKAMA","REPLACE  VIEW KOSTKAMA.TX_300_4_PDCTSWCHREFN_REFIN ASLOCKING ROW FOR ACCESS (            SEL              ACCT_IDNN_HK                  			,PERD_D                        			,PERD_C                        			,PATY_IDNN_HK                  			,PATY_IDNN_BK                  			,SALE_GRUP_I                   			,PRTF_IDNN_BK                  			,RUNOFF_MGMT_INFO_PDCT_HIER_IDNN 			,CRSK_F                        			,CNCY_IDNN_BK                  			,USGE_CNCY_CATG_IDNN_BK        			,CAST('INTR_RFNC_OUT_A' AS VARCHAR(30)) AS FNCL_MSUR_C                   			,INTRNL_REFIN *-1   AS MSUR_A                        			,MSTR_SRCE_SYST_C              			,GL_SRCE_IDNN_BK               			,ROW_SECU_ACCS_C                                                   FROM                         (            SEL 			 STAGE. PERD_D                        			,STAGE.SALE_GRUP_I                   			,STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.RUN_OFF_A                     			,STAGE.NEW_LEND_A                    			,STAGE.TOT_REFIN                     			,STAGE.TOT_PD_SWITCH                 			,STAGE.TOT_RUN_OFF_A                 			,STAGE.TOT_NEW_LEND_A                			,STAGE.TOT_AVAIL			,RUNOFF.ACCT_IDNN_HK              			,RUNOFF.PERD_C                        			,RUNOFF.PATY_IDNN_HK                  			,RUNOFF.PATY_IDNN_BK                  			,RUNOFF.PRTF_IDNN_BK                  			,RUNOFF.CRSK_F                        			,RUNOFF.CNCY_IDNN_BK                  			,RUNOFF.USGE_CNCY_CATG_IDNN_BK        			,RUNOFF.MSTR_SRCE_SYST_C              			,RUNOFF.GL_SRCE_IDNN_BK               			,RUNOFF.ROW_SECU_ACCS_C  			              ,ABS(RUNOFF.MSUR_A) AS ACCT_RUN_OFF_A                        		 , CASE WHEN  ( TOT_REFIN - (  SUM(  ACCT_RUN_OFF_A ) OVER (PARTITION BY RUNOFF.SALE_GRUP_I ORDER BY RUNOFF.SALE_GRUP_I, ACCT_RUN_OFF_A DESC ,RUNOFF.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) - ACCT_RUN_OFF_A  ) ) < 0  THEN 0				WHEN ACCT_RUN_OFF_A  <  ( TOT_REFIN  - (  SUM(  ACCT_RUN_OFF_A ) OVER (PARTITION BY RUNOFF.SALE_GRUP_I ORDER BY RUNOFF.SALE_GRUP_I, ACCT_RUN_OFF_A DESC,RUNOFF.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) - ACCT_RUN_OFF_A ) ) THEN ACCT_RUN_OFF_A				ELSE  ( TOT_REFIN - (  SUM(  ACCT_RUN_OFF_A ) OVER (PARTITION BY RUNOFF.SALE_GRUP_I ORDER BY RUNOFF.SALE_GRUP_I, ACCT_RUN_OFF_A DESC,RUNOFF.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) -  ACCT_RUN_OFF_A  ) )				END AS INTRNL_REFIN                                     FROM KOSTKAMA.TX_300_3_PDCTSWCHREFN_STG1   STAGE     JOIN B_D17_D_INP_001_STD_0.TX_300_1_PDCTSWCHREFN_BASE  RUNOFF            ON RUNOFF.SALE_GRUP_I = STAGE.SALE_GRUP_I            AND RUNOFF.MGMT_INFO_PDCT_HIER_IDNN = STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN            AND RUNOFF.FNCL_MSUR_C = 'RUN_OFF_A'            AND RUNOFF.MSUR_A < 0                        AND STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN = STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN            ) REFIN_OUT                    UNION ALL                        SEL                          ACCT_IDNN_HK                  			,PERD_D                        			,PERD_C                        			,PATY_IDNN_HK                  			,PATY_IDNN_BK                  			,SALE_GRUP_I                   			,PRTF_IDNN_BK                  			,NEWLEND_MGMT_INFO_PDCT_HIER_IDNN 			,CRSK_F                        			,CNCY_IDNN_BK                  			,USGE_CNCY_CATG_IDNN_BK        			,CAST ('INTR_RFNC_IN_A'  AS VARCHAR(30)) AS FNCL_MSUR_C                   			,INTRNL_REFIN   AS MSUR_A                        			,MSTR_SRCE_SYST_C              			,GL_SRCE_IDNN_BK               			,ROW_SECU_ACCS_C                FROM             (                        SEL              STAGE. PERD_D                        			,STAGE.SALE_GRUP_I                   			,STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.RUN_OFF_A                     			,STAGE.NEW_LEND_A                    			,STAGE.TOT_REFIN                     			,STAGE.TOT_PD_SWITCH                 			,STAGE.TOT_RUN_OFF_A                 			,STAGE.TOT_NEW_LEND_A                			,STAGE.TOT_AVAIL 						,NEWLEND.ACCT_IDNN_HK                  			,NEWLEND.PERD_C                        			,NEWLEND.PATY_IDNN_HK                  			,NEWLEND.PATY_IDNN_BK                  			,NEWLEND.PRTF_IDNN_BK                  			,NEWLEND.CRSK_F                        			,NEWLEND.CNCY_IDNN_BK                  			,NEWLEND.USGE_CNCY_CATG_IDNN_BK        			,NEWLEND.MSTR_SRCE_SYST_C              			,NEWLEND.GL_SRCE_IDNN_BK               			,NEWLEND.ROW_SECU_ACCS_C                           ,ABS(NEWLEND.MSUR_A) AS ACCT_NEW_LEND_A                                 , CASE WHEN  ( TOT_REFIN - (  SUM(  ACCT_NEW_LEND_A ) OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I, ACCT_NEW_LEND_A DESC,NEWLEND.ACCT_IDNN_HK  DESC ROWS UNBOUNDED PRECEDING ) - ACCT_NEW_LEND_A  ) ) < 0                                    THEN 0				WHEN ACCT_NEW_LEND_A  <  ( TOT_REFIN  - (  SUM(  ACCT_NEW_LEND_A ) OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I, ACCT_NEW_LEND_A DESC,NEWLEND.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) - ACCT_NEW_LEND_A ) )                 THEN ACCT_NEW_LEND_A				ELSE  ( TOT_REFIN - (  SUM(  ACCT_NEW_LEND_A ) OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I, ACCT_NEW_LEND_A DESC,NEWLEND.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) -  ACCT_NEW_LEND_A  ) )           END AS INTRNL_REFIN                                     FROM KOSTKAMA.TX_300_3_PDCTSWCHREFN_STG1   STAGE     JOIN B_D17_D_INP_001_STD_0.TX_300_1_PDCTSWCHREFN_BASE  NEWLEND            ON NEWLEND.SALE_GRUP_I = STAGE.SALE_GRUP_I            AND NEWLEND.MGMT_INFO_PDCT_HIER_IDNN = STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN            AND NEWLEND.FNCL_MSUR_C = 'NEW_LEND_A'            AND NEWLEND.MSUR_A > 0                        AND STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN = STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN                                    ) REFIN_IN   			);","NULL","0","0","0","N ","NULL","NULL","2018-01-17 10:36:45","KOSTKAMA","2018-01-17 10:36:45","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_APPT_SERV_CPTY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_SERV_CPTY AS GDW2_RESTORE.TMP_APPT_SERV_CPTY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:54","singhp80","2025-07-12 07:55:54","NULL","3","2025-07-12 06:02:07","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","ACCT_PATY_THA_NEW_RNGE","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.ACCT_PATY_THA_NEW_RNGE ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      THA_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Thaler Account Identifier' NOT NULL,      TRAD_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Trading Account Identifier' NOT NULL,      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,      NEW_EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'New Expiry Date')PRIMARY INDEX ( TRAD_ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:02:47","perumabh","2025-07-14 22:02:47","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","GDW_EFFT_DATE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.GDW_EFFT_DATE AS GDW2_RESTORE.GDW_EFFT_DATE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:10","singhp80","2025-07-12 07:57:10","NULL","35","2025-08-13 15:23:31","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","APPT_PDCT_ACCT_TEMP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.APPT_PDCT_ACCT_TEMP AS GDW2_RESTORE.APPT_PDCT_ACCT_TEMP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:11","singhp80","2025-07-12 07:57:11","NULL","3","2025-07-12 06:02:28","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","GRD_GNRC_MAP_PATY_HOLD_PRTY","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.GRD_GNRC_MAP_PATY_HOLD_PRTY ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      MAP_TYPE_C VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'MAPPING TYPE CODE' NOT NULL,      PATY_ACCT_REL_C  VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'Account Party Relationship Code',      PATY_ACCT_REL_X  VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'Account Party Relationship Code Description',   PATY_ACCT_REL_PRTY  SMALLINT TITLE 'Account Party Relationship Code Priority',      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31')PRIMARY INDEX ( PATY_ACCT_REL_C );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:28","perumabh","2025-07-14 22:04:28","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_UNID_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_UNID_PATY AS GDW2_RESTORE.TMP_APPT_PDCT_UNID_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:47","singhp80","2025-07-12 07:56:47","NULL","3","2025-07-12 06:02:19","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_11_ACCT_PATY_PRTF_MNLY_TEST","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_300_11_ACCT_PATY_PRTF_MNLY_TEST--REPLACE VIEW B_D17_V_INP_001_STD_0. TX_300_11_ACCT_PATY_PRTF_MNLY(       ACCT_IDNN_HK,        ACCT_IDNN_BK,        MSTR_SRCE_SYST_C,        PATY_IDNN_HK,        PATY_IDNN_BK,        PATY_OWN_PRTF_IDNN_BK,        PATY_CRSK_PRTF_IDNN_BK,        PATY_SEGM_PRTF_IDNN_BK,        VALD_PATY_PRTF_F,        INTR_PATY_PRTF_F,        PATY_OWN_PRTF_MNGE_F,        PATY_CRSK_MNGE_F,        PREV_FYE_CRSK_MNGE_F,                                         ROW_SECU_ACCS_C   ,         CTLFW_DELTA_ACTION_CODE            )AS SELECT     HA.ACCT_IDNN_HK,HA.ACCT_IDNN_BK,HA.MSTR_SRCE_SYST_C                ,GM.PATY_IDNN_HK                 ,GM.PATY_IDNN_BK,GM.PRTF_IDNN_BK  AS PATY_OWN_PRTF_IDNN_BK,GM.CRS_PRTF_IDNN_BK       AS PATY_CRSK_PRTF_IDNN_BK      ,GM.PATY_SEGM_PRTF_IDNN_BK ,GM.VALD_PATY_F AS VALD_PATY_PRTF_F,GM.INTR_PATY_F AS INTR_PATY_PRTF_F,GM.PRTF_MNGE_F AS PATY_OWN_PRTF_MNGE_F,GM.CRSK_MGMT_F AS PATY_CRSK_MNGE_F,GM.PREV_FYE_CRSK_MNGE_F,GM. ROW_SECU_ACCS_C  ,0 AS CTLFW_DELTA_ACTION_CODEFROM         B_D17_V_SHR_001_STD_0.H_ACCT HAINNER JOIN 				(SELECT						COALESCE(A.PATY_IDNN_HK, '696B031073E74BF2CB98E5EF201D4AA3') AS PATY_IDNN_HK,						COALESCE(A.ACCT_IDNN_HK, B.ACCT_IDNN_HK) AS ACCT_IDNN_HK				FROM              		   		               ( SELECT                    			            	sap.PATY_IDNN_HK,         			                        	sap.ACCT_PATY_IDNN_HK,          			                       		sap.ACCT_IDNN_HK,            			                    	sap.BUSN_STRT_D,                        			        	sap.BUSN_END_D                                				FROM  B_D17_V_BUS_001_STD_0.S_ACCT_PATY SAP                               				INNER JOIN B_D17_V_BAL_001_STD_0.DIMN_DATE DD                               				ON DD.CALR_D = ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)                               				AND   SAP.PRFR_PATY_F = 'Y'                                 				AND SAP.BUSN_STRT_D <= DD.CALR_D                               				AND SAP.BUSN_END_D >=DD.CALR_MNTH_STRT_D                               				AND  SAP.EXPY_D = '9999-12-31'                               				AND  SAP.RECORD_DELETED_FLAG = 0                                				WHERE SAP.ACCT_PATY_IDNN_HK IN ( SEL ACCT_PATY_IDNN_HK FROM B_D17_V_SHR_001_STD_0.L_ACCT_PATY                                                                                                       WHERE EXPY_D ='9999-12-31' AND RECORD_DELETED_FLAG=0)                              				--QUALIFY ROW_NUMBER() OVER (PARTITION BY ACCT_IDNN_HK ORDER BY BUSN_STRT_D DESC ) = 1                               				) A                              				                              				RIGHT JOIN (                              						SEL  ACCT_IDNN_HK --, MSTR_SRCE_SYST_C                              						FROM (                                                            SEL ACCT_IDNN_HK, CAST(MSTR_SRCE_SYST_C AS VARCHAR(10)) AS MSTR_SRCE_SYST_C                                                           FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_BALN_GL_MNLY FACT                                                           WHERE MNTH_END_D < '2018-04-30'                                                           AND MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A'                                                           GROUP BY 1,2                                                                                                                       UNION ALL                                                                                                                       SEL ACCT_IDNN_HK, MSTR_SRCE_SYST_C                                                           FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_FNCL_GL_MSUR_MNLY FACT                                                           WHERE MNTH_END_D < '2018-04-30'                                                             GROUP BY 1,2                                                                                                                       UNION ALL                                                                                                                       SEL ACCT_IDNN_HK, MSTR_SRCE_SYST_C                                                           FROM B_D17_V_SHR_001_STD_0.H_ACCT HA                                                           WHERE EFFT_D > '2018-03-31'                                                           GROUP BY 1,2													)BASE													GROUP BY 1                                           														)B									ON A.ACCT_IDNN_HK=B.ACCT_IDNN_HK															)	  SAPON HA.ACCT_IDNN_HK=SAP.ACCT_IDNN_HKINNER JOIN  ( SEL                             HP.PATY_IDNN_HK,                                                                                                                                 HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK NOT IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D                UNION ALL                 SEL                             HP.PATY_IDNN_HK,                                                                                                                                 HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK  IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D  ) GMON  SAP.PATY_IDNN_HK=GM.PATY_IDNN_HK;","NULL","0","0","0","N ","NULL","NULL","2018-06-15 14:53:32","KOSTKAMA","2018-06-15 15:15:33","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_CRIS_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_CRIS_PDCT(        CRIS_PDCT_ID,        ACCT_QLFY_C,        SRCE_SYST_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CRIS_PDCT FOR ACCESSSELECT        CRIS_PDCT_ID,        ACCT_QLFY_C,        SRCE_SYST_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_CRIS_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:07","perumabh","2025-07-14 22:17:07","NULL","1","2025-07-14 22:17:07","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","GRD_GNRC_MAP_DERV_PATY_HOLD","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_HOLD ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      MAP_TYPE_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'MAPPING TYPE CODE' NOT NULL,      PATY_ACCT_REL_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Party Relationship Code',      PATY_ACCT_REL_X  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Party Relationship Code Description',      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31') PRIMARY INDEX ( PATY_ACCT_REL_C );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:46","perumabh","2025-07-14 22:04:46","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","TP_DEV_VIEW_MERGED_VERSION","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.TP_DEV_VIEW_MERGED_VERSION(   MNTH_END_D,        MSUR_ALL.ACCT_IDNN_HK,                         ACCT_IDNN_BK ,         GL_SRCE_IDNN_BK,        GL_BUSN_UNIT_IDNN_BK,                GL_ACCT_IDNN_BK,                GL_DEPT_IDNN_BK,            GL_PDCT_IDNN_BK,                         GL_AFLT_IDNN_BK,        GRD_PDCT_LEAF_NODE_C,        FNCL_MSUR_C,        CNCY_IDNN_BK,                         USGE_CNCY_CATG_IDNN_BK,                     MSTR_SRCE_SYST_C,                       MSUR_A,        ROW_SECU_ACCS_C,         EFFT_D,                               EXPY_D,                               CTL_ID,                               RECORD_DELETED_FLAG,                  PROCESS_NAME,                         PROCESS_ID,                           UPDATE_PROCESS_NAME,                  UPDATE_PROCESS_ID,                    EFFT_TS,                              EXPY_TS,                              RECD_ISRT_DTTM              ) ASLOCKING ROW FOR ACCESSSELECT        MNTH_END_D,        MSUR_ALL.ACCT_IDNN_HK,                         ACCT_IDNN_BK ,         GL_SRCE_IDNN_BK,        COALESCE(MSUR_ALL.GL_BUSN_UNIT_IDNN_BK      , 'UNKNOWN')        AS GL_BUSN_UNIT_IDNN_BK,                COALESCE(MSUR_ALL.GL_ACCT_IDNN_BK               , 'UNKNOWN')                AS GL_ACCT_IDNN_BK,                COALESCE(MSUR_ALL.GL_DEPT_IDNN_BK               , 'UNKNOWN')            AS GL_DEPT_IDNN_BK,            COALESCE(MSUR_ALL.GL_PDCT_IDNN_BK               , 'UNKNOWN')            AS GL_PDCT_IDNN_BK,                         COALESCE(MSUR_ALL.GL_AFLT_IDNN_BK               , 'UNKNOWN')            AS GL_AFLT_IDNN_BK,        COALESCE( ACCT_PDCT.GRD_PDCT_IDNN_BK        , 'UNKNOWN')                AS GRD_PDCT_LEAF_NODE_C,        MSUR_CODE_IDNN_BK                                                                                   AS FNCL_MSUR_C,        COF_WOF_GRUP_CNCY_IDNN_BK                                                                   AS CNCY_IDNN_BK,                         'GRUP'                                                                                                                  AS USGE_CNCY_CATG_IDNN_BK,                     CAST(MSUR_ALL.MSTR_SRCE_SYST_C AS VARCHAR(10))                      AS MSTR_SRCE_SYST_C,                       SUM(MSUR_ALL.MSUR_A)                                                                                AS MSUR_A,        0                                                                                                                           AS ROW_SECU_ACCS_C,         EFFT_D                                                                                                              AS EFFT_D,                               '9999-12-31'                                                                                                        AS EXPY_D,                               -1                                                                                                                      AS CTL_ID,                               0                                                                                                                           AS RECORD_DELETED_FLAG,                  'MANUAL'                                                                                                            AS PROCESS_NAME,                         -1                                                                                                                      AS PROCESS_ID,                           NULL                                                                                                                    AS UPDATE_PROCESS_NAME,                  NULL                                                                                                                    AS UPDATE_PROCESS_ID,                    CURRENT_TIMESTAMP                                                                                   AS EFFT_TS,                              TIMESTAMP'9999-12-31 23:59:59'                                                                      AS EXPY_TS,                              CURRENT_TIMESTAMP                                                                                   AS RECD_ISRT_DTTM  FROM (       /*To Fetch GTR-COF/WOF data*/ SELECT                       CASE            WHEN CWTM.PDCT_SRCE_SYST_C='SAP'  AND SAA.ROLE_CODE = 'MC01'   AND CWTM.GL_BUSN_UNIT_IDNN_BK='CB001' THEN COALESCE(LAIL.ACCT_IDNN_HK, HACT.ACCT_IDNN_HK)            WHEN  CWTM.PDCT_SRCE_SYST_C ='CBS'  AND CBSREL.OBJC_ACCT_I IS NOT NULL THEN CBSREL.ACCT_IDNN_HK            WHEN  CWTM.PDCT_SRCE_SYST_C ='FAC' THEN COALESCE(MTXACCT.ACCT_I,FACACCT.ACCT_I,HACT.ACCT_IDNN_BK)            --WHEN CWTM.PDCT_SRCE_SYST_C = 'LMS' THEN  HACT.ACCT_IDNN_HK    -- Not really needed as captured in ELSE part of Case statement --           WHEN CWTM.PDCT_SRCE_SYST_C = 'MID'    THEN HACT.ACCT_IDNN_HK  -- Not really needed as captured in ELSE part of Case statement          ELSE HACT.ACCT_IDNN_HK       END  AS ACCT_IDNN_HK                    ,  CASE                       WHEN  CWTM.PDCT_SRCE_SYST_C=        'SAP' AND SAA.ROLE_CODE = 'MC01'  AND CWTM.GL_BUSN_UNIT_IDNN_BK='CB001' THEN COALESCE(LAIL.ACCT_I, HACT.ACCT_IDNN_BK)            WHEN CWTM.PDCT_SRCE_SYST_C ='CBS'   AND CBSREL.OBJC_ACCT_I IS NOT NULL THEN CBSREL.ACCT_IDNN_BK            WHEN CWTM.PDCT_SRCE_SYST_C ='CBS'   AND CBSREL.OBJC_ACCT_I IS  NULL THEN HACT.ACCT_IDNN_BK               WHEN  CWTM.PDCT_SRCE_SYST_C =      'FAC' THEN COALESCE(MTXACCT.ACCT_I,FACACCT.ACCT_I,HACT.ACCT_IDNN_BK)                 WHEN CWTM.PDCT_SRCE_SYST_C =   'LMS' THEN   LAIMA.ACCT_I    --- should probably use HACT.ACCT_IDNN_BK in final and therefore this line can be removed?               ELSE HACT.ACCT_IDNN_BK          END  AS ACCT_IDNN_BK                                     ,MSUR_CODE_IDNN_BK                    ,SNAP_D                                                                                                                                                                                     AS MNTH_END_D          ,PDCT_SRCE_SYST_C        ,GL_DEPT_IDNN_BK                      ,GL_PDCT_IDNN_BK                      ,GL_BUSN_UNIT_IDNN_BK                 ,GL_ACCT_IDNN_BK                      ,GL_AFLT_IDNN_BK                      ,GL_SRCE_IDNN_BK                      ,SUM(COF_WOF_GRUP_CNCY_A           )                                                                                                                                AS MSUR_A        ,COF_WOF_GRUP_CNCY_IDNN_BK            ,CWTM.MSTR_SRCE_SYST_C                    , MNTH_END_D                                                                                                                                                                             AS EFFT_D       ,CWTM.ACCT_IDNN_HK                                                                                                                                                           AS BASE_ACCT_IDNN_HK   FROM    (SELECT        ACCT_IDNN_HK                         ,MSUR_CODE_IDNN_BK                    ,DATE '2017-11-30' AS SNAP_D            ,PDCT_SRCE_SYST_C                          ,GL_DEPT_IDNN_BK                      ,GL_PDCT_IDNN_BK                      ,GL_BUSN_UNIT_IDNN_BK                 ,GL_ACCT_IDNN_BK                      ,GL_AFLT_IDNN_BK                      ,GL_SRCE_IDNN_BK                      ,SUM(CWTM.COF_WOF_GRUP_CNCY_A)   AS COF_WOF_GRUP_CNCY_A                  ,COF_WOF_GRUP_CNCY_IDNN_BK            ,MSTR_SRCE_SYST_C                     ,DATE '2017-12-04' EFFT_D                                                                                                    FROM B_D17_V_BUS_001_STD_0.S_ACCT_COF_WOF     CWTMWHERE BUSN_EFFT_D BETWEEN '2017-11-01' AND '2017-11-30'AND CWTM.MSTR_SRCE_SYST_C = 'GTR'--AND cwtm.efft_d <=  DATE '2017-12-04'AND PDCT_SRCE_SYST_CIN('AFS'      ,'BCB'      ,'BCC'      ,'BOS'     ,'BQM'      ,'CBS'      ,'CCS'      ,'DMM'      ,'FAC'      ,'GTR'      ,'HLS'      ,'MLS'      ,'MRX'      ,'SAP'      ,'SAV'      ,'TAH'      ,'TRM'      ,'WSS'       )GROUP BY 1,2,3,4,5,6,7,8,9,10,12,13,14)  CWTM       -- U_D_DSV_001_BPB_0.GR_S_ACCT_COF_WOF  CWTM INNER JOIN  B_d17_V_shr_001_STD_0.H_ACCT HACT    ON                  CWTM.ACCT_IDNN_HK = HACT.ACCT_IDNN_HK    AND             CWTM.COF_WOF_GRUP_CNCY_IDNN_BK = 'AUD' /* SAP roll up to Master Contract  - START */LEFT JOIN B_D17_V_RAW_001_STD_0.S_ACCT_ACCT SAA            ON CWTM.ACCT_IDNN_HK = SAA.REL_ACCT_IDNN_HK            AND CWTM.SNAP_D BETWEEN SAA.BUSN_STRT_D AND SAA.BUSN_END_D              AND SAA.ACCT_IDNN_HK             NOT IN (                                  SELECT LAP.ACCT_IDNN_HK                                   FROM B_d17_V_BUS_001_STD_0.H_GRD_PDCT HP                                     INNER JOIN PVTECH.GRD_GNRC_MAP_CURR GNRC                                      ON HP.GRD_PDCT_IDNN_BK =  GNRC.SRCE_CHAR_1_C                                      AND GNRC.MAP_TYPE_C = 'SAP_MCC_MC_EXCL_INCL'                                      AND GNRC.TARG_CHAR_C = 'PDCT'                                     INNER JOIN B_d17_V_bus_001_STD_0.L_ACCT_PDCT LAP                                       ON HP.GRD_PDCT_IDNN_HK = LAP.GRD_PDCT_IDNN_HK                                    AND LAP.RECORD_DELETED_FLAG = 0                                    AND LAP.EXPY_D = DATE '9999-12-31'                                    AND HP.RECORD_DELETED_FLAG = 0                                    AND HP.EXPY_D = DATE '9999-12-31'                                   INNER JOIN  B_d17_V_bus_001_STD_0.S_ACCT_PDCT SAG                                       ON LAP.ACCT_PDCT_IDNN_HK = SAG.ACCT_PDCT_IDNN_HK                                    AND SAG.RECORD_DELETED_FLAG = 0                                    AND SAG.EXPY_D = DATE '9999-12-31'                                    AND LAP.RECORD_DELETED_FLAG = 0                                    AND LAP.EXPY_D = DATE '9999-12-31'                                    AND CWTM.SNAP_D BETWEEN SAG.BUSN_STRT_D AND SAG.BUSN_END_D              )            AND SAA.ROLE_CODE = 'MC01'              AND SAA.ACCT_HIER_NODE_M = 'ULTIMATE PARENT'            AND SAA.MSTR_SRCE_SYST_C = 'SAP'            AND SAA.EXPY_D = DATE '9999-12-31'              AND SAA.RECORD_DELETED_FLAG = 0             LEFT OUTER JOIN     B_D17_V_SHR_001_STD_0.L_ACCT_IM_ACCT LAIL ON  COALESCE(SAA.ACCT_IDNN_HK, CWTM.ACCT_IDNN_HK) = LAIL.ACCT_IDNN_HK            AND LAIL.MSTR_SRCE_SYST_C = 'SAP'            AND LAIL.EXPY_D = DATE '9999-12-31'             /* SAP roll up to Master Contract  - END */  /* LMS Mapping  - START */LEFT OUTER JOIN  B_D17_V_SHR_001_STD_0.L_ACCT_IM_ACCT LAIMA  ON  CWTM.ACCT_IDNN_HK = LAIMA.ACCT_IDNN_HK/* LMS Mapping  - END */  /* CBS Deal to CBS Facility Mapping  - START */LEFT OUTER JOIN( SELECT AL.SUBJ_ACCT_I, AL.OBJC_ACCT_I , HA.ACCT_IDNN_HK , HA.ACCT_IDNN_BK    FROM B_D17_V_COX_001_STD_0.ACCT_REL  AL    JOIN B_D17_V_COX_001_STD_0.ACCT_BASE AB    ON   AL.OBJC_ACCT_I = AB.ACCT_I    AND AB.SRCE_SYST_C = 'CBS'    AND AB.ACCT_CLAS_TYPE_C = 'ACCT'         JOIN B_D17_V_SHR_001_STD_0.h_acct HA    ON AB.SRCE_SYST_ACCT_N = HA.SRCE_ACCT_N    AND ha.acct_qlfy_c = 'cl'           WHERE AL.SRCE_SYST_C='CBS'     AND AL.REL_C= 'CHIL'     AND AL.REL_EXPY_D = '9999-12-31'     GROUP BY 1,2,3,4 )  CBSREL  ON  LAIMA.ACCT_I = CBSREL.SUBJ_ACCT_I/* CBS Deal to CBS Facility Mapping - END */   /* FACIT_LOAN_ID to MATRIX_ACCT/Facility mapping  - START */ LEFT OUTER JOIN B_D17_V_COX_001_STD_0.FAC_LOAN_PERD_WORK FLPW     ON OREPLACE(HACT.ACCT_IDNN_BK,'FAC~FL~','') = CAST(FLPW.LOAN_I AS VARCHAR(50))    AND CWTM.SNAP_D BETWEEN FLPW.STRT_D AND FLPW.END_D -1 LEFT OUTER JOIN(        SELECT ACCT_I,SRCE_SYST_ACCT_N        FROM B_D17_V_COX_001_STD_0.ACCT_BASE        WHERE SRCE_SYST_C = 'MTX')  MTXACCTON CAST(FLPW.MATR_TKET_N AS VARCHAR(255)) = MTXACCT.SRCE_SYST_ACCT_N  LEFT OUTER JOIN B_D17_V_COX_001_STD_0.FAC_LOAN_DETL FLD    ON OREPLACE(HACT.ACCT_IDNN_BK,'FAC~FL~','') = CAST(FLD.LOAN_I AS VARCHAR(50))    AND CWTM.SNAP_D BETWEEN FLD.EFFT_D AND FLD.EXPY_D LEFT OUTER JOIN(        SELECT ACCT_I,SRCE_SYST_ACCT_N        FROM B_D17_V_COX_001_STD_0.ACCT_BASE        WHERE SRCE_SYST_C = 'FAC')  FACACCTON CAST(FLD.FCLY_I AS VARCHAR(255)) = FACACCT.SRCE_SYST_ACCT_N  ","NULL","0","0","0","N ","NULL","NULL","2018-04-09 17:27:24","kumarm9","2018-04-09 17:27:24","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","GRD_GNRC_MAP_DERV_PATY_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.GRD_GNRC_MAP_DERV_PATY_RELAS LOCK TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_RELFOR ACCESS SELECT * FROM K_PDDSTG.GRD_GNRC_MAP_DERV_PATY_REL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:00","perumabh","2025-07-14 22:06:00","NULL","1","2025-07-14 22:06:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_FEAT AS GDW2_RESTORE.TMP_APPT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:46","singhp80","2025-07-12 07:56:46","NULL","3","2025-07-12 06:02:17","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","WRK_APPT_COM_CCL_CHL_APP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_COM_CCL_CHL_APP AS GDW2_RESTORE.WRK_APPT_COM_CCL_CHL_APP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:40","singhp80","2025-07-12 07:56:40","NULL","3","2025-07-12 06:02:13","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kuoje","RAW_PROD_FEAT_HLS_R02","1","V ","F ","NN  ","kuoje","/**--tc_nam: BDV_HLS_ACCT_ATTR-VER_3.sql^02.DDL.00.1**/       REPLACE VIEW kuoje.RAW_PROD_FEAT_HLS_R02 AS  SELECT  INTEREST_GROUP, INTEREST_CATEGORY, ACCT_IDNN_HK, GROUP_ID, LOAN_TYPE_1, LENDING_TYPE, HLS_PG_M, HLS_LOAN_TYPE_M, SECURED_IND, IO_PERIOD, HLS_SCRD_M, HLS_RPAY_TYPE_M, HLS_LEGC_STAF_LOAN_F, HLS_LOW_DOCU_INDA_C, HLS_LOW_DOCU_INDA_M, SECU_F, SECU_TYPE_C FROM   ( 		SELECT  		INFE.INTEREST_GROUP 		,INFE.INTEREST_CATEGORY 		,FEAT.ACCT_IDNN_HK 		,GRCG.GROUP_ID 		,GRCG.LOAN_TYPE_1 		,FEAT.LENDING_TYPE         	           		 ,COALESCE(	MAP_CONF_HLS_PG_M.OPUT_COLM_1,'UNKNOWN') AS HLS_PG_M 	                    ,COALESCE(MAP_CONF_LOAN_TYPE.OPUT_COLM_1,'UNKNOWN')	AS HLS_LOAN_TYPE_M 	           		,GRCG.SECURED_IND		 		,INFE.IO_PERIOD 		         ,COALESCE(MOD_CONF_SCRD.OPUT_COLM_1,'UNKNOWN')	AS HLS_SCRD_M 	    ,COALESCE(MOD_CONF_RPAY_TYPE.OPUT_COLM_1,'UNKNOWN')AS	HLS_RPAY_TYPE_M 	     	    ,COALESCE(MAP_CONF_HLS_PG_M.OPUT_COLM_2, 'N') AS HLS_LEGC_STAF_LOAN_F  	     	    ,CAST(CAST(FEAT.LOW_DOC_LOAN_IND AS INTEGER) AS VARCHAR(10))  AS HLS_LOW_DOCU_INDA_C        ,COALESCE(MAP_CONF_LOW_DOCU_INDA.OPUT_COLM_1,'UNKNOWN') AS HLS_LOW_DOCU_INDA_M 	   ,MAP_SECU_F.OPUT_COLM_1 AS SECU_F 	   ,COALESCE(MAP_SECU_TYPE_C.OPUT_COLM_1, 'UNKN') AS SECU_TYPE_C		         FROM a_T01_v_shr_001_std_0.H_ACCT HUB                        INNER JOIN a_T01_v_raw_001_std_0.S_HLS_ACCT_FEAT FEAT         ON HUB.ACCT_IDNN_HK = FEAT.ACCT_IDNN_HK         AND '2015-06-01' BETWEEN FEAT.EFFT_D AND FEAT.EXPY_D 		AND FEAT.RECORD_DELETED_FLAG=0 		 	    LEFT OUTER JOIN a_T01_v_raw_001_std_0.S_HLS_BALN_LIMT_XPOS XPOS 	    ON XPOS.ACCT_IDNN_HK = FEAT.ACCT_IDNN_HK 		AND '2015-06-01' BETWEEN XPOS.EFFT_D AND XPOS.EXPY_D 	    AND XPOS.RECORD_DELETED_FLAG=0 		 		LEFT OUTER JOIN  a_T01_v_raw_001_std_0.S_HLS_INT_FEE_COMM INFE 		ON FEAT.ACCT_IDNN_HK = INFE.ACCT_IDNN_HK 		AND '2015-06-01' BETWEEN INFE.EFFT_D AND INFE.EXPY_D 	    AND INFE.RECORD_DELETED_FLAG=0 		 		LEFT OUTER JOIN a_T01_v_raw_001_std_0.R_HLS_INT_GRUP_CATG GRCG 		ON  FEAT.LENDING_TYPE = GRCG.LENDING_TYPE 		AND INFE.INTEREST_GROUP = GRCG.INTEREST_GROUP 		AND INFE.INTEREST_CATEGORY = GRCG.INTEREST_CATEGORY 		AND '2015-06-01' BETWEEN GRCG.EFFT_D AND GRCG.EXPY_D 	    AND GRCG.RECORD_DELETED_FLAG=0 	             LEFT OUTER JOIN  		(   SELECT INPT_COLM_1 				,INPT_COLM_2 				,CAST(INPT_COLM_3 AS DECIMAL(15,2)) AS INPT_COLM_3 				,OPUT_COLM_1 				,OPUT_COLM_2 			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_PG_M' 			AND EXPY_D = DATE'9999-12-31'  			GROUP BY 1,2,3,4,5 		) MAP_CONF_HLS_PG_M	 		ON 	COALESCE(FEAT.LENDING_TYPE,'')=MAP_CONF_HLS_PG_M.INPT_COLM_1		 		AND (  CAST(CAST(GRCG.GROUP_ID AS INTEGER) AS VARCHAR(10))=MAP_CONF_HLS_PG_M.INPT_COLM_2 			           OR MAP_CONF_HLS_PG_M.INPT_COLM_2 ='*' 	)                                  LEFT OUTER JOIN  		(   SELECT INPT_COLM_1,INPT_COLM_2,OPUT_COLM_1  			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_LOAN_TYPE_M' 			AND EXPY_D = DATE'9999-12-31'  			GROUP BY 1,2,3 		) MAP_CONF_LOAN_TYPE	 		        ON  HLS_PG_M=MAP_CONF_LOAN_TYPE.INPT_COLM_1     		AND  (COALESCE(GRCG.LOAN_TYPE_1,'')=COALESCE(MAP_CONF_LOAN_TYPE.INPT_COLM_2,'')     			OR  			MAP_CONF_LOAN_TYPE.INPT_COLM_2='*'  		 ) 	                   LEFT OUTER JOIN  		( 	SELECT INPT_COLM_1,OPUT_COLM_1  			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_SCRD_M' 			AND EXPY_D = DATE'9999-12-31'  			GROUP BY 1,2 		) MOD_CONF_SCRD         ON GRCG.SECURED_IND = MOD_CONF_SCRD.INPT_COLM_1		                           LEFT JOIN  		(   SELECT INPT_COLM_1 				 				,CAST(INPT_COLM_2 AS DECIMAL(1,0)) INPT_COLM_2 				,OPUT_COLM_1 			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP 			WHERE MAP_TYPE_M = 'HLS_RPAY_TYPE_M' 			AND EXPY_D = DATE'9999-12-31'  			GROUP BY 1,2,3 		) MOD_CONF_RPAY_TYPE 		ON     (CASE WHEN INFE.IO_PERIOD >  MOD_CONF_RPAY_TYPE.INPT_COLM_2 THEN '*'  		           ELSE CAST(CAST(INFE.IO_PERIOD AS INTEGER) AS VARCHAR(10)) END) = MOD_CONF_RPAY_TYPE.INPT_COLM_1		 				    		LEFT JOIN  		(   SELECT CAST(INPT_COLM_1 AS DECIMAL(1,0)) AS INPT_COLM_1 ,OPUT_COLM_1  			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_LOW_DOCU_INDA_M' 			AND EXPY_D = DATE'9999-12-31'  			GROUP BY 1,2 		) MAP_CONF_LOW_DOCU_INDA	         ON 	 FEAT.LOW_DOC_LOAN_IND =MAP_CONF_LOW_DOCU_INDA.INPT_COLM_1           		LEFT JOIN  		(   SELECT INPT_COLM_1  ,OPUT_COLM_1  			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_SECU_F' 			AND EXPY_D = DATE'9999-12-31'     		) MAP_SECU_F         ON 	 FEAT.SECURITISE_IND =MAP_SECU_F.INPT_COLM_1   		LEFT JOIN  		(   SELECT INPT_COLM_1  ,OPUT_COLM_1  			FROM a_T01_v_ref_001_std_0.R_CFIG_MAP   			WHERE MAP_TYPE_M = 'HLS_SECU_TYPE_C' 			AND EXPY_D = DATE'9999-12-31'     		) MAP_SECU_TYPE_C         ON 	 FEAT.POOL_ID =MAP_SECU_TYPE_C.INPT_COLM_1    WHERE HUB.MSTR_SRCE_SYST_C='HLS' 		   )SRC;","NULL","0","0","0","N ","NULL","NULL","2015-06-29 14:03:39","kuoje","2015-07-16 14:26:58","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PUTIL","PROS_EROR_LOG","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PUTIL.PROS_EROR_LOG ,FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT,     DEFAULT MERGEBLOCKRATIO,     MAP = TD_MAP1     (      SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC,      SRCE_FILE_M VARCHAR(80) CHARACTER SET LATIN NOT CASESPECIFIC,      CALG_PROS_DB_M VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,      CALG_PROS_M VARCHAR(50) CHARACTER SET LATIN NOT CASESPECIFIC,      EROR_TIME_S TIMESTAMP(6) FORMAT 'yyyy-mm-ddbhh:mi:ss.s(6)',      SQL_STAT_C DECIMAL(6,0) COMPRESS 0. ,      SQL_CODE_C DECIMAL(6,0) COMPRESS 0. ,      ACTV_CNT_Q DECIMAL(6,0) COMPRESS 0. ,      ABRT_PROS_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC,      EROR_MSGE_X VARCHAR(200) CHARACTER SET LATIN NOT CASESPECIFIC)PRIMARY INDEX ( EROR_TIME_S );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:50:50","perumabh","2025-07-14 22:50:50","NULL","18","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_DEPT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_DEPT(        APPT_I,        DEPT_ROLE_C,        EFFT_D,        DEPT_I,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        BRCH_N,        SRCE_SYST_C,        CHNG_REAS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_DEPT FOR ACCESSSELECT        APPT_I,        DEPT_ROLE_C,        EFFT_D,        DEPT_I,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        BRCH_N,        SRCE_SYST_C,        CHNG_REAS_C  FROM        K_STAR_CAD_PROD_DATA.APPT_DEPT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:41:51","perumabh","2025-07-14 22:41:51","NULL","1","2025-07-14 22:41:51","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_FEAT_OVRD_REAS_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_FEAT_OVRD_REAS_HLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:36","perumabh","2025-07-14 22:16:36","NULL","1","2025-07-14 22:16:36","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","MSTR_CNCT_MSTR_DATA_GENL","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.MSTR_CNCT_MSTR_DATA_GENL AS GDW2_RESTORE.MSTR_CNCT_MSTR_DATA_GENL WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:39","PUDBAI016","2025-08-21 21:47:39","NULL","1","2025-08-22 11:37:48","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_PRTF_PATY_STAG","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.DERV_PRTF_PATY_STAG ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier',      PRTF_CODE_X VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Derived Portfolio Code')PRIMARY INDEX ( PATY_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:26","perumabh","2025-07-14 22:04:26","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_ORIG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_ORIGAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ORIGFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ORIG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:53","perumabh","2025-07-14 22:17:53","NULL","1","2025-07-14 22:17:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_CMPE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_CMPEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CMPEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CMPE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:07","perumabh","2025-07-14 22:18:07","NULL","1","2025-07-14 22:18:07","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_QSTN_RESP_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_RESP_HL AS GDW2_RESTORE.MAP_CSE_APPT_QSTN_RESP_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:52","singhp80","2025-07-12 07:56:52","NULL","29","2025-08-13 16:04:37","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_FNDD_INSS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_FNDD_INSS AS GDW2_RESTORE.TMP_APPT_PDCT_FNDD_INSS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:03","singhp80","2025-07-12 07:57:03","NULL","3","2025-07-12 06:02:26","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_TRNF_DETL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_TRNF_DETLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_TRNF_DETLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.APPT_TRNF_DETL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:56","perumabh","2025-07-14 22:20:56","NULL","1","2025-07-14 22:20:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_ACCT_BALN_GL_MNLY1","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.FACT_ACCT_BALN_GL_MNLY1--this base view will give BALANCE and AVERAGE BALANCE details for a given Period / Date range--please pass SNAP_D as a range [Example - SNAP_D BETWEEN '2016-04-01' AND '2016-04-30' ] --& MSTR_SRCE_SYST_C(Source system) value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but --this view used new new code block structure.(  	PERD_D	,SNAP_D	,MSUR_CODE_IDNN_BK	,ACCT_IDNN_BK	,GL_BUSN_UNIT_IDNN_BK	,GL_ACCT_IDNN_BK	,GL_DEPT_IDNN_BK	,GL_PDCT_IDNN_BK	,GL_AFLT_IDNN_BK	,GL_PRJC_IDNN_BK	,GL_CNCY_IDNN_BK	,GL_OPER_UNIT_IDNN_BK	,GL_SRCE_IDNN_BK	,USGE_CNCY_CATG_IDNN_BK	,GRD_PDCT_IDNN_BK	,MSTR_SRCE_SYST_C	,MSUR_A	,MSUR_AVG_A )AS LOCKING ROW FOR ACCESSSELECT 	DD1.CALR_MNTH_END_D AS PERD_D	,FBABG.SNAP_D		,FBABG.MSUR_CODE_IDNN_BK	,HA.ACCT_IDNN_BK	,FBABG.GL_BUSN_UNIT_IDNN_BK	,FBABG.GL_ACCT_IDNN_BK	,FBABG.GL_DEPT_IDNN_BK	,FBABG.GL_PDCT_IDNN_BK	,FBABG.GL_AFLT_IDNN_BK	,FBABG.GL_PRJC_IDNN_BK	,FBABG.GL_CNCY_IDNN_BK	,FBABG.GL_OPER_UNIT_IDNN_BK	,FBABG.GL_SRCE_IDNN_BK	,FBABG.USGE_CNCY_CATG_IDNN_BK	,GP.GRD_PDCT_IDNN_BK	,FBABG.MSTR_SRCE_SYST_C	,CASE WHEN FBABG.SNAP_D = DD1.CALR_MNTH_END_D		 THEN FBABG.MSUR_A		 ELSE 0	 END AS MSUR_A	,SUM(FBABG.MSUR_A) OVER ( PARTITION BY  DD1.CALR_MNTH_END_D, FBABG.MSUR_CODE_IDNN_BK,HA.ACCT_IDNN_BK,FBABG.GL_BUSN_UNIT_IDNN_BK							,FBABG.GL_ACCT_IDNN_BK,FBABG.GL_DEPT_IDNN_BK,FBABG.GL_PDCT_IDNN_BK,FBABG.GL_AFLT_IDNN_BK,FBABG.GL_PRJC_IDNN_BK							,FBABG.GL_CNCY_IDNN_BK,FBABG.GL_OPER_UNIT_IDNN_BK,FBABG.GL_SRCE_IDNN_BK,FBABG.USGE_CNCY_CATG_IDNN_BK							,GP.GRD_PDCT_IDNN_BK,FBABG.MSTR_SRCE_SYST_C) 	 / DD1.NUM_DAYS AS MSUR_AVG_A 	FROM KOSTKAMA.FACT_BASE_ACCT_BALN_GL1 FBABG		INNER JOIN B_D16_V_BUS_001_STD_0.L_ACCT_PDCT  LAP                	ON LAP.ACCT_IDNN_HK 			= FBABG.ACCT_IDNN_HK	AND LAP.RECORD_DELETED_FLAG 	= 0	AND LAP.MSTR_SRCE_SYST_C 		= SUBSTR (FBABG.MSTR_SRCE_SYST_C, CHARACTER(TRIM(FBABG.MSTR_SRCE_SYST_C))-2,3)		INNER JOIN B_D16_V_BUS_001_STD_0.S_ACCT_PDCT SAP                	ON SAP.ACCT_IDNN_HK 			= FBABG.ACCT_IDNN_HK	AND SAP.RECORD_DELETED_FLAG 	= 0	AND SAP.MSTR_SRCE_SYST_C 		= SUBSTR (FBABG.MSTR_SRCE_SYST_C, CHARACTER(TRIM(FBABG.MSTR_SRCE_SYST_C))-2,3)	AND FBABG.SNAP_D 				BETWEEN SAP.BUSN_STRT_D AND SAP.BUSN_END_D	AND SAP.EXPY_D = '9999-12-31'		INNER JOIN B_D16_V_SHR_001_STD_0.H_ACCT HA		ON HA.ACCT_IDNN_HK 				= FBABG.ACCT_IDNN_HK	AND HA.RECORD_DELETED_FLAG = 0	INNER JOIN B_D16_V_BUS_001_STD_0.H_GRD_PDCT GP	ON GP.GRD_PDCT_IDNN_HK = LAP.GRD_PDCT_IDNN_HK	AND GP.RECORD_DELETED_FLAG = 0	INNER JOIN 	( SELECT CALR_MNTH_STRT_D, CALR_MNTH_END_D, COUNT (1) AS NUM_DAYS FROM B_D16_V_BAL_001_STD_0.DIMN_DATE 		WHERE RECORD_DELETED_FLAG = 0  GROUP BY 1,2 ) DD1 	ON FBABG.SNAP_D 				BETWEEN DD1.CALR_MNTH_STRT_D AND DD1.CALR_MNTH_END_D WHERE MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A' AND FBABG.GL_CNCY_IDNN_BK = 'AUD'									 QUALIFY  ROW_NUMBER( )  OVER ( PARTITION BY  DD1.CALR_MNTH_END_D, FBABG.MSUR_CODE_IDNN_BK, HA.ACCT_IDNN_BK,FBABG.GL_BUSN_UNIT_IDNN_BK								,FBABG.GL_ACCT_IDNN_BK,FBABG.GL_DEPT_IDNN_BK,FBABG.GL_PDCT_IDNN_BK,FBABG.GL_AFLT_IDNN_BK								,FBABG.GL_PRJC_IDNN_BK,FBABG.GL_CNCY_IDNN_BK,FBABG.GL_OPER_UNIT_IDNN_BK,FBABG.GL_SRCE_IDNN_BK								,FBABG.USGE_CNCY_CATG_IDNN_BK,GP.GRD_PDCT_IDNN_BK,FBABG.MSTR_SRCE_SYST_C ORDER BY FBABG.SNAP_D DESC )  = 1 ;","NULL","0","0","0","N ","NULL","NULL","2016-06-09 14:12:02","KOSTKAMA","2016-06-10 11:02:24","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","TX_309_2_AFS_ACCT_TRANS_BALN","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_309_2_AFS_ACCT_TRANS_BALN---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- TCF Input view to load  the Alfa Account level Weekly  Runoff/Lending Measures into FACT_ACCT_FNCL_MSUR_WKLY--Measures Loaded- BALN_ADJ_A,NEW_LEND_A,RNOF_A,RUN_OFF_AGRM_TERM_A,RUN_OFF_IMPD_A,RUN_OFF_RPAY_A-- Created by S&RE M&D Team-- S&RE Measurements and Reporting--Version 1.0 C3073625 -Mahesh Kumar Initial version--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(WEEK_END_D      ,GL_BUSN_UNIT_I_	,GL_ACCT_I_				,GL_PDCT_I_				,GL_DEPT_I_				,GL_AFLT_BUSN_UNIT_I_,ACCT_IDNN_HK    ,ACCT_IDNN_BK    ,GL_PDCT_IDNN_BK               ,GRD_PDCT_LEAF_NODE_C          ,POST_ALOC_GL_DEPT_IDNN_BK     ,CNCY_IDNN_BK    ,USGE_CNCY_CATG_IDNN_BK        ,FNCL_MSUR_C     ,MSUR_A          ,ROW_SECU_ACCS_C               ,MSTR_SRCE_SYST_C              ,GL_SRCE_IDNN_BK            )ASLOCKING ROW FOR ACCESSSELECT	 (SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE STREAM_KEY=1394) AS WEEK_END_D				 ,GL_BUSN_UNIT_I_					,GL_ACCT_I_								,GL_PDCT_I_								,GL_DEPT_I_							,GL_AFLT_BUSN_UNIT_I_ ,HA.ACCT_IDNN_HK ,HA.ACCT_IDNN_BK ,GL_PDCT_I AS GL_PDCT_IDNN_BK ,'UNKNOWN' AS GRD_PDCT_LEAF_NODE_C ,POST_ALOC_GL_DEPT_IDNN_BK ,'AUD' AS CNCY_IDNN_BK ,'GRUP' AS USAGE_CNCY_CATG_IDNN_BK-- Derive the measure code based on GL codes and transaction codes.  ,CASE   			WHEN TRAN_RULE1 = 'NEW_LEND_A' AND MSUR_A > 0 			        THEN TRAN_RULE1			WHEN TRAN_RULE2 = 'RUN_OFF_AGRM_TERM_A' AND MSUR_A <  0  			        THEN TRAN_RULE2					   			WHEN GL_RULE1 = 'NEW_LEND_A' AND msur_a > 0			        THEN GL_RULE1		  			WHEN GL_RULE2 = 'BALN_ADJ_A' AND msur_a < 0 			        THEN GL_RULE2		  			WHEN TRAN_RULE1 = 'RUN_OFF_IMPD_A'			        THEN TRAN_RULE1 		 			WHEN GL_RULE1 = 'RNOF_A'   AND TRAN_RULE1 IS NULL 			        THEN GL_RULE1		  		    ELSE 		            TRAN_RULE2		 	END AS FNCL_MSUR_C				  ,SUM(MSUR_A) AS MSUR_A ,0 AS ROW_SECU_ACCS_C ,'AFS' AS MSTR_SRCE_SYST_C ,NULL AS GL_SRCE_IDNN_BK	 	FROM-- preliminary groupings(SELECT    EGLA.GL_BUSN_UNIT_I AS GL_BUSN_UNIT_I_				 ,EGLA.GL_ACCT_I 				AS GL_ACCT_I_					  	 ,EGLA.GL_PDCT_I 			AS GL_PDCT_I_					  	 ,EGLA.GL_DEPT_I 			AS GL_DEPT_I_					  	 ,EGLA.GL_AFLT_BUSN_UNIT_I AS GL_AFLT_BUSN_UNIT_I_     ,FNVE.ACCT_I	,EGLA.GL_BUSN_UNIT_I 	,CASE 	    WHEN TRIM(EGLA.GL_PDCT_I) = '' 	        THEN  'NOT APPLICABLE' 	    ELSE 	        EGLA.GL_PDCT_I 	  END AS GL_PDCT_I	,COALESCE (BGPA.POST_ALOC_GL_DEPT_IDNN_BK,  EGLA.GL_DEPT_I)  AS POST_ALOC_GL_DEPT_IDNN_BK 	,CASE 	    WHEN TRIM(EGLA.GL_AFLT_BUSN_UNIT_I) = '' 	        THEN  'NOT APPLICABLE' 	    ELSE EGLA.GL_AFLT_BUSN_UNIT_I 	 END 	AS GL_AFLT_BUSN_UNIT_I	,RCP_GL.OPUT_COLM_1 AS GL_RULE1	,RCP_GL.OPUT_COLM_2 AS GL_RULE2	,RCP_TRAN.OPUT_COLM_1 AS TRAN_RULE1	,RCP_TRAN.OPUT_COLM_2 AS TRAN_RULE2	,SUM(FNCL_NVAL_EVNT_A) AS MSUR_A   FROM B_D17_V_COX_001_STD_0. EVNT_GL_ASSC  EGLAINNER JOIN B_D17_V_COX_001_STD_0.FNCL_NVAL_EVNT  FNVE   ON EGLA.EVNT_I = FNVE.EVNT_I   INNER JOIN B_D17_V_REF_001_STD_0.R_CFIG_MAP RCP_GL -- All ALFA transactions happened through given GL AccountsON EGLA.GL_ACCT_I = RCP_GL.INPT_COLM_2AND EGLA.ORIG_SRCE_SYST_C = RCP_GL.MSTR_SRCE_SYST_CAND RCP_GL.INPT_COLM_1 = 'GL_ACCT'AND RCP_GL.MSTR_SRCE_SYST_C = 'AFS'AND RCP_GL.BUSN_UNIT_C ='BPB'AND RCP_GL.MAP_TYPE_M='WBM_MSUR_MAP'LEFT JOIN B_D17_V_REF_001_STD_0.R_CFIG_MAP RCP_TRAN -- Transaction codes to determine the type of balance ON FNVE.EVNT_ACTV_TYPE_C = RCP_TRAN.INPT_COLM_3AND FNVE.SRCE_SYST_C = RCP_TRAN.MSTR_SRCE_SYST_CAND RCP_TRAN.INPT_COLM_1 = 'TRAN_TYPE'AND RCP_TRAN.MSTR_SRCE_SYST_C = 'AFS'  AND RCP_TRAN.BUSN_UNIT_C ='BPB'AND RCP_TRAN.MAP_TYPE_M='WBM_MSUR_MAP'-- POST ALLOCATION JOINSLEFT JOIN B_D17_V_BAL_001_STD_0.BRDG_GL_POST_ALOC BGPAON   GL_BUSN_UNIT_I				 = BGPA.GL_BUSN_UNIT_IDNN_BKAND GL_ACCT_I					  	= BGPA.GL_ACCT_IDNN_BKAND GL_PDCT_I					  	= BGPA.GL_PDCT_IDNN_BKAND GL_DEPT_I					  	= BGPA.PRE_ALOC_GL_DEPT_IDNN_BKAND CASE WHEN GL_AFLT_BUSN_UNIT_I = '' THEN 'NOT APPLICABLE' ELSE GL_AFLT_BUSN_UNIT_I END = BGPA.GL_AFLT_IDNN_BK--AND coalesce(TRIM(GL_AFLT_BUSN_UNIT_I), 'NOT APPLICABLE')  = BGPA.GL_AFLT_IDNN_BKAND (SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE STREAM_KEY=1394) BETWEEN BGPA.BUSN_STRT_D AND BGPA.BUSN_END_DAND BGPA.EXPY_D = '9999-12-31'AND BGPA.RECORD_DELETED_FLAG = 0WHERE EGLA.SRCE_SYST_C = 'FDM'  AND EGLA.EFFT_D BETWEEN (SELECT BUSINESS_DATE-6 FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE STREAM_KEY=1394) AND  (SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE STREAM_KEY=1394)    GROUP BY 1,2,3,4,5,6,7,8,9    ,10,11,12,13,14HAVING SUM(FNCL_NVAL_EVNT_A) <> 0)STEP1INNER JOIN  B_D17_V_SHR_001_STD_0.L_ACCT_IM_ACCT  LAIMA  ON STEP1.ACCT_I = LAIMA.ACCT_I  INNER JOIN B_D17_V_SHR_001_STD_0.H_ACCT HAON LAIMA.ACCT_IDNN_HK = HA.ACCT_IDNN_HKGROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,    16,17,18;","NULL","0","0","0","N ","NULL","NULL","2018-01-25 13:37:28","KOSTKAMA","2018-01-25 16:06:02","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVCBODS","ODS_RULE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.ODS_RULE(	RULE_CODE,	RULE_STEP_SEQN,	PRTY,	VALD_FROM,	VALD_TO,	RULE_DESN,	RULE_STEP_DESN,	LKUP1_TEXT,	LKUP1_NUMB,	LKUP1_DATE,	LKUP1_ADD_ATTR,	LKUP2_TEXT,	LKUP2_NUMB,	LKUP2_DATE,	LKUP2_ADD_ATTR,	RULE_CMMT,	UPDT_DTTS,	CRAT_DTTS)	AS LOCKING TABLE K_PDCBODS.ODS_RULE FOR ACCESSSELECT	RULE_CODE,	RULE_STEP_SEQN,	PRTY,	VALD_FROM,	VALD_TO,	RULE_DESN,	RULE_STEP_DESN,	LKUP1_TEXT,	LKUP1_NUMB,	LKUP1_DATE,	LKUP1_ADD_ATTR,	LKUP2_TEXT,	LKUP2_NUMB,	LKUP2_DATE,	LKUP2_ADD_ATTR,	RULE_CMMT,	UPDT_DTTS,	CRAT_DTTS  FROM	K_PDCBODS.ODS_RULE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:10:25","perumabh","2025-07-14 22:10:25","NULL","2","2025-07-14 22:46:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kumarm9","MCR_FACT_ACCT_FNCL_MSUR_OPEN_BALANCE","1","M ","F ","NN  ","kumarm9","REPLACE MACRO KUMARM9.MCR_FACT_ACCT_FNCL_MSUR_OPEN_BALANCE (DT DATE, SRC VARCHAR(5) ) AS (    DELETE FROM B_D17_D_TMP_001_STD_0.FACT_ACCT_FNCL_MSUR    WHERE PERD_D = :DT AND MSUR_C = 'NET_OPEN_BALN_A' AND MSTR_SRCE_SYST_C = :SRC;            INSERT INTO B_D17_D_TMP_001_STD_0.FACT_ACCT_FNCL_MSUR           SEL                 :DT AS PERD_D                                        ,'WEEK' AS PERD_C                                        ,BASE.ACCT_IDNN_HK                 ,BASE.ACCT_IDNN_BK                ,GL_PDCT_IDNN_BK                               ,GL_DEPT_IDNN_BK                  ,NULL AS GRD_PDCT_IDNN_BK                              ,HA.MSTR_SRCE_SYST_C                              ,'AUD' AS CNCY_C                       ,'GRUP' AS USGE_CNCY_CATG_IDNN_BK                                                --,'Opening Balance' AS MSUR_C                                        ,'NET_OPEN_BALN_A' AS MSUR_C                ,MSUR_A                ,NULL AS EFFT_D                                        ,NULL AS EXPY_D                                FROM B_D17_D_TMP_001_STD_0.FACT_ACCT_FNCL_MSUR BASE        JOIN P_V_USR_TEC_0.H_ACCT HA ON HA.ACCT_IDNN_BK = BASE.ACCT_IDNN_BK        WHERE PERD_D =  :DT - 7         AND MSUR_C = 'NET_CLSE_BALN_A'        AND HA.MSTR_SRCE_SYST_C = :SRC    ;        );","NULL","0","0","0","N ","NULL","NULL","2017-08-28 10:34:29","kumarm9","2017-08-28 16:30:26","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_APPT_EMPL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_EMPL AS GDW2_RESTORE.TMP_APPT_EMPL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:47","singhp80","2025-07-12 07:56:47","NULL","3","2025-07-12 06:02:18","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_FLAG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_FLAGAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_FLAGFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_FLAG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:57","perumabh","2025-07-14 22:05:57","NULL","1","2025-07-14 22:05:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","GRD_GNRC_MAP_DERV_UNID_PATY","1","T ","F ","NN  ","perumabh","  CREATE SET TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATY ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      MAP_TYPE_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'MAPPING TYPE CODE' NOT NULL,      SRCE_SYST_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code',      UNID_PATY_SRCE_SYST_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Unidentified Party Source System Code',      UNID_PATY_ACCT_REL_C  VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Unidentified Party Account Relationship Code',      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31') PRIMARY INDEX ( SRCE_SYST_C );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:48","perumabh","2025-07-14 22:04:48","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"karsa","BV_RSS_EMPL_JOB_PLAN","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.BV_RSS_EMPL_JOB_PLAN-- ----------------------------------------------------------------------- VIEW NAME:     B_S42_V_BAL_001_STD_0.BV_RSS_EMPL_JOB_PLAN---- DESCRIPTION: One to One View on top of B_S42_V_BAL_001_STD_0.BV_RSS_EMPL_JOB_PLAN--                         ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------- 1.0	2018-02-22			Prem				 Initial Verison-- ---------------------------------------------------------------------( EMPL_IDNN_BK,EMPL_POSN_C,JOB_IDNN_BK,DEPT_IDNN_BK,MSUR_HIER_NODE_IDNN_BK,PDCT_HIER_NODE_IDNN_BK,MSUR_TYPE_C,PERD_C,PERD_D,PLAN_A,PLAN_Q,PLAN_R,MSTR_SRCE_SYST_C,EFFT_D,EXPY_D)AS LOCKING ROW FOR ACCESSSELECT    HEMP.EMPL_IDNN_BK  ,PLAN.EMPL_POSN_C  ,HJOB.JOB_IDNN_BK  ,DEPT.DEPT_IDNN_BK  ,MSUR.HIER_NODE_C                   AS MSUR_HIER_NODE_IDNN_BK  ,PDCT.HIER_NODE_C                   AS PDCT_HIER_NODE_IDNN_BK  ,CASE WHEN COALESCE(PLAN.PLAN_A,0)<>0 THEN 'A'   WHEN COALESCE(PLAN.PLAN_R,0)<>0 THEN 'R'  WHEN COALESCE(PLAN.PLAN_Q,0)<>0 THEN 'C'   ELSE '' END AS MSUR_TYPE_C  ,PLAN.PERD_C  ,PLAN.PERD_D  ,PLAN.PLAN_A  ,PLAN.PLAN_Q  ,PLAN.PLAN_R  ,PLAN.MSTR_SRCE_SYST_C  ,PLAN.EFFT_D  ,PLAN.EXPY_DFROM B_S42_D_BKP_001_STD_0.S_EMPL_JOB_PLAN_SK_TC_5_2                    PLANJOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                        MSURON PLAN.MSUR_HIER_NODE_IDNN_HK = MSUR.HIER_NODE_IDNN_HK       AND MSUR.HIER_NODE_QLFY_C = 'MSUR'AND MSUR.EXPY_D = DATE '9999-12-31'                                                              JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                        PDCTON PLAN.PDCT_HIER_NODE_IDNN_HK = PDCT.HIER_NODE_IDNN_HK       AND PDCT.HIER_NODE_QLFY_C = 'PDCT'                            AND PDCT.EXPY_D = DATE '9999-12-31'  JOIN B_S42_V_SHR_001_STD_0.H_DEPT                             DEPTON PLAN.DEPT_HIER_NODE_IDNN_HK = DEPT.DEPT_IDNN_HKAND DEPT.EXPY_D = DATE '9999-12-31'AND DEPT.RECORD_DELETED_FLAG = 0JOIN B_S42_V_SHR_001_STD_0.L_EMPL_JOB                         LEMPON LEMP.EMPL_JOB_IDNN_HK = PLAN.EMPL_JOB_IDNN_HKAND LEMP.EXPY_D = DATE '9999-12-31'AND LEMP.RECORD_DELETED_FLAG = 0    JOIN B_S42_V_SHR_001_STD_0.H_EMPL                             HEMPON HEMP.EMPL_IDNN_HK = LEMP.EMPL_IDNN_HKAND HEMP.EXPY_D = DATE '9999-12-31'AND HEMP.RECORD_DELETED_FLAG = 0JOIN B_S42_V_SHR_001_STD_0.H_JOB                              HJOBON HJOB.JOB_IDNN_HK = LEMP.JOB_IDNN_HKAND HJOB.EXPY_D = DATE '9999-12-31'AND HJOB.RECORD_DELETED_FLAG = 0--Use the Config Entries for MSUR Mapping/* Removed as Output Column 2 can be derived from LT_PRTF_PLANINNER JOIN (    SELECT  CNFG.OPUT_COLM_1          , CNFG.OPUT_COLM_2          , CNFG.BUSN_STRT_D          , CNFG.BUSN_END_D                         FROM B_S42_V_REF_001_STD_0.R_CFIG_MAP                     CNFG         JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                    NODE    ON  CNFG.OPUT_COLM_1= NODE.HIER_NODE_C    AND NODE.HIER_NODE_QLFY_C = 'MSUR'        WHERE MAP_TYPE_M = 'RSS_PLSE_MSUR_MAP'    AND CNFG.EXPY_D = '9999-12-31'    AND CNFG.RECORD_DELETED_FLAG = 0    AND CNFG.OPUT_COLM_6 = 'PLN'  GROUP BY 1,2,3,4)                                                         HIERON  MSUR.HIER_NODE_C = HIER.OPUT_COLM_1AND  PLAN.PERD_D BETWEEN HIER.BUSN_STRT_D AND HIER.BUSN_END_D*/WHERE PLAN.EXPY_D = DATE '9999-12-31'AND PLAN.RECORD_DELETED_FLAG = 0;","NULL","0","0","0","N ","NULL","NULL","2020-10-28 17:13:46","karsa","2020-12-06 12:22:33","NULL","0","2020-12-06 12:22:48","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_CSE_CMLN_APPT_XPOS_ASES_DETL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_CSE_CMLN_APPT_XPOS_ASES_DETL AS GDW2_RESTORE.TMP_CSE_CMLN_APPT_XPOS_ASES_DETL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:48","singhp80","2025-07-12 07:56:48","NULL","3","2025-07-12 06:02:19","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarm9","KUMARM9_DDATE","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.KUMARM9_DDATE(CALR_D,CALR_WEEK_END_D)AS LOCKING ROW FOR ACCESSSELECTCALR_D,CALR_WEEK_END_DFROM P_V_USR_TEC_0.DIMN_DATEWHERE CALR_WEEK_END_D IN ('2017-07-28');","NULL","0","0","0","N ","NULL","NULL","2017-08-28 11:07:46","kumarm9","2017-08-28 16:34:02","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarahe","BV_RPRT_ENTY_HIER_PP","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.BV_RPRT_ENTY_HIER_PP( SNAP_D, ENTY_HIER_M, ENTY_NODE_C, ENTY_ANCS_NODE_C, ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_NODE_M, ENTY_NODE_X, ENTY_ANCS_NODE_M, ENTY_ANCS_NODE_X, ENTY_NODE_LEAF_F, ENTY_NODE_QLFY_C, ENTY_ANCS_NODE_QLFY_C, ENTY_NODE_DSPL_SEQN_N)AS LOCKING ROW FOR ACCESS SELECT ANCS.SNAP_D, ANCS.ENTY_HIER_M, ANCS.ENTY_NODE_C, ANCS.ENTY_ANCS_NODE_C, ANCS.ENTY_LEVL_N, ANCS.ENTY_ANCS_LEVL_N, ANCS.ENTY_NODE_M, ANCS.ENTY_NODE_X, ANCS.ENTY_ANCS_NODE_M, ANCS.ENTY_ANCS_NODE_X, ANCS.ENTY_NODE_LEAF_F, ANCS.ENTY_NODE_QLFY_C, ANCS.ENTY_ANCS_NODE_QLFY_C, ANCS.ENTY_NODE_DSPL_SEQN_NFROM(SELECT    HHD1.HIER_NODE_C        AS ENTY_NODE_C,   HHD2.HIER_NODE_C        AS ENTY_ANCS_NODE_C,   SHD2.HIER_M             AS ENTY_HIER_M,   SHD2.HIER_NODE_ANCS_LEVL_N    AS ENTY_ANCS_LEVL_N,   SHD2.HIER_NODE_LEVL_N         AS ENTY_LEVL_N,   SHN1.HIER_NODE_M        AS ENTY_NODE_M,   SHN2.HIER_NODE_M        AS ENTY_ANCS_NODE_M,   SHN1.HIER_NODE_X        AS ENTY_NODE_X,   SHN2.HIER_NODE_X        AS ENTY_ANCS_NODE_X,   SHD2.HIER_NODE_LEAF_F         AS ENTY_NODE_LEAF_F,   HHD1.HIER_NODE_QLFY_C        AS ENTY_NODE_QLFY_C,   HHD2.HIER_NODE_QLFY_C        AS ENTY_ANCS_NODE_QLFY_C,   SHD2.HIER_NODE_DSPL_SEQN_N    AS ENTY_NODE_DSPL_SEQN_N,   SHD1.SNAP_D FROM      (   SELECT SHD0.HIER_NODE_IDNN_HK         ,SNAP.SNAP_D         ,MAX(SNAP.CALR_D)          AS CALR_D       FROM (               SELECT CLND.CALR_D             ,CLND.CALR_MNTH_END_D  AS SNAP_D      FROM B_D02_V_BAL_001_STD_0.DIMN_DATE   CLND            JOIN (         SELECT CAST(CAST(FNCL_YEAR_N-1 AS VARCHAR(10))||'-07-01' AS DATE) AS FY_STRT_D         FROM B_D02_V_BAL_001_STD_0.DIMN_DATE    DD00                                      JOIN B_D02_V_REF_001_STD_0.R_CFIG_MAP   RCF0         ON    DD00.CALR_D = (CURRENT_DATE - CAST(TRIM(RCF0.OPUT_COLM_1) AS INTEGER))             WHERE RCF0.MAP_TYPE_M = 'RBS_PLSE_BAL_MAX_DATA'      )                                      STFY      ON    CLND.CALR_MNTH_END_D  BETWEEN STFY.FY_STRT_D                                       AND LAST_DAY(CURRENT_DATE)      --GROUP BY 1,2   )                                                           SNAP                 INNER JOIN  B_D02_D_BUS_001_STD_0.S_HIER_NODE_HIER_NODE_PP     SHD0    ON    SNAP.CALR_D       BETWEEN SHD0.BUSN_STRT_D                                AND SHD0.BUSN_END_D      AND   SNAP.CALR_D       BETWEEN SHD0.EFFT_D                                AND SHD0.EXPY_D   AND   SHD0.RECORD_DELETED_FLAG = 0           GROUP BY 1,2)                                                                 SHD1     INNER JOIN B_D02_D_BUS_001_STD_0.S_HIER_NODE_HIER_NODE_PP SHD2  ON (SHD1.HIER_NODE_IDNN_HK = SHD2.HIER_NODE_IDNN_HK) AND SHD1.CALR_D BETWEEN SHD2.BUSN_STRT_D AND SHD2.BUSN_END_D AND SHD1.CALR_D BETWEEN SHD2.EFFT_D AND SHD2.EXPY_D AND SHD2.RECORD_DELETED_FLAG = 0       INNER JOIN B_D02_D_SHR_001_STD_0.L_HIER_NODE_HIER_NODE_PP LHD  ON (SHD2.HIER_NODE_HIER_NODE_IDNN_HK = LHD.HIER_NODE_HIER_NODE_IDNN_HK)  INNER JOIN  B_D02_D_BUS_001_STD_0.H_HIER_NODE_PP HHD1  ON (HHD1.HIER_NODE_IDNN_HK = LHD.HIER_NODE_IDNN_HK)  INNER JOIN  B_D02_D_BUS_001_STD_0.H_HIER_NODE_PP HHD2 ON (HHD2.HIER_NODE_IDNN_HK = LHD.REL_HIER_NODE_IDNN_HK)  INNER JOIN B_D02_D_BUS_001_STD_0.S_HIER_NODE_PP SHN1 ON (HHD1.HIER_NODE_IDNN_HK = SHN1.HIER_NODE_IDNN_HK) AND SHD1.SNAP_D BETWEEN SHN1.BUSN_STRT_D AND SHN1.BUSN_END_D AND SHD1.SNAP_D BETWEEN SHN1.EFFT_D AND SHN1.EXPY_D AND SHN1.RECORD_DELETED_FLAG = 0  INNER JOIN B_D02_D_BUS_001_STD_0.S_HIER_NODE_PP SHN2 ON (HHD2.HIER_NODE_IDNN_HK = SHN2.HIER_NODE_IDNN_HK) AND SHD1.SNAP_D BETWEEN SHN2.BUSN_STRT_D AND SHN2.BUSN_END_D AND SHD1.SNAP_D BETWEEN SHN2.EFFT_D AND SHN2.EXPY_D AND SHN2.RECORD_DELETED_FLAG = 0 )ANCS;","NULL","0","0","0","N ","NULL","NULL","2016-07-27 15:07:36","kumarahe","2016-07-27 15:07:36","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","BV_RPRT_ENTY_HIER_BPB","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.BV_RPRT_ENTY_HIER_BPB( SNAP_D, ENTY_HIER_M, ENTY_NODE_C, ENTY_ANCS_NODE_C, ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_NODE_M, ENTY_NODE_X, ENTY_ANCS_NODE_M, ENTY_ANCS_NODE_X, ENTY_NODE_LEAF_F, ENTY_NODE_QLFY_C, ENTY_ANCS_NODE_QLFY_C, ENTY_NODE_DSPL_SEQN_N)-- ----------------------------------------------------------------------   Description : BV_RPRT_ENTY_HIER---- ----------------------------------------------------------------------  MODIFICATION HISTORY:--  VER      DATE     MODIFIED BY              DESCRIPTION--  ----  ----------  -------------------      ------------------------------  0.1   11/05/2015  Kartheek Matoor@matoorka  Initial Version.--  0.2   29/06/2015  Thomas Nguyen             Changed join clauses from between business dates to effective and expiry dates in Satellite joins--                                              Added Business end as high date clause in satellite joins--                                              Added record deleted flag in satellite joins--  0.3   08/08/2015  Prem                      Removed Business end & Expy date as high date clause in satellite joins --                                              Changed join clauses using both Business & Efft Dates to retrieve monthly snapshot of datasets in Satellite joins-- 0.4    24/08/2015  Prem                      Formatting Change and removed BV_DIMN_DATE View for derving Financial Month end Date-- 0.5   14/12/2015   Prem                      Added LAST_DAY(CURRENT_DATE)    condition-- 0.6   28/06/2016   Prem                      Changed join clauses using only Business & Dates in Satellite joins for Back Date capability----------------------------------------------------------------------- AS LOCKING ROW FOR ACCESS SELECT ANCS.SNAP_D, ANCS.ENTY_HIER_M, ANCS.ENTY_NODE_C, ANCS.ENTY_ANCS_NODE_C, ANCS.ENTY_LEVL_N, ANCS.ENTY_ANCS_LEVL_N, ANCS.ENTY_NODE_M, ANCS.ENTY_NODE_X, ANCS.ENTY_ANCS_NODE_M, ANCS.ENTY_ANCS_NODE_X, ANCS.ENTY_NODE_LEAF_F, ANCS.ENTY_NODE_QLFY_C, ANCS.ENTY_ANCS_NODE_QLFY_C, ANCS.ENTY_NODE_DSPL_SEQN_NFROM(SELECT    HHD1.HIER_NODE_C        AS ENTY_NODE_C,   HHD2.HIER_NODE_C        AS ENTY_ANCS_NODE_C,   'BPB_PRTF_DEPT_HIER_ALL'             AS ENTY_HIER_M,   SHD2.HIER_NODE_ANCS_LEVL_N    AS ENTY_ANCS_LEVL_N,   SHD2.HIER_NODE_LEVL_N         AS ENTY_LEVL_N,   SHN1.HIER_NODE_M        AS ENTY_NODE_M,   SHN2.HIER_NODE_M        AS ENTY_ANCS_NODE_M,   SHN1.HIER_NODE_X        AS ENTY_NODE_X,   SHN2.HIER_NODE_X        AS ENTY_ANCS_NODE_X,   SHD2.HIER_NODE_LEAF_F         AS ENTY_NODE_LEAF_F,   HHD1.HIER_NODE_QLFY_C        AS ENTY_NODE_QLFY_C,   HHD2.HIER_NODE_QLFY_C        AS ENTY_ANCS_NODE_QLFY_C,   SHD2.HIER_NODE_DSPL_SEQN_N    AS ENTY_NODE_DSPL_SEQN_N,   SHD1.SNAP_D FROM      (   SELECT SHD0.HIER_NODE_IDNN_HK         ,SNAP.SNAP_D         ,MAX(SNAP.CALR_D)          AS CALR_D       FROM (               SELECT CLND.CALR_D             ,CLND.CALR_MNTH_END_D  AS SNAP_D      FROM P_V_USR_TEC_0.DIMN_DATE   CLND            JOIN (         SELECT CAST(CAST(FNCL_YEAR_N-1 AS VARCHAR(10))||'-07-01' AS DATE) AS FY_STRT_D         FROM P_V_USR_TEC_0.DIMN_DATE    DD00                                      JOIN P_V_USR_TEC_0.R_CFIG_MAP   RCF0         ON    DD00.CALR_D = (CURRENT_DATE - CAST(TRIM(RCF0.OPUT_COLM_1) AS INTEGER))             WHERE RCF0.MAP_TYPE_M = 'RBS_PLSE_BAL_MAX_DATA'      )                                      STFY      ON    CLND.CALR_MNTH_END_D  BETWEEN STFY.FY_STRT_D                                       AND LAST_DAY(CURRENT_DATE)      --GROUP BY 1,2   )                                                           SNAP                 INNER JOIN  P_V_USR_TEC_0.S_HIER_NODE_HIER_NODE     SHD0    ON    SNAP.CALR_D       BETWEEN SHD0.BUSN_STRT_D AND SHD0.BUSN_END_D   AND   SNAP.CALR_D BETWEEN SHD0.EFFT_D AND SHD0.EXPY_D   AND   SHD0.BUSN_STRT_D<=SNAP.CALR_D   AND   SHD0.RECORD_DELETED_FLAG = 0   AND   SHD0.EXPY_D = '9999-12-31'           AND   SHD0.HIER_M = 'BPB_PRTF_DEPT_HIER'    GROUP BY 1,2)                                                                 SHD1     INNER JOIN P_V_USR_TEC_0.S_HIER_NODE_HIER_NODE SHD2  ON (SHD1.HIER_NODE_IDNN_HK = SHD2.HIER_NODE_IDNN_HK) AND SHD1.CALR_D BETWEEN SHD2.BUSN_STRT_D AND SHD2.BUSN_END_D AND SHD1.CALR_D BETWEEN SHD2.EFFT_D AND SHD2.EXPY_D AND SHD2.BUSN_STRT_D<=SHD1.CALR_D AND SHD2.RECORD_DELETED_FLAG = 0 AND SHD2.HIER_M = 'BPB_PRTF_DEPT_HIER' AND SHD2.EXPY_D = '9999-12-31'       INNER JOIN P_V_USR_TEC_0.L_HIER_NODE_HIER_NODE LHD  ON (SHD2.HIER_NODE_HIER_NODE_IDNN_HK = LHD.HIER_NODE_HIER_NODE_IDNN_HK)  INNER JOIN  P_V_USR_TEC_0.H_HIER_NODE HHD1  ON (HHD1.HIER_NODE_IDNN_HK = LHD.HIER_NODE_IDNN_HK)  INNER JOIN  P_V_USR_TEC_0.H_HIER_NODE HHD2 ON (HHD2.HIER_NODE_IDNN_HK = LHD.REL_HIER_NODE_IDNN_HK)  INNER JOIN P_V_USR_TEC_0.S_HIER_NODE SHN1 ON (HHD1.HIER_NODE_IDNN_HK = SHN1.HIER_NODE_IDNN_HK) AND SHD1.SNAP_D BETWEEN SHN1.BUSN_STRT_D AND SHN1.BUSN_END_D AND SHD1.SNAP_D BETWEEN SHN1.EFFT_D AND SHN1.EXPY_D AND SHN1.BUSN_STRT_D<=SHD1.SNAP_D AND SHN1.RECORD_DELETED_FLAG = 0 AND SHN1.EXPY_D = '9999-12-31'  INNER JOIN P_V_USR_TEC_0.S_HIER_NODE SHN2 ON (HHD2.HIER_NODE_IDNN_HK = SHN2.HIER_NODE_IDNN_HK) AND SHD1.SNAP_D BETWEEN SHN2.BUSN_STRT_D AND SHN2.BUSN_END_D AND SHD1.SNAP_D BETWEEN SHN2.EFFT_D AND SHN2.EXPY_D AND SHN2.BUSN_STRT_D<=SHD1.SNAP_D AND SHN2.RECORD_DELETED_FLAG = 0 AND SHN2.EXPY_D = '9999-12-31'  QUALIFY ROW_NUMBER() OVER (                        PARTITION BY  HHD1.HIER_NODE_C,   													   HHD2.HIER_NODE_C,   													   'BPB_PRTF_DEPT_HIER_ALL',   													   SHD2.HIER_NODE_ANCS_LEVL_N,   													   SHD2.HIER_NODE_LEVL_N,   													   HHD1.HIER_NODE_QLFY_C,   													   HHD2.HIER_NODE_QLFY_C,   													   SHD1.SNAP_D                         ORDER BY  SHD2.BUSN_STRT_D DESC, SHN1.BUSN_STRT_D DESC, SHN2.BUSN_STRT_D DESC                          )      = 1)ANCS;","NULL","0","0","0","N ","NULL","NULL","2018-08-01 15:08:16","KOSTKAMA","2018-08-01 15:08:16","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_PATY AS GDW2_RESTORE.APPT_PDCT_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:04","singhp80","2025-07-12 07:55:04","NULL","28","2025-08-13 13:42:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PPSRCCS","sp_ds_get_pros_key","3","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:14:45","perumabh","2025-07-14 23:25:57","NULL","3","2025-07-14 23:25:57","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","CSE4_TMP_ASET","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.CSE4_TMP_ASET AS GDW2_RESTORE.CSE4_TMP_ASET WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:48","singhp80","2025-07-12 07:56:48","NULL","3","2025-07-12 06:02:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","NON_WORK_DAY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.NON_WORK_DAY(        GEOA_TYPE_C,        GEOA_C,        NON_WORK_D,        NON_WORK_DAY_TYPE_C,        NON_WORK_DAY_M,        HLDY_STUS_X )    AS LOCKING TABLE K_PDGRD.NON_WORK_DAY FOR ACCESSSELECT        GEOA_TYPE_C,        GEOA_C,        NON_WORK_D,        NON_WORK_DAY_TYPE_C,        NON_WORK_DAY_M,        HLDY_STUS_X   FROM        K_PDGRD.NON_WORK_DAY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:14:41","perumabh","2025-07-14 22:14:41","NULL","1","2025-07-14 22:14:41","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_ORIG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_ORIG AS GDW2_RESTORE.TMP_APPT_ORIG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:41","singhp80","2025-07-12 07:56:41","NULL","3","2025-07-12 06:02:14","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DERV_PRTF_ACCT_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_PRTF_ACCT_REL(        ACCT_I,	 INT_GRUP_I,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 DERV_PRTF_TYPE_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_ACCT_REL FOR ACCESSSELECT        ACCT_I,	 INT_GRUP_I,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 DERV_PRTF_TYPE_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C  FROM        K_STAR_CAD_PROD_DATA.DERV_PRTF_ACCT_REL WHERE ( (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */)    );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:43:44","perumabh","2025-07-14 22:43:44","NULL","4","2025-08-22 11:36:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_LPC_DEPT_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LPC_DEPT_HL AS GDW2_RESTORE.MAP_CSE_LPC_DEPT_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:06","singhp80","2025-07-12 07:57:06","NULL","29","2025-08-14 12:30:03","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_REL AS GDW2_RESTORE.APPT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:48","singhp80","2025-07-12 07:55:48","NULL","29","2025-08-13 13:54:58","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ENV_PATY_TYPE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ENV_PATY_TYPEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_TYPEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_TYPE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:41","perumabh","2025-07-14 22:16:41","NULL","1","2025-07-14 22:16:41","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDGRD","DEPT_DIMN_NODE_ANCS_CURR","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDGRD.DEPT_DIMN_NODE_ANCS_CURR AS GDW2_RESTORE.DEPT_DIMN_NODE_ANCS_CURR WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:35","singhp80","2025-07-12 07:56:35","NULL","30","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"Kattas1","DBC_Hist_Tperf","1","V ","F ","NN  ","Kattas1","REPLACE VIEW kattas1.DBC_Hist_TperfASSELECT         /* Query information */         dlt.LogDate         ,dlt.UserName         ,dlt.AppId         ,dlt.ClientId         ,'QueryId: '||dlt.QueryId||' ' AS QueryId         ,CAST (dlt.StartTime AS DATE) AS QueryDate         ,CAST (dlt.StartTime AS TIME) AS QueryTime         ,TD_SYSFNLIB.oreplace(dlt.QueryBand,  '=S>', '') AS QueryBand         /* CPU details */         ,dlt.AMPCPUTime         ,dlt.ParserCPUTime         ,(dlt.AMPCPUTime + dlt.ParserCPUTime) * 1.15 * tperf.SystemTperf / ( tperf.NbrTPANodes * tperf.CpusPerNode * 3600.00) AS TPerfHr         ,dlt.MaxAMPCPUTime * dlt.NumOfActiveAMPs + dlt.ParserCPUTime AS ImpactCPUSecs         ,CAST((EXTRACT(HOUR FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT(SECOND FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ParseTimeSecs         ,CAST((EXTRACT (HOUR FROM ((dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT (SECOND FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ElapsedTimeSecs         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.AMPCPUTimeNorm / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPCPUTimeNorm / (dlt.AMPCPUTimeNorm / tperf.NbrAMPs)         END (DEC (8, 2)) AS CPU_Skew         /* IO details */         ,dlt.TotalIOCount         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.TotalIOCount / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPIO / (dlt.TotalIOCount / tperf.NbrAMPs)         END (DEC (8, 2)) AS IO_Skew         /* CPU / IO interaction */         ,CASE                  WHEN dlt.AMPCPUTime       < 1                  OR dlt.TotalIOCount = 0                           THEN 0                           ELSE (dlt.AMPCPUTime * 1000) / dlt.TotalIOCount         END (DEC (6, 2)) AS PJI         ,CASE                  WHEN dlt.AMPCPUTime     < 1                  OR dlt.AMPCPUTime = 0                           THEN 0                           ELSE dlt.TotalIOCount / (dlt.AMPCPUTime * 1000)         END (DEC (6, 2)) AS UII         /* Estimate vs actual from DBQLStepTbl */         ,dsst.ActTotalCPUCost         ,dsst.EstTotalCPUCost         ,(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/NULLIFZERO(dsst.EstTotalCPUCost) AS TotalCPUCostDiffRatio         ,dsst.ActTotalRowCount           ,dsst.EstTotalRowCount          ,(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/NULLIFZERO(dsst.EstTotalRowCount) AS TotalRowCountDiffRatio              ,dsst.ActTotalIOCount         ,dsst.EstTotalIOCount                ,(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/NULLIFZERO(dsst.EstTotalIOCount) AS TotalIOCountDiffRatio                 /* General result and processing info */         ,dlt.NumSteps         ,dlt.ErrorCode         ,SUBSTRING (dlt.ErrorText FROM 1 FOR 100) AS ErrorText         ,dlt.SpoolUsage         ,dlt.NumResultRows         ,TD_SYSFNLIB.oreplace(TD_SYSFNLIB.oreplace((SUBSTRING(dst.SQLTextInfo FROM 1 FOR 5000)),  '0A'XC, ' '),'0D'XC, ' ') AS QueryText         /* Details about why query shown */         ,CASE                  WHEN ErrorText IS NOT NULL                           THEN 'ErrorText '                           ELSE ''         END                  ||         CASE                  WHEN ParseTimeSecs > 10.0                           THEN 'ParseTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN ElapsedTimeSecs    > 300.0                           THEN 'ElapsedTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.ParserCPUTime > 10.00                           THEN 'ParseCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.AMPCPUTime > 3000.00                           THEN 'AMPCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN ImpactCPUSecs > 5000.00                           THEN 'ImpactCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN TPerfHr > 20.00                           THEN 'TPerfHr '                           ELSE ''         END                  ||         CASE                  WHEN (                                    CPU_Skew      > 10.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'CPU_Skew '                           ELSE ''         END                  ||         CASE                  WHEN dlt.TotalIOCount      > 20000.0                           THEN 'IO '                           ELSE ''         END                  ||         CASE                  WHEN (                                    IO_Skew      > 10.0                           AND      TotalIOCount > 500000                           )                           THEN 'IO_Skew '                           ELSE ''         END                  ||         CASE                  WHEN (                                    PJI           > 3.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'PJI '                           ELSE ''         END                  ||         CASE                  WHEN (                                    UII          > 3.0                           AND      TotalIOCount > 15000                           )                           THEN 'UII '                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalCPUCost - dsst.EstTotalCPUCost) > 2000                    THEN                       CASE  WHEN dsst.EstTotalCPUCost = 0                         THEN 'EstimatedCPU '                        WHEN ABS(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/dsst.EstTotalCPUCost > 10                                THEN 'EstimatedCPU '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalRowCount - dsst.EstTotalRowCount) > 10000                    THEN                       CASE  WHEN dsst.EstTotalRowCount = 0                         THEN 'EstimatedRowCount '                        WHEN ABS(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/dsst.EstTotalRowCount > 10                                THEN 'EstimatedRowCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalIOCount - dsst.EstTotalIOCount) > 100000                    THEN                       CASE  WHEN dsst.EstTotalIOCount = 0                         THEN 'EstimatedIOCount '                        WHEN ABS(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/dsst.EstTotalIOCount > 10                                THEN 'EstimatedIOCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN SpoolUsage > 500e9                           THEN 'SpoolUsage '                           ELSE ''         END AS Issue_IdentifierFROM /* Use DBQLogTbl as primary table */  PDCRINFO.DBQLogTbl_Hst dlt   INNER JOIN  /* Use DBQLSQLTbl information to identify submitted SQL */  PDCRINFO.DBQLSQLTbl_Hst dst    ON dlt.LogDate = dst.LogDate    AND dlt.ProcId = dst.ProcId    AND dlt.QueryId = dst.QueryId    AND dst.SQLRowNo = 1    INNER JOIN  /* Use DBQLStepTbl information to identify differences between optimiser estimates and actuals */  (  SELECT     LogDate    ,QueryID    ,ProcID    ,SUM(EstCPUCost) AS EstTotalCPUCost    ,SUM(CPUTime) AS ActTotalCPUCost    ,SUM(EstRowCount) AS EstTotalRowCount    ,SUM(RowCount) AS ActTotalRowCount    ,SUM(EstIOCost) AS EstTotalIOCount    ,SUM(IOcount) AS ActTotalIOCount  FROM  PDCRINFO.DBQLStepTbl_Hst  GROUP BY    LogDate   ,QueryID   ,ProcID  ) dsst    ON dlt.LogDate = dsst.LogDate    AND dlt.ProcId = dsst.ProcId    AND dlt.QueryId = dsst.QueryId    INNER JOIN  /* Use CBA system table to calculate TPerfHr figures */  PDCRINFO.cba_Syst_TPerf tperf    ON dlt.LogDate BETWEEN tperf.FromDate AND tperf.ToDate;","NULL","0","0","0","N ","NULL","NULL","2016-05-10 09:21:44","Kattas1","2016-05-10 09:21:44","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KHANA15","test_MVC_Values","1","T ","F ","NN  ","KHANA15","CREATE TABLE khana15.test_MVC_Values( db VARCHAR(128) NOT NULL, tb VARCHAR(128) NOT NULL, colm VARCHAR(128) NOT NULL, pending_flag CHAR(1) NOT NULL, datatype CHAR(2) NOT NULL, chartype SMALLINT NOT NULL, colm_width INTEGER NOT NULL, cmpr_val VARCHAR(2000) CHARACTER SET UNICODE, value_width INTEGER NOT NULL, cmpr_row_cnt DECIMAL(18) NOT NULL, total_row_cnt DECIMAL(18) NOT NULL, value_rank SMALLINT NOT NULL) PRIMARY INDEX(db, tb, colm);","NULL","0","0","0","N ","NULL","NULL","2017-05-26 17:47:37","KHANA15","2017-05-26 17:47:37","NULL","NULL","NULL","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","3","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","DEFAULT","NULL","NULL","0 ","0","TD_Map1","NULL","NULL","NULL","0","NULL"
"K_PVTECH","ACCT_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_PATY(        PATY_I,        ACCT_I,        PATY_ACCT_REL_C,        REL_LEVL_C,        REL_REAS_C,        REL_STUS_C,        SRCE_SYST_C,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C)    AS LOCKING TABLE K_PDPATY.ACCT_PATY FOR ACCESSSELECT        PATY_I,        ACCT_I,        PATY_ACCT_REL_C,        REL_LEVL_C,        REL_REAS_C,        REL_STUS_C,        SRCE_SYST_C,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C  FROM (SELECT        PATY_I,        ACCT_I,        PATY_ACCT_REL_C,        REL_LEVL_C,        REL_REAS_C,        REL_STUS_C,        SRCE_SYST_C,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        CASE WHEN ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C  FROM        K_PDPATY.ACCT_PATY ) ACCT_PATY WHERE        (/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:41:22","perumabh","2025-08-21 16:17:11","NULL","3","2025-08-21 16:17:11","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_CSE_APPT_PDCT_OFI_SETL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_CSE_APPT_PDCT_OFI_SETL AS GDW2_RESTORE.TMP_CSE_APPT_PDCT_OFI_SETL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:54","singhp80","2025-07-12 07:56:54","NULL","3","2025-07-12 06:02:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","UTIL_PARM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.UTIL_PARM AS GDW2_RESTORE.UTIL_PARM WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:52","singhp80","2025-07-12 07:56:52","NULL","59","2025-08-14 17:52:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","EVNT_INT_GRUP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.EVNT_INT_GRUP AS GDW2_RESTORE.EVNT_INT_GRUP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:16","singhp80","2025-07-12 07:55:16","NULL","29","2025-08-13 15:20:40","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_PRTF_ACCT_STAG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.DERV_PRTF_ACCT_STAG AS GDW2_RESTORE.DERV_PRTF_ACCT_STAG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:49","singhp80","2025-07-12 07:55:49","NULL","26","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_C","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_CAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_C;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:07","perumabh","2025-07-14 22:18:07","NULL","1","2025-07-14 22:18:07","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","DERV_PRTF_PATY_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_PATY_REL AS GDW2_RESTORE.DERV_PRTF_PATY_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:45","singhp80","2025-07-12 07:55:45","NULL","33","2025-08-22 11:36:55","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_5_PDCTSWCHREFN_PDSWCH","1","V ","F ","NN  ","KOSTKAMA","REPLACE  VIEW KOSTKAMA.TX_300_5_PDCTSWCHREFN_PDSWCH ASLOCKING ROW FOR ACCESS (SEL     ACCT_IDNN_HK                  	,PERD_D                        	,PERD_C                        	,PATY_IDNN_HK                  	,PATY_IDNN_BK                  	,SALE_GRUP_I                   	,PRTF_IDNN_BK                  	,RUNOFF_MGMT_INFO_PDCT_HIER_IDNN 	,CRSK_F                        	,CNCY_IDNN_BK                  	,USGE_CNCY_CATG_IDNN_BK        	,FNCL_MSUR_C                   	,MSUR_A                        	,MSTR_SRCE_SYST_C              	,GL_SRCE_IDNN_BK               	,ROW_SECU_ACCS_C      FROM (    SEL      ACCT_IDNN_HK                  	,PERD_D                        	,PERD_C                        	,PATY_IDNN_HK                  	,PATY_IDNN_BK                  	,SALE_GRUP_I                   	,PRTF_IDNN_BK                  	,RUNOFF_MGMT_INFO_PDCT_HIER_IDNN 	,CRSK_F                        	,CNCY_IDNN_BK                  	,USGE_CNCY_CATG_IDNN_BK        	,CAST ('PDCT_SWITCH_OUT_A'  AS VARCHAR(30)) AS FNCL_MSUR_C                   	,INTRNL_REFIN *-1   AS MSUR_A                        	,MSTR_SRCE_SYST_C              	,GL_SRCE_IDNN_BK               	,ROW_SECU_ACCS_C                     FROM             (            SEL 			STAGE. PERD_D                        			,STAGE.SALE_GRUP_I                   			,STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN			,STAGE.RUN_OFF_A                     			,STAGE.NEW_LEND_A                    			,STAGE.TOT_REFIN                     			,STAGE.TOT_PD_SWITCH                 			,STAGE.TOT_RUN_OFF_A                 			,STAGE.TOT_NEW_LEND_A                			,STAGE.TOT_AVAIL			,RUNOFF.ACCT_IDNN_HK              			,RUNOFF.PERD_C                        			,RUNOFF.PATY_IDNN_HK                  			,RUNOFF.PATY_IDNN_BK                  			,RUNOFF.PRTF_IDNN_BK                  			,RUNOFF.CRSK_F                        			,RUNOFF.CNCY_IDNN_BK                  			,RUNOFF.USGE_CNCY_CATG_IDNN_BK        			,RUNOFF.MSTR_SRCE_SYST_C              			,RUNOFF.GL_SRCE_IDNN_BK               			,RUNOFF.ROW_SECU_ACCS_C  			,ABS(RUNOFF.MSUR_A) AS ACCT_RUN_OFF_A	,CASE 	WHEN SUM(ACCT_RUN_OFF_A)       		OVER (PARTITION BY RUNOFF.SALE_GRUP_I ORDER BY RUNOFF.SALE_GRUP_I, ACCT_RUN_OFF_A DESC,RUNOFF.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) > TOT_PD_SWITCH 	THEN TOT_PD_SWITCH - (SUM(ACCT_RUN_OFF_A)  OVER (PARTITION BY RUNOFF.SALE_GRUP_I ORDER BY RUNOFF.SALE_GRUP_I, ACCT_RUN_OFF_A DESC,RUNOFF.ACCT_IDNN_HK DESC ROWS UNBOUNDED PRECEDING ) - ACCT_RUN_OFF_A)	ELSE ACCT_RUN_OFF_A	END AS CALC   , CASE WHEN CALC < 0 THEN 0 ELSE CALC END AS INTRNL_REFIN                                                FROM KOSTKAMA.TX_300_3_PDCTSWCHREFN_STG1   STAGE     JOIN B_D17_D_INP_001_STD_0.TX_300_1_PDCTSWCHREFN_BASE  RUNOFF            ON RUNOFF.SALE_GRUP_I = STAGE.SALE_GRUP_I            AND RUNOFF.MGMT_INFO_PDCT_HIER_IDNN = STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN            AND RUNOFF.FNCL_MSUR_C = 'RUN_OFF_A'            AND RUNOFF.MSUR_A < 0                        AND STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN <> STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN                          ) SWITCH_OUT                           UNION ALL                        SEL                          ACCT_IDNN_HK                  			,PERD_D                        			,PERD_C                        			,PATY_IDNN_HK                  			,PATY_IDNN_BK                  			,SALE_GRUP_I                   			,PRTF_IDNN_BK                  			,NEWLEND_MGMT_INFO_PDCT_HIER_IDNN 			,CRSK_F                        			,CNCY_IDNN_BK                  			,USGE_CNCY_CATG_IDNN_BK        			,CAST ('PDCT_SWITCH_IN_A'  AS VARCHAR(30)) AS FNCL_MSUR_C                   			,INTRNL_REFIN    AS MSUR_A                        			,MSTR_SRCE_SYST_C              			,GL_SRCE_IDNN_BK               			,ROW_SECU_ACCS_C                     FROM             (            SEL  	     STAGE. PERD_D                        		,STAGE.SALE_GRUP_I                   		,STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN		,STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN		,STAGE.RUN_OFF_A                     		,STAGE.NEW_LEND_A                    		,STAGE.TOT_REFIN                     		,STAGE.TOT_PD_SWITCH                 		,STAGE.TOT_RUN_OFF_A                 		,STAGE.TOT_NEW_LEND_A                		,STAGE.TOT_AVAIL			,NEWLEND.ACCT_IDNN_HK                  		,NEWLEND.PERD_C                        		,NEWLEND.PATY_IDNN_HK                  		,NEWLEND.PATY_IDNN_BK                  		,NEWLEND.PRTF_IDNN_BK                  		,NEWLEND.CRSK_F                        		,NEWLEND.CNCY_IDNN_BK                  		,NEWLEND.USGE_CNCY_CATG_IDNN_BK        		,NEWLEND.MSTR_SRCE_SYST_C              		,NEWLEND.GL_SRCE_IDNN_BK               		,NEWLEND.ROW_SECU_ACCS_C  			   , NEWLEND.MSUR_A AS ACCT_NEW_LEND_A	                                      	     , CASE WHEN SUM(ACCT_NEW_LEND_A)  OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I  , ACCT_NEW_LEND_A DESC,NEWLEND.ACCT_IDNN_HK     DESC ROWS UNBOUNDED PRECEDING )    > TOT_PD_SWITCH 	                        THEN 0	                        ELSE 1	                        END T2	                              	     , CASE WHEN SUM(ACCT_NEW_LEND_A)  OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I, ACCT_NEW_LEND_A DESC,NEWLEND.ACCT_IDNN_HK     DESC ROWS UNBOUNDED PRECEDING )    > TOT_PD_SWITCH 	                        THEN  TOT_PD_SWITCH - ( SUM(ACCT_NEW_LEND_A)  OVER (PARTITION BY NEWLEND.SALE_GRUP_I ORDER BY NEWLEND.SALE_GRUP_I, ACCT_NEW_LEND_A DESC ,NEWLEND.ACCT_IDNN_HK    DESC ROWS UNBOUNDED PRECEDING )  - ACCT_NEW_LEND_A)	                        ELSE ACCT_NEW_LEND_A	                        END AS CALC	                                                                	    , CASE WHEN CALC  < 0 THEN 0 ELSE   CALC   END AS INTRNL_REFIN              FROM KOSTKAMA.TX_300_3_PDCTSWCHREFN_STG1   STAGE     JOIN B_D17_D_INP_001_STD_0.TX_300_1_PDCTSWCHREFN_BASE  NEWLEND            ON NEWLEND.SALE_GRUP_I = STAGE.SALE_GRUP_I            AND NEWLEND.MGMT_INFO_PDCT_HIER_IDNN = STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN            AND NEWLEND.FNCL_MSUR_C = 'NEW_LEND_A'            AND NEWLEND.MSUR_A > 0                        AND STAGE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN <> STAGE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN            ) SWITCH_IN ) BASEWHERE MSUR_A <> 0    );","NULL","0","0","0","N ","NULL","NULL","2018-01-17 10:38:00","KOSTKAMA","2018-01-17 10:38:00","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_ASET_ADRS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_ASET_ADRS AS GDW2_RESTORE.TMP_ASET_ADRS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:49","singhp80","2025-07-12 07:56:49","NULL","3","2025-07-12 06:02:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_QSTN_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_HL AS GDW2_RESTORE.MAP_CSE_APPT_QSTN_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:58","singhp80","2025-07-12 07:56:58","NULL","29","2025-08-13 16:02:56","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_FEAT AS GDW2_RESTORE.APPT_PDCT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:54:57","singhp80","2025-07-12 07:54:57","NULL","30","2025-08-13 13:34:21","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_FNDD_METH","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FNDD_METH AS GDW2_RESTORE.MAP_CSE_FNDD_METH WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:09","singhp80","2025-07-12 07:57:09","NULL","29","2025-08-14 12:39:50","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DEPT_DIMN_NODE_ANCS_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DEPT_DIMN_NODE_ANCS_CURR( DEPT_I,ANCS_DEPT_I,ANCS_LEVL_N,AS_AT_D)  AS LOCKING TABLE K_PDGRD.DEPT_DIMN_NODE_ANCS_CURR FOR ACCESSSELECT T1.DEPT_I,T1.ANCS_DEPT_I,T1.ANCS_LEVL_N,T1.AS_AT_DFROM K_PDGRD.DEPT_DIMN_NODE_ANCS_CURR T1;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:37","perumabh","2025-07-14 22:20:37","NULL","1","2025-07-14 22:20:37","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KRUIKD","DBQL_DBC_Perf_Metrics","1","V ","F ","NN  ","KRUIKD","REPLACE VIEW KRUIKD.DBQL_DBC_Perf_MetricsAS/* Metric                                  Criteria     Secondary criteria                         Issue Identifier MessageErrorText                               NOT NULL                                                ErrorText ParseTimeSecs                           10                                                      ParseTimeSecs ElapsedTimeSecs                         300                                                     ElapsedTimeSecs ParserCPUTime                           10                                                      ParseCPUSecs AMPCPUTime                              3000                                                    AMPCPUSecs ImpactCPUSecs                           5000                                                    ImpactCPUSecs TPerfHr                                 20                                                      TPerfHr CPU_Skew                                10           AND ImpactCPUSecs > 500.00                 CPU_Skew TotalIOCount                            20000                                                   IO IO_Skew                                 10           AND TotalIOCount > 500000                  IO_Skew PJI                                     3            AND ImpactCPUSecs > 500.00                 PJI UII                                     3            AND TotalIOCount > 15000                   UII SpoolUsage                              500000000000                                            SpoolUsage (ActTotalCPUCost - EstTotalCPUCost)     2000         AND (EstTotalCPUCost = 0                                                      OR  ABS(ActTotalCPUCost - EstTotalCPUCost)/EstTotalCPUCost > 10)                                                                                                EstimatedCPU (ActTotalRowCount - EstTotalRowCount)   10000        AND (EstTotalRowCount = 0                                                      OR ABS(ActTotalRowCount - EstTotalRowCount)/EstTotalRowCount > 10)                                                                                                    EstimatedRowCount (ActTotalIOCount - EstTotalIOCount)     100000       AND (EstTotalIOCount = 0                                                      OR ABS(ActTotalIOCount - EstTotalIOCount)/EstTotalIOCount > 10)                                                                                                        EstimatedIOCount Typical query:   SELECT  *    FROM   DBQL_DBC_Perf_Metrics   WHERE  UserName = 'SMITHJ'     AND Issue_Identifier <> ''   ORDER BY ImpactCPUSecs DESC*/SELECT         /* Query information */         CAST (dlt.StartTime AS DATE) AS LogDate         ,dlt.UserName         ,dlt.AppId         ,dlt.ClientId         ,'QueryId: '||dlt.QueryId||' ' AS QueryId         ,CAST (dlt.StartTime AS DATE) AS QueryDate         ,CAST (dlt.StartTime AS TIME) AS QueryTime         ,TD_SYSFNLIB.oreplace(dlt.QueryBand,  '=S>', '') AS QueryBand         /* CPU details */         ,dlt.AMPCPUTime         ,dlt.ParserCPUTime         ,(dlt.AMPCPUTime + dlt.ParserCPUTime) * 1.15 * tperf.SystemTperf / ( tperf.NbrTPANodes * tperf.CpusPerNode * 3600.00) AS TPerfHr         ,dlt.MaxAMPCPUTime * dlt.NumOfActiveAMPs + dlt.ParserCPUTime AS ImpactCPUSecs         ,CAST((EXTRACT(HOUR FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT(SECOND FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ParseTimeSecs         ,CAST((EXTRACT (HOUR FROM ((dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600           + EXTRACT (MINUTE FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60           + EXTRACT (SECOND FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ElapsedTimeSecs         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.AMPCPUTimeNorm / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPCPUTimeNorm / (dlt.AMPCPUTimeNorm / tperf.NbrAMPs)         END (DEC (8, 2)) AS CPU_Skew         /* IO details */         ,dlt.TotalIOCount         ,CASE                  WHEN dlt.AMPCPUTime < 1                  OR (dlt.TotalIOCount / tperf.NbrAMPs) = 0                           THEN 0                           ELSE dlt.MaxAMPIO / (dlt.TotalIOCount / tperf.NbrAMPs)         END (DEC (8, 2)) AS IO_Skew         /* CPU / IO interaction */         ,CASE                  WHEN dlt.AMPCPUTime       < 1                  OR dlt.TotalIOCount = 0                           THEN 0                           ELSE (dlt.AMPCPUTime * 1000) / dlt.TotalIOCount         END (DEC (6, 2)) AS PJI         ,CASE                  WHEN dlt.AMPCPUTime     < 1                  OR dlt.AMPCPUTime = 0                           THEN 0                           ELSE dlt.TotalIOCount / (dlt.AMPCPUTime * 1000)         END (DEC (6, 2)) AS UII         /* Estimate vs actual from DBQLStepTbl */         ,dsst.ActTotalCPUCost         ,dsst.EstTotalCPUCost         ,(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/NULLIFZERO(dsst.EstTotalCPUCost) AS TotalCPUCostDiffRatio         ,dsst.ActTotalRowCount           ,dsst.EstTotalRowCount          ,(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/NULLIFZERO(dsst.EstTotalRowCount) AS TotalRowCountDiffRatio              ,dsst.ActTotalIOCount         ,dsst.EstTotalIOCount                ,(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/NULLIFZERO(dsst.EstTotalIOCount) AS TotalIOCountDiffRatio                 /* General result and processing info */         ,dlt.NumSteps         ,dlt.ErrorCode         ,SUBSTRING (dlt.ErrorText FROM 1 FOR 100) AS ErrorText         ,dlt.SpoolUsage         ,dlt.NumResultRows   ,TD_SYSFNLIB.oreplace(TD_SYSFNLIB.oreplace((SUBSTRING(dst.SQLTextInfo FROM 1 FOR 5000)),  '0A'XC, ' '),'0D'XC, ' ') AS QueryText         /* Details about why query shown */         ,CASE                  WHEN ErrorText IS NOT NULL                           THEN 'ErrorText '                           ELSE ''         END                  ||         CASE                  WHEN ParseTimeSecs > 10.0                           THEN 'ParseTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN ElapsedTimeSecs    > 300.0                           THEN 'ElapsedTimeSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.ParserCPUTime > 10.00                           THEN 'ParseCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN dlt.AMPCPUTime > 3000.00                           THEN 'AMPCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN ImpactCPUSecs > 5000.00                           THEN 'ImpactCPUSecs '                           ELSE ''         END                  ||         CASE                  WHEN TPerfHr > 20.00                           THEN 'TPerfHr '                           ELSE ''         END                  ||         CASE                  WHEN (                                    CPU_Skew      > 10.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'CPU_Skew '                           ELSE ''         END                  ||         CASE                  WHEN dlt.TotalIOCount      > 20000.0                           THEN 'IO '                           ELSE ''         END                  ||         CASE                  WHEN (                                    IO_Skew      > 10.0                           AND      TotalIOCount > 500000                           )                           THEN 'IO_Skew '                           ELSE ''         END                  ||         CASE                  WHEN (                                    PJI           > 3.0                           AND      ImpactCPUSecs > 500.00                           )                           THEN 'PJI '                           ELSE ''         END                  ||         CASE                  WHEN (                                    UII          > 3.0                           AND      TotalIOCount > 15000                           )                           THEN 'UII '                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalCPUCost - dsst.EstTotalCPUCost) > 2000                    THEN                       CASE  WHEN dsst.EstTotalCPUCost = 0                         THEN 'EstimatedCPU '                        WHEN ABS(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/dsst.EstTotalCPUCost > 10                                THEN 'EstimatedCPU '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalRowCount - dsst.EstTotalRowCount) > 10000                    THEN                       CASE  WHEN dsst.EstTotalRowCount = 0                         THEN 'EstimatedRowCount '                        WHEN ABS(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/dsst.EstTotalRowCount > 10                                THEN 'EstimatedRowCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN (dsst.ActTotalIOCount - dsst.EstTotalIOCount) > 100000                    THEN                       CASE  WHEN dsst.EstTotalIOCount = 0                         THEN 'EstimatedIOCount '                        WHEN ABS(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/dsst.EstTotalIOCount > 10                                THEN 'EstimatedIOCount '                                ELSE ''                             END                           ELSE ''         END                  ||         CASE                  WHEN SpoolUsage > 500e9                           THEN 'SpoolUsage '                           ELSE ''         END AS Issue_IdentifierFROM /* Use DBQLogTbl as primary table */  PDCRINFO.DBQLogTbl_DBC dlt   INNER JOIN  /* Use DBQLSQLTbl information to identify submitted SQL */  PDCRINFO.DBQLSQLTbl_DBC dst    ON dlt.ProcId = dst.ProcId    AND dlt.QueryId = dst.QueryId    AND dst.SQLRowNo = 1    INNER JOIN  /* Use DBQLStepTbl information to identify differences between optimiser estimates and actuals */  (  SELECT     QueryID    ,ProcID    ,SUM(EstCPUCost) AS EstTotalCPUCost    ,SUM(CPUTime) AS ActTotalCPUCost    ,SUM(EstRowCount) AS EstTotalRowCount    ,SUM(RowCount) AS ActTotalRowCount    ,SUM(EstIOCost) AS EstTotalIOCount    ,SUM(IOcount) AS ActTotalIOCount  FROM  PDCRINFO.DBQLStepTbl_DBC  GROUP BY    QueryID   ,ProcID  ) dsst    ON dlt.ProcId = dsst.ProcId    AND dlt.QueryId = dsst.QueryId    INNER JOIN  /* Use CBA system table to calculate TPerfHr figures */  PDCRINFO.cba_Syst_TPerf tperf    ON dlt.LogDate BETWEEN tperf.FromDate AND tperf.ToDate;","NULL","0","0","0","N ","NULL","NULL","2015-09-09 15:11:00","KRUIKD","2015-09-09 15:11:00","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_BASE","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_BASE AS GDW2_RESTORE.ACCT_BASE WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:51","PUDBAI016","2025-08-21 21:47:51","NULL","1","2025-08-22 11:36:32","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_PRTF_ACCT_PATY_STAG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_PRTF_ACCT_PATY_STAGAS LOCK TABLE K_PDDSTG.DERV_PRTF_ACCT_PATY_STAGFOR ACCESS SELECT * FROM K_PDDSTG.DERV_PRTF_ACCT_PATY_STAG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:59","perumabh","2025-07-14 22:05:59","NULL","1","2025-07-14 22:05:59","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_FEE_CAPL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_FEE_CAPLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEE_CAPLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_FEE_CAPL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:21","perumabh","2025-07-14 22:16:21","NULL","1","2025-07-14 22:16:21","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_TU_APPT_C","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_TU_APPT_C   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_TU_APPT_C FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_TU_APPT_C;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:47","perumabh","2025-07-14 22:08:47","NULL","1","2025-07-14 22:08:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_PACK_PDCT_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PACK_PDCT_HL AS GDW2_RESTORE.MAP_CSE_PACK_PDCT_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:03","singhp80","2025-07-12 07:57:03","NULL","29","2025-08-14 12:21:43","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_PRTF_ACCT_PATY_PSST","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_PRTF_ACCT_PATY_PSSTAS LOCK TABLE K_PDDSTG.DERV_PRTF_ACCT_PATY_PSSTFOR ACCESS SELECT * FROM K_PDDSTG.DERV_PRTF_ACCT_PATY_PSST;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:59","perumabh","2025-07-14 22:05:59","NULL","1","2025-07-14 22:05:59","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","MSTR_CNCT_PRXY_ACCT","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDCBODS.MSTR_CNCT_PRXY_ACCT AS GDW2_RESTORE.MSTR_CNCT_PRXY_ACCT WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:39","PUDBAI016","2025-08-21 21:47:39","NULL","1","2025-08-22 11:37:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BV_PATY_OB","1","V ","F ","NN  ","KOSTKAMA","--sel * from B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR REPLACE VIEW KOSTKAMA.BV_PATY_OB AS (SEL * FROM (SELECT DISTINCT	PCA.CUST_N,	PCA.PATY_IDNN_BK,	PCA.BRTH_D,	PCA.CUST_AUST_BUSN_N,	PCA.MNGE_BUSN_UNIT_C,	OWN_BPB_MNGE_F,	PCA.REL_MNGE_CUST_F,	PCA.BUSN_SEGM_M,	PCA.PRTF_C,	PCA.BPB_MNGE_CUST_F,	PCA.FRAU_STOP_F,	PCA.DECD_ESTE_F,	PCA.IN_RETL_HRDS_F,	PCA.VERF_100_POIT_ID_CHEK_F,	PCA.ACTV_F,	SG.PATY_GRUP_I  AS SALE_GRUP_C,	PCA.GCS_MNGE_F,	PCA.CBA_INTR_PATY_F,	CALR_D AS BUSINESS_DATE,	PCA.EFFT_D,	PCA.EXPY_D,	BPB_PDCT_F,	IS_IN_ARRS_F,	IS_IN_ARRS_D,	WAS_IN_ARRS_F,	CALR_D AS BUSN_D		--CASE WHEN SUM( CASE WHEN BACA1.ACCT_IDNN_BK IS NOT NULL THEN 1 ELSE 0 END ) > 1 THEN 'Yes' ELSE 'No' END AS BPB_PDCT_FLAG,	--CASE WHEN SUM( CASE WHEN ARRS.IS_IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 1 THEN 'Yes' ELSE 'No' END AS IS_IN_ARRS_FLAG,	--MIN( ARRS.IS_IN_ARRS_SNCE_D) AS IN_ARRS_DATE,	--CASE WHEN SUM( CASE WHEN ARRS.WAS_IN_ARRS_SNCE_D IS NOT NULL THEN 1 ELSE 0 END ) > 1 THEN 'Yes' ELSE 'No' END AS WAS_IN_ARRS_FLAG		FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCAINNER JOIN B_D36_V_BAL_001_STD_0.DIMN_DATE DD 	ON 1=1 	AND  DD.CALR_D BETWEEN PCA.EFFT_D AND PCA.EXPY_D	INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR0	-- Account Owner & Contact 	ON BAPR0.PATY_IDNN_BK = PCA.PATY_IDNN_BK	AND DD.CALR_D BETWEEN BAPR0.EFFT_D AND BAPR0.EXPY_D	INNER JOIN B_D36_V_USR_TEC_0.BV_BPB_ACCT_COLL_ARRS ARRS	ON ARRS.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK	AND DD.CALR_D = BUSN_D/*	INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPRX	-- Owner	ON BAPRX.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK	AND BAPRX.ACCT_PATY_REL_X <> 'Contact' 	AND DD.CALR_D BETWEEN BAPRX.EFFT_D AND BAPRX.EXPY_D		INNER JOIN (SELECT PATY_IDNN_BK, MNGE_BUSN_UNIT_C, EFFT_D, EXPY_D FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  ) PCA2	ON PCA2.PATY_IDNN_BK = BAPRX.PATY_IDNN_BK	AND DD.CALR_D BETWEEN PCA2.EFFT_D AND PCA2.EXPY_DINNER JOIN (	SELECT ARR1.ACCT_IDNN_BK, 		ARR1.BPB_COLL_PDCT_F, 		ARR1.BPB_PDCT_F,  		ARR1.IN_ARRS_SNCE_D AS IS_IN_ARRS_SNCE_D, ARR2.IN_ARRS_SNCE_D 		AS WAS_IN_ARRS_SNCE_D, ARR1.EFFT_D, ARR1.EXPY_D 	FROM B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ARR1	LEFT JOIN B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ARR2		ON ARR1.ACCT_IDNN_BK = ARR2.ACCT_IDNN_BK		AND ARR2.EXPY_D = ARR1.EFFT_D -1		WHERE ( ARR1.IN_ARRS_SNCE_D IS NOT NULL OR ARR2.IN_ARRS_SNCE_D IS NOT NULL )  AND  ARR1.BPB_COLL_PDCT_F = 'Yes'  		)	ARRS	ON ARRS.ACCT_IDNN_BK = BAPRX.ACCT_IDNN_BK	AND DD.CALR_D BETWEEN ARRS.EFFT_D AND ARRS.EXPY_D		JOIN (SELECT ACCT_IDNN_BK, BPB_PDCT_F, BPB_COLL_PDCT_F, IN_ARRS_SNCE_D, EFFT_D, EXPY_D FROM B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ) BACA1						--Owner BPB Product	ON BACA1.ACCT_IDNN_BK = BAPRX.ACCT_IDNN_BK 		--AND BACA1.BPB_PDCT_F = 'Yes'	AND BACA1.BPB_COLL_PDCT_F = 'Yes'  --ADDED	AND DD.CALR_D  BETWEEN BACA1.EFFT_D AND BACA1.EXPY_D	*//*LEFT JOIN (SELECT ACCT_IDNN_BK, BPB_COLL_PDCT_F, IN_ARRS_SNCE_D, EFFT_D, EXPY_D FROM B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR ) BACA3 			-- Owner In Arrs Day Earlier	--ON BACA3.ACCT_IDNN_BK = BACA2.ACCT_IDNN_BK 		ON BACA3.ACCT_IDNN_BK = BACA1.ACCT_IDNN_BK 		AND BACA3.BPB_COLL_PDCT_F = 'Yes' 	AND DD.CALR_D - 1 BETWEEN BACA3.EFFT_D AND BACA3.EXPY_D*/INNER JOIN P_V_SHR_001_STD_0.H_PATY HP	ON HP.PATY_IDNN_BK = PCA.PATY_IDNN_BKLEFT JOIN P_V_BUS_001_STD_0.S_PATY_GRUP_DETL  SG 	ON SG.PATY_IDNN_HK = HP.PATY_IDNN_HK 	AND DD.CALR_D BETWEEN SG.BUSN_STRT_D AND SG.BUSN_END_D	AND SG.PATY_GRUP_TYPE_C = 'SALE'	AND SG.EXPY_D = '9999-12-31'	AND SG.RECORD_DELETED_FLAG = 0--GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20  --,21WHERE 	( OWN_BPB_MNGE_F = 'Yes'   OR  BPB_PDCT_F = 'Yes'  ) 		AND	(			BUSN_D = IS_IN_ARRS_D  	-- New in Arrears			OR				(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )	   )     -- Already in arrears;    Change in attributes							OR			(WAS_IN_ARRS_F = 'Yes' AND IS_IN_ARRS_F = 'No')   -- Leaving arrears (Only needed for Acct & Paty Attributes	)) A	);","NULL","0","0","0","N ","NULL","NULL","2020-09-22 11:35:15","KOSTKAMA","2020-09-22 14:31:18","NULL","0","2020-09-22 13:33:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDGRD","GRD_RPRT_CALR_FNYR","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_PDGRD.GRD_RPRT_CALR_FNYR AS GDW2_RESTORE.GRD_RPRT_CALR_FNYR WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:47:51","PUDBAI016","2025-08-21 21:47:51","NULL","1","2025-08-22 11:36:58","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BV_RPRT_ENTY_HIER_BPB_ALL","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.BV_RPRT_ENTY_HIER_BPB_ALL( SNAP_D, ENTY_HIER_M, ENTY_NODE_C, ENTY_ANCS_NODE_C, ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_NODE_M, ENTY_NODE_X, ENTY_ANCS_NODE_M, ENTY_ANCS_NODE_X, ENTY_NODE_LEAF_F, ENTY_NODE_QLFY_C, ENTY_ANCS_NODE_QLFY_C, ENTY_NODE_DSPL_SEQN_N)-- ----------------------------------------------------------------------   Description : BV_RPRT_ENTY_HIER---- ----------------------------------------------------------------------  MODIFICATION HISTORY:--  VER      DATE     MODIFIED BY              DESCRIPTION--  ----  ----------  -------------------      ------------------------------  0.1   11/05/2015  Kartheek Matoor@matoorka  Initial Version.--  0.2   29/06/2015  Thomas Nguyen             Changed join clauses from between business dates to effective and expiry dates in Satellite joins--                                              Added Business end as high date clause in satellite joins--                                              Added record deleted flag in satellite joins--  0.3   08/08/2015  Prem                      Removed Business end & Expy date as high date clause in satellite joins --                                              Changed join clauses using both Business & Efft Dates to retrieve monthly snapshot of datasets in Satellite joins-- 0.4    24/08/2015  Prem                      Formatting Change and removed BV_DIMN_DATE View for derving Financial Month end Date-- 0.5   14/12/2015   Prem                      Added LAST_DAY(CURRENT_DATE)    condition-- 0.6   28/06/2016   Prem                      Changed join clauses using only Business & Dates in Satellite joins for Back Date capability----------------------------------------------------------------------- AS LOCKING ROW FOR ACCESS SELECT ANCS.SNAP_D, ANCS.ENTY_HIER_M, ANCS.ENTY_NODE_C, ANCS.ENTY_ANCS_NODE_C, ANCS.ENTY_LEVL_N, ANCS.ENTY_ANCS_LEVL_N, ANCS.ENTY_NODE_M, ANCS.ENTY_NODE_X, ANCS.ENTY_ANCS_NODE_M, ANCS.ENTY_ANCS_NODE_X, ANCS.ENTY_NODE_LEAF_F, ANCS.ENTY_NODE_QLFY_C, ANCS.ENTY_ANCS_NODE_QLFY_C, ANCS.ENTY_NODE_DSPL_SEQN_NFROM(SELECT    HHD1.HIER_NODE_C        AS ENTY_NODE_C,   HHD2.HIER_NODE_C        AS ENTY_ANCS_NODE_C,   'BPB_PRTF_DEPT_HIER_ALL'             AS ENTY_HIER_M,   SHD2.HIER_NODE_ANCS_LEVL_N    AS ENTY_ANCS_LEVL_N,   SHD2.HIER_NODE_LEVL_N         AS ENTY_LEVL_N,   SHN1.HIER_NODE_M        AS ENTY_NODE_M,   SHN2.HIER_NODE_M        AS ENTY_ANCS_NODE_M,   SHN1.HIER_NODE_X        AS ENTY_NODE_X,   SHN2.HIER_NODE_X        AS ENTY_ANCS_NODE_X,   SHD2.HIER_NODE_LEAF_F         AS ENTY_NODE_LEAF_F,   HHD1.HIER_NODE_QLFY_C        AS ENTY_NODE_QLFY_C,   HHD2.HIER_NODE_QLFY_C        AS ENTY_ANCS_NODE_QLFY_C,   SHD2.HIER_NODE_DSPL_SEQN_N    AS ENTY_NODE_DSPL_SEQN_N,   SHD1.SNAP_D FROM      (   SELECT SHD0.HIER_NODE_IDNN_HK         ,SNAP.SNAP_D         ,MAX(SNAP.CALR_D)          AS CALR_D       FROM (               SELECT CLND.CALR_D             ,CLND.CALR_MNTH_END_D  AS SNAP_D      FROM P_V_USR_TEC_0.DIMN_DATE   CLND            JOIN (         SELECT CAST(CAST(FNCL_YEAR_N-1 AS VARCHAR(10))||'-07-01' AS DATE) AS FY_STRT_D         FROM P_V_USR_TEC_0.DIMN_DATE    DD00                                      JOIN P_V_USR_TEC_0.R_CFIG_MAP   RCF0         ON    DD00.CALR_D = (CURRENT_DATE - CAST(TRIM(RCF0.OPUT_COLM_1) AS INTEGER))             WHERE RCF0.MAP_TYPE_M = 'RBS_PLSE_BAL_MAX_DATA'      )                                      STFY      ON    CLND.CALR_MNTH_END_D  BETWEEN STFY.FY_STRT_D                                       AND LAST_DAY(CURRENT_DATE)      --GROUP BY 1,2   )                                                           SNAP                 INNER JOIN  P_V_USR_TEC_0.S_HIER_NODE_HIER_NODE     SHD0 /*   ON    SNAP.CALR_D       BETWEEN SHD0.BUSN_STRT_D                                AND SHD0.BUSN_END_D*/   /*   AND   SNAP.CALR_D       BETWEEN SHD0.EFFT_D                                AND SHD0.EXPY_D*/   ON     SHD0.BUSN_STRT_D<=SNAP.CALR_D   AND   SHD0.RECORD_DELETED_FLAG = 0   AND   SHD0.EXPY_D = '9999-12-31'           AND   SHD0.HIER_M = 'BPB_PRTF_DEPT_HIER'    GROUP BY 1,2)                                                                 SHD1     INNER JOIN P_V_USR_TEC_0.S_HIER_NODE_HIER_NODE SHD2  ON (SHD1.HIER_NODE_IDNN_HK = SHD2.HIER_NODE_IDNN_HK) --AND SHD1.CALR_D BETWEEN SHD2.BUSN_STRT_D AND SHD2.BUSN_END_D/* AND SHD1.CALR_D BETWEEN SHD2.EFFT_D AND SHD2.EXPY_D*/ AND SHD2.BUSN_STRT_D<=SHD1.CALR_D AND SHD2.RECORD_DELETED_FLAG = 0 AND SHD2.HIER_M = 'BPB_PRTF_DEPT_HIER' AND SHD2.EXPY_D = '9999-12-31'       INNER JOIN P_V_USR_TEC_0.L_HIER_NODE_HIER_NODE LHD  ON (SHD2.HIER_NODE_HIER_NODE_IDNN_HK = LHD.HIER_NODE_HIER_NODE_IDNN_HK)  INNER JOIN  P_V_USR_TEC_0.H_HIER_NODE HHD1  ON (HHD1.HIER_NODE_IDNN_HK = LHD.HIER_NODE_IDNN_HK)  INNER JOIN  P_V_USR_TEC_0.H_HIER_NODE HHD2 ON (HHD2.HIER_NODE_IDNN_HK = LHD.REL_HIER_NODE_IDNN_HK)  INNER JOIN P_V_USR_TEC_0.S_HIER_NODE SHN1 ON (HHD1.HIER_NODE_IDNN_HK = SHN1.HIER_NODE_IDNN_HK) --AND SHD1.SNAP_D BETWEEN SHN1.BUSN_STRT_D AND SHN1.BUSN_END_D/* AND SHD1.SNAP_D BETWEEN SHN1.EFFT_D AND SHN1.EXPY_D*/ AND SHN1.BUSN_STRT_D<=SHD1.SNAP_D AND SHN1.RECORD_DELETED_FLAG = 0 AND SHN1.EXPY_D = '9999-12-31'  INNER JOIN P_V_USR_TEC_0.S_HIER_NODE SHN2 ON (HHD2.HIER_NODE_IDNN_HK = SHN2.HIER_NODE_IDNN_HK)/* AND SHD1.SNAP_D BETWEEN SHN2.BUSN_STRT_D AND SHN2.BUSN_END_D*//* AND SHD1.SNAP_D BETWEEN SHN2.EFFT_D AND SHN2.EXPY_D*/ AND SHN2.BUSN_STRT_D<=SHD1.SNAP_D AND SHN2.RECORD_DELETED_FLAG = 0 AND SHN2.EXPY_D = '9999-12-31'  QUALIFY ROW_NUMBER() OVER (                        PARTITION BY  HHD1.HIER_NODE_C,   													   HHD2.HIER_NODE_C,   													   'BPB_PRTF_DEPT_HIER_ALL',   													   SHD2.HIER_NODE_ANCS_LEVL_N,   													   SHD2.HIER_NODE_LEVL_N,   													   HHD1.HIER_NODE_QLFY_C,   													   HHD2.HIER_NODE_QLFY_C,   													   SHD1.SNAP_D                         ORDER BY  SHD2.BUSN_STRT_D DESC, SHN1.BUSN_STRT_D DESC, SHN2.BUSN_STRT_D DESC                          )      = 1)ANCS;","NULL","0","0","0","N ","NULL","NULL","2018-07-27 13:29:05","KOSTKAMA","2018-07-27 13:29:05","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","DERV_ACCT_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DERV_ACCT_PATY AS GDW2_RESTORE.DERV_ACCT_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:52:41","singhp80","2025-07-12 07:52:41","NULL","1059","2025-08-14 18:52:53","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_BASE_ACCT_BALN_GL2","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.FACT_BASE_ACCT_BALN_GL2--this base view will give All BALANCE details at daily level for all daily measures--this base view does not deal with measures which have back dated transactions--please pass SNAP_D & MSUR_CODE_IDNN_BK(measure code) value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but this view used new new code block structure.(      MSUR_CODE_IDNN_BK    ,BALN_TYPE_LEAF_IDNN_BK     ,SNAP_D    ,ACCT_IDNN_HK    ,GL_DEPT_IDNN_BK   ,GL_OPER_UNIT_IDNN_BK   ,GL_SRCE_IDNN_BK    ,GL_PRJC_IDNN_BK   ,GL_BUSN_UNIT_IDNN_BK   ,GL_AFLT_IDNN_BK   ,GL_PDCT_IDNN_BK   ,GL_ACCT_IDNN_BK   ,GL_CNCY_IDNN_BK    ,CNCY_IDNN_BK    ,USGE_CNCY_CATG_IDNN_BK    ,MSUR_A    ,MSTR_SRCE_SYST_C    ,EFFT_D    ,EXPY_D    ,EFFT_TS    ,EXPY_TS    ,RECD_ISRT_DTTM )AS LOCKING ROW FOR ACCESSSELECT     MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,'UNKNOWN' AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- CCS GL Code blocks Balances     SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C         =       'BALN'AND SMN.MSTR_SRCE_SYST_C    =       'GDW2-CCS'AND SMN.MSUR_CODE_IDNN_BK   NOT IN ('BALN_A')AND SMN.MSUR_A              <>       0UNION ALLSELECT -- ALL Code blocks except  CCS AND FRL    SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C       =        'BALN'AND SMN.MSTR_SRCE_SYST_C  NOT IN  ('GDW2-CCS','FRL')AND SMN.MSUR_A            <> 0     )                  MSURINNER JOIN    B_D16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code BlockINNER JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 UNION ALLSELECT     MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,COALESCE(SMI.MSUR_IDNN_SUB_BK     ,'UNKNOWN') AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- ALL Code blocks except  CCS AND FRL    SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_D16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C       =        'BALN'AND SMN.MSTR_SRCE_SYST_C  = 'GDW-AFS'AND SMN.MSUR_A            <> 0     )                  MSURINNER JOIN    B_D16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code BlockINNER JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND SMGL.MSTR_SRCE_SYST_C = 'GDW-AFS'                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 --fetch balance by balance type INNER JOIN    B_D16_V_BUS_001_STD_0.S_MSUR_IDNN      SMI   ON  MSUR.MSUR_IDNN_HK         = SMI.MSUR_IDNN_HK                                                AND SMI.MSTR_SRCE_SYST_C = 'GDW-AFS'                                                AND SMI.MSUR_IDNN_SUB_BK_M   IN ('BALN_TYPE_LEAF_IDNN_BK','ORIG_BALN_TYPE_C');","NULL","0","0","0","N ","NULL","NULL","2016-06-09 14:04:06","KOSTKAMA","2016-06-09 14:07:30","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_LOAN_TERM_PL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_LOAN_TERM_PLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_TERM_PLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_LOAN_TERM_PL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:15:56","perumabh","2025-07-14 22:15:56","NULL","1","2025-07-14 22:15:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PURP_PL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PURP_PLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_PLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_PL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:35","perumabh","2025-07-14 22:17:35","NULL","1","2025-07-14 22:17:35","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","INT_GRUP_EMPL","1","V ","F ","NN  ","perumabh","--Replace existing ViewREPLACE VIEW K_PVTECH.INT_GRUP_EMPL(        INT_GRUP_I,        EMPL_I,        EMPL_ROLE_C,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        ROW_SECU_ACCS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_EMPL FOR ACCESSSELECT        INT_GRUP_I,        EMPL_I,        EMPL_ROLE_C,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        SRCE_SYST_C,        VALD_FROM_D,        VALD_TO_D,        ROW_SECU_ACCS_C  FROM        K_STAR_CAD_PROD_DATA.INT_GRUP_EMPL WHERE(/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:38:20","perumabh","2025-07-14 22:38:20","NULL","1","2025-07-14 22:38:20","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_MACRO","sp_Get_Btch_Key","1","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","1","NULL","2025-07-14 23:18:56","perumabh","2025-07-14 23:18:56","NULL","1","2025-07-14 23:18:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PURP_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_HL AS GDW2_RESTORE.MAP_CSE_APPT_PURP_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:54","singhp80","2025-07-12 07:56:54","NULL","29","2025-08-13 15:57:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","BV_RSS_PDCT_RPRT_LINE_SHDW","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.BV_RSS_PDCT_RPRT_LINE_SHDW (        RPRT_MAP_IDNN_BK       ,DEPT_IDNN_BK                            ,GRD_PDCT_IDNN_BK       ,GRD_PDCT_IDNN_M       ,PERD_C       ,SNAP_D       ,REL_MNGE_NODE_C       ,SALE_CHNL_NODE_C       ,SHDW_TYPE_C       ,RVNU_A       ,MSUR_A       ,MSUR_Q       ,MSUR_R)-- ---------------------------------------------------------  SCRIPT NAME:  B_D02_V_EXP_001_STD_0.BV_RSS_PDCT_RPRT_LINE_SHDW ----  DESCRIPTION: --  ""Actual"" (FACT.SCNO_IDNN_BK = 'ACTL') Business Vault RSS Product Report Line, Export View----  MODIFICATION HISTORY:--  VER   DATE         MODIFIED BY    DESCRIPTION--  ----  ----------  -------------  ------------------------------  0.1   03/05/2016   Ali Shamim  @SMS shadow project-- -----------------------------------------------------AS LOCKING ROW FOR ACCESSSELECT  FACT.RPRT_MAP_IDNN_BK                      AS RPRT_MAP_IDNN_BK        ,FACT.DEPT_IDNN_BK                          AS DEPT_IDNN_BK          ,FACT.GRD_PDCT_IDNN_BK                      AS GRD_PDCT_IDNN_BK       ,COALESCE(PDC0.PDCT_LEAF_NODE_M, 'UNKNOWN') AS GRD_PDCT_IDNN_M       ,FACT.PERD_C                                AS PERD_C            ,FACT.SNAP_D                                AS SNAP_D            ,FACT.REL_MNGE_NODE_C                       AS REL_MNGE_NODE_C                  ,FACT.SALE_CHNL_NODE_C  AS  SALE_CHNL_NODE_C        ,COALESCE(RM.SHDW_TYPE_C, 'UNKNOWN') AS SHDW_TYPE_C       ,SUM(FACT.RVNU_A)                           AS RVNU_A       ,SUM(FACT.MSUR_A)                           AS MSUR_A                         ,SUM(FACT.MSUR_Q)                           AS MSUR_Q                               ,SUM(FACT.MSUR_R)                           AS MSUR_R                        FROM B_D02_D_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR FACTLEFT JOIN B_D02_D_BUS_001_STD_0.S_GRD_PDCT         PDC0ON    PDC0.PDCT_LEAF_NODE_C    = FACT.GRD_PDCT_IDNN_BKAND   PDC0.RECORD_DELETED_FLAG = FACT.RECORD_DELETED_FLAGAND   FACT.RECORD_DELETED_FLAG = 0AND   PDC0.EXPY_D              = DATE'9999-12-31'AND   FACT.SNAP_D     BETWEEN PDC0.BUSN_STRT_D                          AND PDC0.BUSN_END_D                  -- Join to get the maximum date of the month to be used to join to BV_RPRT_ENTY_HIER  since we have hierarchy at the month end levelINNER JOIN B_D02_D_BAL_001_STD_0.DIMN_DATE AS DDATON FACT.SNAP_D = DDAT.CALR_DLEFT OUTER JOIN (  SELECT              SNAP_D                                 AS SNAP_D          ,ENTY_NODE_C                     AS DEPT_IDNN_BK          ,ENTY_ANCS_NODE_C         AS SHDW_TYPE_C  FROM B_D02_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER               WHERE ENTY_HIER_M       = 'SHDW_TYPE_HIER'  AND   ENTY_NODE_LEAF_F  = 'Y'  AND   ENTY_LEVL_N-1     = ENTY_ANCS_LEVL_N  GROUP BY 1,2,3)                                                                                                    RMON    RM.DEPT_IDNN_BK  = FACT.SHDW_TYPE_C AND   RM.SNAP_D             = DDAT.CALR_MNTH_END_DWHERE FACT.SCNO_IDNN_BK        = 'ACTL'AND   FACT.EXPY_D              = DATE'9999-12-31'AND ((FACT.SALE_CHNL_NODE_C = 'ONLN' AND FACT.SHDW_TYPE_C IN ('COIN','SATD','COFN','COAP')) OR (FACT.SHDW_TYPE_C = 'UPFR'))GROUP BY 1,2,3,4,5,6,7,8,9;","NULL","0","0","0","N ","NULL","NULL","2016-08-11 16:20:09","kumarahe","2016-08-11 16:20:09","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_APPT_PDCT_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_PATY AS GDW2_RESTORE.TMP_APPT_PDCT_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:39","singhp80","2025-07-12 07:56:39","NULL","3","2025-07-12 06:02:12","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2021","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2021 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2021-01-02' and '2022-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","1","2025-08-06 18:19:27","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_RPAY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_RPAY AS GDW2_RESTORE.APPT_PDCT_RPAY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:44","singhp80","2025-07-12 07:55:44","NULL","28","2025-08-13 13:51:09","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_FA_PROP_CLNT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_FA_PROP_CLNT AS GDW2_RESTORE.TMP_FA_PROP_CLNT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:51","singhp80","2025-07-12 07:56:51","NULL","3","2025-07-12 06:02:22","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_FEAT_OVRD_REAS_HL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HL AS GDW2_RESTORE.MAP_CSE_FEAT_OVRD_REAS_HL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:56","singhp80","2025-07-12 07:56:56","NULL","29","2025-08-14 12:07:05","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_FEAT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_FEATAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FEATFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FEAT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:52","perumabh","2025-07-14 22:17:52","NULL","1","2025-07-14 22:17:52","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Kattas1","DBC_Daily_Tperf_new","1","V ","F ","NN  ","Kattas1","REPLACE VIEW kattas1.DBC_Daily_Tperf_newASselLogDate,UserName,PROCESS_NAME,sum(TperfHr) as TperfHr,sum(Sum_ImpactTPerfHour) as Sum_ImpactTPerfHour,sum(CPUSkewPercentage) as CPUSkewPercentage,sum(Max_AMPCPUSecs) as Max_AMPCPUSecs,sum(ImpactCPUSecs) as ImpactCPUSecs,sum(ImpactSpoolUsage) as ImpactSpoolUsage,sum(TotalIOCount)  as TotalIOCount,sum(NumResultRows) as NumResultRows from(SELECT             CAST( dlt.COLLECTTIMESTAMP AS DATE ) AS LogDate ,dlt.UserName ,PRC.PROCESS_NAME,dlt.StartTime AS Start_Time , dlt.FirstRespTime AS End_Time ,(( dlt.AMPCPUTime *  1.15 * 1040   ) / ( 16 * 48 * 3600  )  ) ( DEC ( 8 ,2 ) ) AS TperfHr ,  ( ImpactCPUSecs * 1.15 * 3872) / ( 16 * 48 * 3600) AS Sum_ImpactTPerfHour ,-- ( ( dlt.FirstRespTime - dlt.StartTime ) HOUR TO SECOND( 2 )  ) AS QryRespTime ,CASE   WHEN   dlt.AMPCPUTime < 1   OR  ( dlt.AMPCPUTimeNorm / ( HASHAMP ( ) + 1  )  ) = 0 THEN 0 ELSE  dlt.MaxAMPCPUTimeNorm / ( dlt.AMPCPUTimeNorm / ( HASHAMP ( ) + 1  )  ) END     ( DEC ( 8 , 2 ) ) AS CPUSkewRatio , CASE      WHEN   CPUSkewRatio < 1                 OR      ( 100 - ( 100 / CPUSkewRatio  ) = 0 ) THEN 0 ELSE  100 - ( 100 / CPUSkewRatio  ) END     ( DEC ( 8 , 2 ) ) AS CPUSkewPercentage , CASE      WHEN   dlt.AMPCPUTime < 1                 OR      ( dlt.TotalIOCount / ( HASHAMP ( ) + 1  )  ) = 0 THEN 0 ELSE  dlt.MaxAMPIO / ( dlt.TotalIOCount / ( HASHAMP ( ) + 1  )  ) END     ( DEC ( 8 , 2 ) ) AS IOSkewRatio , CASE      WHEN   IOSkewRatio < 1                 OR      ( 100 - ( 100 / IOSkewRatio  )  ) = 0 THEN 0 ELSE  100 - ( 100 / IOSkewRatio  ) END     ( DEC ( 5 , 2 ) ) AS IOSkewPercentage , dlt.AMPCPUTime(DEC ( 14 ,                                4 ) ) AS AMPCPUSecs , dlt.MaxAMPCPUTime(DEC ( 14 , 4 ) ) AS Max_AMPCPUSecs ,                                dlt.MaxAMPCPUTime * ( HASHAMP ( ) + 1  ) ( DEC ( 14 , 2 ) ) AS ImpactCPUSecs ,                                dlt.TotalIOCount , dlt.SpoolUsage , dsst.QueryMaxAMPSpool * ( HASHAMP ( ) + 1  ) AS ImpactSpoolUsage ,                                CASE                 WHEN   dlt.AMPCPUTime < 1                 OR      dlt.TotalIOCount = 0 THEN 0 ELSE  ( dlt.AMPCPUTime * 1000  ) / dlt.TotalIOCount END     ( DEC ( 6 , 2 ) ) AS PJI , CASE      WHEN   dlt.AMPCPUTime < 1                 OR      dlt.AMPCPUTime = 0 THEN 0 ELSE  dlt.TotalIOCount / ( dlt.AMPCPUTime * 1000  ) END     ( DEC ( 6 , 2 ) ) AS UII , dlt.ParserCPUTime , dlt.NumofActiveAmps ,dlt.NumResultRows , dlt.StatementType , dlt.""ErrorCode"" ,dlt.ErrorText FROM DBC.QryLog dlt INNER JOIN dbc.QryLogSQL dst                 ON      dst.QueryID = dlt.QueryID                 AND      dst.ProcId = dlt.ProcId                 AND      CAST( dst.COLLECTTIMESTAMP AS DATE ) = CAST( dlt.COLLECTTIMESTAMP AS DATE )                 AND      dst.SQLRowNo = 1 INNER JOIN ( SELECT             QueryId , CAST( COLLECTTIMESTAMP AS DATE ) AS COLLECTTIMESTAMP ,                                ProcId , MAXIMUM ( MaxAMPSpool ) AS QueryMaxAMPSpool FROM DBC.QryLogSteps GROUP BY 1 , 2 , 3 ) dsst                 ON      dsst.QueryID = dlt.QueryID                 AND      dsst.ProcId = dlt.ProcId                 AND      CAST( dsst.COLLECTTIMESTAMP AS DATE ) = CAST( dlt.COLLECTTIMESTAMP AS DATE )                 INNER JOIN                        (SELECT  DISTINCT UPDATE_USER ,PROCESS_NAMEfrom      B_S00_V_TCF_001_STD_0.CTLFW_execution_log WHERE STREAM_KEY IN (1347,1348,1243)  ) PRCON     dlt.UserName=PRC.update_user  )  xx  group by 1,2,3","NULL","0","0","0","N ","NULL","NULL","2016-11-03 15:30:25","Kattas1","2017-12-16 07:37:21","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"karsa","BV_RSS_PRTF_PLAN","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.BV_RSS_PRTF_PLAN-- ----------------------------------------------------------------------- VIEW NAME:     B_S42_V_BAL_001_STD_0.BV_RSS_PRTF_PLAN---- DESCRIPTION: One to One View on top of B_S42_V_BAL_001_STD_0.BV_RSS_PRTF_PLAN--                         ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------- 1.0	2018-02-22			Prem				 Initial Verison-- -------------------------------------------------------------------------(   PRTF_IDNN_BK  ,DEPT_IDNN_BK  ,MSUR_HIER_NODE_IDNN_BK  ,PDCT_HIER_NODE_IDNN_BK  ,MSUR_TYPE_C  ,PERD_D  ,PERD_C  ,PLAN_A  ,PLAN_Q  ,PLAN_R  ,MSTR_SRCE_SYST_C  ,EFFT_D  ,EXPY_D)AS LOCKING ROW FOR ACCESSSELECT   PRTF.PRTF_IDNN_BK                  AS PRTF_IDNN_BK  ,DEPT1.DEPT_IDNN_BK                 AS DEPT_IDNN_BK  ,MSUR.HIER_NODE_C                   AS MSUR_HIER_NODE_IDNN_BK  ,PDCT.HIER_NODE_C                   AS PDCT_HIER_NODE_IDNN_BK  ,HIER.OPUT_COLM_2                   AS MSUR_TYPE_C  ,PLAN.PERD_D  ,PLAN.PERD_C  ,PLAN.PLAN_A  ,PLAN.PLAN_Q  ,PLAN.PLAN_R  ,PLAN.MSTR_SRCE_SYST_C  ,PLAN.EFFT_D  ,PLAN.EXPY_D  FROM B_S42_D_BUS_001_STD_0.LT_PRTF_PLAN                       PLAN                                                              JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                        MSURON PLAN.MSUR_HIER_NODE_IDNN_HK = MSUR.HIER_NODE_IDNN_HK       AND MSUR.HIER_NODE_QLFY_C = 'MSUR'                            AND MSUR.EXPY_D = DATE '9999-12-31'                                                                                         JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE                        PDCTON PLAN.PDCT_HIER_NODE_IDNN_HK = PDCT.HIER_NODE_IDNN_HK       AND PDCT.HIER_NODE_QLFY_C = 'PDCT'                            AND PDCT.EXPY_D = DATE '9999-12-31'                                                                                         JOIN B_S42_V_SHR_001_STD_0.H_PRTF                             PRTFON PLAN.PRTF_IDNN_HK = PRTF.PRTF_IDNN_HKAND PRTF.RECORD_DELETED_FLAG = 0AND PRTF.EXPY_D = DATE '9999-12-31'--Use the Config Entries for MSUR MappingINNER JOIN (    SELECT  CNFG.OPUT_COLM_1          , CNFG.OPUT_COLM_2             , CNFG.BUSN_STRT_D          , CNFG.BUSN_END_D                      FROM B_S42_V_REF_001_STD_0.R_CFIG_MAP                     CNFG                                                                  INNER  JOIN B_S42_V_BUS_001_STD_0.H_HIER_NODE             NODE    ON  CNFG.OPUT_COLM_1= NODE.HIER_NODE_C                        AND  NODE.HIER_NODE_QLFY_C = 'MSUR'                                                                                         WHERE MAP_TYPE_M = 'RSS_PLSE_MSUR_MAP'                        AND CNFG.EXPY_D = '9999-12-31'                                AND CNFG.RECORD_DELETED_FLAG = 0     AND CNFG.OPUT_COLM_6 = 'PLN'                           GROUP BY 1,2 ,3,4                                            )                                                             HIERON MSUR.HIER_NODE_C = HIER.OPUT_COLM_1AND  PLAN.PERD_D BETWEEN HIER.BUSN_STRT_D AND HIER.BUSN_END_DINNER JOIN(SELECT        LPRTF.PRTF_IDNN_HK      ,DEPT0.DEPT_IDNN_BK      ,SPRTF.BUSN_STRT_D      ,SPRTF.BUSN_END_D      ,SPRTF.PRTF_DEPT_ROLE_C     FROM B_S42_V_SHR_001_STD_0.H_PRTF                             PRTF          INNER JOIN B_S42_V_SHR_001_STD_0.L_PRTF_DEPT                  LPRTF     ON  LPRTF.PRTF_IDNN_HK = PRTF.PRTF_IDNN_HK     AND LPRTF.EXPY_D = DATE '9999-12-31'     AND LPRTF.RECORD_DELETED_FLAG = 0     INNER JOIN B_S42_V_BUS_001_STD_0.S_PRTF_DEPT                  SPRTF                             ON  LPRTF.PRTF_DEPT_IDNN_HK   = SPRTF.PRTF_DEPT_IDNN_HK     AND LPRTF.PRTF_IDNN_HK        = SPRTF.PRTF_IDNN_HK     AND SPRTF.RECORD_DELETED_FLAG = 0     AND SPRTF.EXPY_D              = DATE '9999-12-31'     INNER JOIN B_S42_V_SHR_001_STD_0.H_DEPT                  DEPT0     ON  DEPT0.DEPT_IDNN_HK        = LPRTF.DEPT_IDNN_HK     AND DEPT0.RECORD_DELETED_FLAG = 0     AND DEPT0.EXPY_D              = DATE '9999-12-31'     GROUP BY 1,2,3,4,5) DEPT1ON  PLAN.PRTF_IDNN_HK = DEPT1.PRTF_IDNN_HKWHERE PLAN.RECORD_DELETED_FLAG = 0AND   PLAN.EXPY_D = DATE '9999-12-31';","NULL","0","0","0","N ","NULL","NULL","2020-11-13 11:31:03","karsa","2020-11-13 11:31:03","NULL","0","2020-12-06 08:43:15","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_OFFR","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_OFFR AS GDW2_RESTORE.ACCT_OFFR WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:48:00","PUDBAI016","2025-08-21 21:48:00","NULL","1","2025-08-22 11:36:38","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_MACRO","sp_ds_get_pros_key","5","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:19:15","perumabh","2025-07-14 23:25:47","NULL","5","2025-07-14 23:25:48","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ENV_PATY_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_REL AS GDW2_RESTORE.MAP_CSE_ENV_PATY_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:53","singhp80","2025-07-12 07:56:53","NULL","30","2025-08-14 12:03:48","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_REL AS GDW2_RESTORE.APPT_PDCT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:47","singhp80","2025-07-12 07:55:47","NULL","29","2025-08-13 13:49:16","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDCBODS","ODS_RULE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDCBODS.ODS_RULE AS GDW2_RESTORE.ODS_RULE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:03","singhp80","2025-07-12 07:57:03","NULL","84","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","prtf_test","1","V ","F ","NN  ","KOSTKAMA","replace view kostkama.prtf_test as (    SEL                       AD.BUSINESS_DATE AS BUSN_STRT_D,                CAST('BPB_PRTF_DEPT_HIER' AS VARCHAR(20)) AS HIER_M,                CAST('GDW' AS VARCHAR(10)) AS MSTR_SRCE_SYST_C,	            CAST('ANCS' AS VARCHAR(10)) AS ROLE_C,                BASE.ENTY_NODE_C AS  HIER_NODE_C,                BASE.ENTY_ANCS_NODE_C AS ANCS_HIER_NODE_C,                BASE.ENTY_NODE_QLFY_C AS HIER_NODE_QLFY_C,                BASE.ENTY_LEVL_N AS HIER_NODE_LEVL_N,                BASE.ENTY_ANCS_LEVL_N AS HIER_NODE_ANCS_LEVL_N ,                BASE.ENTY_NODE_M AS HIER_NODE_M,                CASE     WHEN NODE_X_OFFS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'        ELSE NODE_X_OFFS.OPUT_COLM_1 END AS HIER_NODE_X,                BASE.ENTY_ANCS_NODE_M AS ANCS_HIER_NODE_M,                CASE   WHEN NODE_X_ANCS.OPUT_COLM_1 IS NULL THEN 'NON MANAGED'         ELSE NODE_X_ANCS.OPUT_COLM_1 END AS ANCS_HIER_NODE_X,                                            ENTY_ANCS_NODE_QLFY_C AS ANCS_HIER_NODE_QLFY_C,                            BASE.ENTY_NODE_LEAF_F AS HIER_NODE_LEAF_F,                                 CASE   WHEN BASE.ENTY_NODE_QLFY_C = 'DEPT' THEN MEMB.DSPL_SEQN_N                                 WHEN BASE.ENTY_NODE_QLFY_C <> 'DEPT' AND ENTY_LEVL_N - ENTY_ANCS_LEVL_N < 3 THEN row_number() OVER (PARTITION BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_C ORDER BY ENTY_LEVL_N, ENTY_ANCS_LEVL_N, ENTY_ANCS_NODE_M, ENTY_NODE_M, ENTY_NODE_C ASC)                                ELSE 1                                END AS HIER_NODE_DSPL_SEQN_N         FROM (                                                                                      /* Relationships between intermediate department levels - combinations between level 1 and 4 */                                                                                                               SEL       OFFSPRING_ANCS_DEPT_NODE_C AS ENTY_NODE_C                                                                    , DN_OFFS.NODE_M AS ENTY_NODE_M                                                                    , 'DEPT' AS ENTY_NODE_QLFY_C                                                                    , ANCS_ANCS_DEPT_NODE_C AS ENTY_ANCS_NODE_C                                                                    , DN_ANCS.NODE_M AS ENTY_ANCS_NODE_M                                                                    , 'DEPT' AS ENTY_ANCS_NODE_QLFY_C                                                                                                                                                                                                                                                                               , OFFSPRING_ANCS_LEVL_N AS ENTY_LEVL_N                                                                    , ANCS_ANCS_LEVL_N AS ENTY_ANCS_LEVL_N                                                                    , CASE    WHEN OFFSPRING_ANCS_DEPT_NODE_C = DEPT_IDNN_BK THEN 'Y'                                                                      WHEN OFFSPRING_ANCS_LEVL_N = 5 THEN 'Y' ELSE 'N' END AS ENTY_NODE_LEAF_F                                                                                                                                                                                   FROM  (                                                                                                                            SEL DEPT_IDNN_BK,                                                                            OFFSPRING.DEPT_NODE_C    AS DEPT_NODE_C,                                                                            OFFSPRING.ANCS_DEPT_NODE_C      AS OFFSPRING_ANCS_DEPT_NODE_C,                                                                            OFFSPRING.ANCS_LEVL_N      AS OFFSPRING_ANCS_LEVL_N,                                                                            ANCS.ANCS_DEPT_NODE_C       AS ANCS_ANCS_DEPT_NODE_C,                                                                            ANCS.ANCS_LEVL_N        AS ANCS_ANCS_LEVL_N                                                                                                                                                FROM  B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR OFFSPRING                                                                                                                                        INNER JOIN  B_S17_V_COX_001_STD_0.GRD_DEPT_ANCS_CURR ANCS                                                                                        ON ANCS.DEPT_NODE_C = OFFSPRING.DEPT_NODE_C                                                                                         AND ANCS.ANCS_LEVL_N <= OFFSPRING.ANCS_LEVL_N                                                                                                                                                             INNER JOIN          B_S17_V_SHR_001_STD_0.H_DEPT HD    ON HD.DEPT_IDNN_BK = OFFSPRING.DEPT_NODE_C                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM  B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730' GROUP BY 1,2)  GDH ON GDH.DEPT_LEAF_NODE_C= OFFSPRING.DEPT_NODE_C                                                                                                                                          WHERE OFFSPRING.ANCS_LEVL_N <=4                                                                                                                                          QUALIFY               ROW_NUMBER() OVER (PARTITION BY OFFSPRING_ANCS_DEPT_NODE_C,  ANCS_ANCS_DEPT_NODE_C ORDER BY OFFSPRING_ANCS_DEPT_NODE_C, ANCS_ANCS_DEPT_NODE_C ASC) = 1                                                                                                                             ) BASE1                                                                                                                            INNER JOIN        (SELECT DEPT_L2_NODE_C, DEPT_LEAF_NODE_C FROM  B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR WHERE DEPT_L2_NODE_C= 'NDEPT902730'GROUP BY 1,2)  GDF ON GDF.DEPT_LEAF_NODE_C = BASE1.DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM  B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_OFFS ON DN_OFFS.NODE_C = BASE1.OFFSPRING_ANCS_DEPT_NODE_C                                                        INNER JOIN        (SEL DEPT_NODE_C AS NODE_C, DEPT_NODE_M AS NODE_M FROM  B_S17_V_COX_001_STD_0.GRD_DEPT_MEMB_CURR GROUP BY 1,2) DN_ANCS ON DN_ANCS.NODE_C = BASE1.ANCS_ANCS_DEPT_NODE_C                                                        WHERE                ENTY_NODE_LEAF_F = 'N'                                                                                                       QUALIFY               ROW_NUMBER() OVER (PARTITION BY ENTY_NODE_C,  ENTY_ANCS_NODE_C ORDER BY ENTY_NODE_C, ENTY_ANCS_NODE_C ASC) = 1                                        UNION ALL                                                                                                 /* Empl vs. Prtf vs. Team vs. Leaf dept Relationships */                                                                                            SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_ANCS_NODE_C,                                                                                          ENTY_ANCS_NODE_M,                                                                                          ENTY_ANCS_NODE_QLFY_C,                                                                                           ENTY_LEVL_N,                                                                                          ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                           FROM                       B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER APHR                                                                                     INNER JOIN           B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDF ON GDF.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDF.DEPT_L2_NODE_C = 'NDEPT902730'                              --AND '2017-03-07' BETWEEN SDH.BUSN_STRT_D AND SDH.BUSN_END_D                                                                                                                                                                                       UNION ALL                                                                                                                                                /* Empl, Prtf, Team, Dept    vs. insetf   relationships */                                                                                                              SEL                           ENTY_NODE_C,                                                                                           ENTY_NODE_M,                                                                                          ENTY_NODE_QLFY_C,                                                                                           ENTY_NODE_C AS ENTY_ANCS_NODE_C,                                                                                          ENTY_NODE_M AS ENTY_ANCS_NODE_M,                                                                                          ENTY_NODE_QLFY_C AS ENTY_ANCS_NODE_QLFY_C,                                                                                          ENTY_LEVL_N AS ENTY_NODE_LEVL_N,                                                                                          ENTY_LEVL_N AS ENTY_ANCS_LEVL_N,                                                                                          'Y' AS ENTY_NODE_LEAF_F                                                                                                                                                                                                                                                                                                                              FROM                    (  SEL DISTINCT   ENTY_NODE_C, ENTY_NODE_QLFY_C, ENTY_NODE_M,ENTY_LEVL_N                                                                                            FROM                       B_S17_D_INP_001_STD_0.SB_136_01_ANCS_PRTF_HIER  APHR                                                                                            INNER JOIN         B_S17_V_COX_001_STD_0.GRD_DEPT_FLAT_CURR GDH ON GDH.DEPT_LEAF_NODE_C = APHR.DEPT_IDNN_BK AND GDH.DEPT_L2_NODE_C = 'NDEPT902730'                                                                                            WHERE                ENTY_NODE_QLFY_C <> 'DEPT'                                                                                     ) BASE1                                                                                                                                           UNION ALL                                                                                            /* Empl / Prtf / Team / Dept    vs. Intermediate (Lvl 1-to-4) dept node Relationships */                                                                                                                              SEL                           ENTY_NODE_C,                                                                                               ENTY_NODE_M,                                                                                              ENTY_NODE_QLFY_C,                                                                                               ANCS_DEPT_NODE_C AS ENTY_ANCS_NODE_C,                                                                           ","NULL","0","0","0","N ","NULL","NULL","2017-05-01 15:43:48","KOSTKAMA","2017-05-01 16:08:37","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","R_GL_MSUR_HIER_ANCS","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.R_GL_MSUR_HIER_ANCS AS (	SEL 	DISTINCT LEVEL_1_MSUR_C AS MSUR_NODE_C, LEAF_MSUR_C FROM B_D17_D_BUS_001_STD_0.R_GL_MSUR_HIER					UNION ALL	SEL 	DISTINCT LEVEL_2_MSUR_C AS MSUR_NODE_C, LEAF_MSUR_C FROM B_D17_D_BUS_001_STD_0.R_GL_MSUR_HIER	UNION ALL					SEL 	DISTINCT LEVEL_3_MSUR_C AS MSUR_NODE_C, LEAF_MSUR_C FROM B_D17_D_BUS_001_STD_0.R_GL_MSUR_HIER							);","NULL","0","0","0","N ","NULL","NULL","2018-03-20 15:10:45","KOSTKAMA","2018-03-20 15:31:17","NULL","1","2023-07-14 03:38:05","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"karsa","TX_125_33_EMPL_PLAN_STG2_NPT","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.TX_125_33_EMPL_PLAN_STG2_NPT  AS (SELECT    PLAN.HIER_NODE_IDNN_HK ,PLAN.FNYR_C --,PLAN.MNTH_C --,PLAN.RDS_JOB_FMLY_C ,PLAN.DEPT_ID AS RDS_DEPT_I ,COALESCE(BRL.GRD_PDCT_NODE_C, DCRL.GRD_PDCT_NODE_C) AS RDS_PDCT_I ,PLAN.RPRT_LINE_I ,COALESCE(BRL.MSUR_NODE_C,DCRL.MSUR_NODE_C) AS RPS_MSUR_I ,PLAN.POSN_C AS RPS_POSN_I ,PLAN.PLAN_V AS VALU_X ,PLAN.MSTR_SRCE_SYST_C --FROM  P_V_USR_TEC_0.S_PLSE_PLAN_POSN_MNLY                  PLANFROM B_S42_D_RAW_001_STD_0.S_RBS_ANNL_POSN_PLAN                                    PLANLEFT JOIN (	SELECT	RPRT_LINE_I	,MSUR_NODE_C	,CASE WHEN GRD_PDCT_NODE_C = 'NA' THEN 'PROD' 	ELSE GRD_PDCT_NODE_C END AS GRD_PDCT_NODE_C	,BUSN_STRT_D	,BUSN_END_D--	SELECT *	FROM B_S42_D_REF_001_STD_0.MAP_RSS_EMPL_RPRT_LINE	WHERE SCNO_C <> 'A' 	AND MSUR_TYPE_C='ACTL'	AND EXPY_D='9999-12-31'  	AND RECORD_DELETED_FLAG=0	GROUP BY 1,2,3,4,5) BRLON PLAN.RPRT_LINE_I = BRL.RPRT_LINE_ILEFT JOIN (	SELECT	RPRT_LINE_I	,MSUR_NODE_C	,CASE WHEN GRD_PDCT_NODE_C = 'NA' THEN 'PROD' 	ELSE GRD_PDCT_NODE_C END AS GRD_PDCT_NODE_C	,BUSN_STRT_D	,BUSN_END_D--	SELECT *	FROM B_S42_D_REF_001_STD_0.MAP_RBS_DIRC_CHNL_EMPL_RPRT_LINE	WHERE SCNO_C <> 'A' 	AND MSUR_TYPE_C='ACTL'	AND EXPY_D='9999-12-31'  	AND RECORD_DELETED_FLAG=0	GROUP BY 1,2,3,4,5) DCRLON PLAN.RPRT_LINE_I = DCRL.RPRT_LINE_IWHERE FNYR_C = 'FY21'AND EXPY_D = '9999-12-31'AND RECORD_DELETED_FLAG = 0);","NULL","0","0","0","N ","NULL","NULL","2020-11-18 15:23:30","karsa","2020-11-18 15:23:30","NULL","0","2020-11-18 15:23:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarahe","R_ID_Test_TRAL_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  kumarahe.R_ID_Test_TRAL_ST	(  IN_R_ID VARCHAR(50)	  ,MNTH_STRT_D DATE 	  ,MNTH_END_D DATE	) AS 	( 	 	SELECT  	        TRAL.R_ID	       ,TRAL.DEPT_I AS TRL_DEPT_I	       ,TRAL.PERD_D AS TRL_PERD_D	       ,TRAL.MSUR_C AS TRL_MSUR_C	       ,TRAL.PDCT_I AS TRL_PDCT_I	       ,TRAL.BICD_PDCT_C AS TRL_BICD_PDCT_C	       ,TRAL.TRL_V	       ,TRAL.TRL_C		       ,DEPT_KPI.*	       -- --------------------------------------------   	       ,DEPT_KPI.A_V AS DIFF_A_V               -- For all trail plan , ACTL values are not applicable and should be populated as Zero	       ,DEPT_KPI.A_C AS DIFF_A_C               -- For all trail plan , ACTL values are not applicable and should be populated as Zero	       ,TRAL.TRL_V - DEPT_KPI.P_V AS DIFF_P_V	       ,TRAL.TRL_C - DEPT_KPI.P_C AS DIFF_P_C	       -- -----------------------------------------------	       ,CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'	          ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching' 	                    ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'	                               ELSE '3.Not Matching'  	                         END      	               END      	        END  X_DIFF_A_V	       	       ,CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'	          ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching' 	                    ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'	                               ELSE '3.Not Matching'  	                         END      	               END      	        END  X_DIFF_A_C	       	       ,CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'	          ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching' 	                    ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'	                               ELSE '3.Not Matching'  	                         END      	               END      	         END  X_DIFF_P_V	       	       ,CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'	          ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching' 	                    ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'	                               ELSE '3.Not Matching'  	                         END      	               END      	        END  X_DIFF_P_C                   		FROM 	(	    SELECT  PDCT.R_ID	       ,TRAL.DEPT_I 	       ,TRAL.PDCT_I 	       ,PDCT.BICD_PDCT_C	       ,TRAL.PERD_D	       ,DEPT.ENTY_NODE_X 	       ,PDCT.MSUR_C 	       ,PDCT.REVE_MULTI_V	       	       ,SUM(TRAL.HY_LEAD_AVGCLOSINGBAL) SUM_HY_LEAD_AVGCLOSINGBAL   	       ,SUM(TRAL.YTD_PLN_NBG)           SUM_YTD_PLN_NBG   	       ,SUM(TRAL.YTD_TRFIN)             SUM_YTD_TRFIN   	       ,SUM(TRAL.YTD_TRFOUT)            SUM_YTD_TRFOUT   		       ,CASE WHEN PDCT.MSUR_C  = 'LEADINAVGCLBALHY_A' THEN SUM(TRAL.HY_LEAD_AVGCLOSINGBAL) 	             WHEN PDCT.MSUR_C  = 'TRFIN_A'            THEN SUM(TRAL.YTD_TRFIN)	             WHEN PDCT.MSUR_C  = 'TRFOUT_A'           THEN SUM(TRAL.YTD_TRFOUT)    	             WHEN PDCT.MSUR_C  = 'PLN_NBG_A'          THEN SUM(TRAL.YTD_PLN_NBG) 	             ELSE 0 	        END  AS TRL_V	       	       ,CAST((TRL_V * PDCT.REVE_MULTI_V ) AS DECIMAL(15,5)) AS TRL_C		    FROM A_S07_D_TMP_001_STD_0.T_TRAIL_PLAN TRAL	    INNER JOIN 	    ( 	       SELECT   	         R_ACTL.OPUT_COLM_1  AS R_ID	       , R_ACTL.INPT_COLM_3  AS MSUR_C 	       , R_ACTL.INPT_COLM_2  AS BICD_PDCT_C 	       , R_ACTL.INPT_COLM_8  AS PERD_C 	       , R_ACTL.INPT_COLM_10 AS AP_SPLIT_C	       , R_ACTL.INPT_COLM_9  AS ACTL_MULTI_V  	       , R_REVE.INPT_COLM_9  AS REVE_MULTI_V  	       , PDCT.PLSE_PDCT_C    AS PLSE_PDCT_C	       , R_ACTL.INPT_COLM_4  AS RM_TYPE_C	       	       FROM  A_S07_V_REF_001_STD_0.R_CFIG_MAP R_ACTL 	       INNER JOIN A_S07_V_REF_001_STD_0.R_CFIG_MAP R_REVE 	       ON  R_ACTL.OPUT_COLM_1  = R_REVE.OPUT_COLM_1 	       AND R_ACTL.INPT_COLM_3  = R_REVE.INPT_COLM_3	       AND R_ACTL.INPT_COLM_2  = R_REVE.INPT_COLM_2	       AND R_ACTL.INPT_COLM_8  = R_REVE.INPT_COLM_8	       AND R_ACTL.INPT_COLM_10 = R_REVE.INPT_COLM_10	       	       LEFT JOIN  A_S07_D_MGTR.PLSE_BICD_PDCT_MAP PDCT 	       ON R_ACTL.INPT_COLM_2 = PDCT.BICD_PDCT_C 	       	       WHERE R_ACTL.OPUT_COLM_1    = :IN_R_ID 	       AND R_ACTL.INPT_COLM_1      = 'ACTL'	       AND R_ACTL.MAP_TYPE_M       = 'RPRT_IDNN' 	       AND R_ACTL.MSTR_SRCE_SYST_C = 'GDW2'	       AND R_ACTL.BUSN_UNIT_C      = 'RBS' 		       AND R_REVE.OPUT_COLM_1      = :IN_R_ID 	       AND R_REVE.INPT_COLM_1      = 'REVE'	       AND R_REVE.MAP_TYPE_M       = 'RPRT_IDNN' 	       AND R_REVE.MSTR_SRCE_SYST_C = 'GDW2'	       AND R_REVE.BUSN_UNIT_C      = 'RBS' 	       	    ) PDCT	      	    ON TRAL.PDCT_I =   PDCT.PLSE_PDCT_C	    AND CASE WHEN SUBSTR(TRAL.MSUR_CALC_I,1,2) = 'HY'  THEN 'HYTD'	             WHEN SUBSTR(TRAL.MSUR_CALC_I,1,2) = 'FY'  THEN 'FYTD'	        END  = PDCT.PERD_C       	    	    INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT	    ON  SUBSTR(TRAL.DEPT_I,6) = DEPT.ENTY_NODE_C	    AND DEPT.ENTY_HIER_M = 'DEPT'	    AND DEPT.ENTY_NODE_X = 'DT_BRANCH'	    AND DEPT.SNAP_D      = :MNTH_END_D	    AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C	                    	    WHERE TRAL.PERD_D = :MNTH_END_D	    AND  ( PDCT.RM_TYPE_C = 'NA' 	           OR   	           TRAL.RM_TYPE_C IN 	            (	            SEL DISTINCT  RM00.ENTY_NODE_C	            	            FROM  A_S07_D_REF_001_STD_0.R_CFIG_MAP                RCFIG	            INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER    RM00	            ON   RM00.ENTY_ANCS_NODE_C      = RCFIG.INPT_COLM_4   	            	            WHERE RM00.ENTY_NODE_QLFY_C      = 'REL_MNGE_TYPE'	            AND   RM00.ENTY_ANCS_NODE_QLFY_C = 'REL_MNGE_TYPE'	            AND   RM00.ENTY_HIER_M           = 'RM_SALE_CHNL_HIER'	            AND   RM00.ENTY_NODE_X           IS NULL  	            AND   RM00.SNAP_D                = :MNTH_END_D	            	            AND  RCFIG.OPUT_COLM_1     = :IN_R_ID 	            AND RCFIG.INPT_COLM_1      = 'ACTL'	            AND RCFIG.MAP_TYPE_M       = 'RPRT_IDNN' 	            AND RCFIG.MSTR_SRCE_SYST_C = 'GDW2'	            AND RCFIG.BUSN_UNIT_C      = 'RBS' 	            )	        )   	    GROUP BY 1,2,3,4,5,6,7,8	    HAVING TRL_V <> 0       	    	) TRAL		FULL JOIN 	(	-----------------------------------------------------------------	    --FACT_KPI-DATA	    SELECT  'NDEPT' || DEPT_I            AS DEPT_I	           ,PERD_D	           ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V	           ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C	           ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V	           ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C	           ,Q.ENTY_NODE_X	    FROM	    (       	        SELECT  SALE.DEPT_IDNN_BK AS DEPT_I	            ,:MNTH_END_D /*SALE.SNAP_D */ AS PERD_D	            ,SCNO_IDNN_BK AS SCNO_IDNN_BK	            ,PERD_C AS PERD_C	            ,DEPT.ENTY_NODE_X	            ,CASE WHEN SCNO_IDNN_BK = 'ACTL' 	                  THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R)) 	             END AS ACTL_MSUR_V	            ,CASE WHEN SCNO_IDNN_BK = 'ACTL'	                  THEN SUM(RVNU_A)	             END AS ACTL_RVNU_V	            ,CASE WHEN SCNO_IDNN_BK = 'PLAN'	                  THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R)) 	             END AS PLAN_MSUR_V	            ,CASE WHEN SCNO_IDNN_BK = 'PLAN'	                  THEN SUM(RVNU_A)	             END AS PLAN_RVNU_V	        FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/	        	        INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT	        ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C	        AND DEPT.ENTY_HIER_M = 'DEPT'	        AND DEPT.ENTY_NODE_X = 'DT_BRANCH'	        AND DEPT.SNAP_D      = :MNTH_END_D 	        AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C	        	        AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID	        AND SALE.SNAP_D BETWEEN :MNTH_STRT_D AND :MNTH_END_D 	        AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/	        --AND SALE.DEPT_IDNN_BK = '000001'	        GROUP BY 1,2,3,4,5	    ) Q 	  GROUP BY 1,2,7	) DEPT_KPI	            	ON  TRAL.DEPT_I   = DEPT_KPI.DEPT_I	AND TRAL.PERD_D   = DEPT_KPI.PERD_D	;	) ;","NULL","0","0","0","N ","NULL","NULL","2015-07-23 09:27:32","kumarahe","2015-07-23 10:31:34","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2023","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2023 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2023-01-02' and '2024-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:28","KUCB2220","2025-08-06 18:19:28","NULL","2","2025-08-06 18:19:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_STUS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_STUS AS GDW2_RESTORE.TMP_APPT_STUS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:37","singhp80","2025-07-12 07:56:37","NULL","3","2025-07-12 06:02:10","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_FORM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FORM AS GDW2_RESTORE.MAP_CSE_APPT_FORM WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:01","singhp80","2025-07-12 07:57:01","NULL","29","2025-08-13 15:47:00","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","UTIL_BTCH_ISAC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.UTIL_BTCH_ISAC AS GDW2_RESTORE.UTIL_BTCH_ISAC_PDSRCCS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 08:01:14","singhp80","2025-07-12 08:01:14","NULL","40","2025-08-05 14:06:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_CPGN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_CPGN AS GDW2_RESTORE.TMP_APPT_PDCT_CPGN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:10","singhp80","2025-07-12 07:57:10","NULL","3","2025-07-12 06:02:27","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_STATE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_STATE AS GDW2_RESTORE.MAP_CSE_STATE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:04","singhp80","2025-07-12 07:57:04","NULL","29","2025-08-14 12:23:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_INT_GRUP_STUS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_INT_GRUP_STUS AS GDW2_RESTORE.TMP_INT_GRUP_STUS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:13","singhp80","2025-07-12 07:57:13","NULL","3","2025-07-12 06:02:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EX_458_1_BV_BPB_PATY_COLL_RPRT","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.EX_458_1_BV_BPB_PATY_COLL_RPRT  (CUST_N,CNTL_L1_6_C,PATY_IDNN_BK,BRTH_D,CUST_AUST_BUSN_N,MNGE_BUSN_UNIT_C,REL_MNGE_CUST_F,BUSN_SEGM_M,PRTF_C,BPB_MNGE_CUST_F,FRAU_STOP_F,DECD_ESTE_F,IN_RETL_HRDS_F,VERF_100_POIT_ID_CHEK_F,ACTV_F,SALE_GRUP_C,GCS_MNGE_F,CBA_INTR_PATY_F,VALID_FROM_D)AS LOCKING ROW FOR ACCESSSELECT DISTINCT	CUST_N,    '|||||' AS CNTL_L1_6_C,		PATY_IDNN_BK,    --'||||||'||PATY_IDNN_BK as PATY_IDNN_BKK,	COALESCE ( CAST(CAST (BRTH_D AS DATE FORMAT 'dd/mm/yyyy') AS VARCHAR(10)) , '-')  AS BRTH_D, 	COALESCE ( CAST (CUST_AUST_BUSN_N AS VARCHAR (20 ) ), '-') AS CUST_AUST_BUSN_N,		--SUBSTRING( COALESCE ( CAST (MNGE_BUSN_UNIT_C AS VARCHAR (3 ) ), '-')  FROM 1 FOR 3) AS MNGE_BUSN_UNIT_C,    CASE WHEN CNTL_PTCL_N IS NULL THEN 'RBS' ELSE SUBSTRING( COALESCE ( CAST (MNGE_BUSN_UNIT_C AS VARCHAR (3 ) ), '-')  FROM 1 FOR 3) END AS MNGE_BUSN_UNIT_C,	COALESCE ( CAST (REL_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS REL_MNGE_CUST_F,	--SUBSTRING( COALESCE ( CAST (BUSN_SEGM_M AS VARCHAR (40 ) ), '-')  FROM 1 FOR 40) AS  BUSN_SEGM_M,    CASE WHEN CNTL_PTCL_N IS NULL THEN 'MASS' ELSE SUBSTRING( COALESCE ( CAST (BUSN_SEGM_M AS VARCHAR (40 ) ), '-')  FROM 1 FOR 40) END AS  BUSN_SEGM_M,	COALESCE ( CAST (PRTF_C AS VARCHAR (10 ) ), '-') AS  PRTF_C,	COALESCE ( CAST (BPB_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS BPB_MNGE_CUST_F,	COALESCE ( CAST (FRAU_STOP_F AS VARCHAR (3 ) ), '-')  AS FRAU_STOP_F,	COALESCE ( CAST (DECD_ESTE_F AS VARCHAR (3 ) ), '-')  AS DECD_ESTE_F,	COALESCE ( CAST (IN_RETL_HRDS_F AS VARCHAR (3 ) ), '-')  AS IN_RETL_HRDS_F,	COALESCE ( CAST (VERF_100_POIT_ID_CHEK_F AS VARCHAR (3 ) ), '-') AS VERF_100_POIT_ID_CHEK_F,	COALESCE ( CAST (ACTV_F AS VARCHAR (3 ) ), '-')  AS ACTV_F,	SUBSTRING( COALESCE ( CAST (SALE_GRUP_C AS VARCHAR (15 ) ), '-') FROM 1 FOR 15)   AS SALE_GRUP_C,	COALESCE ( CAST (GCS_MNGE_F AS VARCHAR (3 ) ), '-') AS GCS_MNGE_F,	COALESCE ( CAST (CBA_INTR_PATY_F AS VARCHAR (3 ) ), '-') AS CBA_INTR_PATY_F,	CAST(CAST (BUSN_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) ||'|'   AS VALID_FROM_D	FROM (			SELECT DISTINCT				PCA.CUST_N,				PCA.PATY_IDNN_BK,				PCA.BRTH_D,				PCA.CUST_AUST_BUSN_N,				PCA.MNGE_BUSN_UNIT_C,				OWN_BPB_MNGE_F,				PCA.REL_MNGE_CUST_F,				PCA.BUSN_SEGM_M,				PCA.PRTF_C,                PCA.CNTL_PTCL_N,				PCA.BPB_MNGE_CUST_F,				PCA.FRAU_STOP_F,				PCA.DECD_ESTE_F,				PCA.IN_RETL_HRDS_F,				PCA.VERF_100_POIT_ID_CHEK_F,				PCA.ACTV_F,				SG.PATY_GRUP_I  AS SALE_GRUP_C,				PCA.GCS_MNGE_F,				PCA.CBA_INTR_PATY_F,				BUSN_D 								FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCA			INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR0	-- Account Owner & Contact 				ON BAPR0.PATY_IDNN_BK = PCA.PATY_IDNN_BK			INNER JOIN B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS ARRS				ON ARRS.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK				AND ARRS.BUSN_D BETWEEN PCA.EFFT_D AND PCA.EXPY_D				AND ARRS.BUSN_D BETWEEN BAPR0.EFFT_D AND BAPR0.EXPY_D					AND ( ARRS.OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  ) 			INNER JOIN B_D36_V_RAW_001_STD_0.H_PATY HP				ON HP.PATY_IDNN_BK = PCA.PATY_IDNN_BK			LEFT JOIN B_D36_V_RAW_001_STD_0.S_PATY_GRUP_DETL  SG 				ON SG.PATY_IDNN_HK = HP.PATY_IDNN_HK 				AND ARRS.BUSN_D BETWEEN SG.BUSN_STRT_D AND SG.BUSN_END_D				AND SG.PATY_GRUP_TYPE_C = 'SALE'				AND SG.EXPY_D = '9999-12-31'				AND SG.RECORD_DELETED_FLAG = 0			WHERE 											BUSN_D = IS_IN_ARRS_D  	-- New in Arrears												OR							(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )	   )     -- Already in arrears   and    a change in attributes										OR							(		WAS_IN_ARRS_F = 'Yes' 	AND 	IS_IN_ARRS_F = 'No')   -- Leaving arrears						) A;","NULL","0","0","0","N ","NULL","NULL","2020-10-01 16:51:41","KOSTKAMA","2020-10-01 16:58:49","NULL","0","2020-10-01 16:58:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_C","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_C AS GDW2_RESTORE.MAP_CSE_APPT_C WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:57","singhp80","2025-07-12 07:56:57","NULL","29","2025-08-13 15:36:53","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","UTIL_PARM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.UTIL_PARM  AS LOCKING TABLE K_STAR_CAD_PROD_DATA.UTIL_PARM FOR ACCESS SELECT * FROM K_STAR_CAD_PROD_DATA.UTIL_PARM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:09:20","perumabh","2025-07-14 22:51:46","NULL","29","2025-08-14 17:52:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Khojeal","R_ID_Test_66_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_66_ST   ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                  , CASE WHEN DIFF_A_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_V                  , CASE WHEN DIFF_A_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_C                  , CASE WHEN DIFF_P_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_V                     , CASE WHEN DIFF_P_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_C                             -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                        -- WHERE SALE.Process_name IN                     -- (                    --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                       -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                       -- )                     AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-09 10:28:14","Khojeal","2015-07-09 10:28:14","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2018","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2018 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2018-01-02' and '2019-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","2","2025-08-06 21:24:08","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ACCT_BASE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_BASE(        ACCT_I,        SRCE_SYST_ACCT_N,        OPEN_D,        ACCT_CLSE_REAS_C,        CLSE_D,        BUSN_UNIT_BRCH_N,        ORIG_I,        BUSN_UNIT_I,        SRCE_SYST_C,        ACCT_N,        ACCT_QLFY_C,        CNCY_C,        ACCT_OBTN_TYPE_C,        ACCT_CATG_TYPE_C,        ACCT_CLAS_TYPE_C,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        ISO_CNTY_C,        BANK_N,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_BASE FOR ACCESSSELECT        ACCT_I,        SRCE_SYST_ACCT_N,        OPEN_D,        ACCT_CLSE_REAS_C,        CLSE_D,        BUSN_UNIT_BRCH_N,        ORIG_I,        BUSN_UNIT_I,        SRCE_SYST_C,        ACCT_N,        ACCT_QLFY_C,        CNCY_C,        ACCT_OBTN_TYPE_C,        ACCT_CATG_TYPE_C,        ACCT_CLAS_TYPE_C,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        ROW_SECU_ACCS_C,        ISO_CNTY_C,        BANK_N,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM ( SELECT        ACCT_I,        SRCE_SYST_ACCT_N,        OPEN_D,        ACCT_CLSE_REAS_C,        CLSE_D,        BUSN_UNIT_BRCH_N,        ORIG_I,        BUSN_UNIT_I,        SRCE_SYST_C,        ACCT_N,        ACCT_QLFY_C,        CNCY_C,        ACCT_OBTN_TYPE_C,        ACCT_CATG_TYPE_C,        ACCT_CLAS_TYPE_C,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        CASE WHEN ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C,        ISO_CNTY_C,        BANK_N,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID  FROM        K_STAR_CAD_PROD_DATA.ACCT_BASE ) ACCT_BASE  WHERE ((/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */));","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:36:32","perumabh","2025-08-22 11:36:32","NULL","1","2025-08-22 11:36:32","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DERV_PRTF_ACCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_PRTF_ACCT-- --- ---------- ----------------------------------------------------------- Ver Date       Modified By         Description-- --- ---------- ------------------------------------------------------------- 1.0  26/06/2013 T Jelliffe          Initial Version-- 1.1  28/06/2013 T Jelliffe          Use duration persist table-- 1.2  12/07/2013 T Jelliffe          Time period reduced 15 to 3 years-- 1.3  17/07/2013 T Jelliffe          39 months history range-- 1.4  25/07/2013 T Jelliffe          Date join on JOIN_FROM_D and TO_D-- 1.5  14/01/2014 H Zak               read from the corresponding 1:1 views over the new relationship tables---------------------------------------------------------------------------( PERD_D,VALD_FROM_D                   ,VALD_TO_D                     ,EFFT_D                        ,EXPY_D                        ,ACCT_I                        ,INT_GRUP_I                    ,DERV_PRTF_CATG_C              ,DERV_PRTF_CLAS_C              ,DERV_PRTF_TYPE_C              ,PTCL_N                        ,REL_MNGE_I                    ,PRTF_CODE_X                   ,SRCE_SYST_C                   ,ROW_SECU_ACCS_C                    ) AS  SELECT  CALR.CALENDAR_DATE AS PERD_D,VALD_FROM_D                   ,VALD_TO_D                     ,EFFT_D                        ,EXPY_D                        ,ACCT_I                        ,INT_GRUP_I                    ,DERV_PRTF_CATG_C              ,DERV_PRTF_CLAS_C              ,DERV_PRTF_TYPE_C              ,PTCL_N                        ,REL_MNGE_I                    ,PRTF_CODE_X                   ,SRCE_SYST_C                   ,ROW_SECU_ACCS_C               FROM  K_PVTECH.DERV_PRTF_ACCT_REL T1  INNER JOIN K_PVTECH.CALENDAR CALR  ON CALR.CALENDAR_DATE BETWEEN T1.VALD_FROM_D AND T1.VALD_TO_D  AND CALR.CALENDAR_DATE BETWEEN ADD_MONTHS((CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE) +1 ) , -39)   AND ADD_MONTHS(CURRENT_DATE, 1);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:48:21","perumabh","2025-08-22 11:36:49","NULL","3","2025-08-22 11:36:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_TRNF_DETL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_TRNF_DETL AS GDW2_RESTORE.TMP_APPT_TRNF_DETL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:12","singhp80","2025-07-12 07:57:12","NULL","3","2025-07-12 06:02:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_CSE_APPT_HL_COND_APPR","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_CSE_APPT_HL_COND_APPR AS GDW2_RESTORE.TMP_CSE_APPT_HL_COND_APPR WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:13","singhp80","2025-07-12 07:57:13","NULL","3","2025-07-12 06:02:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","WRK_APPT_PDCT_FEAT_RT_PRC_MRG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_PDCT_FEAT_RT_PRC_MRG AS GDW2_RESTORE.WRK_APPT_PDCT_FEAT_RT_PRC_MRG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:51","singhp80","2025-07-12 07:55:51","NULL","3","2025-07-12 06:02:05","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PURP_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PURP_HLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_HLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:43","perumabh","2025-07-14 22:17:43","NULL","1","2025-07-14 22:17:43","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_PDCT_REL_CL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_PDCT_REL_CLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PDCT_REL_CLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_PDCT_REL_CL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:46","perumabh","2025-07-14 22:08:46","NULL","1","2025-07-14 22:08:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kumarahe","R_ID_Test_1_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  kumarahe.R_ID_Test_1_ST    ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                   , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_V                                       , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_C                                       , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_V                                         , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_C                                     -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                AND DEPT.ENTY_NODE_LEAF_F = 'Y'                AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                    AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                    -- WHERE SALE.Process_name IN                     -- (                    --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                       -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                       -- )                     AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-29 10:54:18","kumarahe","2015-07-29 10:54:18","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","ACCT_PATY_DEDUP","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.ACCT_PATY_DEDUPAS LOCK TABLE K_PDDSTG.ACCT_PATY_DEDUPFOR ACCESS SELECT * FROM K_PDDSTG.ACCT_PATY_DEDUP;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:41","perumabh","2025-07-14 22:05:41","NULL","1","2025-07-14 22:05:41","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","PLAN_BALN_SEGM_MSTR_ARCH","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.PLAN_BALN_SEGM_MSTR_ARCH AS GDW2_RESTORE.PLAN_BALN_SEGM_MSTR_ARCH WITH DATA AND STATS;","NULL","0","0","1","N ","NULL","NULL","2025-07-12 07:57:14","singhp80","2025-07-12 07:57:14","NULL","23","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","3","1","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_BASE_ACCT_BALN_GL_bckp","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.FACT_BASE_ACCT_BALN_GL_bckp--this base view will give All BALANCE details at daily level for all daily measures and monthly measures(for month end date)--this base view does not deal with measures which have back dated transactions--please pass SNAP_D & MSUR_CODE_IDNN_BK(measure code) value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but this view used new new code block structure.(      MSUR_CODE_IDNN_BK    ,BALN_TYPE_LEAF_IDNN_BK     ,SNAP_D    ,ACCT_IDNN_HK    ,GL_DEPT_IDNN_BK   ,GL_OPER_UNIT_IDNN_BK   ,GL_SRCE_IDNN_BK    ,GL_PRJC_IDNN_BK   ,GL_BUSN_UNIT_IDNN_BK   ,GL_AFLT_IDNN_BK   ,GL_PDCT_IDNN_BK   ,GL_ACCT_IDNN_BK   ,GL_CNCY_IDNN_BK    ,CNCY_IDNN_BK    ,USGE_CNCY_CATG_IDNN_BK    ,MSUR_A    ,MSTR_SRCE_SYST_C    ,EFFT_D    ,EXPY_D    ,EFFT_TS    ,EXPY_TS    ,RECD_ISRT_DTTM )AS LOCKING ROW FOR ACCESSSELECT     MSUR.MSUR_CODE_IDNN_BK                        AS MSUR_CODE_IDNN_BK   ,COALESCE(SMI.MSUR_IDNN_SUB_BK     ,'UNKNOWN') AS BALN_TYPE_LEAF_IDNN_BK   ,MSUR.SNAP_D    ,LAMN.ACCT_IDNN_HK                             AS ACCT_IDNN_HK   ,COALESCE(SMGL.GL_DEPT_IDNN_BK     ,'UNKNOWN') AS GL_DEPT_IDNN_BK   ,COALESCE(SMGL.GL_OPER_UNIT_IDNN_BK,'UNKNOWN') AS GL_OPER_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_SRCE_IDNN_BK     ,'UNKNOWN') AS GL_SRCE_IDNN_BK   ,COALESCE(SMGL.GL_PRJC_IDNN_BK     ,'UNKNOWN') AS GL_PRJC_IDNN_BK   ,COALESCE(SMGL.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK   ,COALESCE(SMGL.GL_AFLT_IDNN_BK     ,'UNKNOWN') AS GL_AFLT_IDNN_BK   ,COALESCE(SMGL.GL_PDCT_IDNN_BK     ,'UNKNOWN') AS GL_PDCT_IDNN_BK   ,COALESCE(SMGL.GL_ACCT_IDNN_BK     ,'UNKNOWN') AS GL_ACCT_IDNN_BK    ,COALESCE(SMGL.GL_CNCY_IDNN_BK     ,'UNKNOWN') AS GL_CNCY_IDNN_BK   ,MSUR.CNCY_IDNN_BK                             AS CNCY_IDNN_BK   ,MSUR.USGE_CNCY_CATG_IDNN_BK                   AS USGE_CNCY_CATG_IDNN_BK   ,MSUR.MSUR_A                                   AS MSUR_A   ,MSUR.MSTR_SRCE_SYST_C                         AS MSTR_SRCE_SYST_C   ,MSUR.EFFT_D   ,MSUR.EXPY_D   ,MSUR.EFFT_TS   ,MSUR.EXPY_TS   ,MSUR.RECD_ISRT_DTTM FROM (SELECT -- CCS GL Code blocks Balances     SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_S16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C         =       'BALN'AND SMN.MSTR_SRCE_SYST_C    =       'GDW2-CCS'AND SMN.MSUR_CODE_IDNN_BK   NOT IN ('BALN_A')AND SMN.MSUR_A              <>       0UNION ALLSELECT -- ALL Code blocks except  CCS AND FRL    SMN.MSUR_IDNN_HK   ,SMN.MSUR_QLFY_C   ,SMN.MSUR_CODE_IDNN_BK   ,SMN.SNAP_D   ,SMN.MSUR_A   ,SMN.CNCY_IDNN_BK   ,SMN.USGE_CNCY_CATG_IDNN_BK   ,SMN.MSTR_SRCE_SYST_C   ,SMN.EFFT_D   ,SMN.EXPY_D   ,SMN.EFFT_TS   ,SMN.EXPY_TS   ,SMN.RECD_ISRT_DTTM FROM     B_S16_V_BAL_001_STD_0.S_MSUR_NEW_D SMN -- daily cutWHERE     SMN.MSUR_QLFY_C       =        'BALN'AND SMN.MSTR_SRCE_SYST_C  NOT IN  ('GDW2-CCS','FRL')AND SMN.MSUR_A            <> 0     UNION ALLSELECT -- CCS GL Code blocks Balances     SMSR.MSUR_IDNN_HK   ,SMSR.MSUR_QLFY_C   ,SMSR.MSUR_CODE_IDNN_BK   ,SMSR.SNAP_D   ,SMSR.MSUR_A   ,SMSR.CNCY_IDNN_BK   ,SMSR.USGE_CNCY_CATG_IDNN_BK   ,SMSR.MSTR_SRCE_SYST_C   ,SMSR.EFFT_D   ,SMSR.EXPY_D   ,SMSR.EFFT_TS   ,SMSR.EXPY_TS   ,SMSR.RECD_ISRT_DTTM FROM     B_S16_V_BAL_001_STD_0.S_MSUR_MNLY_SNAP_M SMSR -- 1:1 viewWHERE     SMSR.MSUR_QLFY_C       = 'BALN'AND SMSR.EXPY_D            =  DATE'9999-12-31'AND SMSR.MSTR_SRCE_SYST_C  = 'GDW2-CCS'AND SMSR.MSUR_CODE_IDNN_BK NOT IN ('CYCL_POIT_BALN_A')  UNION ALLSELECT -- ALL Code blocks except  CCS AND FRL     SMSR.MSUR_IDNN_HK    ,SMSR.MSUR_QLFY_C    ,SMSR.MSUR_CODE_IDNN_BK    ,SMSR.SNAP_D    ,SMSR.MSUR_A    ,SMSR.CNCY_IDNN_BK    ,SMSR.USGE_CNCY_CATG_IDNN_BK    ,SMSR.MSTR_SRCE_SYST_C    ,SMSR.EFFT_D    ,SMSR.EXPY_D    ,SMSR.EFFT_TS    ,SMSR.EXPY_TS    ,SMSR.RECD_ISRT_DTTM FROM     B_S16_V_BAL_001_STD_0.S_MSUR_MNLY_SNAP_M SMSR -- 1:1 viewWHERE     SMSR.MSUR_QLFY_C       = 'BALN'AND SMSR.EXPY_D            =  DATE'9999-12-31'AND SMSR.MSTR_SRCE_SYST_C  NOT IN 'GDW2-CCS'AND SMSR.MSUR_CODE_IDNN_BK NOT IN ('CYCL_POIT_BALN_A','NET_CLSE_BALN_A'))                  MSURINNER JOIN    B_S16_V_SHR_001_STD_0.L_ACCT_MSUR_NEW  LAMN  ON   LAMN.MSUR_IDNN_HK        = MSUR.MSUR_IDNN_HK   --fetch GL Code BlockLEFT JOIN    B_S16_V_BUS_001_STD_0.S_MSUR_GL        SMGL  ON   MSUR.MSUR_IDNN_HK        = SMGL.MSUR_IDNN_HK                                                AND  MSUR.SNAP_D BETWEEN SMGL.BUSN_STRT_D AND SMGL.BUSN_END_D                                                AND  SMGL.EXPY_D              = DATE'9999-12-31'                                                AND  SMGL.RECORD_DELETED_FLAG = 0 --fetch balance by balance type LEFT JOIN    B_S16_V_BUS_001_STD_0.S_MSUR_IDNN      SMI   ON  MSUR.MSUR_IDNN_HK         = SMI.MSUR_IDNN_HK                                                AND SMI.MSUR_IDNN_SUB_BK_M   IN ('BALN_TYPE_LEAF_IDNN_BK','ORIG_BALN_TYPE_C');","NULL","0","0","0","N ","NULL","NULL","2018-01-18 13:48:38","KOSTKAMA","2018-01-18 13:48:38","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_MACRO","SP_DS_GET_BTCH_KEY","2","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:22:36","perumabh","2025-07-14 23:24:51","NULL","2","2025-07-14 23:24:52","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"KHANA15","test_MVC_Tables","1","T ","F ","NN  ","KHANA15","CREATE TABLE khana15.test_MVC_Tables( db VARCHAR(128) NOT NULL, tb VARCHAR(128) NOT NULL) UNIQUE PRIMARY INDEX(db, tb);","NULL","0","0","0","N ","NULL","NULL","2017-05-26 17:47:35","KHANA15","2017-05-26 17:47:35","NULL","NULL","NULL","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","2","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","DEFAULT","NULL","NULL","0 ","0","TD_Map1","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_APPT_QSTN_RESP_HL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_QSTN_RESP_HL(        QA_ANSWER_ID,        RESP_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_RESP_HL FOR ACCESSSELECT        QA_ANSWER_ID,        RESP_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_QSTN_RESP_HL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:24","perumabh","2025-07-14 22:17:24","NULL","1","2025-07-14 22:17:24","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_AMT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_AMT AS GDW2_RESTORE.TMP_APPT_PDCT_AMT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:34","singhp80","2025-07-12 07:56:34","NULL","3","2025-07-12 06:02:09","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","FACT_RSS_RPRT_LINE_AGGR","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.FACT_RSS_RPRT_LINE_AGGR(        RPRT_MAP_IDNN_BK,        DEPT_IDNN_BK,        PERD_C,        SNAP_D,        SCNO_IDNN_BK,        REL_MNGE_NODE_C,        EMPL_IDNN_BK,         JOBC_FMLY_C,         GRD_PDCT_IDNN_BK,         MSTR_SRCE_SYST_C,        RVNU_A,        MSUR_A,        MSUR_Q,        MSUR_R,        SALE_CHNL_NODE_C,        SHDW_TYPE_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID,        EFFT_TS,        EXPY_TS,        RECD_ISRT_DTTM)AS LOCKING ROW FOR ACCESS SELECT        RPRT_MAP_IDNN_BK,        DEPT_IDNN_BK,        PERD_C,        SNAP_D,        SCNO_IDNN_BK,        REL_MNGE_NODE_C,        EMPL_IDNN_BK,         JOBC_FMLY_C,         GRD_PDCT_IDNN_BK,         MSTR_SRCE_SYST_C,        RVNU_A,        MSUR_A,        MSUR_Q,        MSUR_R,        SALE_CHNL_NODE_C,        SHDW_TYPE_C,        EFFT_D,        EXPY_D,        RECORD_DELETED_FLAG,        CTL_ID,        PROCESS_NAME,        PROCESS_ID,        UPDATE_PROCESS_NAME,        UPDATE_PROCESS_ID,        EFFT_TS,        EXPY_TS,        RECD_ISRT_DTTM  FROM        B_D02_D_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR_PP ;","NULL","0","0","0","N ","NULL","NULL","2016-07-27 13:51:11","kumarahe","2016-07-27 13:51:11","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDGRD","NON_WORK_DAY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDGRD.NON_WORK_DAY AS GDW2_RESTORE.NON_WORK_DAY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:45","singhp80","2025-07-12 07:56:45","NULL","28","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_ACTV","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_ACTV AS GDW2_RESTORE.TMP_APPT_ACTV WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:09","singhp80","2025-07-12 07:57:09","NULL","3","2025-07-12 06:02:26","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","CLS_FCLY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.CLS_FCLY AS LOCKING TABLE K_STAR_CAD_PROD_DATA.CLS_FCLY  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.CLS_FCLY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:44","perumabh","2025-07-14 22:20:44","NULL","1","2025-07-14 22:20:44","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_NON_RM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_NON_RMAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_NON_RMFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_NON_RM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:58","perumabh","2025-07-14 22:05:58","NULL","1","2025-07-14 22:05:58","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_PDCT_REL_CL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PDCT_REL_CL AS GDW2_RESTORE.MAP_CSE_PDCT_REL_CL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:08","singhp80","2025-07-12 07:57:08","NULL","33","2025-08-14 12:20:06","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_FEE_CAPL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEE_CAPL AS GDW2_RESTORE.MAP_CSE_FEE_CAPL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:07","singhp80","2025-07-12 07:57:07","NULL","29","2025-08-14 12:33:27","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_UNID_PATY_CATG_PL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_UNID_PATY_CATG_PLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_UNID_PATY_CATG_PLFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_UNID_PATY_CATG_PL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:48","perumabh","2025-07-14 22:08:48","NULL","1","2025-07-14 22:08:48","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","FACT_ACCT_BALN_GL_MNLY","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.FACT_ACCT_BALN_GL_MNLY--this base view will give All BALANCE and Average Balance details as Monthly measures(for month end date)--this base view does not deal with measures which have back dated transactions--please pass PERD_D value to fetch results faster--Note : HLS GL code block values not correct in this view because HLS still old code block structure but this view used new new code block structure.(   PERD_D ,MSUR_CODE_IDNN_BK ,ACCT_IDNN_HK  ,ACCT_IDNN_BK ,GL_BUSN_UNIT_IDNN_BK ,GL_ACCT_IDNN_BK ,GL_DEPT_IDNN_BK ,GL_PDCT_IDNN_BK ,GL_AFLT_IDNN_BK ,GL_PRJC_IDNN_BK ,GL_CNCY_IDNN_BK ,GL_OPER_UNIT_IDNN_BK ,GL_SRCE_IDNN_BK ,USGE_CNCY_CATG_IDNN_BK ,GRD_PDCT_IDNN_BK ,MSTR_SRCE_SYST_C ,EFFT_D ,EXPY_D  ,MSUR_A ,AVG_MSUR_A)AS LOCKING ROW FOR ACCESS  SELECT   DD1.CALR_MNTH_END_D AS PERD_D  ,FBABG.MSUR_CODE_IDNN_BK  ,HA.ACCT_IDNN_HK  ,HA.ACCT_IDNN_BK  ,FBABG.GL_BUSN_UNIT_IDNN_BK  ,FBABG.GL_ACCT_IDNN_BK  ,FBABG.GL_DEPT_IDNN_BK  ,FBABG.GL_PDCT_IDNN_BK  ,FBABG.GL_AFLT_IDNN_BK  ,FBABG.GL_PRJC_IDNN_BK  ,FBABG.GL_CNCY_IDNN_BK  ,FBABG.GL_OPER_UNIT_IDNN_BK  ,FBABG.GL_SRCE_IDNN_BK  ,FBABG.USGE_CNCY_CATG_IDNN_BK  ,GP.GRD_PDCT_IDNN_BK  ,CFIG.OPUT_COLM_1 AS MSTR_SRCE_SYST_C  ,FBABG.EFFT_D   ,FBABG.EXPY_D      ,CASE WHEN FBABG.SNAP_D = DD1.CALR_MNTH_END_D    THEN FBABG.MSUR_A    ELSE 0   END AS MSUR_A  ,SUM(FBABG.MSUR_A) OVER ( PARTITION BY  DD1.CALR_MNTH_END_D, FBABG.MSUR_CODE_IDNN_BK,HA.ACCT_IDNN_HK,HA.ACCT_IDNN_BK,FBABG.GL_BUSN_UNIT_IDNN_BK,FBABG.GL_ACCT_IDNN_BK,FBABG.GL_DEPT_IDNN_BK,FBABG.GL_PDCT_IDNN_BK,FBABG.GL_AFLT_IDNN_BK,FBABG.GL_PRJC_IDNN_BK,FBABG.GL_CNCY_IDNN_BK,FBABG.GL_OPER_UNIT_IDNN_BK,FBABG.GL_SRCE_IDNN_BK,FBABG.USGE_CNCY_CATG_IDNN_BK,GP.GRD_PDCT_IDNN_BK,FBABG.MSTR_SRCE_SYST_C)    / DD1.NUM_DAYS AS AVG_MSUR_A   FROM  B_S16_V_BAL_001_STD_0.FACT_BASE_ACCT_BALN_GL   FBABG  INNER JOIN   B_S16_V_REF_001_STD_0.R_CFIG_MAP      CFIG   ON CFIG.MAP_TYPE_M     = 'GDW2_GDW1_MSTR_SRCE_SYST_C'   AND CFIG.INPT_COLM_1    = FBABG.MSTR_SRCE_SYST_C   AND FBABG.SNAP_D    BETWEEN CFIG.BUSN_STRT_D AND CFIG.BUSN_END_D   AND CFIG.EXPY_D     = '9999-12-31'   AND CFIG.RECORD_DELETED_FLAG = 0 left JOIN   B_S16_V_BUS_001_STD_0.S_ACCT_PDCT    SAP    ON SAP.ACCT_IDNN_HK        = FBABG.ACCT_IDNN_HK   AND SAP.RECORD_DELETED_FLAG  = 0   AND FBABG.SNAP_D     BETWEEN SAP.BUSN_STRT_D AND SAP.BUSN_END_D     AND SAP.EXPY_D      = '9999-12-31'  left JOIN   B_S16_V_BUS_001_STD_0.L_ACCT_PDCT    LAP    ON LAP.ACCT_PDCT_IDNN_HK       = SAP.ACCT_PDCT_IDNN_HK   AND LAP.RECORD_DELETED_FLAG  = 0   AND LAP.MSTR_SRCE_SYST_C   = SAP.MSTR_SRCE_SYST_C   INNER JOIN   B_S16_V_SHR_001_STD_0.H_ACCT    HA   ON HA.ACCT_IDNN_HK      = FBABG.ACCT_IDNN_HK   left JOIN   B_S16_V_BUS_001_STD_0.H_GRD_PDCT   GP   ON GP.GRD_PDCT_IDNN_HK     = LAP.GRD_PDCT_IDNN_HK   AND GP.RECORD_DELETED_FLAG   = 0  INNER JOIN   ( SELECT CALR_MNTH_STRT_D, CALR_MNTH_END_D, COUNT (1) AS NUM_DAYS FROM B_S16_V_BAL_001_STD_0.DIMN_DATE GROUP BY 1,2 ) DD1   ON FBABG.SNAP_D      BETWEEN DD1.CALR_MNTH_STRT_D AND DD1.CALR_MNTH_END_D QUALIFY  ROW_NUMBER( )  OVER ( PARTITION BY  DD1.CALR_MNTH_END_D, FBABG.MSUR_CODE_IDNN_BK, HA.ACCT_IDNN_HK, HA.ACCT_IDNN_BK,FBABG.GL_BUSN_UNIT_IDNN_BK,FBABG.GL_ACCT_IDNN_BK,FBABG.GL_DEPT_IDNN_BK,FBABG.GL_PDCT_IDNN_BK,FBABG.GL_AFLT_IDNN_BK,FBABG.GL_PRJC_IDNN_BK,FBABG.GL_CNCY_IDNN_BK,FBABG.GL_OPER_UNIT_IDNN_BK,FBABG.GL_SRCE_IDNN_BK,FBABG.USGE_CNCY_CATG_IDNN_BK,GP.GRD_PDCT_IDNN_BK,FBABG.MSTR_SRCE_SYST_C ORDER BY FBABG.SNAP_D DESC )  = 1 ;","NULL","0","0","0","N ","NULL","NULL","2016-06-06 12:10:30","KOSTKAMA","2016-07-07 15:31:30","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","ACCT_OFFR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_OFFR(        ACCT_I,        OFFR_I,        EFFT_D,        SRCE_SYST_C,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C,        ACCT_OFFR_STRT_D,        ACCT_OFFR_END_D)    AS LOCKING ROW FOR ACCESSSELECT        ACCT_I,        OFFR_I,        EFFT_D,        SRCE_SYST_C,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        ROW_SECU_ACCS_C,        ACCT_OFFR_STRT_D,        ACCT_OFFR_END_D  FROM        K_STAR_CAD_PROD_DATA.ACCT_OFFR WHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:36:38","perumabh","2025-08-22 11:36:38","NULL","1","2025-08-22 11:36:38","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","EVNT_EMPL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.EVNT_EMPL AS GDW2_RESTORE.EVNT_EMPL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:53:55","singhp80","2025-07-12 07:53:55","NULL","528","2025-08-13 15:18:58","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","EVNT_EMPL","1","V ","F ","NN  ","perumabh","REPLACE VIEW  K_PVTECH.EVNT_EMPLAS LOCKING TABLE K_STAR_CAD_PROD_DATA.EVNT_EMPLFOR ACCESS SEL *FROM K_STAR_CAD_PROD_DATA.EVNT_EMPLWHERE(ROW_SECU_ACCS_C = 0)OR((SUBSTR(PROFILE,2,3) MOD 2 = 1) AND (ROW_SECU_ACCS_C MOD 2 = 1))OR(((SUBSTR(PROFILE,2,3)/2) MOD 2 = 1) AND                                     ((ROW_SECU_ACCS_C/2) MOD 2 = 1));","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:19:22","perumabh","2025-07-14 22:19:22","NULL","1","2025-07-14 22:19:22","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kumarahe","R_ID_Test_5_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  kumarahe.R_ID_Test_5_ST    ( IN_R_ID VARCHAR(50)      , EFFT_D DATE       , EXPY_D DATE    ) AS  (              SELECT  :IN_R_ID                   , BPR.*                   , DEPT_KPI.*                   , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                   , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                   , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                   , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                   -- -----------------------------------------------                    , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_V                                         , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_C                                         , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_V                                           , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_C                                      -- -----------------------------------------------                FROM (                 -----------------------------------------------------------------                 --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                 --Extracted from BPR Database: myPCS                 SELECT BPR.DEPT_I                             AS BPR_DEPT_I                      , BPR.PERD_D                             AS BPR_PERD_D                      , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                      , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                      , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                      , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                      , DEPT.ENTY_NODE_X                 FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                 INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                AND DEPT.ENTY_NODE_LEAF_F = 'Y'                AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                  INNER JOIN(                  SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                           FROM A_S07_D_TMP_001_STD_0.BPR_COEX                  WHERE SCHM_TYPE_C = 'HYTD'                 AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D                  AND R_ID =  :IN_R_ID                            ) BPR_COEX                              ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                  AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                 AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                 AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                  AND   BPR.RM_TYPE_C      IN                                ( SELECT                                    CASE WHEN INPT_COLM_4 = 'NA'                                         THEN 'TOT'                                        WHEN INPT_COLM_4 = 'BCH_BUS'                                        THEN 'BCHBUS'                                        ELSE 'Not Mapped' --This may require additional WHEN/THEN                                   END                          AS RM_TYPE_C                                      FROM A_S07_V_REF_001_STD_0.R_CFIG_MAP                                 WHERE MAP_TYPE_M = 'RPRT_IDNN'                                 AND  OPUT_COLM_1 = :IN_R_ID                                 GROUP BY 1                                )                                  AND   BPR.PERD_D         = :EXPY_D                  AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                               ) BPR                          FULL JOIN (                 -----------------------------------------------------------------                 --FACT_KPI-DATA                 SELECT  'NDEPT' || DEPT_I            AS DEPT_I                        ,PERD_D                        ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                        ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                        ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                        ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                        ,Q.ENTY_NODE_X                 FROM                 (                            SEL SALE.DEPT_IDNN_BK AS DEPT_I                         ,:EXPY_D  AS PERD_D                         ,SCNO_IDNN_BK AS SCNO_IDNN_BK                         ,PERD_C AS PERD_C                         ,DEPT.ENTY_NODE_X                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                                THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS ACTL_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(RVNU_A)                          END AS ACTL_RVNU_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS PLAN_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN SUM(RVNU_A)                          END AS PLAN_RVNU_V                     FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                         INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                    AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                         AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                     AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                      AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                     GROUP BY 1,2,3,4,5                 ) Q                GROUP BY 1,2,7             ) DEPT_KPI                          ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I             AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D             ;   );","NULL","0","0","0","N ","NULL","NULL","2015-07-23 11:40:16","kumarahe","2015-07-28 12:42:47","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_PAYT_FREQ","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_PAYT_FREQ AS GDW2_RESTORE.MAP_CSE_PAYT_FREQ WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:05","singhp80","2025-07-12 07:57:05","NULL","29","2025-08-14 12:26:33","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","CLS_FCLY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.CLS_FCLY AS GDW2_RESTORE.CLS_FCLY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:49","singhp80","2025-07-12 07:55:49","NULL","29","2025-08-13 13:58:43","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_CMPE_IDNN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CMPE_IDNN AS GDW2_RESTORE.MAP_CSE_CMPE_IDNN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:53","singhp80","2025-07-12 07:56:53","NULL","29","2025-08-13 16:06:46","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_JOB_COMM_CATG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_JOB_COMM_CATG (      CLP_JOB_FAMILY_CAT_ID,      JOB_COMM_CATG_C,      EFFT_D,      EXPY_D) AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_JOB_COMM_CATG FOR ACCESSSELECT CLP_JOB_FAMILY_CAT_ID,      JOB_COMM_CATG_C,      EFFT_D,      EXPY_D  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_JOB_COMM_CATG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:11","perumabh","2025-07-14 22:16:11","NULL","1","2025-07-14 22:16:11","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_EVNT_GRUP","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_EVNT_GRUP AS GDW2_RESTORE.TMP_APPT_EVNT_GRUP WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:42","singhp80","2025-07-12 07:56:42","NULL","3","2025-07-12 06:02:15","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BD","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.BD AS (SELECT DATE '2020-10-06' AS Business_Date);","NULL","0","0","0","N ","NULL","NULL","2020-11-17 14:41:17","KOSTKAMA","2020-11-17 14:41:52","NULL","1","2023-07-14 03:37:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","EX8_403_1_BV_BPB_PATY_COLL_RPRT","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW kostkama.EX8_403_1_BV_BPB_PATY_COLL_RPRT  AS(SELECT DISTINCT    CUST_N,    '|||||' AS CNTL_L1_6_C,    PATY_IDNN_BK,    COALESCE ( CAST(CAST (BRTH_D AS DATE FORMAT 'dd/mm/yyyy') AS VARCHAR(10)) , '-')  AS BRTH_D,     COALESCE ( CAST (CUST_AUST_BUSN_N AS VARCHAR (20 ) ), '-') AS CUST_AUST_BUSN_N,        CASE WHEN CNTL_PTCL_N IS NULL THEN 'RBS' ELSE SUBSTRING( COALESCE ( CAST (MNGE_BUSN_UNIT_C AS VARCHAR (3 ) ), '-')  FROM 1 FOR 3) END AS MNGE_BUSN_UNIT_C,    COALESCE ( CAST (REL_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS REL_MNGE_CUST_F,    CASE WHEN CNTL_PTCL_N IS NULL THEN 'MASS' ELSE SUBSTRING( COALESCE ( CAST (BUSN_SEGM_M AS VARCHAR (40 ) ), '-')  FROM 1 FOR 40) END AS  BUSN_SEGM_M,    COALESCE ( CAST (PRTF_C AS VARCHAR (10 ) ), '-') AS  PRTF_C,    COALESCE ( CAST (BPB_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS BPB_MNGE_CUST_F,    COALESCE ( CAST (FRAU_STOP_F AS VARCHAR (3 ) ), '-')  AS FRAU_STOP_F,    COALESCE ( CAST (DECD_ESTE_F AS VARCHAR (3 ) ), '-')  AS DECD_ESTE_F,    COALESCE ( CAST (IN_RETL_HRDS_F AS VARCHAR (3 ) ), '-')  AS IN_RETL_HRDS_F,    COALESCE ( CAST (VERF_100_POIT_ID_CHEK_F AS VARCHAR (3 ) ), '-') AS VERF_100_POIT_ID_CHEK_F,    COALESCE ( CAST (ACTV_F AS VARCHAR (3 ) ), '-')  AS ACTV_F,    SUBSTRING( COALESCE ( CAST (SALE_GRUP_C AS VARCHAR (15 ) ), '-') FROM 1 FOR 15)   AS SALE_GRUP_C,    COALESCE ( CAST (GCS_MNGE_F AS VARCHAR (3 ) ), '-') AS GCS_MNGE_F,    COALESCE ( CAST (CBA_INTR_PATY_F AS VARCHAR (3 ) ), '-') AS CBA_INTR_PATY_F,    CAST(CAST (BUSN_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) ||'|'   AS VALID_FROM_D    FROM (            SELECT DISTINCT                PCA.CUST_N,                PCA.PATY_IDNN_BK,                PCA.BRTH_D,                PCA.CUST_AUST_BUSN_N,                PCA.MNGE_BUSN_UNIT_C,                OWN_BPB_MNGE_F,                PCA.REL_MNGE_CUST_F,                PCA.BUSN_SEGM_M,                PCA.PRTF_C,				PCA.CNTL_PTCL_N,                PCA.BPB_MNGE_CUST_F,                PCA.FRAU_STOP_F,                PCA.DECD_ESTE_F,                PCA.IN_RETL_HRDS_F,                PCA.VERF_100_POIT_ID_CHEK_F,                PCA.ACTV_F,                SG.PATY_GRUP_I  AS SALE_GRUP_C,                PCA.GCS_MNGE_F,                PCA.CBA_INTR_PATY_F,                BUSN_D                                 FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCA            INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR0    -- Account Owner & Contact                 ON BAPR0.PATY_IDNN_BK = PCA.PATY_IDNN_BK            INNER JOIN B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS ARRS                ON ARRS.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK                AND ARRS.BUSN_D BETWEEN PCA.EFFT_D AND PCA.EXPY_D                AND ARRS.BUSN_D BETWEEN BAPR0.EFFT_D AND BAPR0.EXPY_D                    AND ( ARRS.OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  )             INNER JOIN B_D36_V_RAW_001_STD_0.H_PATY HP                ON HP.PATY_IDNN_BK = PCA.PATY_IDNN_BK            LEFT JOIN B_D36_V_RAW_001_STD_0.S_PATY_GRUP_DETL  SG                 ON SG.PATY_IDNN_HK = HP.PATY_IDNN_HK                 AND ARRS.BUSN_D BETWEEN SG.BUSN_STRT_D AND SG.BUSN_END_D                AND SG.PATY_GRUP_TYPE_C = 'SALE'                AND SG.EXPY_D = '9999-12-31'                AND SG.RECORD_DELETED_FLAG = 0            WHERE                                             BUSN_D = IS_IN_ARRS_D      -- New in Arrears                                                OR                            (        IS_IN_ARRS_F = 'Yes'     AND    (    BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )       )     -- Already in arrears   and    a change in attributes                                        OR                            (        WAS_IN_ARRS_F = 'Yes'     AND     IS_IN_ARRS_F = 'No')   -- Leaving arrears                        ) A);","NULL","0","0","0","N ","NULL","NULL","2020-09-30 16:12:11","KOSTKAMA","2020-09-30 17:15:27","NULL","0","2020-09-30 17:17:08","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","EVNT_INT_GRUP","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.EVNT_INT_GRUP AS LOCKING TABLESTAR_CAD_PROD_DATA.EVNT_INT_GRUP FOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.EVNT_INT_GRUP;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:19:16","perumabh","2025-07-14 22:19:16","NULL","1","2025-07-14 22:19:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EX_458_1_BV_BPB_PATY_PATY_REL_COL","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.EX_458_1_BV_BPB_PATY_PATY_REL_COL(CUST_N,REL_CUST_N,IS_SNSV_F,PATY_PATY_REL_X,VALID_FROM_D,VALD_TO_D)AS LOCKING ROW FOR ACCESSSELECT DISTINCTCUST_N,REL_CUST_N,IS_SNSV_F,PATY_PATY_REL_X,VALID_FROM_D,VALD_TO_D FROM (SEL DISTINCT TRIM ( LEADING '0' FROM OREPLACE(BAPR.PATY_IDNN_BK, 'SAP~PT~+', '') ) AS CUST_N, TRIM ( LEADING '0' FROM OREPLACE(BAPR.REL_PATY_IDNN_BK, 'SAP~PT~+', '') ) AS REL_CUST_N, 'N' AS IS_SNSV_F, PATY_PATY_REL_X AS PATY_PATY_REL_X, CAST(CAST (BUSN_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) AS VALID_FROM_D,  --CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY')  AS VARCHAR(10)) AS VALD_TO_D  CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY') AS VARCHAR(10)) ||'|'   AS VALD_TO_DFROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_PATY_REL_COLL BAPR INNER JOIN      B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS BACA1 ON               BACA1.PATY_IDNN_BK = BAPR.PATY_IDNN_BK AND             BACA1.BUSN_D BETWEEN BAPR.EFFT_D AND BAPR.EXPY_DWHERE (   OWN_BPB_MNGE_F = 'YES'   OR   BPB_PDCT_F = 'YES' ) AND (			BUSN_D = IS_IN_ARRS_D  	-- New in Arrears						OR				(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D = BAPR.EFFT_D OR  BUSN_D = BAPR.EXPY_D  )	   )     -- Already in arrears   and    a change in attributes							OR				(		WAS_IN_ARRS_F = 'Yes' 	AND 	IS_IN_ARRS_F = 'No' )   -- Leaving arrears		)union allSEL DISTINCT TRIM ( LEADING '0' FROM OREPLACE(BAPR.PATY_IDNN_BK, 'SAP~PT~+', '') ) AS CUST_N, TRIM ( LEADING '0' FROM OREPLACE(BAPR.REL_PATY_IDNN_BK, 'SAP~PT~+', '') ) AS REL_CUST_N, 'N' AS IS_SNSV_F, PATY_PATY_REL_X AS PATY_PATY_REL_X, CAST(CAST (BUSN_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) AS VALID_FROM_D,  --CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY')  AS VARCHAR(10)) AS VALD_TO_D  CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY') AS VARCHAR(10)) ||'|'   AS VALD_TO_DFROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_PATY_REL_COLL BAPR INNER JOIN      B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS BACA1 ON               BACA1.PATY_IDNN_BK = BAPR.REL_PATY_IDNN_BK AND             BACA1.BUSN_D BETWEEN BAPR.EFFT_D AND BAPR.EXPY_DWHERE (   OWN_BPB_MNGE_F = 'YES'   OR   BPB_PDCT_F = 'YES' ) AND (			BUSN_D = IS_IN_ARRS_D  	-- New in Arrears						OR				(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D =BAPR.EFFT_D OR  BUSN_D = BAPR.EXPY_D  )	   )     -- Already in arrears   and    a change in attributes							OR				(		WAS_IN_ARRS_F = 'Yes' 	AND 	IS_IN_ARRS_F = 'No' )   -- Leaving arrears		)) X;","NULL","0","0","0","N ","NULL","NULL","2020-10-01 17:36:49","KOSTKAMA","2020-10-01 17:36:49","NULL","0","2020-10-01 17:37:12","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","APPT_PDCT_AMT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT_AMT AS GDW2_RESTORE.APPT_PDCT_AMT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:07","singhp80","2025-07-12 07:55:07","NULL","28","2025-08-13 13:30:42","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PDCT_FEAT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PDCT_FEAT (         PEXA_FLAG,  FEAT_VALU_C,  EFFT_D,  EXPY_D )     AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_FEAT FOR ACCESS SELECT        PEXA_FLAG,  FEAT_VALU_C,  EFFT_D,  EXPY_D   FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_FEAT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:53","perumabh","2025-07-14 22:17:53","NULL","1","2025-07-14 22:17:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EX_458_1_BV_BPB_PATY_COLL_EMAL_RPRT","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.EX_458_1_BV_BPB_PATY_COLL_EMAL_RPRT (cust_n,extl_refn_i,prfr_email_adrs,is_prfr_f1,VALID_FROM_D,VALD_TO_D)AS LOCKING ROW FOR ACCESSSELECT cust_n ,'EM_'||oTranslate(prfr_email_adrs, '.@', '') AS  extl_refn_i,  prfr_email_adrs, --  CAST(CAST('0' AS VARCHAR(15)) AS INTEGER )AS Desn_x,--'|' as DESN_X_1,CASE     WHEN ROWNUM = '1'     THEN '|Y'      ELSE '|N' END AS is_prfr_f1,    VALID_FROM_D,-- CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY')  AS VARCHAR(10)) AS VALID_TO_D  CAST(CAST(CAST('9999-12-31' AS DATE ) AS DATE FORMAT  'DD/MM/YYYY') AS VARCHAR(10)) ||'|'   AS VALD_TO_D   FROM (SELECT DISTINCT    CUST_N ,       EA.ELTR_ADRS_VALU_X AS prfr_email_adrs,  DENSE_RANK() OVER (PARTITION BY CUST_N ORDER BY   EA.EFFT_D , EA.ELTR_ADRS_VALU_X DESC  ) AS ROWNUM ,    CAST(CAST (BUSN_D  AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) AS VALID_FROM_D,        CASE         WHEN BUSN_D = PA.EXPY_D THEN PA.EXPY_D         WHEN BUSN_D = EA.EXPY_D THEN EA.EXPY_D                                 ELSE CAST('9999-12-31' AS DATE FORMAT 'yyyy-mm-dd' )    END AS VALID_TO_D          FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR PCAJOIN B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS DD ON DD.PATY_IDNN_BK = PCA.PATY_IDNN_BK  AND BUSN_D BETWEEN PCA.EFFT_D AND PCA.EXPY_DJOIN B_D36_V_RAW_001_STD_0.PATY_ADRS PA ON PA.PATY_I = OREPLACE(PCA.PATY_IDNN_BK, 'SAP~PT~+','CIFPT+')  AND PA.SRCE_SYST_C = 'SAP' AND DD.BUSN_D BETWEEN PA.EFFT_D AND PA.EXPY_DJOIN B_D36_V_RAW_001_STD_0.ELTR_ADRS EA ON EA.ADRS_I = PA.ADRS_I AND EA.SRCE_SYST_C = 'SAP' AND ELTR_ADRS_TYPE_C='E' AND DD.BUSN_D BETWEEN EA.EFFT_D AND EA.EXPY_D--WHERE BUSN_D = PA.EFFT_D    OR  BUSN_D = PA.EXPY_DAND (   OWN_BPB_MNGE_F = 'YES'   OR  BPB_PDCT_F = 'YES' ) AND         (            BUSN_D = IS_IN_ARRS_D      -- New in Arrears                        OR                (        IS_IN_ARRS_F = 'Yes'                     AND    (    BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )                     )     -- Already in arrears   and    a change in attributes                            OR                (        WAS_IN_ARRS_F = 'Yes'     AND     IS_IN_ARRS_F = 'No' )   -- Leaving arrears        )) X;","NULL","0","0","0","N ","NULL","NULL","2020-10-01 17:32:03","KOSTKAMA","2020-10-01 17:33:01","NULL","0","2020-10-01 17:33:04","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MOS_LOAN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MOS_LOAN AS GDW2_RESTORE.MOS_LOAN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:51","singhp80","2025-07-12 07:55:51","NULL","29","2025-08-13 16:16:01","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","WUL_NON_SAP_ACCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.WUL_NON_SAP_ACCT( ACCT, SRCE_SYST_ISAC_CODE, ACCT_I, NON_SAP_CNCT_APPT_CODE, BSB_BRCH_NUMB, BSB_STAT_NUMB, BSB_BANK_NUMB, CNTY_OF_BANK, BANK, ACCT_NUMB, ACCT_CLSE_REAS, ACCT_LC_STUS, ACCT_SNAM, ACCT_TFN_STUS, ACTT_NAME1, ACTT_NAME2, ACTT_NAME3, NOMN_PTNR, OPEN_ORG_UNIT_NUMB, REGU_FLAG, SRCE_SYST_ACCT_NUMB, ACCT_CLSE_DATE, ACCT_OPEN_DATE, PDCT_IDNN, NUMB_OF_ACCT_OWNR, UPDT_MODE, LOAD_S, PROS_KEY_EFFT_I, ROW_SECU_ACCS_C) AS LOCKING TABLE K_PDCBODS.WUL_NON_SAP_ACCT FOR ACCESSSELECT ACCT, SRCE_SYST_ISAC_CODE, ACCT_I, NON_SAP_CNCT_APPT_CODE, BSB_BRCH_NUMB, BSB_STAT_NUMB, BSB_BANK_NUMB, CNTY_OF_BANK, BANK, ACCT_NUMB, ACCT_CLSE_REAS, ACCT_LC_STUS, ACCT_SNAM, ACCT_TFN_STUS, ACTT_NAME1, ACTT_NAME2, ACTT_NAME3, NOMN_PTNR, OPEN_ORG_UNIT_NUMB, REGU_FLAG, SRCE_SYST_ACCT_NUMB, ACCT_CLSE_DATE, ACCT_OPEN_DATE, PDCT_IDNN, NUMB_OF_ACCT_OWNR, UPDT_MODE, LOAD_S, PROS_KEY_EFFT_I, ROW_SECU_ACCS_C  FROM K_PDCBODS.WUL_NON_SAP_ACCTWHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:38:00","perumabh","2025-08-22 11:38:00","NULL","1","2025-08-22 11:38:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_DEL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_DELAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_DELFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_DEL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:57","perumabh","2025-07-14 22:05:57","NULL","1","2025-07-14 22:05:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","INT_GRUP_UNID_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.INT_GRUP_UNID_PATYAS LOCKING TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_UNID_PATYFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.INT_GRUP_UNID_PATY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:16","perumabh","2025-07-14 22:18:16","NULL","1","2025-07-14 22:18:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_CHKL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_CHKL AS GDW2_RESTORE.TMP_APPT_PDCT_CHKL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:32","singhp80","2025-07-12 07:56:32","NULL","3","2025-07-12 06:02:08","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","2","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","BALN_HLS_MCR","1","M ","F ","NN  ","KOSTKAMA","REPLACE MACRO KOSTKAMA.BALN_HLS_MCR (MNTH_END_D DATE) AS (INSERT INTO B_D17_D_INP_001_STD_0.BALN_HLS_MK 		SEL 				ACCT_IDNN_HK,			GL_BUSN_UNIT_IDNN_HK, 			GL_ACCT_IDNN_HK, 			GL_PDCT_IDNN_HK, 			GRD_PDCT_IDNN_HK, 			GL_DEPT_IDNN_HK,			GL_AFLT_IDNN_HK,			GL_SRCE_IDNN_BK,			MSTR_SRCE_SYST_C, 			CNCY_IDNN_BK,				USGE_CNCY_CATG_IDNN_BK, 			'NET_CLSE_BALN_A' AS FNCL_MSUR_C,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D)= 1 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_1,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 2 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_2,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 3 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_3,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D)= 4 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_4,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 5 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_5,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 6 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_6,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 7 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_7,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) =8 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_8,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 9 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_9,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) =10 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_10,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) = 11 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_11,			SUM(CASE WHEN EXTRACT(MONTH FROM MNTH_END_D) =12 THEN NET_CLSE_BALN_A ELSE 0 END) AS MNTH_12											FROM P_D_BAL_001_STD_0.FACT_LEND_BALN_MNLY BASE								WHERE 	(NET_CLSE_BALN_A <> 0 OR MNLY_NET_AVRG_CLSE_BALN_A <> 0 OR FYTD_NET_AVRG_CLSE_BALN_A = 0)		AND BASE.MNTH_END_D  >= :MNTH_END_D				GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12		;);","NULL","0","0","0","N ","NULL","NULL","2018-06-07 16:46:58","KOSTKAMA","2018-06-08 12:07:16","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_XREF_MAS_DAR","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_XREF_MAS_DAR AS GDW2_RESTORE.ACCT_XREF_MAS_DAR WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:53","singhp80","2025-07-12 07:55:53","NULL","29","2025-08-13 13:16:14","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_MACRO","SP_DS_GET_BTCH_KEY1","1","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","1","NULL","2025-07-14 23:22:27","perumabh","2025-07-14 23:22:27","NULL","1","2025-07-14 23:22:27","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_STATE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_STATE   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_STATE FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_STATE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:08:47","perumabh","2025-07-14 22:08:47","NULL","1","2025-07-14 22:08:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","UTIL_BTCH_ISAC","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.UTIL_BTCH_ISAC(      BTCH_KEY_I,      BTCH_RQST_S,      BTCH_RUN_D,      SRCE_SYST_M,      BTCH_STUS_C,      STUS_CHNG_S)        AS LOCKING TABLE K_STAR_CAD_PROD_DATA.UTIL_BTCH_ISAC FOR ACCESSSELECT      BTCH_KEY_I,      BTCH_RQST_S,      BTCH_RUN_D,      SRCE_SYST_M,      BTCH_STUS_C,      STUS_CHNG_SFROM        K_STAR_CAD_PROD_DATA.UTIL_BTCH_ISAC;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:09:25","perumabh","2025-07-14 22:51:20","NULL","16","2025-08-14 17:50:09","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","MSTR_CNCT_MSTR_DATA_GENL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.MSTR_CNCT_MSTR_DATA_GENL (  RECD_CNT,  INTR_CNCT_NUMB_OF_MAIN_CNCT,  SRCE_SYST_ISAC_CODE,  ACCT_I,  OBJC_BDT_APPT,  CHNG_TIME_STMP,  VALD_STRT,  ACTL_VALD_END,  LAST_CHNG_BY,  BUSN_TRAN_CATG_FOR_THE_CHNG,  MSTR_CNCT_NUMB,  SHRT_FORM_TIME_STMP,  UPDT_MODE,  LOAD_S,  PROS_KEY_EFFT_I,  ROW_SECU_ACCS_C,  ORGN_UNIT,  CNCT_CLAR_1,  CNCT_CLAR_2,  CNCT_CLAR_3,  BANK_POST_AREA )  AS LOCKING TABLE K_PDCBODS.MSTR_CNCT_MSTR_DATA_GENL FOR ACCESS SELECT  RECD_CNT,  INTR_CNCT_NUMB_OF_MAIN_CNCT,  SRCE_SYST_ISAC_CODE,  ACCT_I,  OBJC_BDT_APPT,  CHNG_TIME_STMP,  VALD_STRT,  ACTL_VALD_END,  LAST_CHNG_BY,  BUSN_TRAN_CATG_FOR_THE_CHNG,  MSTR_CNCT_NUMB,  SHRT_FORM_TIME_STMP,  UPDT_MODE,  LOAD_S,  PROS_KEY_EFFT_I,  ROW_SECU_ACCS_C,  ORGN_UNIT,  CNCT_CLAR_1,  CNCT_CLAR_2,  CNCT_CLAR_3,  BANK_POST_AREA   FROM  K_PDCBODS.MSTR_CNCT_MSTR_DATA_GENL    WHERE (/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */)  ------------------------------------------------------------------------ -- $LastChangedBy: pavithra$ -- $LastChangedDate: $ -- $LastChangedRevision: 6006$ ------------------------------------------------------------------------------;;","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:48","perumabh","2025-08-22 11:37:48","NULL","1","2025-08-22 11:37:48","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"karsa","FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTD","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTD-- ----------------------------------------------------------------------- VIEW NAME:     B_S42_V_BAL_001_STD_0.FACT_RSS_EMPL_RPRT_LINE_AGGR_EXTN---- DESCRIPTION: ---- This transformation view provides Employee Report Line Data  for an Employee and tags his ""LATEST DEPARTMENT"" --to the complete data set including history-- Its also provides Department/Area/Region/DT_MM/DT_RSS  ""TOTALS"" ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------------------------------- 1.0              Lakshmi Kongara     Initial version-- 1.1              Nandini Kumar         Added Comments-- 2.0              Nandini Kumar        Removed Restriction to National Level-- 2.1              Nandini Kumar		 Restrict to only job families required for reporting --2.2              Thomas Nguyen      Remove TOTAL union all and job family filter code-- ----- ---------- ------------------- --------------------------------------------------------(     SNAP_D	 ,PERD_C	 ,RPRT_LINE_I	 ,EMPL_IDNN_BK	 ,EMPL_DEPT_IDNN_BK	 ,JOB_FMLY_C     ,MSTR_SRCE_SYST_C	,ACTL_RVNU_A                   	,ACTL_MSUR_A                   	,ACTL_MSUR_Q                   	,ACTL_MSUR_R                   	,PLAN_RVNU_A                   	,PLAN_MSUR_A                   	,PLAN_MSUR_Q                   	,PLAN_MSUR_R )AS LOCKING ROW FOR ACCESS/*****************************************************************************************************//*Pick latest  Department/Area/Region/DT_MM/DT_RSS  for an employee *//* Grain is at an Employee level with latest department and area and region information *//*****************************************************************************************************/SELECT 	  LAT_DEPT.SNAP_D	 ,LAT_DEPT.PERD_C	 ,LAT_DEPT.RPRT_LINE_I	 ,LAT_DEPT.EMPL_IDNN_BK	 ,B.ENTY_ANCS_NODE_C AS EMPL_DEPT_IDNN_BK	 ,LAT_DEPT.JOB_FMLY_C	 ,LAT_DEPT.MSTR_SRCE_SYST_C	, SUM(LAT_DEPT.ACTL_RVNU_A)  AS  ACTL_RVNU_A 	, SUM(LAT_DEPT.ACTL_MSUR_A)  AS  ACTL_MSUR_A 	, SUM(LAT_DEPT.ACTL_MSUR_Q)  AS ACTL_MSUR_Q	, SUM(LAT_DEPT.ACTL_MSUR_R)  AS ACTL_MSUR_R	, SUM(LAT_DEPT.PLAN_RVNU_A)  AS  PLAN_RVNU_A 	, SUM(LAT_DEPT.PLAN_MSUR_A)  AS PLAN_MSUR_A	, SUM(LAT_DEPT.PLAN_MSUR_Q)  AS PLAN_MSUR_Q	, SUM(LAT_DEPT.PLAN_MSUR_R)  AS PLAN_MSUR_RFROM (		SELECT		FERL.SNAP_D		,FERL.PERD_C		,FERL.RPRT_LINE_I		,FERL.EMPL_IDNN_BK		,DEPT.DEPT_IDNN_BK		,JOBF.JOB_FMLY_C		,FERL.MSTR_SRCE_SYST_C    	, SUM(FERL.ACTL_RVNU_A)  AS ACTL_RVNU_A 		,SUM(FERL.ACTL_MSUR_A)  AS ACTL_MSUR_A		,SUM(FERL.ACTL_MSUR_Q)  AS ACTL_MSUR_Q		,SUM(FERL.ACTL_MSUR_R)  AS ACTL_MSUR_R		, SUM(FERL.PLAN_RVNU_A)  AS PLAN_RVNU_A 		,SUM(FERL.PLAN_MSUR_A)  AS PLAN_MSUR_A		,SUM(FERL.PLAN_MSUR_Q)  AS PLAN_MSUR_Q		,SUM(FERL.PLAN_MSUR_R)  AS PLAN_MSUR_R				FROM              B_S00_V_BAL_001_STD_0.FACT_RSS_EMPL_RPRT_LINE_AGGR  FERL		-- Get Employees whose status is 'ACT',''LWP','LOA'INNER JOIN  (  SELECT  HEMP.EMPL_IDNN_BKFROM B_S42_V_SHR_001_STD_0.H_EMPL  HEMPINNER JOIN B_S42_V_BUS_001_STD_0.S_EMPL_DETL  SEMPON SEMP.EMPL_IDNN_HK = HEMP.EMPL_IDNN_HKAND SEMP.EXPY_D = '9999-12-31'AND SEMP.RECORD_DELETED_FLAG = 0AND  SEMP.BUSN_END_D ='9999-12-31'AND SEMP.EMPL_STUS_C IN ('ACT', 'LWP', 'LOA') GROUP BY 1) EMPLON  FERL.EMPL_IDNN_BK = EMPL.EMPL_IDNN_BK-- Get the latest department of an employeeINNER JOIN (			SELECT  				   HEMP.EMPL_IDNN_BK                  ,HDEPT.DEPT_IDNN_BK           FROM B_S42_V_SHR_001_STD_0.H_EMPL                                HEMP           INNER JOIN B_S42_V_SHR_001_STD_0.L_EMPL_DEPT                     LEMD               ON HEMP.EMPL_IDNN_HK = LEMD.EMPL_IDNN_HK               AND LEMD.RECORD_DELETED_FLAG = 0               AND LEMD.EXPY_D = '9999-12-31'               AND HEMP.RECORD_DELETED_FLAG = 0               AND HEMP.EXPY_D = '9999-12-31'           INNER JOIN B_S42_V_BUS_001_STD_0.S_EMPL_DEPT                     SEMD               ON LEMD.EMPL_DEPT_IDNN_HK = SEMD.EMPL_DEPT_IDNN_HK               AND SEMD.EXPY_D = '9999-12-31'               AND SEMD.RECORD_DELETED_FLAG = 0			   AND SEMD.BUSN_END_D = '9999-12-31'           INNER JOIN B_S42_V_SHR_001_STD_0.H_DEPT                          HDEPT               ON HDEPT.DEPT_IDNN_HK = LEMD.DEPT_IDNN_HK               AND HDEPT.RECORD_DELETED_FLAG = 0               AND HDEPT.EXPY_D = '9999-12-31'        GROUP BY 1,2     ) DEPTON FERL.EMPL_IDNN_BK =DEPT.EMPL_IDNN_BK-- Get the latest job family of an employeeINNER JOIN(	 SELECT 	 EMPL_IDNN_BK	 ,HIER.ENTY_ANCS_NODE_C  AS JOB_FMLY_C	 FROM 				B_S42_V_BAL_001_STD_0.DIMN_EMPL        			 EMPLD	 INNER JOIN  	B_S42_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER 	 HIER	 ON EMPLD.EMPL_JOB_C 	=	HIER.ENTY_NODE_C	 AND HIER.ENTY_HIER_M  =	'JOB'	 AND HIER.SNAP_D 			= ( SELECT MAX(SNAP_D) FROM  B_S42_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER HIER)	 AND HIER.ENTY_ANCS_LEVL_N=HIER.ENTY_LEVL_N -1	 WHERE EXPY_D ='9999-12-31' 	 AND RECORD_DELETED_FLAG=0 	 AND BUSN_END_D ='9999-12-31'            	 )	 JOBFON  FERL.EMPL_IDNN_BK =JOBF.EMPL_IDNN_BKWHERE FERL.EXPY_D ='9999-12-31'AND   FERL.RECORD_DELETED_FLAG=0GROUP BY 1,2,3,4,5,6,7) LAT_DEPT  -- AGGR BASED ON THE LATEST HIERARCHY FOR A GIVEN FINANCIAL YEARINNER JOIN (   SELECT 				    M000.CALR_D             			  AS SNAP_D                   ,M000.FNCL_YEAR_END_D    AS FNCL_YEAR_END_D             FROM B_S42_V_BAL_001_STD_0.DIMN_DATE M000             WHERE M000.CALR_MNTH_END_DAY_F = 'Y' )                                                    C000 ON LAST_DAY(LAT_DEPT.SNAP_D) = C000.SNAP_DINNER JOIN (               SELECT HIER.SNAP_D                                               AS SNAP_D                     , HIER.ENTY_NODE_C                                    AS ENTY_NODE_C                                            , HIER.ENTY_ANCS_NODE_C                                    AS ENTY_ANCS_NODE_C                    , CALC.FNCL_YEAR_END_D                                      AS FNCL_YEAR_END_D                     , MAX(HIER.SNAP_D) OVER (PARTITION BY CALC.FNCL_YEAR_END_D) AS MAX_HIER_SNAP_D                          FROM B_S42_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER    HIER                INNER JOIN ( SELECT M000.CALR_D             AS SNAP_D                                  ,M000.FNCL_YEAR_END_D    AS FNCL_YEAR_END_D                           FROM B_S42_V_BAL_001_STD_0.DIMN_DATE M000                            WHERE M000.CALR_MNTH_END_DAY_F = 'Y'                          )                                          CALC                ON HIER.SNAP_D = CALC.SNAP_D			   WHERE  HIER.ENTY_HIER_M='DEPT'                QUALIFY MAX_HIER_SNAP_D = HIER.SNAP_D            )                                                             B ON       B.FNCL_YEAR_END_D = C000.FNCL_YEAR_END_DAND LAT_DEPT.DEPT_IDNN_BK = B.ENTY_NODE_CGROUP BY 1,2,3,4,5,6,7;","NULL","0","0","0","N ","NULL","NULL","2020-12-09 15:19:31","karsa","2020-12-09 15:19:31","NULL","0","2020-12-10 12:51:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KHANA15","numsize","3","F ","F ","N   ","SECADMIN","REPLACE FUNCTION numsize(Num_In NUMBER)RETURNS INTEGERLANGUAGE CNO SQLDETERMINISTICPARAMETER STYLE SQLEXTERNAL NAME numsize;","NULL","0","0","0","N ","0","NULL","2017-05-25 23:03:14","SECADMIN","2017-05-25 23:03:14","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","1","TD_DataDictionaryMap","NULL","NULL","NULL","0","NULL"
"Khojeal","R_ID_Test_5_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_5_ST    ( IN_R_ID VARCHAR(50)      , EFFT_D DATE       , EXPY_D DATE    ) AS  (              SELECT  :IN_R_ID                   , BPR.*                   , DEPT_KPI.*                   , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                   , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                   , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                   , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                   -- -----------------------------------------------                    , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_V                                         , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_C                                         , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_V                                           , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_C                                      -- -----------------------------------------------                FROM (                 -----------------------------------------------------------------                 --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                 --Extracted from BPR Database: myPCS                 SELECT BPR.DEPT_I                             AS BPR_DEPT_I                      , BPR.PERD_D                             AS BPR_PERD_D                      , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                      , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                      , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                      , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                      , DEPT.ENTY_NODE_X                 FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                 INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                AND DEPT.ENTY_NODE_LEAF_F = 'Y'                AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                  INNER JOIN(                  SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                           FROM A_S07_D_TMP_001_STD_0.BPR_COEX                  WHERE SCHM_TYPE_C = 'HYTD'                 AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D                  AND R_ID =  :IN_R_ID                            ) BPR_COEX                              ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                  AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                 AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                 AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                  AND   BPR.RM_TYPE_C      IN                                ( SELECT                                    CASE WHEN INPT_COLM_4 = 'NA'                                         THEN 'TOT'                                        WHEN INPT_COLM_4 = 'BCH_BUS'                                        THEN 'BCHBUS'                                        ELSE 'Not Mapped' --This may require additional WHEN/THEN                                   END                          AS RM_TYPE_C                                      FROM A_S07_V_REF_001_STD_0.R_CFIG_MAP                                 WHERE MAP_TYPE_M = 'RPRT_IDNN'                                 AND  OPUT_COLM_1 = :IN_R_ID                                 GROUP BY 1                                )                                  AND   BPR.PERD_D         = :EXPY_D                  AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                               ) BPR                          FULL JOIN (                 -----------------------------------------------------------------                 --FACT_KPI-DATA                 SELECT  'NDEPT' || DEPT_I            AS DEPT_I                        ,PERD_D                        ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                        ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                        ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                        ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                        ,Q.ENTY_NODE_X                 FROM                 (                            SEL SALE.DEPT_IDNN_BK AS DEPT_I                         ,:EXPY_D  AS PERD_D                         ,SCNO_IDNN_BK AS SCNO_IDNN_BK                         ,PERD_C AS PERD_C                         ,DEPT.ENTY_NODE_X                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                                THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS ACTL_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(RVNU_A)                          END AS ACTL_RVNU_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS PLAN_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN SUM(RVNU_A)                          END AS PLAN_RVNU_V                     FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                         INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                    AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                         AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                     AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                      AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                     GROUP BY 1,2,3,4,5                 ) Q                GROUP BY 1,2,7             ) DEPT_KPI                          ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I             AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D             ;   );","NULL","0","0","0","N ","NULL","NULL","2015-07-21 12:46:36","Khojeal","2015-07-28 15:02:24","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"Khojeal","R_ID_Test_32_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_32_ST   ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                  , CASE WHEN DIFF_A_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_V                  , CASE WHEN DIFF_A_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_C                  , CASE WHEN DIFF_P_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_V                     , CASE WHEN DIFF_P_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_C                             -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                        -- WHERE SALE.Process_name IN                     -- (                    --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                       -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                       -- )                     AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-09 09:47:24","Khojeal","2015-07-09 09:47:24","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarm9","CFIG_INSERTS","1","M ","F ","NN  ","kumarm9","REPLACE MACRO KUMARM9.CFIG_INSERTS (SRCE VARCHAR(10) ) AS (          DELETE FROM B_D17_D_TMP_001_STD_0.R_CFIG_MAP   WHERE MAP_TYPE_M LIKE 'SRE_MSUR_MAP%' AND MSTR_SRCE_SYST_C =:SRCE;      INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP    SEL    'HLS', 'BPB', 'SRE_MSUR_MAP_HEADER', '1900-01-01',                  'GRAIN_TYPE', 'MEASURE_CODE', 'MEASURE_TYPE', 'MISA TRANSACTION', NULL, NULL, NULL, NULL, NULL,  NULL,                'LVL 1 MEASURE', 'LVL 2 MEASURE', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';       INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP_HEADER',  '1900-01-01' ,'MSUR','MEASURE_CODE','QUALIFIER',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'LVL 1 MEASURE C','LVL 1 MEASURE M','LVL 2 MEASURE C','LVL 2 MEASURE M',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','ADMT_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','BCHQ_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','DEFR_EF_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','EF_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','INT_CHRG_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','NET_RPAY_A','Net Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','ERLY_RPAY_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','INT_CHRG_RFND_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','NET_RPAY_A','Net Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','GNTE_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','LATE_PAYT_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','LSF_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','OTHR_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','MISA_FEE_A','PAL_REVU','MS',NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','MISA_MVMT_A','MISA Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','RPAY_RDRW_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','SECU_CHRG_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','SECU_CHRG_A','Security Discharge Proceeds',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','SETL_ATND_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','SWIT_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','TRAN_FEE_A','PAL_REVU',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','EXTL_RFNC_RPAY_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','EXTL_RFNC_RPAY_A','External Refinance',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','INSR_PAYT_CHRG_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','INT_INCM_ADVN_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','NET_RPAY_A','Net Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','LOAN_BAD_DEBT_WROF_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','LOAN_WROF_A','Loan Write Off',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','LOAN_FRAU_WROF_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','LOAN_WROF_A','Loan Write Off',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','MISA_WTHD_A','LEND_ACTV','MS',NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','MISA_MVMT_A','MISA Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','MISA_DEP_A','LEND_ACTV','MS',NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','MISA_MVMT_A','MISA Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','PART_RPAY_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','NET_RPAY_A','Net Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','PROP_RTAN_RPAY_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','PROP_RTAN_RPAY_A','Property Retained Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','PROP_SOLD_RPAY_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','PROP_SOLD_RPAY_A','Property Sold Repayment',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '1900-01-01', '9999-12-31', 0, NULL, 'Manual', NULL, NULL, NULL, '1900-01-01 00:00:00.000000', '9999-12-31 23:59:59.999999', '1900-01-01 00:00:00.000000';INSERT INTO B_D17_D_TMP_001_STD_0.R_CFIG_MAP  SEL 'HLS','BPB','SRE_MSUR_MAP',  '1900-01-01' ,'MSUR','SNDY_CHRG_A','LEND_ACTV',NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RUN_OFF_A','Run Off','OTH_MVMT_A','Other Movement',NULL,NULL,NULL,NULL,NULL,  '9999-12-31', '19","NULL","0","0","0","N ","NULL","NULL","2017-08-28 10:35:23","kumarm9","2017-08-28 16:30:48","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","DERV_ACCT_PATY_RM","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_RM ,NO FALLBACK ,      NO BEFORE JOURNAL,      NO AFTER JOURNAL,      CHECKSUM = DEFAULT      (       ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,       ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,       PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL        COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */       PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),       SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),       EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,       EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,       ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0       ) PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:49","perumabh","2025-07-14 22:04:49","NULL","20","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_CMPE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CMPE AS GDW2_RESTORE.MAP_CSE_APPT_CMPE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:57","singhp80","2025-07-12 07:56:57","NULL","29","2025-08-13 15:38:31","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_XREF_BPS_CBS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_XREF_BPS_CBS AS GDW2_RESTORE.ACCT_XREF_BPS_CBS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:33","singhp80","2025-07-12 07:56:33","NULL","29","2025-08-13 13:14:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","UTIL_TRSF_EROR_RQM3","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.UTIL_TRSF_EROR_RQM3 AS GDW2_RESTORE.UTIL_TRSF_EROR_RQM3 WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:54:37","singhp80","2025-07-12 07:54:37","NULL","23","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","3","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumars17","sas_1797335662","1","T ","F ","NN  ","kumars17","CREATE MULTISET TABLE kumars17.""sas_1797335662"" (""VALUE"" FLOAT,""DEROG"" FLOAT,""DELINQ"" FLOAT,""CLAGE"" FLOAT,""NINQ"" FLOAT,""CLNO"" FLOAT,""DEBTINC"" FLOAT,""smmsid"" FLOAT);COMMIT WORK","NULL","0","0","0","N ","NULL","NULL","2016-12-14 11:54:27","kumars17","2016-12-14 11:54:27","NULL","NULL","NULL","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","DEFAULT","NULL","NULL","0 ","0","TD_Map1","NULL","NULL","NULL","0","NULL"
"K_PVTECH","ACCT_UNID_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_UNID_PATY(     ACCT_I,	 SRCE_SYST_PATY_I,	 SRCE_SYST_C,	 PATY_ACCT_REL_C,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 ROW_SECU_ACCS_C,	 ORIG_SRCE_SYST_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_UNID_PATY FOR ACCESSSELECT     ACCT_I,	 SRCE_SYST_PATY_I,	 SRCE_SYST_C,	 PATY_ACCT_REL_C,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 ROW_SECU_ACCS_C,	 ORIG_SRCE_SYST_C  FROM (SELECT     ACCT_I,	 SRCE_SYST_PATY_I,	 SRCE_SYST_C,	 PATY_ACCT_REL_C,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 CASE WHEN ACCT_I LIKE 'FMS%' THEN 1 ELSE ROW_SECU_ACCS_C end AS ROW_SECU_ACCS_C,	 ORIG_SRCE_SYST_C  FROM        K_STAR_CAD_PROD_DATA.ACCT_UNID_PATY ) ACCT_UNID_PATY Where (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:41:41","perumabh","2025-07-14 22:41:41","NULL","1","2025-07-14 22:41:41","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVSECURITY","ROW_LEVL_SECU_USER_PRFL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVSECURITY.ROW_LEVL_SECU_USER_PRFL(      USERNAME,      ROW_SECU_PRFL_C,      MY_SERVICE_NO,      REQ_NO,      RITM_NO,      SAR_NO,      CMMT,      UPDT_USERNAME,      UPDT_DATE,      UPDT_DTTS)    AS LOCKING TABLE K_PDSECURITY.ROW_LEVL_SECU_USER_PRFL FOR ACCESSSELECT      USERNAME,      ROW_SECU_PRFL_C,      MY_SERVICE_NO,      REQ_NO,      RITM_NO,      SAR_NO,      CMMT,      UPDT_USERNAME,      UPDT_DATE,      UPDT_DTTS  FROM       K_PDSECURITY.ROW_LEVL_SECU_USER_PRFL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:12:10","perumabh","2025-07-14 22:12:10","NULL","36","2025-08-22 11:38:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_MACRO","SP_LOG_ERROR","3","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:06:23","perumabh","2025-07-14 23:30:51","NULL","3","2025-07-14 23:30:51","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","GRD_GNRC_MAP_BUSN_SEGM_PRTY","1","T ","F ","NN  ","perumabh","  CREATE SET TABLE K_PDDSTG.GRD_GNRC_MAP_BUSN_SEGM_PRTY ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      MAP_TYPE_C VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'MAPPING TYPE CODE' NOT NULL,      BUSN_SEGM_C  VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'Business Segment Code',      BUSN_SEGM_X  VARCHAR(255) CHARACTER SET Latin NOT CaseSpecific TITLE 'Business Segment Description',   BUSN_SEGM_PRTY  SMALLINT TITLE 'Business Segment Priority',      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EFFECTIVE DATE' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'EXPIRY DATE' NOT NULL DEFAULT DATE '9999-12-31')PRIMARY INDEX ( BUSN_SEGM_C );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:47","perumabh","2025-07-14 22:04:47","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_ACQR_SRCE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ACQR_SRCE AS GDW2_RESTORE.MAP_CSE_APPT_ACQR_SRCE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:00","singhp80","2025-07-12 07:57:00","NULL","29","2025-08-13 15:35:07","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_ASES_DETL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_ASES_DETL AS GDW2_RESTORE.TMP_APPT_ASES_DETL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:00","singhp80","2025-07-12 07:57:00","NULL","3","2025-07-12 06:02:25","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","BUSN_PTNR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.BUSN_PTNR(	BUSN_PTNR_NUMB,	SRCE_SYST_ISAC_CODE,	PATY_I,	SAP_PATY_I,	DOB,	FRST_ACDM_TITL,	SCND_ACDM_TITL,	BUSN_PTNR_NAME_AT_BRTH,	BUSN_PTNR_CATG,	BUSN_PTNR_CTCT_PMIS,	BUSN_PTNR_NUMB_IN_EXTL_SYST,	BUSN_PTNR_FRST_NAME,	BUSN_PTNR_GRUP,	BUSN_PTNR_NAME_1_GRUP,	BUSN_PTNR_NAME_2_GRUP,	BUSN_PTNR_GRUP_TYPE,	BUSN_PTNR_SRNM,	BUSN_PTNR_MRST,	BUSN_PTNR_MDLE_NAME,	BUSN_PTNR_SCND_SRNM,	PTNR_TYPE,	CHNG_BY,	LAST_CHNG_AT,	LAST_CHNG_ON,	NAME_OF_PERS_WHO_CRAT_THE_OBJC,	RECD_CRAT_DATE,	TIME_CRAT,	SLCT_GNDR_MALE,	SLCT_GNDR_FEM,	SLCT_GNDR_UNKN,	INDC,	LEGL_STUS_OF_ORGN,	BUSN_PTNR_ORGN_NAME_1,	BUSN_PTNR_ORGN_NAME_2,	BUSN_PTNR_ORGN_NAME_3,	BUSN_PTNR_ORGN_NAME_4,	NATY,	NAME_SUPT,	FORM_OF_ADRS_TITL,	CNTY_FOR_NAME_FRMT_RULE,	SCND_NAME_PREF,	DATE_ORGN_FOUN,	BUSN_PTNR_CORR_LANG,	BUSN_PTNR_LANG,	NAME_FRMT,	DATE_OF_DETH,	OCCP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	RECD_CNT,	ADRS_NUMB,	BUSN_PTNR_BRTH_PLAC,	SRCH_TERM_1,	SRCH_TERM_2,	CNTY_OF_ORIG,	CNTY_OF_TAX,	NAME_OF_EMPR_OF_NATU_PERS,	MDLE_INLS,	LENT_FOR_BUSN_PTNR,	CLTL_OBJC_LIQD_DATE,	INTL_LOCN_NUMB_PART_1,	INTL_LOCN_NUMB_PART_2,	INTL_LOCN_NUMB_PART_3,	SRCH_HELP_1_NAME_1_LAST_NAME,	SRCH_HELP_2_NAME_2_FRST_NAME,	NAME,	NAME_PART_2,	BUSN_PTNR_IS_A_NATU_PERS_INDA,	NCKN,	GuID_OF_BUSN_PTNR,	PERS,	ORDR_PATY_PERS_NUMB,	NAME_SUPT_PREF_1,	PRNT_MODE,	DATA_SRCE,	PLAN_CHNG_DOCU_FOR_PTNR_CONV,	SALU,	VALD_FROM_UTC_DTTS,	VALD_TO_UTC_DTTS,	BUSN_PTNR_BLOK,	BUSN_PTNR_DELT_FLAG,	AUTN_GRUP,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND)	AS LOCKING TABLE K_PDCBODS.BUSN_PTNR FOR ACCESSSELECT	BUSN_PTNR_NUMB,	SRCE_SYST_ISAC_CODE,	PATY_I,	SAP_PATY_I,	DOB,	'***HIDDEN (FRST_ACDM_TITL)***',	'***HIDDEN (SCND_ACDM_TITL)***',	'***HIDDEN (BUSN_PTNR_NAME_AT_BRTH)***',	BUSN_PTNR_CATG,	BUSN_PTNR_CTCT_PMIS,	BUSN_PTNR_NUMB_IN_EXTL_SYST,	'***HIDDEN (BUSN_PTNR_FRST_NAME)***',	BUSN_PTNR_GRUP,	'***HIDDEN (BUSN_PTNR_NAME_1_GRUP)***',	'***HIDDEN (BUSN_PTNR_NAME_2_GRUP)***',	BUSN_PTNR_GRUP_TYPE,	'***HIDDEN (BUSN_PTNR_SRNM)***',	BUSN_PTNR_MRST,	'***HIDDEN (BUSN_PTNR_MDLE_NAME)***',	'***HIDDEN (BUSN_PTNR_SCND_SRNM)***',	PTNR_TYPE,	CHNG_BY,	LAST_CHNG_AT,	LAST_CHNG_ON,	NAME_OF_PERS_WHO_CRAT_THE_OBJC,	RECD_CRAT_DATE,	TIME_CRAT,	SLCT_GNDR_MALE,	SLCT_GNDR_FEM,	SLCT_GNDR_UNKN,	INDC,	LEGL_STUS_OF_ORGN,	'***HIDDEN (BUSN_PTNR_ORGN_NAME_1)***',	'***HIDDEN (BUSN_PTNR_ORGN_NAME_2)***',	'***HIDDEN (BUSN_PTNR_ORGN_NAME_3)***',	'***HIDDEN (BUSN_PTNR_ORGN_NAME_4)***',	NATY,	NAME_SUPT,	FORM_OF_ADRS_TITL,	CNTY_FOR_NAME_FRMT_RULE,	SCND_NAME_PREF,	DATE_ORGN_FOUN,	BUSN_PTNR_CORR_LANG,	BUSN_PTNR_LANG,	NAME_FRMT,	DATE_OF_DETH,	OCCP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	RECD_CNT,	ADRS_NUMB,	BUSN_PTNR_BRTH_PLAC,	SRCH_TERM_1,	SRCH_TERM_2,	CNTY_OF_ORIG,	CNTY_OF_TAX,	NAME_OF_EMPR_OF_NATU_PERS,	MDLE_INLS,	LENT_FOR_BUSN_PTNR,	CLTL_OBJC_LIQD_DATE,	INTL_LOCN_NUMB_PART_1,	INTL_LOCN_NUMB_PART_2,	INTL_LOCN_NUMB_PART_3,    '***HIDDEN (SRCH_HELP_1_NAME_1_LAST_NAME)***',	'***HIDDEN (SRCH_HELP_2_NAME_2_FRST_NAME)***',    '***HIDDEN (NAME)***',	'***HIDDEN (NAME_PART_2)***',	BUSN_PTNR_IS_A_NATU_PERS_INDA,	'***HIDDEN (NCKN)***',	GuID_OF_BUSN_PTNR,	PERS,	ORDR_PATY_PERS_NUMB,	NAME_SUPT_PREF_1,	PRNT_MODE,	DATA_SRCE,	PLAN_CHNG_DOCU_FOR_PTNR_CONV,	SALU,	VALD_FROM_UTC_DTTS,	VALD_TO_UTC_DTTS,	BUSN_PTNR_BLOK,	BUSN_PTNR_DELT_FLAG,	AUTN_GRUP,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND  FROM	K_PDCBODS.BUSN_PTNR  WHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:33","perumabh","2025-08-22 11:37:33","NULL","1","2025-08-22 11:37:33","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","CSE4_TMP_ADRS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.CSE4_TMP_ADRS AS GDW2_RESTORE.CSE4_TMP_ADRS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:50","singhp80","2025-07-12 07:56:50","NULL","3","2025-07-12 06:02:21","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","R_ID_Test_3_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  kumarahe.R_ID_Test_3_ST    ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (     SELECT  :IN_R_ID AS R_ID          , BPR.*         , DEPT_KPI.*         , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V         , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C         , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V         , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C         -- -----------------------------------------------        , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'               ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                          ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                    ELSE '3.Not Matching'                                END                          END                 END  X_DIFF_A_V                   , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'               ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                          ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                    ELSE '3.Not Matching'                                END                          END                 END  X_DIFF_A_C                   , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'               ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                          ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                    ELSE '3.Not Matching'                                END                          END                 END  X_DIFF_P_V                    , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'               ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                          ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                    ELSE '3.Not Matching'                                END                          END                 END  X_DIFF_P_C                                    -- -----------------------------------------------       FROM (       -----------------------------------------------------------------       --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT       --Extracted from BPR Database: myPCS       SELECT BPR.DEPT_I                             AS BPR_DEPT_I            , BPR.PERD_D                             AS BPR_PERD_D            , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V            , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C            , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V            , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C            , DEPT.ENTY_NODE_X       FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR              INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT       ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C       AND DEPT.ENTY_HIER_M = 'DEPT'       --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'       AND DEPT.SNAP_D      = :EXPY_D       --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C       AND DEPT.ENTY_NODE_LEAF_F = 'Y'       AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'              INNER JOIN(     				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                              				FROM A_S07_D_TMP_001_STD_0.BPR_COEX     				WHERE SCHM_TYPE_C IS NULL    				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D     				AND R_ID =  :IN_R_ID                  ) BPR_COEX           ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)        AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)       AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)       AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)        AND   BPR.RM_TYPE_C      -- = 'TOT'                        IN ( SELECT                                    CASE WHEN INPT_COLM_4 = 'NA'                                         THEN 'TOT'                                        WHEN INPT_COLM_4 = 'BCH_BUS'                                        THEN 'BCHBUS'                                        ELSE 'Not Mapped' --This may require additional WHEN/THEN                                   END                          AS RM_TYPE_C                                      FROM A_S07_V_REF_001_STD_0.R_CFIG_MAP                                 WHERE MAP_TYPE_M = 'RPRT_IDNN'                                 AND  OPUT_COLM_1 = :IN_R_ID                                 GROUP BY 1                            )       AND   BPR.PERD_D         = :EXPY_D        AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                  ) BPR        FULL JOIN (       -----------------------------------------------------------------       --FACT_KPI-DATA       SELECT  'NDEPT' || DEPT_I            AS DEPT_I              ,PERD_D              ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V              ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C              ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V              ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C              ,Q.ENTY_NODE_X       FROM       (                  SEL SALE.DEPT_IDNN_BK AS DEPT_I               ,:EXPY_D  AS PERD_D               ,SCNO_IDNN_BK AS SCNO_IDNN_BK               ,PERD_C AS PERD_C               ,DEPT.ENTY_NODE_X               ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                      THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                 END AS ACTL_MSUR_V               ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                     THEN SUM(RVNU_A)                END AS ACTL_RVNU_V               ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                     THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                 END AS PLAN_MSUR_V               ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                     THEN SUM(RVNU_A)                END AS PLAN_RVNU_V           FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE    /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                      INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT           ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C           AND DEPT.ENTY_HIER_M = 'DEPT'           --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'           AND DEPT.SNAP_D      = :EXPY_D            --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C           AND DEPT.ENTY_NODE_LEAF_F = 'Y'           AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                      AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID           AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D            AND SALE.PERD_C IN  ('MNTH') /*('DAY','MNTH')*/           GROUP BY 1,2,3,4,5       ) Q      GROUP BY 1,2,7    ) DEPT_KPI        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I    AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D    ;  ) ;","NULL","0","0","0","N ","NULL","NULL","2015-07-13 10:57:17","kumarahe","2015-07-29 10:55:03","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","BV_BPB_PATY_COLL_RPRT","1","V ","F ","NN  ","KOSTKAMA","--REPLACE VIEW B_D36_V_USR_TEC_1.BV_BPB_PATY_COLL_RPRT  ASREPLACE VIEW KOSTKAMA.BV_BPB_PATY_COLL_RPRT  AS (SELECT DISTINCT	CUST_N,		'' AS CNTL_L1_C,	'' AS CNTL_L2_C,	'' AS CNTL_L3_C,	'' AS CNTL_L4_C,	'' AS CNTL_L5_C,	'' AS CNTL_L6_C,	PATY_IDNN_BK,	COALESCE ( CAST (BRTH_D AS VARCHAR (20 ) ), '-') AS BRTH_D,	COALESCE ( CAST (CUST_AUST_BUSN_N AS VARCHAR (20 ) ), '-') AS CUST_AUST_BUSN_N,		COALESCE ( CAST (MNGE_BUSN_UNIT_C AS VARCHAR (3 ) ), '-') AS MNGE_BUSN_UNIT_C,	COALESCE ( CAST (REL_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS REL_MNGE_CUST_F,	COALESCE ( CAST (BUSN_SEGM_M AS VARCHAR (40 ) ), '-')  AS  BUSN_SEGM_M,	COALESCE ( CAST (PRTF_C AS VARCHAR (10 ) ), '-') AS  PRTF_C,	COALESCE ( CAST (BPB_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS BPB_MNGE_CUST_F,	COALESCE ( CAST (FRAU_STOP_F AS VARCHAR (3 ) ), '-')  AS FRAU_STOP_F,	COALESCE ( CAST (DECD_ESTE_F AS VARCHAR (3 ) ), '-')  AS DECD_ESTE_F,	COALESCE ( CAST (IN_RETL_HRDS_F AS VARCHAR (3 ) ), '-')  AS IN_RETL_HRDS_F,	COALESCE ( CAST (VERF_100_POIT_ID_CHEK_F AS VARCHAR (3 ) ), '-') AS VERF_100_POIT_ID_CHEK_F,	COALESCE ( CAST (ACTV_F AS VARCHAR (3 ) ), '-')  AS ACTV_F,	COALESCE ( CAST (SALE_GRUP_C AS VARCHAR (20 ) ), '-')  AS SALE_GRUP_C,	COALESCE ( CAST (GCS_MNGE_F AS VARCHAR (3 ) ), '-') AS GCS_MNGE_F,	COALESCE ( CAST (CBA_INTR_PATY_F AS VARCHAR (3 ) ), '-') AS CBA_INTR_PATY_F,	BUSN_D	FROM (			SELECT DISTINCT				PCA.CUST_N,				PCA.PATY_IDNN_BK,				PCA.BRTH_D,				PCA.CUST_AUST_BUSN_N,				PCA.MNGE_BUSN_UNIT_C,				OWN_BPB_MNGE_F,				PCA.REL_MNGE_CUST_F,				PCA.BUSN_SEGM_M,				PCA.PRTF_C,				PCA.BPB_MNGE_CUST_F,				PCA.FRAU_STOP_F,				PCA.DECD_ESTE_F,				PCA.IN_RETL_HRDS_F,				PCA.VERF_100_POIT_ID_CHEK_F,				PCA.ACTV_F,				SG.PATY_GRUP_I  AS SALE_GRUP_C,				PCA.GCS_MNGE_F,				PCA.CBA_INTR_PATY_F,				BUSN_D								FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCA							INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR0	-- Account Owner & Contact 				ON BAPR0.PATY_IDNN_BK = PCA.PATY_IDNN_BK			INNER JOIN B_D36_V_USR_TEC_0.BV_BPB_ACCT_COLL_ARRS ARRS				ON ARRS.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK				AND  BUSN_D BETWEEN PCA.EFFT_D AND PCA.EXPY_D 				AND  BUSN_D BETWEEN BAPR0.EFFT_D AND BAPR0.EXPY_D	 				AND ( ARRS.OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  ) 			INNER JOIN P_V_SHR_001_STD_0.H_PATY HP				ON HP.PATY_IDNN_BK = PCA.PATY_IDNN_BK			LEFT JOIN P_V_BUS_001_STD_0.S_PATY_GRUP_DETL  SG 				ON SG.PATY_IDNN_HK = HP.PATY_IDNN_HK 				AND BUSN_D BETWEEN SG.BUSN_STRT_D AND SG.BUSN_END_D				AND SG.PATY_GRUP_TYPE_C = 'SALE'				AND SG.EXPY_D = '9999-12-31'				AND SG.RECORD_DELETED_FLAG = 0			WHERE 											BUSN_D = IS_IN_ARRS_D  	-- New in Arrears												OR							(		IS_IN_ARRS_F = 'Yes' 	AND	(	BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )	   )     -- Already in arrears   and    a change in attributes										OR							(		WAS_IN_ARRS_F = 'Yes' 	AND 	IS_IN_ARRS_F = 'No')   -- Leaving arrears						) A);","NULL","0","0","0","N ","NULL","NULL","2020-09-22 14:31:59","KOSTKAMA","2020-09-23 21:01:45","NULL","0","2020-09-23 20:55:59","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","WRK_APPT_PDCT_FEAT_HL_FEE_DISC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_PDCT_FEAT_HL_FEE_DISC AS GDW2_RESTORE.WRK_APPT_PDCT_FEAT_HL_FEE_DISC WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:32","singhp80","2025-07-12 07:56:32","NULL","3","2025-07-12 06:02:08","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_TRNF_OPTN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_TRNF_OPTN AS GDW2_RESTORE.MAP_CSE_TRNF_OPTN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:08","singhp80","2025-07-12 07:57:08","NULL","29","2025-08-14 12:38:15","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","DEPT_APPT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DEPT_APPT AS GDW2_RESTORE.DEPT_APPT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:25","singhp80","2025-07-12 07:55:25","NULL","28","2025-08-13 14:05:07","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","2","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_CODE_HM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_CODE_HM AS GDW2_RESTORE.MAP_CSE_APPT_CODE_HM WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:04","singhp80","2025-07-12 07:57:04","NULL","29","2025-08-13 15:40:20","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","ETL","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.ETL AS (SELECT DATE '2018-04-30' AS BUSINESS_DATE);","NULL","0","0","0","N ","NULL","NULL","2018-05-11 10:08:45","KOSTKAMA","2018-05-11 10:08:45","NULL","1","2023-07-14 03:37:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVDATA","GDW_EFFT_DATE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDATA.GDW_EFFT_DATE AS LOCKING TABLE K_STAR_CAD_PROD_DATA.GDW_EFFT_DATE FOR ACCESS SELECT * FROM K_STAR_CAD_PROD_DATA.GDW_EFFT_DATE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:10:05","perumabh","2025-07-14 22:10:05","NULL","7","2025-07-14 23:45:47","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","GRD_GNRC_MAP_DERV_UNID_PATY","1","V ","F ","NN  ","perumabh","----Create new technical view K_PVTECH.GRD_GNRC_MAP_DERV_UNID_PATYREPLACE VIEW K_PVTECH.GRD_GNRC_MAP_DERV_UNID_PATY(MAP_TYPE_C,SRCE_SYST_C,UNID_PATY_SRCE_SYST_C,UNID_PATY_ACCT_REL_C,EFFT_D,EXPY_D) ASSELECTMAP_TYPE_C,TARG_CHAR_C AS SRCE_SYST_C,SRCE_CHAR_1_C AS UNID_PATY_SRCE_SYST_C,SRCE_CHAR_2_C AS UNID_PATY_ACCT_REL_C,EFFT_D   ,EXPY_DFROM K_PVTECH.GRD_GNRC_MAP_CURRWHERE MAP_TYPE_C = 'DERV_ACCT_PATY_UNID_PATY_MAP';","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:39:49","perumabh","2025-07-14 23:39:49","NULL","1","2025-07-14 23:39:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_FEAT_OVRD_REAS_PL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_PL AS GDW2_RESTORE.MAP_CSE_FEAT_OVRD_REAS_PL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:57","singhp80","2025-07-12 07:56:57","NULL","29","2025-08-14 12:08:44","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_ENV_CHLD_PATY_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ENV_CHLD_PATY_RELAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_CHLD_PATY_RELFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_CHLD_PATY_REL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:53","perumabh","2025-07-14 22:16:53","NULL","1","2025-07-14 22:16:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_ATTR_CLAS_ASSC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_ATTR_CLAS_ASSC AS GDW2_RESTORE.TMP_APPT_ATTR_CLAS_ASSC WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:46","singhp80","2025-07-12 07:56:46","NULL","3","2025-07-12 06:02:17","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_11_ACCT_PATY_PRTF_MNLY","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_300_11_ACCT_PATY_PRTF_MNLY--REPLACE VIEW B_D17_V_INP_001_STD_0. TX_300_11_ACCT_PATY_PRTF_MNLY(       ACCT_IDNN_HK,        ACCT_IDNN_BK,        MSTR_SRCE_SYST_C,        PATY_IDNN_HK,        PATY_IDNN_BK,        PATY_OWN_PRTF_IDNN_BK,        PATY_CRSK_PRTF_IDNN_BK,        PATY_SEGM_PRTF_IDNN_BK,        VALD_PATY_PRTF_F,        INTR_PATY_PRTF_F,        PATY_OWN_PRTF_MNGE_F,        PATY_CRSK_MNGE_F,        PREV_FYE_CRSK_MNGE_F,                                         ROW_SECU_ACCS_C   ,         CTLFW_DELTA_ACTION_CODE            )AS SELECT     HA.ACCT_IDNN_HK,HA.ACCT_IDNN_BK,HA.MSTR_SRCE_SYST_C                ,GM.PATY_IDNN_HK                 ,GM.PATY_IDNN_BK,GM.PRTF_IDNN_BK  AS PATY_OWN_PRTF_IDNN_BK,GM.CRS_PRTF_IDNN_BK       AS PATY_CRSK_PRTF_IDNN_BK      ,GM.PATY_SEGM_PRTF_IDNN_BK ,GM.VALD_PATY_F AS VALD_PATY_PRTF_F,GM.INTR_PATY_F AS INTR_PATY_PRTF_F,GM.PRTF_MNGE_F AS PATY_OWN_PRTF_MNGE_F,GM.CRSK_MGMT_F AS PATY_CRSK_MNGE_F,GM.PREV_FYE_CRSK_MNGE_F,GM. ROW_SECU_ACCS_C  ,0 AS CTLFW_DELTA_ACTION_CODEFROM         B_D17_V_SHR_001_STD_0.H_ACCT HAINNER JOIN 				(SELECT						COALESCE(A.PATY_IDNN_HK, '696B031073E74BF2CB98E5EF201D4AA3') AS PATY_IDNN_HK,						COALESCE(A.ACCT_IDNN_HK, B.ACCT_IDNN_HK) AS ACCT_IDNN_HK				FROM              		   		               ( SELECT                    			            	sap.PATY_IDNN_HK,         			                        	sap.ACCT_PATY_IDNN_HK,          			                       		sap.ACCT_IDNN_HK,            			                    	sap.BUSN_STRT_D,                        			        	sap.BUSN_END_D                                				FROM  B_D17_V_BUS_001_STD_0.S_ACCT_PATY SAP                               				INNER JOIN B_D17_V_BAL_001_STD_0.DIMN_DATE DD                               				ON DD.CALR_D = ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)                               				AND   SAP.PRFR_PATY_F = 'Y'                                 				AND SAP.BUSN_STRT_D <= DD.CALR_D                               				AND SAP.BUSN_END_D >=DD.CALR_MNTH_STRT_D                               				AND  SAP.EXPY_D = '9999-12-31'                               				AND  SAP.RECORD_DELETED_FLAG = 0                                				WHERE SAP.ACCT_PATY_IDNN_HK IN ( SEL ACCT_PATY_IDNN_HK FROM B_D17_V_SHR_001_STD_0.L_ACCT_PATY                                                                                                       WHERE EXPY_D ='9999-12-31' AND RECORD_DELETED_FLAG=0)                              				QUALIFY ROW_NUMBER() OVER (PARTITION BY ACCT_IDNN_HK ORDER BY BUSN_STRT_D DESC ) = 1 ) A							  		FULL OUTER JOIN							  			   (SELECT ACCT_IDNN_HK							   				FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_BALN_GL_MNLY FACT1							   				WHERE FACT1.MSUR_CODE_IDNN_BK = 'NET_CLSE_BALN_A'							   				AND FACT1.MNTH_END_D BETWEEN ADD_MONTHS(( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501),-1)							   				AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)											GROUP BY 1											UNION							  				SELECT ACCT_IDNN_HK							   				FROM B_D17_V_BAL_001_STD_0.FACT_ACCT_FNCL_GL_MSUR_MNLY FACT2							   				WHERE FACT2.MNTH_END_D BETWEEN ADD_MONTHS(( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501),-1)							   				AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)											AND FACT2.MSTR_SRCE_SYST_C<>'GTR'											GROUP BY 1											UNION											SELECT ACCT_IDNN_HK							   				FROM B_D17_V_BAL_001_STD_0.FACT_LEND_BALN_MNLY FACT3							   				WHERE FACT3.MNTH_END_D BETWEEN ADD_MONTHS(( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501),-1)							   				AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501)											GROUP BY 1											MINUS											SELECT ACCT_IDNN_HK											FROM B_D17_V_BAL_001_STD_0.BV_ACCT_PRIM_PATY_OWN_PRTF_MNLY) B									ON A.ACCT_IDNN_HK=B.ACCT_IDNN_HK						)	  SAPON HA.ACCT_IDNN_HK=SAP.ACCT_IDNN_HKINNER JOIN  ( SEL                             HP.PATY_IDNN_HK,                                                                                                                                 HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK NOT IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D                UNION ALL                 SEL                             HP.PATY_IDNN_HK,                                                                                                                                 HP.PATY_IDNN_BK,                            spa.VALD_PATY_F,                            spa.INTR_PATY_F,                            spa.PRTF_MNGE_F,                            spa.PRTF_IDNN_BK,                            spa.CRSK_MGMT_F,                            spa.CRS_PRTF_IDNN_BK,                            spa.ROW_SECU_ACCS_C,                            spa.PATY_SEGM_PRTF_IDNN_BK,                            spa.PREV_FYE_CRSK_MNGE_F                 FROM B_D17_V_SHR_001_STD_0.H_PATY HP                 INNER JOIN B_D17_V_BUS_001_STD_0.S_PATY_ATTR SPA ON HP.PATY_IDNN_HK=SPA.PATY_IDNN_HK                                               WHERE SPA .PATY_IDNN_HK  IN ('8FB7CCFAAA4642516170527B4424953D','696B031073E74BF2CB98E5EF201D4AA3' )                  AND HP.EXPY_D='9999-12-31' AND HP.RECORD_DELETED_FLAG=0 AND                 spa.EXPY_D = '9999-12-31'                       AND  ( SEL  BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE WHERE  STREAM_KEY=1501) BETWEEN SPA.EFFT_D AND SPA.EXPY_D  ) GMON  SAP.PATY_IDNN_HK=GM.PATY_IDNN_HK;","NULL","0","0","0","N ","NULL","NULL","2018-06-15 14:40:32","KOSTKAMA","2018-06-18 11:09:29","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarm9","CC_HIST_01","1","V ","F ","NN  ","kumarm9","REPLACE VIEW KUMARM9.CC_HIST_01ASSELECT SOURCE_SYSTEM	,PERD_D,BUSN_REVW_F,PRTF_IDNN_BK,CTCT.EMPL_IDNN_BK						,DEPT_NODE_C					,SALE_GRUP_I,PRIM_CLNT_F,INTA_D	,INTA_EFFT_D,'9999-12-31' AS EXPY_D,INTA_TYPE_C_1	,INTA_MODE_C	,PRSP_CUST_IDNN_HK				,ORDER_PRIORITY	, LINE_NO					, MSTR_SRCE_SYST_C,0 AS RECORD_DELETED_FLAG,255 AS CTL_ID,'MANUAL' AS PROCESS_NAME,0 AS PROCESS_ID,NULL AS UP_PRO,NULL AS up_nAME,CAST (CURRENT_TIMESTAMP AS TIMESTAMP (6)) AS RECD_ISRT_DTTM ,CAST (CURRENT_TIMESTAMP AS TIMESTAMP (6)) AS EFFT_TS,CAST('9999-12-31 23:59:59.999999' AS TIMESTAMP(6)) AS EXPY_TSFROM(SELECT										 SOURCE_SYSTEM	,END_D AS PERD_D -- This is Friday -- ETL Date,BUSN_REVW_F,PRTF_IDNN_BK,EMPL_IDNN_BK					,DEPT_NODE_C					,SALE_GRUP_I,PRIM_CLNT_F,INTA_D	,INTA_EFFT_D,INTA_TYPE_C_1	,INTA_MODE_C	,PRSP_CUST_IDNN_HK									,CASE WHEN SOURCE_SYSTEM = 'Business Review Tool' THEN 1      WHEN INTA_TYPE_C_1 = 'F2F' THEN 2					      WHEN INTA_TYPE_C_1 = 'NF2F' THEN 3 END AS ORDER_PRIORITY	         			--,ROW_NUMBER() OVER (PARTITION BY EMPL_IDNN_BK,PERD_D,PATY_I ORDER BY ORDER_PRIORITY,INTA_D,INTA_TYPE_C_1,INTA_MODE_C) AS LINE_NO,ROW_NUMBER() OVER (PARTITION BY PRTF_IDNN_BK,PERD_D,PRSP_CUST_IDNN_HK ORDER BY ORDER_PRIORITY,INTA_EFFT_D,SOURCE_SYSTEM,INTA_D,INTA_TYPE_C_1,INTA_MODE_C) AS LINE_NO					,'GDW' AS MSTR_SRCE_SYST_C					FROM					(					 -- Commsee										-- Existing PATY_I										SELECT					 'Commsee                                ' AS SOURCE_SYSTEM					,DDATE.CALR_WEEK_END_D as END_D,'N' AS BUSN_REVW_F,RHP.PRTF_IDNN_BK,HE.EMPL_IDNN_BK			,DD.DEPT_LEAF_NODE_C AS DEPT_NODE_C			,SPGD.PATY_GRUP_I AS SALE_GRUP_I,COALESCE(SPGD.PRIM_PATY_F, 'N') AS PRIM_CLNT_F,SI.EFFT_D AS INTA_D  	-- This is to have the backdated client contact to be counted on the date that entered the system.,SI.EFFT_D AS INTA_EFFT_D,CASE WHEN SI.INTA_TYPE_C IN ( '1723','A378')  THEN 'F2F'					WHEN SI.INTA_TYPE_C IN ( '2680')  AND SI.INTA_MODE_C ='VIST' THEN 'F2F'					WHEN SI.INTA_TYPE_C IN ( '2680')  AND SI.INTA_MODE_C ='PHON' THEN 'NF2F'					WHEN SI.INTA_TYPE_C IN ( '2680')  AND SI.INTA_MODE_C IS NULL THEN 'NF2F'					WHEN SI.INTA_TYPE_C IN ( '1716') THEN 'NF2F' 					ELSE 'UNKNOWN' END AS INTA_TYPE_C_1	,SI.INTA_MODE_C,HPATY.PATY_IDNN_HK AS PRSP_CUST_IDNN_HK/*	  ,CASE WHEN DPC.MSTR_SRCE_SYST_C='SAP' THEN 'CIF' || TRIM(DPC.PATY_QLFY_C) || SUBSTRING(DPC.PRSP_CUST_IDNN_BK FROM 8 FOR LENGTH(DPC.PRSP_CUST_IDNN_BK) - 7)      ELSE DPC.PRSP_CUST_IDNN_BK END AS PATY_I   ,CASE WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.GIVE_M IS NOT NULL OR DPC.LAST_M IS NOT NULL THEN TRIM(DPC.GIVE_M) || ' ' || TRIM(DPC.LAST_M)  WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.CUST_BUSN_M IS NOT NULL THEN TRIM(DPC.CUST_BUSN_M)  WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.CUST_BUSN_M IS NULL AND DPC.GIVE_M IS NULL AND DPC.LAST_M IS NULL THEN 'UNKNOWN'  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.GIVE_M IS NOT NULL OR DPC.LAST_M IS NOT NULL THEN TRIM(DPC.GIVE_M) || ' ' || TRIM(DPC.LAST_M)  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.CUST_BUSN_M IS NOT NULL THEN TRIM(DPC.CUST_BUSN_M)  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.CUST_BUSN_M IS NULL AND DPC.GIVE_M IS NULL AND DPC.LAST_M IS NULL THEN 'PROSPECT'  ELSE 'UNKNOWN' END AS PRSP_CUST_M  */FROM B_S17_V_SHR_001_STD_0.H_PATY HPATY  --- B_S17_V_USR_TEC_1.DIMN_PRSP_CUST DPC !!!!				JOIN B_S17_V_BUS_001_STD_0.S_INTA_PATY SIP	ON HPATY.PATY_IDNN_HK=SIP.PATY_IDNN_HK	AND SIP.RECORD_DELETED_FLAG =0--	AND SIP.PATY_IDNN_HK <> '696B031073E74BF2CB98E5EF201D4AA3' -- PATY_IDNN_BK='UNKNOWN' --!!!!	AND SIP.MSTR_SRCE_SYST_C='CSE'	AND SIP.ROLE_C = 'INPT'	AND SIP.EXPY_D='9999-12-31'	AND HPATY.EXPY_D = '9999-12-31'	AND HPATY.RECORD_DELETED_FLAG =0    	AND HPATY.PATY_IDNN_HK <> '696B031073E74BF2CB98E5EF201D4AA3' -- PATY_IDNN_BK='UNKNOWN' --!!!!	AND SIP.EFFT_D BETWEEN '2016-03-18' AND '2017-03-17' JOIN B_S17_V_SHR_001_STD_0.L_INTA_PATY LIP	ON LIP.INTA_PATY_HK=SIP.INTA_PATY_HK--	AND SI.INTA_HK=LIP.INTA_HK	AND LIP.RECORD_DELETED_FLAG =0  	AND LIP.MSTR_SRCE_SYST_C='CSE'--	AND LIP.PATY_IDNN_HK <> '696B031073E74BF2CB98E5EF201D4AA3' -- PATY_IDNN_BK='UNKNOWN' --!!!!JOIN  B_S17_V_BUS_001_STD_0.S_INTA SION LIP.INTA_HK=SI.INTA_HKAND SI.MSTR_SRCE_SYST_C='CSE'AND SI.INTA_HK=LIP.INTA_HKAND SI.PROCESS_NAME='TX_136_04_S_INTA'JOIN B_S17_V_BAL_001_STD_0.DIMN_DATE DDATE					ON DDATE.CALR_D	= SI.EFFT_D				  --- SI.EFFT_D must be replaced by SI.EFFT_D in PROD !!!! ---AND SI.EFFT_D BETWEEN '2016-03-18' AND '2017-03-17' /*JOIN B_S17_V_BAL_001_STD_0.DIMN_PRSP_CUST DPC  --- B_S17_V_USR_TEC_1.DIMN_PRSP_CUST DPC !!!!			ON HPATY.PATY_IDNN_HK=DPC.PRSP_CUST_IDNN_HK	AND DPC.EXPY_D = '9999-12-31'	AND DPC.RECORD_DELETED_FLAG =0    			AND SI.EFFT_D BETWEEN DPC.BUSN_STRT_D AND DPC.BUSN_END_D*/JOIN B_S17_V_SHR_001_STD_0.L_INTA_EMPL LIEON SI.INTA_HK=LIE.INTA_HKAND LIE.RECORD_DELETED_FLAG =0   AND LIE.MSTR_SRCE_SYST_C='CSE'AND LIE.EXPY_D='9999-12-31'JOIN B_S17_V_BUS_001_STD_0.S_INTA_EMPL SIEON LIE.INTA_EMPL_IDNN_HK=SIE.INTA_EMPL_IDNN_HKAND SIE.RECORD_DELETED_FLAG =0   AND SIE.MSTR_SRCE_SYST_C='CSE'AND SIE.ROLE_C='OWN'AND SIE.EXPY_D='9999-12-31'AND CAST(SIE.BUSN_END_S AS DATE)='9999-12-31'/*JOIN B_S17_V_BAL_001_STD_0.DIMN_EMPL DE  					ON DE.EMPL_IDNN_HK = LIE.EMPL_IDNN_HK  					AND DE.EXPY_D = '9999-12-31'  					AND DE.RECORD_DELETED_FLAG =0   					AND SI.EFFT_D BETWEEN DE.BUSN_STRT_D AND DE.BUSN_END_D    /*JOIN B_S17_V_SHR_001_STD_0.L_EMPL_DEPT LED					ON LED.EMPL_IDNN_HK=DE.EMPL_IDNN_HK	AND LED.RECORD_DELETED_FLAG =0  JOIN B_S17_V_BUS_001_STD_0.S_EMPL_DEPT SED					ON LED.EMPL_DEPT_IDNN_HK=SED.EMPL_DEPT_IDNN_HK					AND SED.EXPY_D = '9999-12-31'AND SED.RECORD_DELETED_FLAG =0  AND SI.EFFT_D BETWEEN SED.BUSN_STRT_D AND SED.BUSN_END_D  	*/--JOIN P_V_USR_TEC_0.S_EMPL_PRTF  RSEPFO   -- Portfolio Owner/Acting OwnerJOIN B_S17_V_BUS_001_STD_0.S_EMPL_PRTF  RSEPFO   -- Portfolio Owner/Acting Owner	ON LIE.EMPL_IDNN_HK   = RSEPFO.EMPL_IDNN_HK	AND RSEPFO.EMPL_PRTF_ROLE_C IN ('OWN','AOW')	AND RSEPFO.EXPY_D ='9999-12-31' 	AND RSEPFO.RECORD_DELETED_FLAG=0 	AND SI.EFFT_D BETWEEN RSEPFO.BUSN_STRT_D AND RSEPFO.BUSN_END_D	AND RSEPFO.MSTR_SRCE_SYST_C='SAP'--***************************************************************************************************************************************************************************************JOIN B_S17_V_SHR_001_STD_0.L_EMPL_PRTF RLEP	ON RSEPFO.EMPL_PRTF_IDNN_HK = RLEP.EMPL_PRTF_IDNN_HK	AND RLEP.EXPY_D ='9999-12-31' 	AND RLEP.MSTR_SRCE_SYST_C = 'SAP'		JOIN B_S17_V_SHR_001_STD_0.H_PRTF RHP	ON RLEP.PRTF_IDNN_HK = RHP.PRTF_IDNN_HK	AND RHP.EXPY_D='9999-12-31' 	AND RHP.RECORD_DELETED_FLAG=0 	AND RHP.MSTR_SRCE_SYST_C = 'SAP'JOIN B_S17_V_BUS_001_STD_0.S_PRTF_DEPT                      RESPSPD	ON RHP.PRTF_IDNN_HK=RESPSPD.PRTF_IDNN_HK	AND RESPSPD.PRTF_DEPT_ROLE_C='DFLTP'	AND  SI.EFFT_D BETWEEN RESPSPD.BUSN_STRT_D AND RESPSPD.BUSN_END_D	AND RESPSPD.EXPY_D='9999-12-31' 	AND RESPSPD.RECORD_DELETED_FLAG=0JOIN  B_S17_V_SHR_001_STD_0.L_PRTF_DEPT                      RESPLPD	ON RESPSPD.PRTF_DEPT_IDNN_HK=RESPLPD.PRTF_DEPT_IDNN_HK	AND RESPLPD.EXPY_D='9999-12-31' 	AND RESPLPD.RECORD_DELETED_FLAG=0					-- *************************************************************************************  					JOIN B_S17_V_BAL_001_STD_0.DIMN_DEPT DD  							ON DD.DEPT_IDNN_HK = RESPLPD.DEPT_IDNN_HK	AND DD.EXPY_D = '9999-12-31'  	 	AND DD.RECORD_DELETED_FLAG =0	AND DD.DEPT_L2_NODE_C = 'NDEPT902730' 	--- BPB ---	   						AND SI.EFFT_D BETWEEN DD.BUSN_STRT_D AND DD.BUSN_END_D   JOIN B_S17_V_SHR_001_STD_0.H_EMPL HE	ON HE.EMPL_IDNN_HK=LIE.EMPL_IDNN_HK 						AND HE.EXPY_D = '9999-12-31'  						AND HE.RECORD_DELETED_FLAG =0   					/*JOIN B_S17_V_REF_001_STD_0.R_INTA_MODE RIM	ON SI.INTA_MODE_C=RIM.INTA_MODE_C	AND RIM.EXPY_D = '9999-12-31' 	AND SI.EFFT_D BETWEEN RIM.BUSN_STRT_D AND RIM.BUSN_END_D*/JOIN B_S17_V_SHR_001_STD_0.H_INTA HI	ON  SI.INTA_HK=HI.INTA_HK 	AND HI.RECORD_DELETED_FLAG =0  	AND SI.INTA_TYPE_C IN ('1716','1723','2680','A378')-- SHOW VIEW  B_S17_V_BUS_001_STD_0.S_PATY_GRUP_DETLLEFT JOIN B_S17_V_BUS_001_STD_0.S_PATY_GRUP_DETL SPGD	ON LIP.PATY_IDNN_HK = SPGD.PATY_IDNN_HK 						AND SPGD.EXPY_D = '9999-12-31'  						AND DDATE.CALR_WEEK_END_D BETWEEN SPGD.BUSN_STRT_D AND SPGD.BUSN_END_D   						AND SPGD.RECORD_DELETED_FLAG =0   		AND SPGD.PATY_GRUP_TYPE_C='SALE'	AND SPGD.MSTR_SRCE_SYST_C='SAP'	QUALIFY  ROW_NUMBER() OVER (PARTITION BY SI.INTA_HK, SI.MSTR_SRCE_SYST_C ORDER BY  RSEPFO.EMPL_PRTF_ROLE_C DESC, RSEPFO.BUSN_END_D DESC, SPGD.BUSN_END_D DESC, SPGD.PRIM_PATY_F DESC, HPATY.SRCE_PATY_N)= 1					UNION ALL					SELECT					CASE WHEN DOA.ACTV_TYPE_C = '00015' THEN 'Business Review Tool'  ELSE 'Opportunity Management' END AS SOURCE_SYSTEM,DDATE.CALR_WEEK_END_D as END_D,CASE WHEN DOA.ACTV_TYPE_C = '00015' THEN 'Y' ELSE 'N' END AS BUSN_REVW_F,RHP.PRTF_IDNN_BK,HE.EMPL_IDNN_BK 		,DD.DEPT_LEAF_NODE_C AS DEPT_NODE_C			,SPGD.PATY_GRUP_I AS SALE_GRUP_I,COALESCE(SPGD.PRIM_PATY_F, 'N') AS PRIM_CLNT_F,TRAN.SNAP_D --- !!!,TRAN.snap_d as inta_efft_d--!!!--,DOA.ACTV_TYPE_C		,CASE WHEN DOA.ACTV_TYPE_C='00001' AND DOA.ACTV_INTA_TYPE_C IN ('VDCONFR','MEETNG') THEN 'F2F' WHEN DOA.ACTV_TYPE_C='00003' AND DOA.ACTV_INTA_TYPE_C IN ('VDCONFR','MEETNG') THEN 'F2F' --WHEN DOA.ACTV_TYPE_C='00018' AND DOA.ACTV_INTA_TYPE_C='MEETNG' THEN 'F2F' WHEN DOA.ACTV_TYPE_C='00015' AND DOA.ACTV_INTA_TYPE_C='FACETOFACE' THEN 'F2F'  WHEN DOA.ACTV_TYPE_C='00015' AND DOA.ACTV_INTA_TYPE_C='BUSNREVW' THEN 'NF2F' WHEN DOA.ACTV_TYPE_C='00001' AND DOA.ACTV_INTA_TYPE_C='TELCAL' THEN 'NF2F' WHEN DOA.ACTV_TYPE_C='00002' AND DOA.ACTV_INTA_TYPE_C='TELCAL' THEN 'NF2F' WHEN DOA.ACTV_TYPE_C='00003' AND DOA.ACTV_INTA_TYPE_C='TELCAL' THEN 'NF2F'ELSE 'UNKNOWN' END AS INTA_TYPE_C_1		/*,CASE WHEN INTA_TYPE_C_1='F2F' THEN 'FACE TO FACE'      WHEN INTA_TYPE_C_1='NF2F' THEN 'NON FACE TO FACE'	  ELSE 'UNKNOWN' END AS INTA_TYPE_M  */-- ,DOA.ACTV_INTA_TYPE_C -- Changed on 2017-04-27 -- To synchronize between Commsee, OM and BRT for INTA_MODE_C., CASE WHEN DOA.ACTV_INTA_TYPE_C IN ('BUSNREVW','FACETOFACE') THEN 'BUSNREVW'       WHEN DOA.ACTV_INTA_TYPE_C = 'MEETNG' THEN 'VIST'        WHEN DOA.ACTV_INTA_TYPE_C = 'TELCAL' THEN 'PHON' 	          WHEN DOA.ACTV_INTA_TYPE_C = 'VDCONFR' THEN 'VDEO' END AS INTA_MODE_C	  -- Changed on 2017-04-27 -- To synchronize between Commsee, OM and BRT for INTA_MODE_C.     --,DOA.ACTV_INTA_TYPE_M,HPATY.PATY_IDNN_HK AS PRSP_CUST_IDNN_HK/*,CASE WHEN DPC.MSTR_SRCE_SYST_C='SAP' THEN 'CIF' || TRIM(PATY_QLFY_C) || SUBSTRING(DPC.PRSP_CUST_IDNN_BK FROM 8 FOR LENGTH(DPC.PRSP_CUST_IDNN_BK) - 7)      ELSE DPC.PRSP_CUST_IDNN_BK END AS PATY_I	/*   ,CASE WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.GIVE_M IS NOT NULL OR DPC.LAST_M IS NOT NULL THEN TRIM(DPC.GIVE_M) || ' ' || TRIM(DPC.LAST_M)  WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.CUST_BUSN_M IS NOT NULL THEN TRIM(DPC.CUST_BUSN_M)  WHEN DPC.MSTR_SRCE_SYST_C='SAP' AND DPC.CUST_BUSN_M IS NULL AND DPC.GIVE_M IS NULL AND DPC.LAST_M IS NULL THEN 'UNKNOWN'  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.GIVE_M IS NOT NULL OR DPC.LAST_M IS NOT NULL THEN TRIM(DPC.GIVE_M) || ' ' || TRIM(DPC.LAST_M)  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.CUST_BUSN_M IS NOT NULL THEN TRIM(DPC.CUST_BUSN_M)  WHEN DPC.MSTR_SRCE_SYST_C='SRM' AND DPC.CUST_BUSN_M IS NULL AND DPC.GIVE_M IS NULL AND DPC.LAST_M IS NULL THEN 'PROSPECT'  ELSE 'UNKNOWN' END AS PRSP_CUST_M  */  FROM B_S17_V_BAL_001_STD_0.DIMN_OPOR_ACTV DOA JOIN B_S17_V_BAL_001_STD_0.FACT_BASE_NON_FNCL_TRAN_SNAP TRANON DOA.OPOR_ACTV_IDNN_HK = TRAN.NON_FNCL_TRAN_IDNN_HK	AND TRAN.MSUR_CODE_IDNN_BK =(SELECT CASE WHEN DOA.ACTV_TYPE_C = '00015' THEN 'CUST_REVW_ACTV_COMT_STUS_Q' 	 ELSE 'CUST_INTA_ACTV_COMT_STUS_Q' END)	AND DOA.ACTV_STUS_M='Completed'   	JOIN B_S17_V_BAL_001_STD_0.DIMN_DATE DDATE					ON DDATE.CALR_D	= TRAN.SNAP_D				  --- SI.EFFT_D must be replaced by SI.EFFT_D in PROD !!!! ---AND TRAN.SNAP_D BETWEEN '2016-03-18' AND '2017-03-17' JOIN B_S17_V_SHR_001_STD_0.H_PATY HPATY  --- B_S17_V_USR_TEC_1.DIMN_PRSP_CUST DPC !!!!						ON HPATY.PATY_IDNN_HK = DOA.CTCT_PRSP_CUST_IDNN_HK 					AND HPATY.EXPY_D = '9999-12-31'--AND TRAN.SNAP_D BETWEEN DPC.BUSN_STRT_D AND DPC.BUSN_END_DAND HPATY.RECORD_DELETED_FLAG =0   					/*  					JOIN B_S17_V_BAL_001_STD_0.DIMN_EMPL DE  					ON DE.EMPL_IDNN_HK = DOA.RESB_EMPL_IDNN_HK  					AND DE.EXPY_D = '9999-12-31'  					AND DE.R","NULL","0","0","0","N ","NULL","NULL","2017-06-02 12:57:40","kumarm9","2017-06-02 12:57:40","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"karsa","TX_230_50_QLFY_DIMN_RULE","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.TX_230_50_QLFY_DIMN_RULE(    MSUR_IDNN_HK    ,DEPT_IDNN_HK    ,EMPL_IDNN_HK    ,GRD_PDCT_IDNN_HK    ,PRTF_IDNN_HK    ,MSTR_SRCE_SYST_C    ,MSUR_DEPT_IDNN_HK    ,MSUR_EMPL_IDNN_HK    ,MSUR_GRD_PDCT_IDNN_HK    ,MSUR_PRTF_IDNN_HK    ,MSUR_DEPT_ROLE_C    ,MSUR_EMPL_ROLE_C    ,MSUR_PRTF_ROLE_C    ,RULE_C    ,ASSC_D    ,ASSC_ROLE_M    ,BUSN_STRT_D    ,BUSN_END_D) AS LOCKING ROW FOR ACCESSSELECT    MAIN.MSUR_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'DEPT' THEN DIMN_IDNN_HK ELSE NULL END AS DEPT_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'EMPL' THEN DIMN_IDNN_HK ELSE NULL END AS EMPL_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'PDCT' THEN DIMN_IDNN_HK ELSE NULL END AS PDCT_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'PRTF' THEN DIMN_IDNN_HK ELSE NULL END AS PRTF_IDNN_HK    ,MAIN.MSTR_SRCE_SYST_C    ,CASE WHEN MAIN.DIMN_C = 'DEPT' THEN MSUR_DIMN_IDNN_HK ELSE NULL END AS MSUR_DEPT_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'EMPL' THEN MSUR_DIMN_IDNN_HK ELSE NULL END AS MSUR_EMPL_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'PDCT' THEN MSUR_DIMN_IDNN_HK ELSE NULL END AS MSUR_PDCT_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'PRTF' THEN MSUR_DIMN_IDNN_HK ELSE NULL END AS MSUR_PRTF_IDNN_HK    ,CASE WHEN MAIN.DIMN_C = 'DEPT' THEN MSUR_DIMN_ROLE_C ELSE NULL END AS MSUR_DEPT_ROLE_C    ,CASE WHEN MAIN.DIMN_C = 'EMPL' THEN MSUR_DIMN_ROLE_C ELSE NULL END AS MSUR_EMPL_ROLE_C    ,CASE WHEN MAIN.DIMN_C = 'PRTF' THEN MSUR_DIMN_ROLE_C ELSE NULL END AS MSUR_PRTF_ROLE_C    ,MAIN.RULE_C -- This column will be added to Satellite table for audit purposes.    ,MAIN.ASSC_D    ,MAIN.ASSC_ROLE_M    ,MAIN.BUSN_STRT_D    ,MAIN.BUSN_END_DFROM (    SELECT STAG.*    FROM B_S42_D_INP_001_STD_0.TX_230_50_DIMN_STAG STAG    JOIN B_S42_D_BUS_001_STD_0.S_MSUR_DALY_SNAP SNAP    ON  STAG.MSUR_IDNN_HK = SNAP.MSUR_IDNN_HK    AND SNAP.MSUR_CODE_IDNN_BK = 'HL_OPEN_OPOR_WOUT_APPT_Q'    AND SNAP.SNAP_D = '2019-02-14'    QUALIFY ROW_NUMBER() OVER (PARTITION BY STAG.MSUR_IDNN_HK                                            , MSUR_DIMN_ROLE_C         ,DIMN_C                                            , BUSN_STRT_D                               ORDER BY PRTY_N DESC) = 1) MAIN;","NULL","0","0","0","N ","NULL","NULL","2019-05-22 14:54:38","karsa","2019-05-22 14:54:38","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"Kattas1","TPERF_HIST_SATYA","1","V ","F ","NN  ","Kattas1","replace view KATTAS1.TPERF_HIST_SATYAas SELECT distinct/* Query information */UPDATE_USER ,PROCESS_NAME,dlt.LOGDATE ,dlt.USERNAME,dlt.AppId,dlt.ClientId,dlt.QueryId,CAST (dlt.StartTime AS DATE) AS QueryDate,CAST (dlt.StartTime AS TIME) AS QueryTime/* CPU details */,dlt.AMPCPUTime,dlt.ParserCPUTime,(dlt.AMPCPUTime + dlt.ParserCPUTime) * 1.15 * tperf.SystemTperf / ( tperf.NbrTPANodes * tperf.CpusPerNode * 3600.00) AS TPerfHr, ( dlt.MaxAMPCPUTime * dlt.NumOfActiveAMPs + dlt.ParserCPUTime  ) * 1.15 * tperf.SystemTperf / ( tperf.NbrTPANodes * tperf.CpusPerNode * 3600.00  ) AS ImpactTPerfHr           ,dlt.MaxAMPCPUTime * dlt.NumOfActiveAMPs + dlt.ParserCPUTime AS ImpactCPUSecs/*,CAST((EXTRACT(HOUR FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600 + EXTRACT (MINUTE FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60 + EXTRACT(SECOND FROM ((dlt.FirstStepTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ParseTimeSecs,CAST((EXTRACT (HOUR FROM ((dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 3600 + EXTRACT (MINUTE FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2))) * 60 + EXTRACT (SECOND FROM ( (dlt.FirstRespTime - dlt.StartTime) HOUR (4) TO SECOND (2)))) AS DEC (10, 2)) AS ElapsedTimeSecs*/,CASE WHEN dlt.AMPCPUTime < 1 OR (dlt.AMPCPUTimeNorm / tperf.NbrAMPs) = 0 THEN 0ELSE dlt.MaxAMPCPUTimeNorm / (dlt.AMPCPUTimeNorm / tperf.NbrAMPs) END (DEC (8, 2)) AS CPU_Skew/* IO details */,dlt.TotalIOCount,CASE WHEN dlt.AMPCPUTime < 1 OR (dlt.TotalIOCount / tperf.NbrAMPs) = 0 THEN 0 ELSE dlt.MaxAMPIO / (dlt.TotalIOCount / tperf.NbrAMPs) END (DEC (8, 2)) AS IO_Skew/* CPU / IO interaction */,CASE WHEN dlt.AMPCPUTime  < 1 OR dlt.TotalIOCount = 0 THEN 0 ELSE (dlt.AMPCPUTime * 1000) / dlt.TotalIOCount END (DEC (6, 2)) AS PJI,CASE WHEN dlt.AMPCPUTime  < 1  OR dlt.AMPCPUTime = 0 THEN 0 ELSE dlt.TotalIOCount / (dlt.AMPCPUTime * 1000) END (DEC (6, 2)) AS UII/* Estimate vs actual from DBQLStepTbl */,dsst.ActTotalCPUCost,dsst.EstTotalCPUCost,(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/NULLIFZERO(dsst.EstTotalCPUCost) AS TotalCPUCostDiffRatio,dsst.ActTotalRowCount  ,dsst.EstTotalRowCount ,(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/NULLIFZERO(dsst.EstTotalRowCount) AS TotalRowCountDiffRatio     ,dsst.ActTotalIOCount,dsst.EstTotalIOCount       ,(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/NULLIFZERO(dsst.EstTotalIOCount) AS TotalIOCountDiffRatio        /* General result and processing info */,dlt.ERRORCODE,SUBSTRING (dlt.ErrorText FROM 1 FOR 100) AS ErrorText,dlt.SpoolUsage,dlt.NumResultRows/* Details about why query shown *//*,CASE WHEN ErrorText IS NOT NULL THEN 'ErrorText ' ELSE '' END||CASE WHEN ParseTimeSecs > 10.0 THEN 'ParseTimeSecs ' ELSE '' END||CASE WHEN ElapsedTimeSecs  > 300.0  THEN 'ElapsedTimeSecs ' ELSE '' END||CASE WHEN dlt.ParserCPUTime > 10.00 THEN 'ParseCPUSecs ' ELSE '' END||CASE WHEN dlt.AMPCPUTime > 3000.00 THEN 'AMPCPUSecs ' ELSE '' END||CASE WHEN ImpactCPUSecs > 5000.00 THEN 'ImpactCPUSecs ' ELSE '' END||CASE WHEN TPerfHr > 20.00 THEN 'TPerfHr ' ELSE '' END||CASE WHEN (CPU_Skew > 10.0 AND ImpactCPUSecs > 500.00) THEN 'CPU_Skew ' ELSE '' END||CASE WHEN dlt.TotalIOCount  > 20000.0 THEN 'IO ' ELSE '' END||CASE WHEN (IO_Skew  > 10.0 AND TotalIOCount > 500000) THEN 'IO_Skew ' ELSE '' END||CASE WHEN (PJI  > 3.0 AND  ImpactCPUSecs > 500.00) THEN 'PJI ' ELSE '' END||CASE WHEN (UII  > 3.0 AND TotalIOCount > 15000) THEN 'UII ' ELSE '' END||CASE WHEN (dsst.ActTotalCPUCost - dsst.EstTotalCPUCost) > 2000 THEN          CASE WHEN dsst.EstTotalCPUCost = 0 THEN 'EstimatedCPU '        WHEN ABS(dsst.ActTotalCPUCost - dsst.EstTotalCPUCost)/dsst.EstTotalCPUCost > 10 THEN 'EstimatedCPU ' ELSE '' ENDELSE '' END||CASE WHEN (dsst.ActTotalRowCount - dsst.EstTotalRowCount) > 10000 THEN          CASE WHEN dsst.EstTotalRowCount = 0 THEN 'EstimatedRowCount '         WHEN ABS(dsst.ActTotalRowCount - dsst.EstTotalRowCount)/dsst.EstTotalRowCount > 10 THEN 'EstimatedRowCount '  ELSE '' ENDELSE '' END||CASE WHEN (dsst.ActTotalIOCount - dsst.EstTotalIOCount) > 100000 THEN         CASE WHEN dsst.EstTotalIOCount = 0 THEN 'EstimatedIOCount '        WHEN ABS(dsst.ActTotalIOCount - dsst.EstTotalIOCount)/dsst.EstTotalIOCount > 10 THEN 'EstimatedIOCount ' ELSE '' ENDELSE '' END||CASE WHEN SpoolUsage > 500e9 THEN 'SpoolUsage ' ELSE '' END AS Issue_Identifier*/ /* Use DBQLogTbl as primary table */FROM  PDCRINFO.DBQLogTbl_Hst dlt/* Use DBQLSQLTbl information to identify submitted SQL */INNER JOIN PDCRINFO.DBQLSQLTbl_Hst dstON  dlt.ProcId = dst.ProcId AND dlt.QueryId = dst.QueryId AND dst.SQLRowNo = 1 INNER JOIN/* Use DBQLStepTbl information to identify differences between optimiser estimates and actuals */(SELECT QueryID,ProcID,SUM(EstCPUCost) AS EstTotalCPUCost,SUM(CPUTIME) AS ActTotalCPUCost,SUM(EstRowCount) AS EstTotalRowCount,SUM(RowCount) AS ActTotalRowCount,SUM(EstIOCost) AS EstTotalIOCount,SUM(IOCOUNT) AS ActTotalIOCountFROM   PDCRINFO.DBQLStepTbl_HstGROUP BY QueryID,ProcID) dsstON  dlt.ProcId = dsst.ProcIdAND dlt.QueryId = dsst.QueryId               INNER JOIN/* Use CBA system table to calculate TPerfHr figures */PDCRINFO.cba_Syst_TPerf tperfON dlt.LogDate BETWEEN tperf.FromDate AND tperf.ToDateINNER JOIN                        (SELECT  DISTINCT UPDATE_USER ,PROCESS_NAMEfrom      B_S00_V_TCF_001_STD_0.CTLFW_execution_log WHERE STREAM_KEY IN (1348)  ) PRCON     dlt.UserName=PRC.update_user  ;","NULL","0","0","0","N ","NULL","NULL","2016-11-16 14:17:15","Kattas1","2017-11-06 10:34:29","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PPSRCCS","sp_ds_get_btch_key","1","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","1","NULL","2025-07-14 23:26:05","perumabh","2025-07-14 23:26:05","NULL","1","2025-07-14 23:26:06","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_CSE_APPT_CPGN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_CSE_APPT_CPGN AS GDW2_RESTORE.TMP_CSE_APPT_CPGN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:59","singhp80","2025-07-12 07:56:59","NULL","3","2025-07-12 06:02:25","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_DOCU_DELY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_DOCU_DELY AS GDW2_RESTORE.MAP_CSE_APPT_DOCU_DELY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:01","singhp80","2025-07-12 07:57:01","NULL","29","2025-08-13 15:43:34","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT_PDCT(        APPT_PDCT_I,        APPT_QLFY_C,        ACQR_TYPE_C,        ACQR_ADHC_X,        ACQR_SRCE_C,        PDCT_N,        APPT_I,        SRCE_SYST_C,        SRCE_SYST_APPT_PDCT_I,        LOAN_FNDD_METH_C,        NEW_ACCT_F,        BROK_PATY_I,        COPY_FROM_OTHR_APPT_F,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        JOB_COMM_CATG_C,        DEBT_ABN_X,        DEBT_BUSN_M,        SMPL_APPT_F,        APPT_PDCT_CATG_C,        APPT_PDCT_DURT_C,        ASES_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT_PDCT FOR ACCESSSELECT        APPT_PDCT_I,        APPT_QLFY_C,        ACQR_TYPE_C,        ACQR_ADHC_X,        ACQR_SRCE_C,        PDCT_N,        APPT_I,        SRCE_SYST_C,        SRCE_SYST_APPT_PDCT_I,        LOAN_FNDD_METH_C,        NEW_ACCT_F,        BROK_PATY_I,        COPY_FROM_OTHR_APPT_F,        EFFT_D,        EXPY_D,        PROS_KEY_EFFT_I,        PROS_KEY_EXPY_I,        EROR_SEQN_I,        JOB_COMM_CATG_C,        DEBT_ABN_X,        DEBT_BUSN_M,        SMPL_APPT_F,        APPT_PDCT_CATG_C,        APPT_PDCT_DURT_C,        ASES_D  FROM        K_STAR_CAD_PROD_DATA.APPT_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:42:13","perumabh","2025-07-14 22:42:13","NULL","1","2025-07-14 22:42:13","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVCBODS","MSTR_CNCT_BALN_TRNF_PRTP","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVCBODS.MSTR_CNCT_BALN_TRNF_PRTP(	RECD_CNT,	INTR_CNCT_NUMB_OF_MAIN_CNCT,	ELEM_OF_A_CNCT_HIER_GRUP,	SRCE_SYST_ISAC_CODE,	OBJC_BDT_APPT,	INTR_OBJC_IDNN,	OBJC_FUNC,	TREE_TYPE,	CNCT_CATG,	MAIN_CNCT_CATG,	VALD_FROM,	ACTL_VALD_END,	MEMB_BDT_APPT,	OBJC_FIX_PRTP_MAIN_CNCT,	HIER_ID,	BALN_TRNF_ROLE,	TSHD_AMT,	CNCY,	FUND_ACCT_RANK,	MAX_PERC_RATE,	BALN_TRNF_BALN_DETR_BSIS,	SHRT_FORM_TIME_STMP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND)	AS LOCKING TABLE K_PDCBODS.MSTR_CNCT_BALN_TRNF_PRTP FOR ACCESSSELECT	RECD_CNT,	INTR_CNCT_NUMB_OF_MAIN_CNCT,	ELEM_OF_A_CNCT_HIER_GRUP,	SRCE_SYST_ISAC_CODE,	OBJC_BDT_APPT,	INTR_OBJC_IDNN,	OBJC_FUNC,	TREE_TYPE,	CNCT_CATG,	MAIN_CNCT_CATG,	VALD_FROM,	ACTL_VALD_END,	MEMB_BDT_APPT,	OBJC_FIX_PRTP_MAIN_CNCT,	HIER_ID,	BALN_TRNF_ROLE,	TSHD_AMT,	CNCY,	FUND_ACCT_RANK,	MAX_PERC_RATE,	BALN_TRNF_BALN_DETR_BSIS,	SHRT_FORM_TIME_STMP,	UPDT_MODE,	LOAD_S,	PROS_KEY_EFFT_I,	ROW_SECU_ACCS_C,	UPD_LOAD_S,	UPD_PROS_KEY_EFFT_I,	IS_CURR_IND  FROM	K_PDCBODS.MSTR_CNCT_BALN_TRNF_PRTP  WHERE(/* Start - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:44","perumabh","2025-08-22 11:37:44","NULL","1","2025-08-22 11:37:44","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_DOCU_DELY_INSS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_DOCU_DELY_INSS AS GDW2_RESTORE.TMP_APPT_PDCT_DOCU_DELY_INSS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:57","singhp80","2025-07-12 07:56:57","NULL","3","2025-07-12 06:02:24","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_DOCU_DELY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_DOCU_DELY(        EXEC_DOCU_RECV_TYPE,        DOCU_DELY_RECV_C,        EFFT_D,        EXPY_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_DOCU_DELY FOR ACCESSSELECT        EXEC_DOCU_RECV_TYPE,        DOCU_DELY_RECV_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_DOCU_DELY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:00","perumabh","2025-07-14 22:18:00","NULL","1","2025-07-14 22:18:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DERV_PRTF_PATY_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_PRTF_PATY_REL(        PATY_I,	 INT_GRUP_I,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 DERV_PRTF_TYPE_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.DERV_PRTF_PATY_REL FOR ACCESSSELECT        PATY_I,	 INT_GRUP_I,	 DERV_PRTF_CATG_C,	 DERV_PRTF_CLAS_C,	 DERV_PRTF_TYPE_C,	 VALD_FROM_D,	 VALD_TO_D,	 EFFT_D,	 EXPY_D,	 PTCL_N,	 REL_MNGE_I,	 PRTF_CODE_X,	 SRCE_SYST_C,	 ROW_SECU_ACCS_C  FROM        K_STAR_CAD_PROD_DATA.DERV_PRTF_PATY_REL WHERE ( (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */)    );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:44:02","perumabh","2025-07-14 22:44:02","NULL","4","2025-08-22 11:36:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","util_btch_isac","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.util_btch_isac AS GDW2_RESTORE.util_btch_isac WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:31","singhp80","2025-07-12 07:56:31","NULL","44","2025-08-14 18:11:12","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","UTIL_PARM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.UTIL_PARM AS GDW2_RESTORE.UTIL_PARM_PDSRCCS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 08:01:15","singhp80","2025-07-12 08:01:15","NULL","30","2025-08-13 19:17:40","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"karsa","TX_165_40_1_HL_SUBM_APPT_FHC_COMT","1","V ","F ","NN  ","karsa","REPLACE VIEW  KARSA.TX_165_40_1_HL_SUBM_APPT_FHC_COMT-- ----------------------------------------------------------------------- VIEW NAME:     B_D42_V_INP_001_STD_0.TX_165_40_1_HL_SUBM_APPT---- DESCRIPTION: This TCF Input View is generated using Enterprise-- Architect Code Generator---- Identify the Home Lending (HL) Applications submitted                  ------ VER   DATE       MODIFIED BY         DESCRIPTION-- ----- ---------- ------------------- ---------------------------------- 1.0              EA Code Generator    Input View Stub-- -------------------------------------------------------------------------(CNCY_IDNN_BK      ,CORT_VERS_N      ,MSTR_SRCE_SYST_C      ,MSUR_A      ,MSUR_CODE_A      ,MSUR_CODE_Q      ,MSUR_CODE_R      ,MSUR_Q      ,MSUR_QLFY_C      ,MSUR_R      ,PERD_TYPE_C      ,RECD_IDNN_BK      ,RECD_IDNN_BK_M      ,RECD_QLFY_C      ,SNAP_D      ,SRCE_RECD_N      ,SUBJ_AREA_C      ,USGE_CNCY_CATG_IDNN_BK)ASLOCKING ROW FOR ACCESSSELECT'NULL'                  AS CNCY_IDNN_BK,0                                                                          AS CORT_VERS_N,MSUR.MSTR_SRCE_SYST_C                                                      AS MSTR_SRCE_SYST_C,NULL                                                                       AS MSUR_A,NULL                                                                       AS MSUR_CODE_A,'HL_SUBM_APPT_Q'                                                           AS MSUR_CODE_Q,NULL                                                                       AS MSUR_CODE_R,MSUR.MSUR_Q                                                                AS MSUR_Q,'UNKNOWN'                                                                  AS MSUR_QLFY_C,NULL                                                                       AS MSUR_R,'DAY'                                                                      AS PERD_TYPE_C,MSUR.APPT_IDNN_BK                                                          AS RECD_IDNN_BK,'APPT_IDNN_BK'                                                             AS RECD_IDNN_BK_M,MSUR.APPT_QLFY_C                                                           AS RECD_QLFY_C,MSUR.SNAP_D                                                                AS SNAP_D,MSUR.SRCE_APPT_N                                                           AS SRCE_RECD_N,'APPT'                                                                     AS SUBJ_AREA_C,'UNKNOWN'                                                                  AS USGE_CNCY_CATG_IDNN_BK FROM    (              SELECT   BAS1.APPT_IDNN_HK                                ,HAPT.APPT_IDNN_BK                                ,HAPT.APPT_QLFY_C                                ,HAPT.SRCE_APPT_N                                ,BAS1.OWNER_BY_STAFF_NUMBER                                ,BAS1.APP_NO                                ,BAS1.MSTR_SRCE_SYST_C                                ,BAS1.CREATED_DATE                                ,BAS1.SNAP_D                                ,1 AS MSUR_Q                        FROM                        (                        SELECT BASE.* FROM                                                         (                                                                        SELECT                                                                            APPT_STAT.APPT_IDNN_HK                                                                            ,APPT.OWNER_BY_STAFF_NUMBER                                                                            ,APPT.APP_NO                                                                            ,APPT.MSTR_SRCE_SYST_C                                                                            ,APPT.CREATED_DATE                                                                            ,CAST(APPT_STAT.CSE_START_DATE AS DATE) AS SNAP_D    /*FIRST ASSESSMENT DATE*/                                                                                                                                                                            FROM B_D42_V_RAW_001_STD_0.S_CSE_APPT_STAT APPT_STAT /*APPLICATION STATUS TABLE*/                                                                                                                                                                                                                                                                                                                                              JOIN B_D42_V_RAW_001_STD_0.S_CSE_APPT APPT /*APPLICATION BASE -- OWNER STAFF NUMBER LOOKS TO BE CONSISTANTLY AVAILABLE FROM JULY 2017 ONWARDS -- GAPS RELATE TO TPB AND ONLINE ORIGINATED APPS*/                                                                        ON APPT_STAT.APPT_IDNN_HK = APPT.APPT_IDNN_HK                                                                        AND APPT.RECORD_DELETED_FLAG =0                                                                        AND APPT_STAT.CSE_START_DATE BETWEEN APPT.EFFT_TS AND APPT.EXPY_TS /*OWNER AT TIME OF FIRST SUBMISSION*/                                                                        AND APPT_STAT.EXPY_TS= '9999-12-31 23:59:59.999999'                                                                        AND APPT_STAT.RECORD_DELETED_FLAG =0                                                                        AND APPT_STAT.SM_STATE_CAT_ID IN (                                                                        /* REFER P_V_USR_TEC_0.R_CSE_APPT_STAT_CATG WHERE SM_STATE_CAT_ID IN ...*/                                                                        '26' /*HL_ASSESSMENT*/                                                                        ,'105' /*HLT_ASSESSMENT*/                                                                    )                                                                                                                                QUALIFY(ROW_NUMBER() OVER(PARTITION BY APPT_STAT.APPT_IDNN_HK ORDER BY CASE WHEN APPT_STAT.APPT_IDNN_HK IS NULL THEN TIMESTAMP'9999-12-31 23:59:59.999999' ELSE APPT_STAT.CSE_START_DATE END)) = 1                                                        )BASE                                                                                                     INNER JOIN KARSA.TX_165_40_1_HL_SUBM_APPT_FHC_COMT_SNAP_D TX_SNAP_D                                            ON BASE.SNAP_D = TX_SNAP_D.SNAP_D                                                                                                                                                                 INNER JOIN B_D42_V_BAL_001_STD_0.DIMN_DATE DCAL -- CHECK IF APPLICATION WAS FIRST SUBMITTED ON A WEEKEND / PUBLIC HOLIDAY                    						-- get the business days within the next 7 days of the Application assessed Date                                            ON DCAL.CALR_D BETWEEN CAST(BASE.SNAP_D AS DATE)+ 1 AND CAST(BASE.SNAP_D AS DATE) + 7                                            AND DCAL.CALR_NON_WORK_DAY_TYPE_C = 'BSDY'                                                                                         INNER JOIN B_D42_V_BAL_001_STD_0.DIMN_DATE DCA2                                            ON DCA2.CALR_D = BASE.SNAP_D                                                                                         WHERE BASE.OWNER_BY_STAFF_NUMBER IS NOT NULL                                            -- if the application is assessed on a non business day, add grace period of 1 day to drive the FHC                                            QUALIFY ROW_NUMBER() OVER ( PARTITION BY BASE.APPT_IDNN_HK, BASE.OWNER_BY_STAFF_NUMBER, BASE.APP_NO ,BASE.SNAP_D ORDER BY  DCAL.CALR_D  ASC ) = CASE WHEN DCA2.CALR_NON_WORK_DAY_TYPE_C <> 'BSDY' THEN 2 ELSE 1 END                                                                          )    BAS1                                                                                         INNER JOIN      B_D42_V_SHR_001_STD_0.H_APPT                          HAPT                                        ON HAPT.APPT_IDNN_HK = BAS1.APPT_IDNN_HK                                        AND HAPT.RECORD_DELETED_FLAG = 0                                              AND HAPT.EXPY_D = '9999-12-31'                                                                                                               INNER JOIN  B_D42_V_SHR_001_STD_0.H_EMPL HEMP                                        ON HEMP.EMPL_IDNN_BK = BAS1.OWNER_BY_STAFF_NUMBER                                   )MSUR;","NULL","0","0","0","N ","NULL","NULL","2019-02-25 16:19:49","karsa","2019-02-25 16:40:51","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_CNTY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_CNTY   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CNTY FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_CNTY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:12","perumabh","2025-07-14 22:17:12","NULL","1","2025-07-14 22:17:12","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"kumarm9","MCR_ACCT_PATY_GRUP_PRTF","1","M ","F ","NN  ","kumarm9","REPLACE MACRO KUMARM9.MCR_ACCT_PATY_GRUP_PRTF (DT DATE) AS (            DELETE FROM B_D17_D_TMP_001_STD_0.ACCT_PATY_GRUP_PRTF  WHERE SNAP_D = :DT;        INSERT INTO B_D17_D_TMP_001_STD_0.ACCT_PATY_GRUP_PRTF                         SEL   :DT AS SNAP_D,                        LAP.ACCT_IDNN_HK,                         LAP.ACCT_IDNN_BK,                         LAP.MSTR_SRCE_SYST_C,                        LAP.PATY_IDNN_HK,                         LAP.PATY_IDNN_BK,                         PRTF.PRTF_IDNN_HK,                         PRTF.PRTF_IDNN_BK,                        SPG.PATY_GRUP_I            FROM P_V_USR_TEC_0.H_ACCT HA                                    INNER JOIN  (                                        SEL   HA.ACCT_IDNN_HK,                                         HA.ACCT_IDNN_BK,                                        HA.MSTR_SRCE_SYST_C,                                        LAP.PATY_IDNN_HK,                                        HPA.PATY_IDNN_BK                                                        FROM P_V_USR_TEC_0.H_ACCT HA                            JOIN P_V_USR_TEC_0.L_ACCT_PATY LAP                                        ON LAP.ACCT_IDNN_HK = HA.ACCT_IDNN_HK                                       AND HA.MSTR_SRCE_SYST_C IN ('HLS') --, 'SAP', 'AFS')                            JOIN P_V_USR_TEC_0.S_ACCT_PATY SAP                                        ON SAP.ACCT_PATY_IDNN_HK = LAP.ACCT_PATY_IDNN_HK                                        AND PRFR_PATY_F = 'Y'                                        AND :DT BETWEEN SAP.BUSN_STRT_D AND SAP.BUSN_END_D                                        AND SAP.EXPY_D = '9999-12-31'                                        AND SAP.RECORD_DELETED_FLAG = 0                            JOIN P_V_USR_TEC_0.H_PATY HPA                                         ON HPA.PATY_IDNN_HK = LAP.PATY_IDNN_HK                                                                    UNION ALL                                                        SEL   HA.ACCT_IDNN_HK,                                              HA.ACCT_IDNN_BK,        --OREPLACE(ACCT_I, 'AFSAF', 'AFS~AF~') AS ACCT_IDNN_BK,                                         HA.MSTR_SRCE_SYST_C,                                        HP.PATY_IDNN_HK,                                        HP.PATY_IDNN_BK                                                                    FROM PVTECH.DERV_ACCT_PATY DAP                           JOIN P_V_USR_TEC_0.H_ACCT HA ON HA.ACCT_IDNN_BK = OREPLACE(ACCT_I, 'AFSAF', 'AFS~AF~')                           JOIN P_V_USR_TEC_0.H_PATY HP ON HP.PATY_IDNN_BK = OREPLACE( PATY_I, 'CIFPT', 'SAP~PT~')                             WHERE :DT BETWEEN DAP.EFFT_D AND DAP.EXPY_D                            AND ACCT_I like 'AFS%'                            AND PRFR_PATY_F = 'Y'                                                                                                                                                 ) LAP ON LAP.ACCT_IDNN_HK = HA.ACCT_IDNN_HK                                    LEFT JOIN (                                                                       SEL PATY_IDNN_HK, PATY_IDNN_BK, PRTF_IDNN_HK, PRTF_IDNN_BK                                        FROM PVDATA.PATY_INT_GRUP_HIST A                                        JOIN P_V_USR_TEC_0.H_PATY PATY ON OREPLACE(PATY.PATY_IDNN_BK, 'SAP~PT~', 'CIFPT')  = A.PATY_I AND PATY.MSTR_SRCE_SYST_C = 'SAP'                                        JOIN PVDATA.INT_GRUP_HIST B ON A.INT_GRUP_I = B.INT_GRUP_I AND :DT BETWEEN B.EFFT_D AND B.EXPY_D                                        JOIN P_V_USR_TEC_0.H_PRTF PRTF ON PRTF.PRTF_IDNN_BK = B.SRCE_SYST_INT_GRUP_I                                        WHERE A.REL_C = 'RLMT' AND :DT BETWEEN A.EFFT_D AND A.EXPY_D                                                                       /*                                SEL LPP.PATY_IDNN_HK, LPP.PRTF_IDNN_HK, PRTF_IDNN_BK                                FROM    P_V_USR_TEC_0.L_PATY_PRTF LPP                                 INNER JOIN P_V_USR_TEC_0.S_PATY_PRTF SPP                                             ON SPP.PATY_PRTF_IDNN_HK = LPP.PATY_PRTF_IDNN_HK                                             AND LPP.PRTF_IDNN_HK IS NOT NULL                                             AND :DT BETWEEN SPP.BUSN_STRT_D AND SPP.BUSN_END_D                                             AND SPP.EXPY_D = '9999-12-31'                                             AND SPP.RECORD_DELETED_FLAG = 0                                JOIN P_V_USR_TEC_0.H_PRTF HP0                                            ON HP0.PRTF_IDNN_HK = LPP.PRTF_IDNN_HK                                JOIN P_V_USR_TEC_0.H_PATY HP1                                            ON HP1.PATY_IDNN_HK = LPP.PATY_IDNN_HK                             */                                       ) PRTF                            ON PRTF.PATY_IDNN_HK = LAP.PATY_IDNN_HK                                        LEFT OUTER JOIN b_D17_v_buS_001_std_0.S_PATY_GRUP_DETL SPG                         ON LAP.PATY_IDNN_HK = SPG.PATY_IDNN_HK                         AND SPG.PATY_GRUP_TYPE_C = 'SALE'                         AND :DT  BETWEEN SPG.BUSN_STRT_D AND SPG.BUSN_END_D                         AND SPG.EXPY_D = '9999-12-31'                         AND SPG.RECORD_DELETED_FLAG = 0                                                                                                   WHERE  PRTF.PRTF_IDNN_BK IS NOT NULL               ;);","NULL","0","0","0","N ","NULL","NULL","2017-08-28 10:36:05","kumarm9","2017-08-28 10:36:05","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","EX_458_1_BV_ACCT_COLL_RPRT_DETL","1","V ","F ","NN  ","KOSTKAMA","Replace view KOSTKAMA.EX_458_1_BV_ACCT_COLL_RPRT_DETL(ACCT_N,CNTL_L1_6_C,ACCT_IDNN_BK,CLSE_ACCT_F,CLSE_D,PDCT_TYPE_C,LOAN_TERM_END_D,PDCT_M,GRD_PDCT_IDNN_BK,BPB_PDCT_F,OSCA_F,CPLX_PDCT_F,baln_a,cr_limt_a,APRD_A,RDRW_A,ovrdrwn_a,ovrlim_a,IN_ARRS_SNCE_D,PAST_DUE_SNCE_D,ARRS_A,SMEG_LOAN_C,TOT_CR_TOVR,TOT_DB_TOVR,IN_BKRR_F,in_arrs_f,PRDF_RATE_C,LGD_RATE_C,SCRD_F,VALID_FROM_D)AS LOCKING ROW FOR ACCESSsel                 ACC.ACCT_N ,     '|||||' AS CNTL_L1_6_C,    ACC.ACCT_IDNN_BK    ,coalesce(ACC.CLSE_ACCT_F,'-') as CLSE_ACCT_FF               ,coalesce(cast(ACC.CLSE_D as VARCHAR (20) ),'-' ) as CLSE_DDD                        ,ACC.PDCT_TYPE_C    -- ,coalesce(cast(ACC.LOAN_TERM_END_D as  varchar(20) ),'-') as LOAN_TERM_END_DD                                               ,coalesce(CAST(cast(ACC.LOAN_TERM_END_D AS DATE FORMAT 'dd/mm/yyyy')as  varchar(20) ),'-') as LOAN_TERM_END_DDD    ,coalesce(ACC.PDCT_M ,'-') as PDCT_MM                         ,ACC.GRD_PDCT_IDNN_BK       ,ACC.BPB_PDCT_F      ,ACC.OSCA_F                            ,ACC.CPLX_PDCT_F     ,coalesce(TRIM(fdm1.amount (FORMAT '-(10)9.99')(varchar(50))),'0.00') as baln_a    ,coalesce(TRIM(ACC.CR_LIMT_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as cr_limit_a    ,coalesce(TRIM(ACC.APRD_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as APRD_A    ,coalesce(TRIM(ACC.RDRW_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as RDRW_A    ,cast(case when (ACC.pdct_type_c='LoC' and coalesce(ACC.cr_limt_a,0) =0 and coalesce(fdm1.amount,0) >0) then TRIM(fdm1.Amount (FORMAT '-(10)9.99')(varchar(50))) else '0.00' end as VARCHAR(50)) as ovrdrwn_a    ,cast(case when (ACC.pdct_type_c='LoC' and coalesce(ACC.cr_limt_a,0) >=0 and coalesce(fdm1.amount,0) >coalesce(ACC.cr_limt_a,0)) then TRIM(coalesce(fdm1.amount,0) -coalesce(ACC.cr_limt_a,0)  (FORMAT '-(10)9.99')(varchar(50))) else '0.00' end as VARCHAR(50)) as ovrlim_a    ,coalesce(CAST(CAST (ACC.IN_ARRS_SNCE_D  AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)),'-') as IN_ARRS_SNCE_D    ,coalesce(CAST(CAST (ACC.PAST_DUE_SNCE_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)),'-') as  PAST_DUE_SNCE_D    ,coalesce(TRIM(ACC.ARRS_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as ARRS_A    ,cast(coalesce(ACC.SMEG_LOAN_C ,'-') as VARCHAR(50)) as SMEG_LOAN_C                   ,cast(max(case when TOVR.DR_CR_F='C' then coalesce( -1*TRIM(TOVR.Amount (FORMAT '-(10)9.99')(varchar(50))) ,'0.00'  ) else '0.00' end) as VARCHAR(50)) as TOT_CR_TOVR    ,cast(max(case when TOVR.DR_CR_F='D' then coalesce( TRIM(TOVR.Amount (FORMAT '-(10)9.99')(varchar(50))) ,'0.00'  ) else '0.00' end) as  VARCHAR(50))  as TOT_DB_TOVR    ,coalesce(ACC.IN_BKRR_F ,'-') as IN_BKRR_F    ,case when ACC.IN_ARRS_SNCE_D is not null then 'Yes' else 'No' end as in_arrs_f    ,coalesce(ACC.PRDF_RATE_C ,'-') as PRDF_RATE_C    ,coalesce(ACC.LGD_RATE_C ,'-') as LGD_RATE_C                     ,coalesce(ACC.SCRD_F ,'-') as SCRD_F     ,CAST(CAST (ARRS.BUSN_D  AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10))  ||'|' AS VALID_FROM_D    from B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS ARRS --- All Accounts in Collections    INNER JOIN (select * from B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR where bpb_coll_pdct_f='Yes') ACC    	ON ARRS.ACCT_IDNN_BK = ACC.ACCT_IDNN_BK        AND ARRS.BUSN_D between ACC.EFFT_D and ACC.EXPY_D        AND ACC.PDCT_TYPE_C='LoC'   -------- Filter for transactional accounts        and ( OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  )  -- Accounts in scope            INNER JOIN B_D36_V_SHR_001_STD_0.H_ACCT HA         ON ARRS.ACCT_IDNN_BK = HA.ACCT_IDNN_BK         AND ARRS.busn_d between HA.EFFt_D and HA.EXPY_D         and HA.MSTR_SRCE_SYST_C = 'SAP'            LEFT JOIN B_D36_V_RAW_001_STD_0.S_FDM_SAP_BALN_C6_ZGL_DS04 FDM1         on HA.acct_idnn_hk=FDM1.acct_idnn_hk         and fdm1.biczbalcatg='2'         and ARRS.busn_d=fdm1.gl_acct_d  -- Balance for transactional accounts            left join         (            sel             TOVR.gl_acct_d as efft_d            ,ACCT_IDNN_BK            ,DR_CR_F            ,sum(amount) as amount            from             (sel *             from B_D36_V_SHR_001_STD_0.L_FNCL_TRAN_ACCT_REL                        where MSTR_SRCE_SYST_C='SAP')  TAR                        inner join             B_D36_V_RAW_001_STD_0.s_fdm_sap_tran_c6_zgl_ds01 TOVR  -- Credit and Debit transactions for transactional accounts                on TAR.FNCL_TRAN_IDNN_HK = TOVR.FNCL_TRAN_IDNN_HK                 and TAR.MSTR_SRCE_SYST_C='SAP'                            inner join B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE BD            on BD.business_date=TOVR.gl_acct_d            and STREAM_KEY=2230            group by 1,2,3        )TOVR            on ARRS.BUSN_D=TOVR.EFFT_D             and ARRS.ACCT_IDNN_BK = TOVR.ACCT_IDNN_BK            where             (                BUSN_D = IS_IN_ARRS_D      -- New in Arrears                OR                    (        IS_IN_ARRS_F = 'Yes'     AND    (    BUSN_D = ACC.EFFT_D OR  BUSN_D = ACC.EXPY_D  )       )     -- Already in arrears  Change in attributes                                OR                (WAS_IN_ARRS_F = 'Yes' AND IS_IN_ARRS_F = 'No')   -- Leaving arrears (Only needed for Acct & Paty Attributes        )              --group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35        group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30                UNION ALL/* Term Products Account level attributes */    sel                 ACC.ACCT_N ,      '|||||' AS CNTL_L1_6_C,    ACC.ACCT_IDNN_BK    ,coalesce(ACC.CLSE_ACCT_F,'-') as CLSE_ACCT_FF                --,coalesce(cast(ACC.CLSE_D as VARCHAR (20) ),'-' ) as CLSE_DD      ,coalesce(CAST(cast(ACC.CLSE_D AS DATE FORMAT 'dd/mm/yyyy')as  varchar(20) ),'-') as CLSE_DDD                        ,ACC.PDCT_TYPE_C     --,coalesce(cast(ACC.LOAN_TERM_END_D as  varchar(20) ),'-') as LOAN_TERM_END_DD                                                ,coalesce(CAST(cast(ACC.LOAN_TERM_END_D AS DATE FORMAT 'dd/mm/yyyy')as  varchar(20) ),'-') as LOAN_TERM_END_DDD    ,SUBSTRING( COALESCE ( CAST (ACC.PDCT_M AS VARCHAR (60 ) ), '-')  FROM 1 FOR 60)     --,coalesce(ACC.PDCT_M ,'-') as PDCT_MM                         ,ACC.GRD_PDCT_IDNN_BK       ,ACC.BPB_PDCT_F      ,ACC.OSCA_F                            ,ACC.CPLX_PDCT_F     ,coalesce(TRIM(fdm2.amount (FORMAT '-(10)9.99')(varchar(50))),'0.00') as balL    ,coalesce(TRIM(ACC.CR_LIMT_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as cr_limit_aA    ,coalesce(TRIM(ACC.APRD_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as APRD_AAA    ,coalesce(TRIM(ACC.RDRW_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as RDRW_AAA    ,'0.00' as ovrdrwn_aaA    ,'0.00' as ovrlim_aaA    ,coalesce(CAST(CAST (ACC.IN_ARRS_SNCE_D  AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)),'-') as IN_ARRS_SNCE_DD      ,coalesce(CAST(CAST (ACC.PAST_DUE_SNCE_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)),'-') as  PAST_DUE_SNCE_DD                          ,coalesce(TRIM(ACC.ARRS_A (FORMAT '-(10)9.99')(varchar(50))),'0.00') as ARRS_AAA                     ,CAST(coalesce(ACC.SMEG_LOAN_C ,'-') as VARCHAR(50)) as SMEG_LOAN_CC                      ,cast(max(case when TOVR.DR_CR_F='C' then coalesce( -1*TRIM(TOVR.Amount (FORMAT '-(10)9.99')(varchar(50))) ,'0.00'  ) else '0.00' end) as VARCHAR(50)) as TOT_CR_TOVRRR    ,cast(max(case when TOVR.DR_CR_F='D' then coalesce( TRIM(TOVR.Amount (FORMAT '-(10)9.99')(varchar(50))) ,'0.00'  ) else '0.00' end) as  VARCHAR(50))  as TOT_DB_TOVRRR    ,coalesce(ACC.IN_BKRR_F ,'-') as IN_BKRR_FF                        ,case when ACC.IN_ARRS_SNCE_D is not null then 'Yes' else 'No' end as in_arrs_fF         ,coalesce(ACC.PRDF_RATE_C ,'-') as PRDF_RATE_CC                       ,coalesce(ACC.LGD_RATE_C ,'-') as LGD_RATE_CC                        ,coalesce(ACC.SCRD_F ,'-') as SCRD_FF     ,CAST(CAST (ARRS.BUSN_D  AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10))  ||'|' AS VALID_FROM_D    from B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS ARRS --- All Accounts in Collections    INNER JOIN (sel * from B_D36_V_BAL_001_STD_0.BV_ACCT_COLL_ATTR where bpb_coll_pdct_f='Yes') ACC    	ON ARRS.ACCT_IDNN_BK = ACC.ACCT_IDNN_BK        AND ARRS.BUSN_D between ACC.EFFT_D and ACC.EXPY_D        AND ACC.PDCT_TYPE_C='TL'  -- Product filter for Term accounts        and ( OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  )             INNER JOIN B_D36_V_SHR_001_STD_0.H_ACCT HA         ON ARRS.ACCT_IDNN_BK = HA.ACCT_IDNN_BK         AND ARRS.busn_d between HA.EFFt_D         and HA.EXPY_D and HA.MSTR_SRCE_SYST_C = 'SAP'            LEFT join B_D36_V_RAW_001_STD_0.S_FDM_SAP_BALN_C7 FDM2  -- Balance for Term accounts        on HA.acct_idnn_hk=FDM2.acct_idnn_hk         and FDM2.INPT_SRCE='PRINCIPAL'         and ARRS.BUSN_D=fdm2.gl_acct_d            left join     (        sel         TOVR.gl_acct_d as efft_d        ,ACCT_IDNN_BK        ,DR_CR_F        ,sum(amount) as amount        from         (sel * from B_D36_V_SHR_001_STD_0.L_FNCL_TRAN_ACCT_REL where MSTR_SRCE_SYST_C='SAP')   TAR        inner join         (sel FNCL_TRAN_IDNN_HK,dr_cr_f,amount,gl_acct_d from B_D36_V_RAW_001_STD_0.s_fdm_sap_tran_c7 where gl_acct_idnn_bk='12001')  TOVR -- Credit and Debit transactions for Term accounts            on TAR.FNCL_TRAN_IDNN_HK = TOVR.FNCL_TRAN_IDNN_HK         inner join B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE BD            on BD.business_date=TOVR.gl_acct_d            and STREAM_KEY=2230            group by 1,2,3                        )TOVR        on ARRS.BUSN_D=TOVR.EFFT_D         and ARRS.ACCT_IDNN_BK = TOVR.ACCT_IDNN_BK             where            (                BUSN_D = IS_IN_ARRS_D      -- New in Arrears                OR                    (        IS_IN_ARRS_F = 'Yes'     AND    (    BUSN_D = ACC.EFFT_D OR  BUSN_D = ACC.EXPY_D  )       )     -- Already in arrears    Change in attributes                                OR                (WAS_IN_ARRS_F = 'Yes' AND IS_IN_ARRS_F = 'No')   -- Leaving arrears (Only needed for Acct & Paty Attributes        )              --group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30,31,32,33,34,35        group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,27,28,29,30;","NULL","0","0","0","N ","NULL","NULL","2020-10-01 17:17:24","KOSTKAMA","2020-10-01 17:27:21","NULL","0","2020-10-01 17:27:26","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarahe","BV_RSS_DEPT_RPRT_LINE_PP","1","V ","F ","NN  ","kumarahe","REPLACE VIEW KUMARAHE.BV_RSS_DEPT_RPRT_LINE_PP(        RPRT_MAP_IDNN_BK       ,DEPT_IDNN_BK       ,PERD_C       ,SNAP_D       ,SCNO_IDNN_BK       ,REL_MNGE_NODE_C       ,RVNU_A       ,MSUR_A       ,MSUR_Q       ,MSUR_R)AS LOCKING ROW FOR ACCESSSELECT  FACT.RPRT_MAP_IDNN_BK     AS RPRT_MAP_IDNN_BK        ,FACT.DEPT_IDNN_BK         AS DEPT_IDNN_BK         ,FACT.PERD_C               AS PERD_C             ,FACT.SNAP_D               AS SNAP_D             ,FACT.SCNO_IDNN_BK         AS SCNO_IDNN_BK       ,FACT.REL_MNGE_NODE_C      AS REL_MNGE_NODE_C              ,SUM(FACT.RVNU_A)          AS RVNU_A       ,SUM(FACT.MSUR_A)          AS MSUR_A                         ,SUM(FACT.MSUR_Q)          AS MSUR_Q                               ,SUM(FACT.MSUR_R)          AS MSUR_R                        FROM KUMARAHE.FACT_RSS_RPRT_LINE_AGGR FACTWHERE FACT.EXPY_D              = DATE'9999-12-31'AND   FACT.RECORD_DELETED_FLAG = 0GROUP BY 1,2,3,4,5,6;","NULL","0","0","0","N ","NULL","NULL","2016-07-27 14:13:24","kumarahe","2016-07-27 14:13:24","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PUTIL","terasync","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PUTIL.terasync AS GDW2_RESTORE.terasync WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:52","singhp80","2025-07-12 07:55:52","NULL","24","2025-08-06 10:19:41","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSRCCS","PLAN_BALN_SEGM_MSTR","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSRCCS.PLAN_BALN_SEGM_MSTR AS GDW2_RESTORE.PLAN_BALN_SEGM_MSTR WITH DATA AND STATS;","NULL","0","0","1","N ","NULL","NULL","2025-07-12 07:52:12","singhp80","2025-07-12 07:52:12","NULL","184","2025-08-18 09:46:04","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","3","1","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_DOCU_DELY_INSS","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_DOCU_DELY_INSS AS GDW2_RESTORE.TMP_APPT_DOCU_DELY_INSS WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:47","singhp80","2025-07-12 07:56:47","NULL","3","2025-07-12 06:02:18","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ACCT_APPT_PDCT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_APPT_PDCTAS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_APPT_PDCTFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.ACCT_APPT_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:12:16","perumabh","2025-07-14 22:12:16","NULL","1","2025-07-14 22:12:16","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","EX_403_1_BV_BPB_PATY_COLL_RPRT","1","V ","F ","NN  ","KOSTKAMA","--REPLACE VIEW B_D36_V_INP_001_STD_0.EX_403_1_BV_BPB_PATY_COLL_RPRT  ASREPLACE VIEW KOSTKAMA.EX_403_1_BV_BPB_PATY_COLL_RPRT  AS(SELECT DISTINCT    CUST_N,    '|||||' AS CNTL_L1_6_C,    PATY_IDNN_BK,    COALESCE ( CAST(CAST (BRTH_D AS DATE FORMAT 'dd/mm/yyyy') AS VARCHAR(10)) , '-')  AS BRTH_D,     COALESCE ( CAST (CUST_AUST_BUSN_N AS VARCHAR (20 ) ), '-') AS CUST_AUST_BUSN_N,        CASE WHEN CNTL_PTCL_N IS NULL THEN 'RBS' ELSE SUBSTRING( COALESCE ( CAST (MNGE_BUSN_UNIT_C AS VARCHAR (3 ) ), '-')  FROM 1 FOR 3) END AS MNGE_BUSN_UNIT_C,    COALESCE ( CAST (REL_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS REL_MNGE_CUST_F,    CASE WHEN CNTL_PTCL_N IS NULL THEN 'MASS' ELSE SUBSTRING( COALESCE ( CAST (BUSN_SEGM_M AS VARCHAR (40 ) ), '-')  FROM 1 FOR 40) END AS  BUSN_SEGM_M,    COALESCE ( CAST (PRTF_C AS VARCHAR (10 ) ), '-') AS  PRTF_C,    COALESCE ( CAST (BPB_MNGE_CUST_F AS VARCHAR (3 ) ), '-')  AS BPB_MNGE_CUST_F,    COALESCE ( CAST (FRAU_STOP_F AS VARCHAR (3 ) ), '-')  AS FRAU_STOP_F,    COALESCE ( CAST (DECD_ESTE_F AS VARCHAR (3 ) ), '-')  AS DECD_ESTE_F,    COALESCE ( CAST (IN_RETL_HRDS_F AS VARCHAR (3 ) ), '-')  AS IN_RETL_HRDS_F,    COALESCE ( CAST (VERF_100_POIT_ID_CHEK_F AS VARCHAR (3 ) ), '-') AS VERF_100_POIT_ID_CHEK_F,    COALESCE ( CAST (ACTV_F AS VARCHAR (3 ) ), '-')  AS ACTV_F,    SUBSTRING( COALESCE ( CAST (SALE_GRUP_C AS VARCHAR (15 ) ), '-') FROM 1 FOR 15)   AS SALE_GRUP_C,    COALESCE ( CAST (GCS_MNGE_F AS VARCHAR (3 ) ), '-') AS GCS_MNGE_F,    COALESCE ( CAST (CBA_INTR_PATY_F AS VARCHAR (3 ) ), '-') AS CBA_INTR_PATY_F,    CAST(CAST (BUSN_D AS DATE FORMAT 'dd/mm/yyyy')AS VARCHAR(10)) ||'|'   AS VALID_FROM_D    FROM (            SELECT DISTINCT                PCA.CUST_N,                PCA.PATY_IDNN_BK,                PCA.BRTH_D,                PCA.CUST_AUST_BUSN_N,                PCA.MNGE_BUSN_UNIT_C,                OWN_BPB_MNGE_F,                PCA.REL_MNGE_CUST_F,                PCA.BUSN_SEGM_M,                PCA.PRTF_C,				PCA.CNTL_PTCL_N,                PCA.BPB_MNGE_CUST_F,                PCA.FRAU_STOP_F,                PCA.DECD_ESTE_F,                PCA.IN_RETL_HRDS_F,                PCA.VERF_100_POIT_ID_CHEK_F,                PCA.ACTV_F,                SG.PATY_GRUP_I  AS SALE_GRUP_C,                PCA.GCS_MNGE_F,                PCA.CBA_INTR_PATY_F,                BUSN_D                                 FROM B_D36_V_BAL_001_STD_0.BV_BPB_PATY_COLL_ATTR  PCA            INNER JOIN B_D36_V_BAL_001_STD_0.BV_BPB_ACCT_PATY_REL_COLL BAPR0    -- Account Owner & Contact                 ON BAPR0.PATY_IDNN_BK = PCA.PATY_IDNN_BK            INNER JOIN B_D36_V_INP_001_STD_0.BV_BPB_ACCT_COLL_ARRS ARRS                ON ARRS.ACCT_IDNN_BK = BAPR0.ACCT_IDNN_BK                AND ARRS.BUSN_D BETWEEN PCA.EFFT_D AND PCA.EXPY_D                AND ARRS.BUSN_D BETWEEN BAPR0.EFFT_D AND BAPR0.EXPY_D                    AND ( ARRS.OWN_BPB_MNGE_F = 'Yes'   OR  ARRS.BPB_PDCT_F = 'Yes'  )             INNER JOIN B_D36_V_RAW_001_STD_0.H_PATY HP                ON HP.PATY_IDNN_BK = PCA.PATY_IDNN_BK            LEFT JOIN B_D36_V_RAW_001_STD_0.S_PATY_GRUP_DETL  SG                 ON SG.PATY_IDNN_HK = HP.PATY_IDNN_HK                 AND ARRS.BUSN_D BETWEEN SG.BUSN_STRT_D AND SG.BUSN_END_D                AND SG.PATY_GRUP_TYPE_C = 'SALE'                AND SG.EXPY_D = '9999-12-31'                AND SG.RECORD_DELETED_FLAG = 0            WHERE                                             BUSN_D = IS_IN_ARRS_D      -- New in Arrears                                                OR                            (        IS_IN_ARRS_F = 'Yes'     AND    (    BUSN_D = PCA.EFFT_D OR  BUSN_D = PCA.EXPY_D  )       )     -- Already in arrears   and    a change in attributes                                        OR                            (        WAS_IN_ARRS_F = 'Yes'     AND     IS_IN_ARRS_F = 'No')   -- Leaving arrears                        ) A);","NULL","0","0","0","N ","NULL","NULL","2020-09-23 20:51:22","KOSTKAMA","2020-09-30 15:15:34","NULL","0","2020-09-30 15:16:15","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","GRD_GNRC_MAP_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_GNRC_MAP_CURR (   MAP_TYPE_C , EFFT_D , TARG_NUMC_C , TARG_CHAR_C , SRCE_NUMC_1_C , SRCE_CHAR_1_C , SRCE_NUMC_2_C , SRCE_CHAR_2_C , SRCE_NUMC_3_C , SRCE_CHAR_3_C , SRCE_NUMC_4_C , SRCE_CHAR_4_C , SRCE_NUMC_5_C , SRCE_CHAR_5_C , SRCE_NUMC_6_C , SRCE_CHAR_6_C , SRCE_NUMC_7_C , SRCE_CHAR_7_C , EXPY_D , GDW_EFFT_D) AS LOCKING ROW FOR ACCESS SEL   MAP_TYPE_C , EFFT_D , TARG_NUMC_C , TARG_CHAR_C , SRCE_NUMC_1_C , SRCE_CHAR_1_C , SRCE_NUMC_2_C , SRCE_CHAR_2_C , SRCE_NUMC_3_C , SRCE_CHAR_3_C , SRCE_NUMC_4_C , SRCE_CHAR_4_C , SRCE_NUMC_5_C , SRCE_CHAR_5_C , SRCE_NUMC_6_C , SRCE_CHAR_6_C , SRCE_NUMC_7_C , SRCE_CHAR_7_C , EXPY_D , DT1.GDW_EFFT_D  FROM K_PVTECH.GRD_GNRC_MAP,  (SEL GDW_EFFT_D    FROM K_PVDATA.GDW_EFFT_DATE) AS DT1 (GDW_EFFT_D)  WHERE DT1.GDW_EFFT_D  BETWEEN EFFT_D AND EXPY_D;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:39:31","perumabh","2025-07-14 23:39:31","NULL","4","2025-07-14 23:39:49","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_COND","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_COND AS GDW2_RESTORE.TMP_APPT_PDCT_COND WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:59","singhp80","2025-07-12 07:56:59","NULL","3","2025-07-12 06:02:25","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"kumarahe","M_DEFECT_SCAN_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  kumarahe.M_DEFECT_SCAN_ST   (  IN_R_ID          VARCHAR(50)     ,IN_PERD_DATE     DATE      ,IN_DEPT_IDNN_BK  VARCHAR(255)     ,IN_SCNO_IDNN_BK  VARCHAR(20)    ) AS       (   ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  BV_RSS_DEPT_RPRT_LINE <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       SELECT '1.  BV_RSS_DEPT_RPRT_LINE'    TBL_VIEW_NM,             BVDRL.*             FROM  A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE BVDRL    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_RPRT_LINE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------            SELECT              '2.  FACT_RSS_RPRT_LINE_AGGR   ' TBL_VIEW_NM            ,FRRLA.*             FROM  A_S07_V_BAL_001_STD_0.FACT_RSS_RPRT_LINE_AGGR  FRRLA    WHERE RPRT_MAP_IDNN_BK =  : IN_R_ID                AND SNAP_D             =  : IN_PERD_DATE          AND DEPT_IDNN_BK       =  : IN_DEPT_IDNN_BK       AND SCNO_IDNN_BK       =  : IN_SCNO_IDNN_BK    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_RSS_SALE_AGGR  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------        SELECT '3.  FACT_RSS_SALE_AGGR'  TBL_VIEW_NM,           SLAG.*,           RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,           RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,           RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,           RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK    FROM  A_S07_V_BAL_001_STD_0.FACT_RSS_SALE_AGGR SLAG     INNER JOIN    (          SELECT                  RLM0.MSUR_CODE_IDNN_BK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK          FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0          WHERE  RLM0.EXPY_D       = '9999-12-31'          AND    RPRT_MAP_IDNN_BK  = :IN_R_ID            AND    SNAP_D            = :IN_PERD_DATE          AND    RLM0.SUMM_TYPE_C IS NULL           GROUP BY 1,2,3,4    ) RLLF    ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK    AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK    AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )    AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )    WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)    ;            ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '4.  FACT_BASE_RSS_ACCT_SALE'  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_ACCT_SALE_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '5.  FACT_BASE_RSS_ACCT_SALE_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_ACCT_SALE_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '6.  FACT_BASE_RSS_OPOR_ITEM '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE             AND    RLM0.SUMM_TYPE_C IS NULL              GROUP BY 1,2,3,4       ) RLLF       ON    SLAG.MSUR_CODE_IDNN_BK = RLLF.MSUR_CODE_IDNN_BK       AND   SLAG.GRD_PDCT_IDNN_HK  = RLLF.GRD_PDCT_IDNN_HK       AND ( RLLF.RM_DEPT_IDNN_HK   = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.RM_DEPT_IDNN_HK  = RLLF.RM_DEPT_IDNN_HK  )       AND ( RLLF.JOBC_IDNN_HK      = 'D4CD0DABCF4CAA22AD92FAB40844C786' OR SLAG.JOBC_IDNN_HK     = RLLF.JOBC_IDNN_HK )           WHERE LAST_DAY(snap_d) = :IN_PERD_DATE AND DEPT_IDNN_HK  = A_D00_F_GBL_001_STD_0.GetHashKey(:IN_DEPT_IDNN_BK)       ;------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------>  FACT_BASE_RSS_OPOR_ITEM_ADJ  <-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------    SELECT '7.  FACT_BASE_RSS_OPOR_ITEM_ADJ '  TBL_VIEW_NM,              SLAG.*,              RLLF.MSUR_CODE_IDNN_BK   RLLF_MSUR_CODE_IDNN_BK,              RLLF.GRD_PDCT_IDNN_HK    RLLF_GRD_PDCT_IDNN_HK,              RLLF.RM_DEPT_IDNN_HK     RLLF_RM_DEPT_IDNN_HK,              RLLF.JOBC_IDNN_HK        RLLF_JOBC_IDNN_HK       FROM  A_S07_V_BAL_001_STD_0.FACT_BASE_RSS_OPOR_ITEM_ADJ SLAG        INNER JOIN       (             SELECT                     RLM0.MSUR_CODE_IDNN_BK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.GRD_PDCT_IDNN_BK)      GRD_PDCT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.RM_TYPE_DEPT_IDNN_BK)  RM_DEPT_IDNN_HK                   ,A_D00_F_GBL_001_STD_0.GetHashKey(RLM0.JOBC_IDNN_BK)          JOBC_IDNN_HK             FROM A_S07_V_REF_001_STD_0.R_RSS_RPRT_LINE_MAP  RLM0             WHERE  RLM0.EXPY_D       = '9999-12-31'             AND    RPRT_MAP_IDNN_BK  = :IN_R_ID               AND    SNAP_D            = :IN_PERD_DATE        ","NULL","0","0","0","N ","NULL","NULL","2015-07-09 11:33:11","kumarahe","2015-07-09 11:40:43","R ","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PDCT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_FEAT AS GDW2_RESTORE.MAP_CSE_APPT_PDCT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:07","singhp80","2025-07-12 07:57:07","NULL","29","2025-08-13 15:50:21","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_DELETED","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_DELETED AS GDW2_RESTORE.TMP_DELETED WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:38","singhp80","2025-07-12 07:56:38","NULL","3","2025-07-12 06:02:10","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2024","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2024 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2024-01-02' and '2025-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:28","KUCB2220","2025-08-06 18:19:28","NULL","1","2025-08-06 18:19:28","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Khojeal","R_ID_Test_1_ST","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_1_ST   ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                   , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_V                                       , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_C                                       , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_V                                         , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_C                                     -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                AND DEPT.ENTY_NODE_LEAF_F = 'Y'                AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                    AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                        AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-28 17:13:50","Khojeal","2015-07-28 17:13:50","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDPATY","PATY_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDPATY.PATY_REL AS GDW2_RESTORE.PATY_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:27","singhp80","2025-07-12 07:55:27","NULL","29","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDPATY","UTIL_PROS_ISAC","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDPATY.UTIL_PROS_ISAC AS GDW2_RESTORE.UTIL_PROS_ISAC_PDPATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 08:01:11","singhp80","2025-07-12 08:01:11","NULL","53","2025-08-14 18:17:22","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","evnt","1","T ","F ","NN  ","PUDBAI011","CREATE TABLE  K_STAR_CAD_PROD_DATA.evnt AS GDW2_RESTORE.evnt WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 14:14:27","PUDBAI011","2025-07-12 14:14:27","NULL","23","2025-08-06 14:53:24","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDSECURITY","ROW_LEVL_SECU_USER_PRFL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDSECURITY.ROW_LEVL_SECU_USER_PRFL AS GDW2_RESTORE.ROW_LEVL_SECU_USER_PRFL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:35","singhp80","2025-07-12 07:56:35","NULL","65","2025-08-22 11:38:00","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","UTIL_ETI_CONV","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.UTIL_ETI_CONV AS GDW2_RESTORE.UTIL_ETI_CONV WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:43","singhp80","2025-07-12 07:56:43","NULL","28","2025-08-13 16:28:04","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_PDCT_PATY_ROLE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_PDCT_PATY_ROLEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_PATY_ROLEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_PATY_ROLE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:42","perumabh","2025-07-14 22:17:42","NULL","1","2025-07-14 22:17:42","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"Khojeal","R_ID_Test_DEV","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_DEV   ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                  , CASE WHEN DIFF_A_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_V                  , CASE WHEN DIFF_A_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_A_C                  , CASE WHEN DIFF_P_V IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_V                     , CASE WHEN DIFF_P_C IS NULL THEN '3.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE '2.Not Matching'                                END                           END  X_DIFF_P_C                             -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_D13_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_D13_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_D13_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_D13_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                        -- WHERE SALE.Process_name IN                     -- (                    --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                       -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                       -- )                     AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-10 12:17:53","Khojeal","2015-07-10 12:17:53","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"kumarahe","R_ID_Test_4_ST","1","M ","F ","NN  ","kumarahe","REPLACE MACRO  Kumarahe.R_ID_Test_4_ST    ( IN_R_ID VARCHAR(50)      , EFFT_D DATE       , EXPY_D DATE    ) AS  (                SELECT  :IN_R_ID                   , BPR.*                   , DEPT_KPI.*                   , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                   , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                   , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                   , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                   -- -----------------------------------------------                    , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_V                                         , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_A_C                                         , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_V                                           , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                          ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                     ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                               ELSE '3.Not Matching'                                           END                                     END                            END  X_DIFF_P_C                                      -- -----------------------------------------------                FROM (                 -----------------------------------------------------------------                 --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                 --Extracted from BPR Database: myPCS                 SELECT BPR.DEPT_I                             AS BPR_DEPT_I                      , BPR.PERD_D                             AS BPR_PERD_D                      , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,5)) AS BPR_A_V                      , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,5)) AS BPR_A_C                      , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,5)) AS BPR_P_V                      , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,5)) AS BPR_P_C                      , DEPT.ENTY_NODE_X                 FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                  INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                 ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                 AND DEPT.ENTY_HIER_M = 'DEPT'                 AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                 AND DEPT.SNAP_D      = :EXPY_D                 AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                  INNER JOIN(                  SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                           FROM A_S07_D_TMP_001_STD_0.BPR_COEX                  WHERE SCHM_TYPE_C = 'HYTD'                 AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D                  AND R_ID =  :IN_R_ID                            ) BPR_COEX                              ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                  AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                 AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                 AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                  AND   BPR.RM_TYPE_C      = 'TOT'                 AND   BPR.PERD_D         = :EXPY_D                  AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                               ) BPR                          FULL JOIN (                 -----------------------------------------------------------------                 --FACT_KPI-DATA                 SELECT  'NDEPT' || DEPT_I            AS DEPT_I                        ,PERD_D                        ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                        ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                        ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                        ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                        ,Q.ENTY_NODE_X                 FROM                 (                            SEL SALE.DEPT_IDNN_BK AS DEPT_I                         ,:EXPY_D  AS PERD_D                         ,SCNO_IDNN_BK AS SCNO_IDNN_BK                         ,PERD_C AS PERD_C                         ,DEPT.ENTY_NODE_X                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                                THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS ACTL_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(RVNU_A)                          END AS ACTL_RVNU_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                           END AS PLAN_MSUR_V                         ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                               THEN SUM(RVNU_A)                          END AS PLAN_RVNU_V                     FROM A_S07_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                          INNER JOIN A_S07_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                     ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                     AND DEPT.ENTY_HIER_M = 'DEPT'                     AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                     AND DEPT.SNAP_D      = :EXPY_D                      AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                                          -- WHERE SALE.Process_name IN                      -- (                     --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                        -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                        -- )                      AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                     AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                      AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                     GROUP BY 1,2,3,4,5                 ) Q                GROUP BY 1,2,7             ) DEPT_KPI                          ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I             AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D             ;   );","NULL","0","0","0","N ","NULL","NULL","2015-07-23 11:38:37","kumarahe","2015-07-23 11:45:39","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MOS_LOAN","1","V ","F ","NN  ","perumabh","--Note:: Table count should match for DBA 2.1 and DBA 2.6--Create the following Views for the above GDW tablesREPLACE VIEW K_PVTECH.MOS_LOAN   (        LOAN_I,	    FCLY_I,	    MOS_APPT_C,	    MOS_ASET_LIBL_C,	    MOS_STUS_C,	    ACRL_X,	    TRAD_CNCY_ORIG_A,	    TRAD_CNCY_SETL_A,	    TRAD_CNCY_CURR_BALN_A,	    INT_R,	    FIX_INT_R,	    VARY_INT_R,	    ISSU_D,	    MTUR_D,	    ROLV_D,	    INT_PAYT_FREQ_C,	    NEXT_INT_D,	    TRAD_CNCY_ACRE_A,	    LAST_INT_PAYT_D,	    TRAD_CNCY_TOTL_INT_RECV_A,	    PDCT_N,	    TRAD_CNCY_C,	    BASE_CNCY_C,	    TRAD_CNCY_INT_A,	    AUD_CNCY_INT_A,	    BASE_CNCY_INT_A,	    TRAD_CNCY_AVRG_BALN_A,	    AUD_CNCY_AVRG_BALN_A,	    BASE_CNCY_AVRG_BALN_A,	    TRAD_CNCY_MARG_A,	    AUD_CNCY_MARG_A,	    BASE_CNCY_MARG_A,	    AVRG_MARG_R,	    DEPT_I,	    MSA_BALN_GL_ACCT_I,	    MSA_INT_GL_ACCT_I,	    EFFT_D,	    EXPY_D,	    PROS_KEY_EFFT_I,	    PROS_KEY_EXPY_I,	    PROF_CNTR_CODE_X    )AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MOS_LOAN FOR ACCESS    SELECT         LOAN_I,	    FCLY_I,	    MOS_APPT_C,	    MOS_ASET_LIBL_C,	    MOS_STUS_C,	    ACRL_X,	    TRAD_CNCY_ORIG_A,	    TRAD_CNCY_SETL_A,	    TRAD_CNCY_CURR_BALN_A,	    INT_R,	    FIX_INT_R,	    VARY_INT_R,	    ISSU_D,	    MTUR_D,	    ROLV_D,	    INT_PAYT_FREQ_C,	    NEXT_INT_D,	    TRAD_CNCY_ACRE_A,	    LAST_INT_PAYT_D,	    TRAD_CNCY_TOTL_INT_RECV_A,	    PDCT_N,	    TRAD_CNCY_C,	    BASE_CNCY_C,	    TRAD_CNCY_INT_A,	    AUD_CNCY_INT_A,	    BASE_CNCY_INT_A,	    TRAD_CNCY_AVRG_BALN_A,	    AUD_CNCY_AVRG_BALN_A,	    BASE_CNCY_AVRG_BALN_A,	    TRAD_CNCY_MARG_A,	    AUD_CNCY_MARG_A,	    BASE_CNCY_MARG_A,	    AVRG_MARG_R,	    DEPT_I,	    MSA_BALN_GL_ACCT_I,	    MSA_INT_GL_ACCT_I,	    EFFT_D,	    EXPY_D,	    PROS_KEY_EFFT_I,	    PROS_KEY_EXPY_I,	    PROF_CNTR_CODE_X    FROM        K_STAR_CAD_PROD_DATA.MOS_LOAN;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:15:22","perumabh","2025-07-14 22:15:22","NULL","1","2025-07-14 22:15:22","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_PDCT","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_PDCT AS GDW2_RESTORE.ACCT_PDCT WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:48:02","PUDBAI016","2025-08-21 21:48:02","NULL","1","2025-08-22 11:36:44","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_CHG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_CHGAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_CHGFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_CHG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:56","perumabh","2025-07-14 22:05:56","NULL","1","2025-07-14 22:05:56","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","APPT","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.APPT(        APPT_I,        APPT_C,        APPT_FORM_C,        APPT_QLFY_C,        STUS_TRAK_I,        APPT_ORIG_C,        APPT_N,        SRCE_SYST_C,        SRCE_SYST_APPT_I,        APPT_CRAT_D,        RATE_SEEK_F,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        ORIG_APPT_SRCE_C,        REL_MGR_STAT_C,        APPT_RECV_S,        APPT_RECV_D,        APPT_RECV_T,        APPT_ENTR_POIT_M,        EXT_TO_PDCT_SYST_D,        EFFT_D)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.APPT FOR ACCESSSELECT        APPT_I,        APPT_C,        APPT_FORM_C,        APPT_QLFY_C,        STUS_TRAK_I,        APPT_ORIG_C,        APPT_N,        SRCE_SYST_C,        SRCE_SYST_APPT_I,        APPT_CRAT_D,        RATE_SEEK_F,        PROS_KEY_EFFT_I,        EROR_SEQN_I,        ORIG_APPT_SRCE_C,        REL_MGR_STAT_C,        APPT_RECV_S,        APPT_RECV_D,        APPT_RECV_T,        APPT_ENTR_POIT_M,        EXT_TO_PDCT_SYST_D,        EFFT_D  FROM        K_STAR_CAD_PROD_DATA.APPT;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:41:46","perumabh","2025-07-14 22:41:46","NULL","1","2025-07-14 22:41:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_SAP_INVL_PDCT","1","T ","F ","NN  ","PUDBAI016","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_SAP_INVL_PDCT AS GDW2_RESTORE.MAP_SAP_INVL_PDCT WITH DATA;","NULL","0","0","0","N ","NULL","NULL","2025-08-21 21:48:00","PUDBAI016","2025-08-21 21:48:00","NULL","1","2025-08-22 11:37:04","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_REL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_REL AS GDW2_RESTORE.ACCT_REL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:54:25","singhp80","2025-07-12 07:54:25","NULL","8358","2025-08-14 16:18:36","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","PATY_APPT_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.PATY_APPT_PDCT AS GDW2_RESTORE.PATY_APPT_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:13","singhp80","2025-07-12 07:55:13","NULL","30","2025-08-13 16:18:02","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","SRE_VS_MIS","1","M ","F ","NN  ","KOSTKAMA","REPLACE MACRO KOSTKAMA.SRE_VS_MIS (MNTH_END_D DATE, RSTMT_DATE DATE) AS (SEL 			SRE.SOLUTION AS SOLUTION,						SRE.MNTH_END_D AS MNTH_END_D,			SRE.MSTR_SRCE_SYST_C AS MSTR_SRCE_SYST_C,			CAST(SRE.SEGM_PRTF_IDNN_BK AS VARCHAR(15) ) AS SEGM_PRTF_IDNN_BK,						CAST(SRE.POST_ALOC_GL_DEPT_IDNN_BK AS VARCHAR(15) ) AS POST_ALOC_GL_DEPT_IDNN_BK,			CAST(SRE.GL_PDCT_IDNN_BK AS VARCHAR(15) ) AS GL_PDCT_IDNN_BK,			CAST(CRSK_F AS VARCHAR(1) ) AS CRSK_F,			CAST(PREV_FYE_CRSK_MNGE_F AS VARCHAR(1)) AS PREV_FYE_CRSK_MNGE_F,			CAST('-' AS VARCHAR(1)) AS ASSET_LIABILITY_IND,			CAST(null AS VARCHAR(100) ) AS SEGM_INCL_CRSK,			CAST(SUM(CASE WHEN MGMT_INFO_PG_C = 1 THEN COALESCE(SRE.AVG_NET_CLSE_BALN_MNLY,0) ELSE COALESCE(SRE.AVG_NET_CLSE_BALN_MNLY,0) * -1 END ) AS DECIMAL(20,2)  ) AS  AVG_NET_CLSE_BALN_MNLY,			CAST(SUM(CASE WHEN MGMT_INFO_PG_C = 1 THEN COALESCE(SRE.NET_CLSE_BALN,0) ELSE COALESCE(SRE.NET_CLSE_BALN,0) * -1 END ) AS DECIMAL(20,2)  ) AS  NET_CLSE_BALN,			CAST(SUM(COALESCE(SRE.OTHR_BANK_OPER_INCM,0) + COALESCE(SRE.FUND_MGMT_INCM_A,0) + COALESCE(SRE.INSR_INCM,0)  ) AS DECIMAL (20,2) ) * -1 AS FEE,			CAST(SUM(COALESCE(SRE.INT_INCM,0)  ) AS DECIMAL (20,2) ) * -1 AS INTEREST,			CAST(SUM(COALESCE(SRE.TRSF_PCNG,0) ) AS DECIMAL (20,2) ) * -1 AS TRSF_PCNG,			CAST(0 AS DECIMAL(20,2) ) AS  RAW_WEIGHTED_AMT,                 			CAST(0 AS DECIMAL(20,2) ) AS LIQIDITY_PREM_AMT,                    			CAST(0 AS DECIMAL(20,2) ) AS LONG_TERM_FUND_AMT,			CAST(0 AS DECIMAL(20,2) ) AS ACTUAL_RD_INCOME,                  			CAST(0 AS DECIMAL(20,2) ) AS ACTUAL_TAX_BENEFIT,            			CAST(SUM(COALESCE(SRE.NINT_INCM,0)  ) AS DECIMAL (20,2) ) * -1 AS NET_INTEREST_INCOMEFROM (								SEL 									'SRE' AS SOLUTION,							BASE.MNTH_END_D,              							BASE.GL_PDCT_IDNN_BK,														BASE.POST_ALOC_GL_DEPT_IDNN_BK,				 							BASE.SEGM_PRTF_IDNN_BK,                    	                   							BASE.CRSK_F,                        							BASE.PREV_FYE_CRSK_MNGE_F,                       							BASE.MSTR_SRCE_SYST_C,              							BASE.SRCE_TYPE_C,         							MGMT_INFO_PG_C,																	SUM(CASE WHEN BASE.FNCL_MSUR_C = 'NET_CLSE_BALN_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS NET_CLSE_BALN,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'AVG_NET_CLSE_BALN_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS AVG_NET_CLSE_BALN_MNLY,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'AVG_NET_CLSE_BALN_A' AND PDTY_C = 'YTD' THEN MSUR_A END) AS AVG_NET_CLSE_BALN_YTD,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'NINT_INCM_A' AND PDTY_C = 'MNLY' AND BASE.MSTR_SRCE_SYST_C <> 'GTR' THEN MSUR_A END) AS INT_INCM,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'NINT_INCM_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS NINT_INCM,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'OTHR_BANK_OPER_INCM_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS OTHR_BANK_OPER_INCM,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'FUND_MGMT_INCM_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS FUND_MGMT_INCM_A,							SUM(CASE WHEN BASE.FNCL_MSUR_C = 'INSR_INCM_A' AND PDTY_C = 'MNLY' THEN MSUR_A END) AS INSR_INCM,							SUM(CASE WHEN BASE.MSTR_SRCE_SYST_C = 'GTR' AND PDTY_C = 'MNLY'  THEN MSUR_A END) AS TRSF_PCNG								FROM B_D17_V_BAL_001_STD_0.FACT_PRTF_FNCL_GL_MSUR_MNLY BASE				LEFT JOIN B_D17_V_REF_001_STD_0.R_MGMT_INFO_PDCT_MAP PD 							ON PD.GL_PDCT_IDNN_BK = BASE.GL_PDCT_IDNN_BK 							AND PD.POST_ALOC_GL_DEPT_IDNN_BK = BASE.GL_DEPT_IDNN_BK 							AND :RSTMT_DATE BETWEEN PD.BUSN_STRT_D AND PD.BUSN_END_D AND :RSTMT_DATE BETWEEN PD.EFFT_D AND PD.EXPY_D AND PD.RECORD_DELETED_FLAG = 0								WHERE BASE.MSTR_SRCE_SYST_C LIKE ANY  ('HLS', 'SAP', 'CCS', 'GTR', 'GDW%') 						AND BASE.MNTH_END_D >=:MNTH_END_D										GROUP BY 1,2,3,4,5,6,7,8,9,10								) SRE				GROUP BY 1,2,3,4,5,6,7,8,9,10				UNION ALLSEL 			MIS.SOLUTION AS SOLUTION,						MIS.MNTH_END_D AS MNTH_END_D,			MIS.MSTR_SRCE_SYST_C AS MSTR_SRCE_SYST_C,			MIS.SEGM_PRTF_IDNN_BK AS SEGM_PRTF_IDNN_BK,						MIS.POST_ALOC_GL_DEPT_IDNN_BK AS POST_ALOC_GL_DEPT_IDNN_BK,			MIS.GL_PDCT_IDNN_BK  AS GL_PDCT_IDNN_BK,			'-' AS CRSK_F,			'-' AS PREV_FYE_CRSK_MNGE_F,			ASSET_LIABILITY_IND,			SEGM_INCL_CRSK,			SUM(COALESCE(MIS.AVG_NET_CLSE_BALN_MNLY,0) ) AS  AVG_NET_CLSE_BALN_MNLY,			SUM(COALESCE(MIS.NET_CLSE_BALN,0 ) ) AS NET_CLSE_BALN,			SUM(COALESCE(MIS.ACTUAL_FEE,0) ) AS ACTUAL_FEE,						SUM(COALESCE(MIS.ACTUAL_INT,0) ) AS ACTUAL_INT,						SUM(0) AS  TP,			SUM(COALESCE(MIS.RAW_WEIGHTED_AMT,0) ) AS RAW_WEIGHTED_AMT,			SUM(COALESCE(MIS.LIQIDITY_PREM_AMT,0) ) AS LIQIDITY_PREM_AMT,			SUM(COALESCE( MIS.LONG_TERM_FUND_AMT,0) )  AS LONG_TERM_FUND_AMT,			SUM(COALESCE( MIS.ACTUAL_RD_INCOME,0) )  AS ACTUAL_RD_INCOME,			SUM(COALESCE( MIS.ACTUAL_TAX_BENEFIT,0) )  AS ACTUAL_TAX_BENEFIT,			SUM(COALESCE(MIS.ACTUAL_NII,0) ) AS ACTUAL_NIIFROM (										SELECT 						'MIS' AS SOLUTION,						ADD_MONTHS(CAST (SUBSTR(CAST(PERD_D AS VARCHAR(6)), 1 ,4) || '-' || SUBSTR(CAST(PERD_D AS VARCHAR(6)), 5 ,2) || '-01' AS DATE),1) -INTERVAL '1' DAY  AS MNTH_END_D,						PS_DEPARTMENT_ID AS POST_ALOC_GL_DEPT_IDNN_BK,						GL_PRODUCT_ID AS GL_PDCT_IDNN_BK,						PTRF_C AS SEGM_PRTF_IDNN_BK,						MATRIX_SEGMENT AS SEGM_INCL_CRSK,						SOURCE_ID AS MSTR_SRCE_SYST_C,						ASSET_LIABILITY_IND,						SUM(ACTUAL_BALANCE) AS AVG_NET_CLSE_BALN_MNLY, 						SUM(ACTUAL_NII) AS ACTUAL_NII, 						SUM(ACTUAL_INT) AS ACTUAL_INT, 						SUM(ACTUAL_FEE) AS ACTUAL_FEE, 						SUM(SPOT_BALANCE) AS NET_CLSE_BALN, 						SUM(RAW_WEIGHTED_AMT) AS RAW_WEIGHTED_AMT, 						SUM(LIQIDITY_PREM_AMT) AS LIQIDITY_PREM_AMT, 						SUM(LONG_TERM_FUND_AMT) AS LONG_TERM_FUND_AMT, 						SUM(ACTUAL_RD_INCOME) AS ACTUAL_RD_INCOME,						SUM(ACTUAL_TAX_BENEFIT) AS ACTUAL_TAX_BENEFIT											FROM B_D17_D_BAL_001_STD_0.ACTUAL_INCOME_201804					WHERE SOURCE_ID IN  ('HLS', 'SAP', 'CCS', 'GTA','GTC')  					AND MNTH_END_D >= :MNTH_END_D										GROUP BY 1,2,3,4,5,6,7,8) MISGROUP BY 1,2,3,4,5,6,7,8,9,10;);","NULL","0","0","0","N ","NULL","NULL","2018-06-06 09:56:23","KOSTKAMA","2018-06-08 12:20:28","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PURP_CL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CL AS GDW2_RESTORE.MAP_CSE_APPT_PURP_CL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:52","singhp80","2025-07-12 07:56:52","NULL","29","2025-08-13 15:53:51","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_PDCT_FEAT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_FEAT AS GDW2_RESTORE.TMP_APPT_PDCT_FEAT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:52","singhp80","2025-07-12 07:55:52","NULL","3","2025-07-12 06:02:06","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_MACRO","sp_Get_Pros_Key","2","P ","F ","N   ","perumabh","NULL","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:11:47","perumabh","2025-07-14 23:18:06","NULL","2","2025-07-14 23:18:07","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","TD_DataDictionaryMap","NULL","NULL","NULL","NULL","NULL"
"Khojeal","R_ID_Test_1_DEV","1","M ","F ","NN  ","Khojeal","REPLACE MACRO  khojeal.R_ID_Test_1_DEV   ( IN_R_ID VARCHAR(50)     , EFFT_D DATE      , EXPY_D DATE   ) AS (              SELECT  :IN_R_ID                  , BPR.*                  , DEPT_KPI.*                  , BPR.BPR_A_V - DEPT_KPI.A_V AS DIFF_A_V                  , BPR.BPR_A_C - DEPT_KPI.A_C AS DIFF_A_C                  , BPR.BPR_P_V - DEPT_KPI.P_V AS DIFF_P_V                  , BPR.BPR_P_C - DEPT_KPI.P_C AS DIFF_P_C                  -- -----------------------------------------------                   , CASE WHEN DIFF_A_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_V) < 0.9 THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_V                                       , CASE WHEN DIFF_A_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_A_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_A_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_A_C                                       , CASE WHEN DIFF_P_V IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_V = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_V) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_V                                         , CASE WHEN DIFF_P_C IS NULL THEN '4.Dept Missing'                         ELSE CASE WHEN DIFF_P_C = 0 THEN '1.Matching'                                    ELSE CASE WHEN ABS(DIFF_P_C) < 0.9  THEN '2.Diff <$1'                                              ELSE '3.Not Matching'                                          END                                    END                           END  X_DIFF_P_C                                     -- -----------------------------------------------               FROM (                -----------------------------------------------------------------                --SQL Server: AAUNSWS21\SQLPROD_FO_RPRT                --Extracted from BPR Database: myPCS                SELECT BPR.DEPT_I                             AS BPR_DEPT_I                     , BPR.PERD_D                             AS BPR_PERD_D                     , CAST(BPR.ACTL_MSUR_V AS DECIMAL(15,2)) AS BPR_A_V                     , CAST(BPR.ACTL_COMM_V AS DECIMAL(15,2)) AS BPR_A_C                     , CAST(BPR.PLAN_MSUR_V AS DECIMAL(15,2)) AS BPR_P_V                     , CAST(BPR.PLAN_COMM_V AS DECIMAL(15,2)) AS BPR_P_C                     , DEPT.ENTY_NODE_X                FROM A_S07_D_TMP_001_STD_0.T_NWRK_PCS                       BPR                                INNER JOIN A_D13_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                ON  SUBSTR(BPR.DEPT_I,6) = DEPT.ENTY_NODE_C                AND DEPT.ENTY_HIER_M = 'DEPT'                --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                AND DEPT.SNAP_D      = :EXPY_D                --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                AND DEPT.ENTY_NODE_LEAF_F = 'Y'                AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                                INNER JOIN(             				SELECT RPRT_GRUP_L1_X, RPRT_GRUP_L2_X, RPRT_GRUP_L3_X, RPRT_GRUP_L4_X, R_ID                                      				FROM A_S07_D_TMP_001_STD_0.BPR_COEX             				WHERE SCHM_TYPE_C IS NULL            				AND  :EXPY_D BETWEEN EFFT_D AND EXPY_D             				AND R_ID =  :IN_R_ID                           ) BPR_COEX                            ON    TRIM(BPR.RPRT_GRUP_L1_X) = TRIM(BPR_COEX.RPRT_GRUP_L1_X)                 AND   TRIM(BPR.RPRT_GRUP_L2_X) = TRIM(BPR_COEX.RPRT_GRUP_L2_X)                AND   TRIM(BPR.RPRT_GRUP_L3_X) = TRIM(BPR_COEX.RPRT_GRUP_L3_X)                AND   TRIM(BPR.RPRT_GRUP_L4_X) = TRIM(BPR_COEX.RPRT_GRUP_L4_X)                 AND   BPR.RM_TYPE_C      = 'TOT'                AND   BPR.PERD_D         = :EXPY_D                 AND   BPR.ACTL_MSUR_V + BPR.ACTL_COMM_V + BPR.PLAN_MSUR_V + BPR.PLAN_COMM_V  <> 0                                            ) BPR                        FULL JOIN (                -----------------------------------------------------------------                --FACT_KPI-DATA                SELECT  'NDEPT' || DEPT_I            AS DEPT_I                       ,PERD_D                       ,SUM(ZEROIFNULL(ACTL_MSUR_V)) AS A_V                       ,SUM(ZEROIFNULL(ACTL_RVNU_V)) AS A_C                       ,SUM(ZEROIFNULL(PLAN_MSUR_V)) AS P_V                       ,SUM(ZEROIFNULL(PLAN_RVNU_V)) AS P_C                       ,Q.ENTY_NODE_X                FROM                (                           SEL SALE.DEPT_IDNN_BK AS DEPT_I                        ,:EXPY_D  AS PERD_D                        ,SCNO_IDNN_BK AS SCNO_IDNN_BK                        ,PERD_C AS PERD_C                        ,DEPT.ENTY_NODE_X                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                               THEN SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS ACTL_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'ACTL'                              THEN SUM(RVNU_A)                         END AS ACTL_RVNU_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN /*SUM(ZEROIFNULL(SALE.MSUR_Q))*/ SUM(ZEROIFNULL(SALE.MSUR_A)) + SUM(ZEROIFNULL(SALE.MSUR_Q)) + SUM(ZEROIFNULL(SALE.MSUR_R))                          END AS PLAN_MSUR_V                        ,CASE WHEN SCNO_IDNN_BK = 'PLAN'                              THEN SUM(RVNU_A)                         END AS PLAN_RVNU_V                    FROM A_D13_V_EXP_001_STD_0.BV_RSS_DEPT_RPRT_LINE        SALE   /*A_S07_D_BAL_001_STD_0.FACT_KPI_DEPT_RPRT_LINE_AGGR  SALE*/                                        INNER JOIN A_D13_V_BAL_001_STD_0.BV_RPRT_ENTY_HIER      DEPT                    ON SALE.DEPT_IDNN_BK = DEPT.ENTY_NODE_C                    AND DEPT.ENTY_HIER_M = 'DEPT'                    --AND DEPT.ENTY_NODE_X = 'DT_BRANCH'                    AND DEPT.SNAP_D      = :EXPY_D                     --AND DEPT.ENTY_NODE_C = DEPT.ENTY_ANCS_NODE_C                    AND DEPT.ENTY_NODE_LEAF_F = 'Y'                    AND DEPT.ENTY_ANCS_NODE_X = 'DT_RSS'                    -- WHERE SALE.Process_name IN                     -- (                    --  'TX_125_39_1_KDPT_RLN_AGGR'     --Sales Aggreagate Process_Name                       -- ,'TX_125_39_2_KDPT_RLN_AGGR'     --RDV Plan Process_Name                       -- )                     AND SALE.RPRT_MAP_IDNN_BK   = :IN_R_ID                    AND SALE.SNAP_D BETWEEN :EFFT_D AND :EXPY_D                     AND SALE.PERD_C IN ('MNTH') /*('DAY','MNTH')*/                    GROUP BY 1,2,3,4,5                ) Q               GROUP BY 1,2,7            ) DEPT_KPI                        ON  BPR.BPR_DEPT_I   = DEPT_KPI.DEPT_I            AND BPR.BPR_PERD_D   = DEPT_KPI.PERD_D            ;  );","NULL","0","0","0","N ","NULL","NULL","2015-07-30 13:49:49","Khojeal","2015-07-30 13:49:49","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"KOSTKAMA","XYZ","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.XYZ AS (SELECT 'ABC' AS COL1 );","NULL","0","0","0","N ","NULL","NULL","2020-10-01 17:04:28","KOSTKAMA","2020-10-01 17:04:28","NULL","1","2023-07-14 03:38:10","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2014","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2014 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2014-01-01' and '2015-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:26","KUCB2220","2025-08-06 18:19:26","NULL","2","2025-08-06 18:24:42","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MOS_FCLY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MOS_FCLY AS GDW2_RESTORE.MOS_FCLY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:37","singhp80","2025-07-12 07:56:37","NULL","29","2025-08-13 16:14:02","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ENV_EVNT_ACTV_TYPE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_EVNT_ACTV_TYPE AS GDW2_RESTORE.MAP_CSE_ENV_EVNT_ACTV_TYPE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:07","singhp80","2025-07-12 07:57:07","NULL","29","2025-08-14 12:35:06","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","PRTF_HIER_REL","1","V ","F ","NN  ","KOSTKAMA","/**--tc_nam: DEV-001 (BV_RPRT_ENTY_HIER).sql^02.SQL.00..~.~**/ /**--TC_SQL**/   REPLACE VIEW kostkama.PRTF_HIER_REL AS (  SEL      EMPL_IDNN_BK             , EMPL_NAME             , RANK() OVER (PARTITION BY 1 ORDER BY EMPL_NAME ASC ) AS EMPL_SEQN_N             , PRTF_IDNN_BK             , PORTFOLIO_NAME             , RANK() OVER (PARTITION BY 1 ORDER BY PRTF_IDNN_BK ASC ) AS PRTF_SEQN_N             , TEAM_IDNN_BK AS TEAM_IDNN_BK              , TEAM_NAME AS TEAM_NAME             , RANK() OVER (PARTITION BY 1 ORDER BY TEAM_NAME ASC ) AS TEAM_SEQN_N             , DEPT_IDNN_BK             , DEPT_NAME             , DEPT_LEVL_N                         , RANK() OVER (PARTITION BY 1 ORDER BY DEPT_IDNN_BK ASC ) AS DEPT_SEQN_N             , AS_AT_DATE  FROM (                                  SEL     HEMPL.EMPL_IDNN_BK AS EMPL_IDNN_BK                                             , CAST(SED.EMPL_LAST_M || ', ' || SED.EMPL_FRST_M AS VARCHAR(40))AS EMPL_NAME                                             , DEPT_PRTF.PRTF_IDNN_BK AS PRTF_IDNN_BK                                             , CAST(DEPT_PRTF.PRTF_IDNN_BK  || ' - ' || COALESCE(EMPL_NAME, 'UNKNOWN') AS VARCHAR(40))  AS PORTFOLIO_NAME                                             , STRC.OU_ID AS TEAM_IDNN_BK                                             , CAST(STRC.SHORT_NAME AS VARCHAR(40)) AS TEAM_NAME                                             , BASE.DEPT_NODE_C AS DEPT_IDNN_BK                                             , CAST(DEPT_NAME.DEPT_NODE_M AS VARCHAR(40)) AS DEPT_NAME                                             , DEPT_NAME.LEVL_N AS DEPT_LEVL_N                                                                                         , DEPT_PRTF.AS_AT_DATE                                                                              FROM (SEL DEPT_NODE_C  FROM b_S17_v_cox_001_std_0.GRD_DEPT_ANCS_CURR WHERE ANCS_DEPT_NODE_C = 'NDEPT902730' AND DEPT_NODE_C NOT LIKE 'NDEPT%') BASE                                 LEFT OUTER JOIN (                                                     SELECT  LPD.DEPT_IDNN_HK                                                                     , HD.DEPT_IDNN_BK                                                                      , LPD.PRTF_IDNN_HK                                                                      , HP.PRTF_IDNN_BK                                                                      , DATE '2017-01-14' AS AS_AT_DATE                                                     FROM b_S17_v_cox_001_std_0.INT_GRUP PTF                                                                                                           INNER JOIN b_S17_v_shr_001_std_0.H_PRTF HP                                                          ON HP.PRTF_IDNN_BK = PTF.SRCE_SYST_INT_GRUP_I                                                           AND PTF.INT_GRUP_TYPE_C = 'RLMT'                                                            AND '2017-01-14' BETWEEN PTF.EFFT_D AND PTF.EXPY_D                                                         INNER JOIN  b_S17_v_shr_001_std_0.L_PRTF_DEPT LPD                                                         ON LPD.PRTF_IDNN_HK = HP.PRTF_IDNN_HK                                                     INNER JOIN b_S17_v_bus_001_std_0.S_PRTF_DEPT SPD                                                             ON SPD.PRTF_DEPT_IDNN_HK = LPD.PRTF_DEPT_IDNN_HK                                                             AND SPD.PRTF_DEPT_ROLE_C = 'DFLTP' AND '2017-01-14'  BETWEEN SPD.BUSN_STRT_D AND SPD.BUSN_END_D  AND SPD.EXPY_D = '9999-12-31' AND SPD.RECORD_DELETED_FLAG = 0                                                     INNER JOIN b_S17_v_shr_001_std_0.H_DEPT HD                                                                ON HD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                                                           INNER JOIN b_S17_v_shr_001_std_0.L_PATY_PRTF LPP                                                              ON LPP.PRTF_IDNN_HK = HP.PRTF_IDNN_HK                                                     INNER JOIN b_S17_v_bus_001_std_0.S_PATY_PRTF SPP                                                              ON SPP.PATY_PRTF_IDNN_HK = LPP.PATY_PRTF_IDNN_HK                                                             AND SPP.PATY_PRTF_ROLE_C = 'DFLTP'                                                              AND '2017-01-14'  BETWEEN SPP.BUSN_STRT_D AND SPP.BUSN_END_D AND SPP.EXPY_D = '9999-12-31' AND SPP.RECORD_DELETED_FLAG = 0                                                                                                          QUALIFY ROW_NUMBER() OVER (PARTITION BY LPD.DEPT_IDNN_HK, LPD.PRTF_IDNN_HK ORDER BY LPD.DEPT_IDNN_HK, LPD.PRTF_IDNN_HK  ASC) =1                                                                                               ) DEPT_PRTF                                                 ON DEPT_PRTF.DEPT_IDNN_BK = BASE.DEPT_NODE_C                                                                  LEFT OUTER JOIN (SEL DEPT_NODE_C, DEPT_NODE_M, CASE WHEN LEVL_N > 5 THEN 5 ELSE LEVL_N END AS LEVL_N FROM b_S17_v_cox_001_std_0.GRD_DEPT_MEMB_CURR ) DEPT_NAME                                              ON DEPT_NAME.DEPT_NODE_C  = BASE.DEPT_NODE_C                                                                   JOIN   (                                                   SELECT LEP.PRTF_IDNN_HK, HEMPL.EMPL_IDNN_BK, HEMPL.EMPL_IDNN_HK, EMPL_PRTF_ROLE_C                                                   FROM b_S17_v_shr_001_std_0.L_EMPL_PRTF LEP                                                      JOIN b_S17_v_bus_001_std_0.S_EMPL_PRTF SEP                                                        ON SEP.EMPL_PRTF_IDNN_HK = LEP.EMPL_PRTF_IDNN_HK                                                        AND EMPL_PRTF_ROLE_C = 'OWN'                                                          AND '2017-01-14'  BETWEEN SEP.BUSN_STRT_D AND SEP.BUSN_END_D AND SEP.EXPY_D = '9999-12-31' AND SEP.RECORD_DELETED_FLAG = 0                                                   JOIN b_S17_v_shr_001_std_0.H_EMPL HEMPL   ON HEMPL.EMPL_IDNN_HK= SEP.EMPL_IDNN_HK                                                     JOIN b_S17_v_shr_001_std_0.H_PRTF HP ON HP.PRTF_IDNN_HK = LEP.PRTF_IDNN_HK                                                                                         ) HEMPL    ON HEMPL.PRTF_IDNN_HK = DEPT_PRTF.PRTF_IDNN_HK                                                                  JOIN b_S17_v_bus_001_std_0.S_EMPL_DETL SED                                     ON SED.EMPL_IDNN_HK = HEMPL.EMPL_IDNN_HK                                     AND DEPT_PRTF.AS_AT_DATE BETWEEN SED.BUSN_STRT_D AND SED.BUSN_END_D AND SED.EXPY_D = '9999-12-31'                                     AND SED.RECORD_DELETED_FLAG = 0                                                                  LEFT JOIN      (                                                       SELECT     ou_id, PARENT_OU_ID, CBA_STAFF_NUMBER, STRC.EFFT_D,FIRST_NAME,LAST_NAME,TRIM(CAST (CS_USER_ID AS INTEGER)) AS TEAM_NODE_C                                                 FROM b_S17_v_ref_001_std_0.R_CSE_OU_TEAM_STRC  STRC                                                 WHERE '2017-01-14' BETWEEN STRC.EFFT_D AND STRC.EXPY_D                                                     QUALIFY ROW_NUMBER () OVER (PARTITION BY CBA_STAFF_NUMBER ORDER BY CBA_STAFF_NUMBER, STRC.EFFT_D DESC) = 1                                           ) PARENT       ON PARENT.CBA_STAFF_NUMBER = HEMPL.EMPL_IDNN_BK                                                                             LEFT JOIN                                         (       SELECT     cs_team_id, parent_ou_id, ou_subtype, commsee_active, SHORT_NAME, FIRST_NAME,LAST_NAME, STRC1.EFFT_D,TRIM(CAST (OU_ID AS INTEGER)) AS OU_ID                                                 FROM b_S17_v_ref_001_std_0.R_CSE_OU_TEAM_STRC strc1                                                 WHERE '2017-01-14' BETWEEN STRC1.EFFT_D AND STRC1.EXPY_D                                                                      AND  strc1.ou_subtype = 'TM'  and strc1.short_name not like 'xx%'                                                 QUALIFY ROW_NUMBER () OVER (PARTITION BY OU_ID ORDER BY OU_ID, STRC1.EFFT_D DESC) = 1                                           ) STRC            ON STRC.OU_ID = PARENT.PARENT_OU_ID                                                                                                                                           UNION  ALL                                                                                                   SEL      'UNKNOWN' AS EMPL_IDNN_BK                                             , 'UNKNOWN' AS EMPL_NAME                                             , DEPT_PRTF.PRTF_IDNN_BK AS PRTF_IDNN_BK                                              ,           CASE WHEN PARENT.RM_CODE IS NULL                                                                  THEN   COALESCE(DEPT_PRTF.PRTF_IDNN_BK || ' - ' || PARENT.SHORT_NAME, PRTF_IDNN_BK || ' - UNKNOWN')                                                                 ELSE    COALESCE(PRTF_IDNN_BK  || ' - ' || PARENT.FIRST_NAME || ' ' || PARENT.LAST_NAME , PRTF_IDNN_BK || ' - UNKNOWN')                                                          END as PORTFOLIO_NAME                                              , STRC.OU_ID AS TEAM_IDNN_BK                                             , CAST(STRC.SHORT_NAME AS VARCHAR(40)) AS SHORT_NAME                                             , BASE.DEPT_NODE_C AS DEPT_IDNN_BK                                             , CAST(DEPT_NAME.DEPT_NODE_M AS VARCHAR(40))AS DEPT_NAME                                             , DEPT_NAME.LEVL_N AS DEPT_LEVL_N                                                                                         , DEPT_PRTF.AS_AT_DATE                                                                  FROM (SEL DEPT_NODE_C  FROM b_S17_v_cox_001_std_0.GRD_DEPT_ANCS_CURR WHERE ANCS_DEPT_NODE_C = 'NDEPT902730' AND DEPT_NODE_C NOT LIKE 'NDEPT%' ) BASE                                                                  LEFT OUTER JOIN (                                                     SELECT   LPD.DEPT_IDNN_HK                                                                      , HD.DEPT_IDNN_BK                                                                      , LPD.PRTF_IDNN_HK                                                                      , HP.PRTF_IDNN_BK                                                                      , DATE '2017-01-14' AS AS_AT_DATE                                                                                                                           FROM b_S17_v_cox_001_std_0.INT_GRUP PTF                                                     INNER JOIN b_S17_v_shr_001_std_0.H_PRTF HP                                                          ON HP.PRTF_IDNN_BK = PTF.SRCE_SYST_INT_GRUP_I                                                           AND PTF.INT_GRUP_TYPE_C = 'RLMT'                                                            AND '2017-01-14' BETWEEN PTF.EFFT_D AND PTF.EXPY_D                                                         INNER JOIN  b_S17_v_shr_001_std_0.L_PRTF_DEPT LPD   ON LPD.PRTF_IDNN_HK = HP.PRTF_IDNN_HK                                                     INNER JOIN b_S17_v_bus_001_std_0.S_PRTF_DEPT SPD                                                             ON SPD.PRTF_DEPT_IDNN_HK = LPD.PRTF_DEPT_IDNN_HK                                                             AND SPD.PRTF_DEPT_ROLE_C = 'DFLTP'                                                              AND  '2017-01-14'  BETWEEN SPD.BUSN_STRT_D AND SPD.BUSN_END_D AND SPD.EXPY_D = '9999-12-31'                                                             AND SPD.EXPY_D = '9999-12-31' AND SPD.RECORD_DELETED_FLAG = 0                                                     INNER JOIN  b_S17_v_shr_001_std_0.H_DEPT HD                                                               ON HD.DEPT_IDNN_HK = LPD.DEPT_IDNN_HK                                                                                 INNER JOIN b_S17_v_shr_001_std_0.L_PATY_PRTF LPP                                                              ON LPP.PRTF_IDNN_HK = HP.PRTF_IDNN_HK                                                     INNER JOIN b_S17_v_bus_001_std_0.S_PATY_PRTF SPP                                            ","NULL","0","0","0","N ","NULL","NULL","2017-03-16 17:10:34","KOSTKAMA","2017-06-05 13:52:20","R ","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","INT_GRUP","1","V ","F ","NN  ","perumabh","--Replace K_PVTECH.INT_GRUP:REPLACE VIEW K_PVTECH.INT_GRUP(        INT_GRUP_I,	 INT_GRUP_TYPE_C,	 SRCE_SYST_INT_GRUP_I,	 SRCE_SYST_C,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 INT_GRUP_M,	 ORIG_SRCE_SYST_INT_GRUP_I,	 CRAT_D,	 QLFY_C,	 PTCL_N,	 REL_MNGE_I,	 VALD_TO_D,	 ROW_SECU_ACCS_C,	 INT_GRUP_CATG_C,	 ISO_CNTY_C)    AS LOCKING TABLE K_STAR_CAD_PROD_DATA.INT_GRUP FOR ACCESSSELECT        INT_GRUP_I,	 INT_GRUP_TYPE_C,	 SRCE_SYST_INT_GRUP_I,	 SRCE_SYST_C,	 EFFT_D,	 EXPY_D,	 PROS_KEY_EFFT_I,	 PROS_KEY_EXPY_I,	 EROR_SEQN_I,	 INT_GRUP_M,	 ORIG_SRCE_SYST_INT_GRUP_I,	 CRAT_D,	 QLFY_C,	 PTCL_N,	 REL_MNGE_I,	 VALD_TO_D,	 ROW_SECU_ACCS_C,	 INT_GRUP_CATG_C,	 ISO_CNTY_C  FROM        K_STAR_CAD_PROD_DATA.INT_GRUP Where (/* K_STARt - RLS */COALESCE(ROW_SECU_ACCS_C,0) = 0 ORTD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_CFROM K_PVSECURITY.ROW_LEVL_SECU_USER_PRFLWHERE USERNAME = USER),ROW_SECU_ACCS_C) =1/* End - RLS */);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:39:36","perumabh","2025-07-14 22:39:36","NULL","1","2025-07-14 22:39:36","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"konkna","SMS_433_PLAN_UALO","1","M ","F ","NN  ","konkna","REPLACE MACRO  KonkNa.SMS_433_PLAN_UALO  (         PERD_END_D DATE ) AS ( SELECT PLAN.*, UALO.*, PLAN.MSUR_V - UALO.MSUR_V AS #DIFFFROM (    SELECT PERD_END_D AS PERD_D, 'NDEPT' || DEPT_I AS DEPT_I, SUM(MSUR_V) AS MSUR_V    --This version has ADJ-section commented out, so we can test    --Plans derived from TVP2MGTR.RPS_AGGR_PLAN_MNTH_SUMY    --vs plans derived from TVP2MGTR.RPS_PLAN_DEPT_UALO    FROM TVP2MGTR.RDS_MSUR_PLAN_BDV_MNTH        --WHERE DEPT_I = '000001'    WHERE PERD_END_D = :PERD_END_D --'2015-06-30'    --Only interested in Department plans so far    AND PLAN_TYPE_C = 'D'    GROUP BY 1,2    --ORDER BY 1,2) PLANFULL JOIN (    SELECT PERD_D, DEPT_I, SUM(MSUR_V) AS MSUR_V    FROM (    SELECT PERD_D        --,SCNO_I        ,DEPT_I        ,JOB_FMLY_C        ,PDCT_I        ,RM_TYPE_C        ,MSUR_I        --,PRTF_C        --,PRTF_DEPT_I        ,MSUR_V     FROM (            SELECT    PERD_D            ,SCNO_I            ,DEPT_I            ,JOB_FMLY_C            ,PDCT_I            ,RM_TYPE_C            ,MSUR_I            ,PRTF_C            ,PRTF_DEPT_I            ,MSUR_V        FROM TVP2MGTR.RPS_PLAN_DEPT_UALO_BDV                UNION ALL                SELECT    PERD_D            ,SCNO_I            ,DEPT_I            ,JOB_FMLY_C            ,PDCT_I            ,RM_TYPE_C            ,MSUR_I            ,PRTF_C            ,PRTF_DEPT_I            ,MSUR_V        FROM TVP2MGTR.RPS_PLAN_DEPT_UALO_CALC_BDV            ) AM01        INNER JOIN TVP2MGTR.PLSE_BICD_MSUR_MAP     PBM0    ON  AM01.MSUR_I         =     PBM0.PLSE_MSUR_C    AND 'PLN'               =     PBM0.SRCE_SYST_C      AND AM01.PERD_D BETWEEN PBM0.EFFT_D AND PBM0.EXPY_D            --WHERE AM01.DEPT_I = 'NDEPT000001'    WHERE AM01.PERD_D = :PERD_END_D --'2015-06-30'    /*    and am01.msur_i not in (    'INCRLIMTBASEABOVE#'    )    */    AND AM01.MSUR_V <> 0    --ORDER BY 1,2,3,4,5,6,7,8    --ORDER BY AM01.MSUR_V, AM01.msur_i, AM01.pdct_i, AM01.PERD_D, AM01.DEPT_I, AM01.RM_TYPE_C, AM01.MSUR_I    ) Q    GROUP BY 1,2    --ORDER BY 1,2) UALOON PLAN.PERD_D  = UALO.PERD_DAND PLAN.DEPT_I = UALO.DEPT_I ORDER BY PLAN.PERD_D, PLAN.DEPT_I;);","NULL","0","0","0","N ","NULL","NULL","2016-04-18 13:21:02","konkna","2016-04-18 13:21:02","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PDDSTG","TMP_APPT_PDCT_FEAT_PEXAHM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_PDCT_FEAT_PEXAHM AS GDW2_RESTORE.TMP_APPT_PDCT_FEAT_PEXAHM WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:55","singhp80","2025-07-12 07:56:55","NULL","3","2025-07-12 06:02:24","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","CALENDAR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.CALENDAR AS LOCKING TABLE SYS_CALENDAR.CALENDAR FOR ACCESS SELECT * FROM SYS_CALENDAR.CALENDAR;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:20:44","perumabh","2025-07-14 22:20:44","NULL","7","2025-08-22 11:36:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_FORM","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_FORMAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FORMFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_FORM;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:17:53","perumabh","2025-07-14 22:17:53","NULL","1","2025-07-14 22:17:53","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2022","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2022 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2022-01-02' and '2023-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:28","KUCB2220","2025-08-06 18:19:28","NULL","1","2025-08-06 18:19:28","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_PRTF_PATY_STAG","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_PRTF_PATY_STAGAS LOCK TABLE K_PDDSTG.DERV_PRTF_PATY_STAGFOR ACCESS SELECT * FROM K_PDDSTG.DERV_PRTF_PATY_STAG;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:00","perumabh","2025-07-14 22:06:00","NULL","1","2025-07-14 22:06:00","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","MCR_ACCT_PATY_GRUP_PRTF","1","M ","F ","NN  ","KOSTKAMA","REPLACE MACRO KOSTKAMA.MCR_ACCT_PATY_GRUP_PRTF (DT DATE) AS (            DELETE FROM B_D17_D_BUS_001_STD_0.ACCT_PATY_GRUP_PRTF  WHERE SNAP_D = :DT;        INSERT INTO B_D17_D_BUS_001_STD_0.ACCT_PATY_GRUP_PRTF                         SEL    DATE '2017-07-21' AS SNAP_D,                        LAP.ACCT_IDNN_HK,                         LAP.ACCT_IDNN_BK,                         LAP.MSTR_SRCE_SYST_C,                        LAP.PATY_IDNN_HK,                         LAP.PATY_IDNN_BK,                         PRTF.PRTF_IDNN_HK,                         PRTF.PRTF_IDNN_BK,                        SPG.PATY_GRUP_I            FROM B_D17_D_SHR_001_STD_0.H_ACCT HA                                    INNER JOIN  (                                        SEL   HA.ACCT_IDNN_HK,                                         HA.ACCT_IDNN_BK,                                        HA.MSTR_SRCE_SYST_C,                                        LAP.PATY_IDNN_HK,                                        HPA.PATY_IDNN_BK                                                        FROM B_D17_D_SHR_001_STD_0.H_ACCT HA                             JOIN B_D17_D_SHR_001_STD_0.L_ACCT_PATY LAP                                        ON LAP.ACCT_IDNN_HK = HA.ACCT_IDNN_HK                                       AND HA.MSTR_SRCE_SYST_C = 'HLS'                             JOIN B_D17_D_BUS_001_STD_0.S_ACCT_PATY SAP                                        ON SAP.ACCT_PATY_IDNN_HK = LAP.ACCT_PATY_IDNN_HK                                        AND PRFR_PATY_F = 'Y'                                        AND '2017-07-21'  BETWEEN SAP.BUSN_STRT_D AND SAP.BUSN_END_D                                        AND SAP.EXPY_D = '9999-12-31'                                        AND SAP.RECORD_DELETED_FLAG = 0                            JOIN B_D17_D_SHR_001_STD_0.H_PATY HPA                                         ON HPA.PATY_IDNN_HK = LAP.PATY_IDNN_HK                                                                                                                                      ) LAP ON LAP.ACCT_IDNN_HK = HA.ACCT_IDNN_HK                                    LEFT JOIN (                                                                       SEL PATY_IDNN_HK, PATY_IDNN_BK, PRTF_IDNN_HK, PRTF_IDNN_BK                                                                                FROM B_D17_V_COX_001_STD_0.PATY_INT_GRUP A                                        LEFT JOIN B_D17_D_SHR_001_STD_0.H_PATY PATY ON OREPLACE(PATY.PATY_IDNN_BK, 'SAP~PT~', 'CIFPT')  = A.PATY_I --AND PATY.MSTR_SRCE_SYST_C = 'SAP'                                        JOIN B_D17_V_COX_001_STD_0.PATY_INT_GRUP B ON A.INT_GRUP_I = B.INT_GRUP_I                                                 AND  '2017-07-21' BETWEEN B.EFFT_D AND B.EXPY_D                                        JOIN B_D17_V_SHR_001_STD_0.H_PRTF PRTF ON PRTF.PRTF_IDNN_BK = B.SRCE_SYST_PATY_INT_GRUP_I                                        WHERE A.REL_C = 'RLMT'  AND  '2017-07-21'  BETWEEN A.EFFT_D AND A.EXPY_D                                                                        ) PRTF                            ON PRTF.PATY_IDNN_HK = LAP.PATY_IDNN_HK                                        LEFT OUTER JOIN B_D17_D_BUS_001_STD_0.S_PATY_GRUP_DETL SPG                         ON LAP.PATY_IDNN_HK = SPG.PATY_IDNN_HK                         AND SPG.PATY_GRUP_TYPE_C = 'SALE'                         AND  '2017-07-21' BETWEEN SPG.BUSN_STRT_D AND SPG.BUSN_END_D                         AND SPG.EXPY_D = '9999-12-31'                         AND SPG.RECORD_DELETED_FLAG = 0                                                                                                   WHERE  PRTF.PRTF_IDNN_BK IS NOT NULL               ;);","NULL","0","0","0","N ","NULL","NULL","2017-09-15 13:34:07","KOSTKAMA","2017-09-15 13:34:07","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_ENV_PATY_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_ENV_PATY_RELAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_RELFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_ENV_PATY_REL;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:46","perumabh","2025-07-14 22:16:46","NULL","1","2025-07-14 22:16:46","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_JOB_COMM_CATG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_JOB_COMM_CATG AS GDW2_RESTORE.MAP_CSE_JOB_COMM_CATG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:58","singhp80","2025-07-12 07:56:58","NULL","29","2025-08-14 12:15:14","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","MAP_CSE_APPT_ACQR_SRCE","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_APPT_ACQR_SRCEAS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ACQR_SRCEFOR ACCESS SEL * FROM K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_ACQR_SRCE;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:18:07","perumabh","2025-07-14 22:18:07","NULL","1","2025-07-14 22:18:07","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","GRD_GNRC_MAP_DERV_PATY_REL","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.GRD_GNRC_MAP_DERV_PATY_REL(MAP_TYPE_C,SRCE_SYST_C,REL_C,ACCT_I_C,EFFT_D,EXPY_D) ASSELECTMAP_TYPE_C,TARG_CHAR_C AS SRCE_SYST_C,SRCE_CHAR_1_C AS REL_C,SRCE_CHAR_2_C AS ACCT_I_C,EFFT_D   ,EXPY_DFROM K_PVTECH.GRD_GNRC_MAP_CURRWHERE MAP_TYPE_C = 'DERV_ACCT_PATY_ACCT_REL_MAP';","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:39:44","perumabh","2025-07-14 23:39:44","NULL","1","2025-07-14 23:39:44","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_CHG","1","T ","F ","NN  ","perumabh","CREATE MULTISET TABLE K_PDDSTG.DERV_ACCT_PATY_CHG ,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (      ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,      PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,      ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,      PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL       COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */      PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),      SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),      EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,      EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,            ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0)PRIMARY INDEX ( ACCT_I )INDEX ( PATY_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:48","perumabh","2025-07-14 22:04:48","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","Y ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_GNRC_DATE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_GNRC_DATE AS GDW2_RESTORE.TMP_APPT_GNRC_DATE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:12","singhp80","2025-07-12 07:57:12","NULL","4","2025-07-12 06:02:29","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_ACCT_PATY_FLAG","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.DERV_ACCT_PATY_FLAG ,NO FALLBACK ,      NO BEFORE JOURNAL,      NO AFTER JOURNAL,      CHECKSUM = DEFAULT      (       ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier' NOT NULL,       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier' NOT NULL,       ASSC_ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Associated Account Identifier' NOT NULL,       PATY_ACCT_REL_C CHAR(6) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Account Relationship Code' NOT NULL        COMPRESS ('ADD   ','BCA010','BCA030','COO   ','PRI   ','SOL   ','ZBCA10','ZINTE0'),  /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder Change  */       PRFR_PATY_F CHAR(1) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Preferred Party Flag' COMPRESS ('N','Y'),       SRCE_SYST_C CHAR(3) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Source System Code' COMPRESS ('CIF','SAP'),       EFFT_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Effective Date' NOT NULL,       EXPY_D DATE FORMAT 'YYYY-MM-DD' TITLE 'Expiry Date' NOT NULL,       ROW_SECU_ACCS_C INTEGER TITLE 'ROW SECURITY ACCESS CODE' NOT NULL DEFAULT 0  COMPRESS 0       ) PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:27","perumabh","2025-07-14 22:04:27","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","ACCT_XREF_BPS_CBS","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.ACCT_XREF_BPS_CBS AS LOCKING TABLE K_STAR_CAD_PROD_DATA.ACCT_XREF_BPS_CBS  FOR ACCESSSELECT *  FROM K_STAR_CAD_PROD_DATA.ACCT_XREF_BPS_CBS;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:21:15","perumabh","2025-07-14 22:21:15","NULL","1","2025-07-14 22:21:15","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2020","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2020 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2020-01-02' and '2021-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","1","2025-08-06 18:19:27","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_FA_CLNT_UTAK","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_FA_CLNT_UTAK AS GDW2_RESTORE.TMP_FA_CLNT_UTAK WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:51","singhp80","2025-07-12 07:56:51","NULL","3","2025-07-12 06:02:22","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","WSS_FNCL_TRAN","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.WSS_FNCL_TRAN AS (-- Revenue Measure SELECT  A.MNTH_END_D, A.ACCT_IDNN_HK, A.ACCT_IDNN_BK, A.GL_SRCE_IDNN_BK, A.GL_BUSN_UNIT_IDNN_BK, A.GL_ACCT_IDNN_BK, A.GL_DEPT_IDNN_BK, A.GL_PDCT_IDNN_BK, A.GL_AFLT_IDNN_BK, A.CNCY_IDNN_BK, A.USGE_CNCY_CATG_IDNN_BK, A.MSUR_CODE_IDNN_BK AS FNCL_MSUR_C, A.MSUR_A , 'SAP' AS MSTR_SRCE_SYST_C, 'WSS' AS SRCE_TYPE_C, 0 AS ROW_SECU_ACCS_CFROM (SELECT   FBTPG.ACCT_IDNN_HK AS ACCT_IDNN_HK, FBTPG.MNTH_END_D AS MNTH_END_D  , HA.ACCT_IDNN_BK  AS ACCT_IDNN_BK, FBTPG.MSUR_CODE_IDNN_BK, COALESCE(FBTPG.GL_ACCT_IDNN_BK,'UNKNOWN') AS GL_ACCT_IDNN_BK, COALESCE(FBTPG.GL_PDCT_IDNN_BK,'UNKNOWN') AS GL_PDCT_IDNN_BK, COALESCE(FBTPG.GL_DEPT_IDNN_BK,'UNKNOWN') AS GL_DEPT_IDNN_BK, COALESCE(FBTPG.GL_BUSN_UNIT_IDNN_BK,'UNKNOWN') AS GL_BUSN_UNIT_IDNN_BK, COALESCE(FBTPG.GL_AFLT_IDNN_BK ,'UNKNOWN') AS GL_AFLT_IDNN_BK, COALESCE(FBTPG.GL_CNCY_IDNN_BK, 'UNKNOWN') AS CNCY_IDNN_BK, COALESCE(FBTPG.USGE_CNCY_CATG_IDNN_BK, 'UNKNOWN') AS USGE_CNCY_CATG_IDNN_BK, COALESCE(FBTPG.GL_SRCE_IDNN_BK, 'UNKNOWN') AS GL_SRCE_IDNN_BK, SUM(FBTPG.MSUR_A) MSUR_AFROM (-- Select Revenue Measures from the Transaction Measure ModelSEL LREL.ACCT_IDNN_HK,MSUR.SNAP_D AS TRAN_D,SFG.GL_ACCT_IDNN_BK,SFG.GL_PDCT_IDNN_BK,SFG.GL_DEPT_IDNN_BK,SFG.GL_BUSN_UNIT_IDNN_BK,SFG.JRNL_D,SFG.GL_AFLT_IDNN_BK,MSUR.MSUR_A * SFG.GL_TRAN_SIGN AS MSUR_A  ,SFG.GL_CNCY_IDNN_BK,MSUR.USGE_CNCY_CATG_IDNN_BK,SFG.GL_SRCE_IDNN_BK,MSUR.MSUR_CODE_IDNN_BK,SFG.MNTH_END_D					             FROM P_V_USR_TEC_0.S_MSUR_FNCL_TRAN_SNAP MSUR  INNER JOIN (	-- Get Code Block and measure signage from FDM GL tableSEL  SFGL.GL_ACCT_IDNN_BK,SFGL.GL_PDCT_IDNN_BK,SFGL.GL_DEPT_IDNN_BK,SFGL.GL_BUSN_UNIT_IDNN_BK,SFGL.JRNL_D,SFGL.GL_AFLT_IDNN_BK,SFGL.GL_TRAN_SIGN ,SFGL.GL_CNCY_IDNN_BK,SFGL.GL_SRCE_IDNN_BK				,SFGL.FNCL_TRAN_IDNN_HK,SFGL.MSTR_SRCE_SYST_C,DT.CALR_MNTH_END_D AS MNTH_END_DFROM P_V_USR_TEC_0.S_FNCL_TRAN_GL SFGL  INNER JOIN 	 (	 SELECT distinct 	 DATE '2018-05-01' AS BUSINESS_DATE,	 DATE '2018-05-01' AS CALR_MNTH_STRT_D,	 DATE '2018-05-31' AS CALR_MNTH_END_D	 FROM P_V_USR_TEC_0.DIMN_DATE FDD	/* INNER JOIN 	 B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE	 ON STREAM_KEY=1499	 AND CALR_D=BUSINESS_DATE	     AND  EXPY_D='9999-12-31' 	     AND RECORD_DELETED_FLAG = 0*/	 ) DT  ON  SFGL.JRNL_D BETWEEN  DT.CALR_MNTH_STRT_D AND DT.CALR_MNTH_END_D  	-- Join to get GL Acct rollup to determine Measure type e.g. Interest or Fee   INNER JOIN P_V_USR_TEC_0.S_GL_ACCT_MGMT DGAM  ON SFGL.GL_ACCT_IDNN_BK = DGAM.GL_ACCT_LEAF_NODE_C  AND SFGL.JRNL_D BETWEEN DGAM.BUSN_STRT_D AND DGAM.BUSN_END_D    	-- join to obtain PnL (Revenue R & Expence E) GL acct codes   INNER JOIN   (   SELECT     GL_ACCT_IDNN_BK                                                             ,ACCOUNT_TYPE    FROM P_V_USR_TEC_0.R_PGL_ACCT    WHERE RECORD_DELETED_FLAG = 0    QUALIFY ROW_NUMBER() OVER (PARTITION BY GL_ACCT_IDNN_BK ORDER BY EFFDT DESC, EXPY_D DESC) = 1   ) GLA   ON SFGL.GL_ACCT_IDNN_BK = GLA.GL_ACCT_IDNN_BK  WHERE   GLA.ACCOUNT_TYPE IN ('R','E')     AND DGAM.GL_ACCT_L6_NODE_C = 'TOTALOPERINCOME_05'  AND DGAM.EXPY_D = DATE '9999-12-31'  AND DGAM.RECORD_DELETED_FLAG = 0  AND SFGL.MSTR_SRCE_SYST_C =  'WSS'  AND SFGL.GL_CNCY_IDNN_BK='AUD' -- Added this condition on 20180824AND SFGL.RECORD_DELETED_FLAG = 0AND SFGL.EXPY_D = '9999-12-31'  )SFG  ON  MSUR.FNCL_TRAN_IDNN_HK  = SFG.FNCL_TRAN_IDNN_HK  AND MSUR.MSTR_SRCE_SYST_C = SFG.MSTR_SRCE_SYST_C-- Link from Transactional Measure model to Acct      INNER JOIN P_V_USR_TEC_0.L_FNCL_TRAN_ACCT_REL LREL   ON MSUR.FNCL_TRAN_IDNN_HK = LREL.FNCL_TRAN_IDNN_HK    WHERE MSUR.MSUR_CODE_IDNN_BK = 'FNCL_TRAN_A'  AND MSUR.RECORD_DELETED_FLAG = 0  AND MSUR.EXPY_D = '9999-12-31'    AND LREL.FNCL_TRAN_ACCT_ROLE_C = 'TRAC')FBTPG-- join to Hub account to obtain  account BKINNER JOIN P_V_USR_TEC_0.H_ACCT HA  ON FBTPG.ACCT_IDNN_HK = HA.ACCT_IDNN_HK  AND HA.EXPY_D = DATE '9999-12-31' /* -- SANKARA added below temp tableJOIN PTEMP.SQL_ACCT_SRE TEMPON 'WSSWS'||TRIM(SUBSTR(HA.ACCT_IDNN_BK,12,20))=TEMP.DEAL_IDENTIFIER*/GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12)A);","NULL","0","0","0","N ","NULL","NULL","2018-09-21 17:36:03","KOSTKAMA","2018-09-21 18:22:45","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2025","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2025 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2025-01-02' and '2026-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:28","KUCB2220","2025-08-06 18:19:28","NULL","1","2025-08-06 18:19:28","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_PDCMS","MAP_CMS_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDCMS.MAP_CMS_PDCT AS GDW2_RESTORE.MAP_CMS_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:55","singhp80","2025-07-12 07:56:55","NULL","29","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVTECH","DERV_PRTF_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.DERV_PRTF_PATY-- --- ---------- ----------------------------------------------------------- Ver Date       Modified By         Description-- --- ---------- ------------------------------------------------------------- 1.0  27/06/2013 T Jelliffe          Initial Version-- 1.1  28/06/2013 T Jelliffe          Use duration persist table-- 1.2  12/07/2013 T Jelliffe          Time period reduced 15 to 3 years-- 1.3  17/07/2013 T Jelliffe          39 months history range-- 1.4  25/07/2013 T Jelliffe          Date join on JOIN_FROM_D and TO_D-- 1.5  14/01/2014 H Zak               read from the corresponding 1:1 views over the new relationship tables---------------------------------------------------------------------------( PERD_D                        ,VALD_FROM_D                   ,VALD_TO_D                     ,EFFT_D                        ,EXPY_D                        ,PATY_I                        ,INT_GRUP_I                    ,DERV_PRTF_CATG_C              ,DERV_PRTF_CLAS_C              ,DERV_PRTF_TYPE_C              ,PTCL_N                        ,REL_MNGE_I                    ,PRTF_CODE_X                   ,SRCE_SYST_C                   ,ROW_SECU_ACCS_C                      ) AS  SELECT CALR.CALENDAR_DATE AS   PERD_D                        ,VALD_FROM_D                   ,VALD_TO_D                     ,EFFT_D                        ,EXPY_D                        ,PATY_I                        ,INT_GRUP_I                    ,DERV_PRTF_CATG_C              ,DERV_PRTF_CLAS_C              ,DERV_PRTF_TYPE_C              ,PTCL_N                        ,REL_MNGE_I                    ,PRTF_CODE_X                   ,SRCE_SYST_C                   ,ROW_SECU_ACCS_C                         FROM  K_PVTECH.DERV_PRTF_PATY_REL T1  INNER JOIN K_PVTECH.CALENDAR CALR  ON CALR.CALENDAR_DATE BETWEEN T1.VALD_FROM_D AND T1.VALD_TO_D  AND CALR.CALENDAR_DATE BETWEEN ADD_MONTHS((CURRENT_DATE - EXTRACT(DAY FROM CURRENT_DATE) +1 ) , -39)   AND ADD_MONTHS(CURRENT_DATE, 1);","NULL","0","0","0","N ","NULL","NULL","2025-07-14 23:48:10","perumabh","2025-08-22 11:36:55","NULL","3","2025-08-22 11:36:55","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_FEAT_OVRD_REAS_HL_D","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FEAT_OVRD_REAS_HL_D AS GDW2_RESTORE.MAP_CSE_FEAT_OVRD_REAS_HL_D WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:56","singhp80","2025-07-12 07:56:56","NULL","29","2025-08-14 12:10:24","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","TMP_APPT_QSTN","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.TMP_APPT_QSTN AS GDW2_RESTORE.TMP_APPT_QSTN WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:44","singhp80","2025-07-12 07:56:44","NULL","3","2025-07-12 06:02:16","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","MCR_SEGM_ACCT_ATTR","1","M ","F ","NN  ","KOSTKAMA","REPLACE MACRO KOSTKAMA.MCR_SEGM_ACCT_ATTR  (DT DATE) AS (    DELETE FROM  B_D17_D_BUS_001_STD_0.S_SEGM_ACCT_ATTR WHERE SNAP_D = :DT;    INSERT INTO B_D17_D_BUS_001_STD_0.S_SEGM_ACCT_ATTR                SELECT                           DATE  '2017-07-21'  SNAP_D,                        BASE.ACCT_IDNN_HK,                        BASE.ACCT_IDNN_BK,                        BASE.PATY_IDNN_HK,                        BASE.PATY_IDNN_BK,                        BASE.PATY_GRUP_I,                        COALESCE(SEGM.PRTF_IDNN_HK, BASE.PRTF_IDNN_HK) AS PRTF_IDNN_HK,                        COALESCE(SEGM.PRTF_IDNN_BK, BASE.PRTF_IDNN_HK) AS PRTF_IDNN_BK,                        COALESCE(SEGM.CRS_F, 'N') AS CRS_F                FROM  B_D17_D_BUS_001_STD_0.ACCT_PATY_GRUP_PRTF BASE                JOIN B_D17_D_BUS_001_STD_0.S_SEGM_PATY_ATTR SEGM                    ON BASE.PATY_IDNN_HK =SEGM.PATY_IDNN_HK            AND SEGM.SNAP_D =  '2017-07-21'             AND BASE.SNAP_D =  '2017-07-21'                     --LEFT JOIN PTEMP.S_ACCT_RM_SEG_ATTR SEGM            --ON SEGM.ACCT_IDNN_HK = BASE.ACCT_IDNN_HK            --AND :DT  BETWEEN PATYPORT_BUSN_STRT_D AND PATYPORT_BUSN_END_D        WHERE BASE.SNAP_D =  '2017-07-21'     ;);","NULL","0","0","0","N ","NULL","NULL","2017-09-15 13:43:20","KOSTKAMA","2017-09-15 13:43:20","NULL","NULL","NULL","NULL","N ","N ","Y ",,"N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_CSE_FNDD_METH","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVTECH.MAP_CSE_FNDD_METH   AS   LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_FNDD_METH FOR ACCESS SEL *  FROM K_STAR_CAD_PROD_DATA.MAP_CSE_FNDD_METH;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:16:17","perumabh","2025-07-14 22:16:17","NULL","1","2025-07-14 22:16:17","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"KOSTKAMA","TX_300_3_PDCTSWCHREFN_STG1","1","V ","F ","NN  ","KOSTKAMA","REPLACE VIEW KOSTKAMA.TX_300_3_PDCTSWCHREFN_STG1 ASLOCKING ROW FOR ACCESS (SEL  				  A.PERD_D				, A.SALE_GRUP_I				, A.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN				, A.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN				, A.RUN_OFF_A				, A.NEW_LEND_A				, A.TOT_REFIN				,A.TOT_PD_SWITCH				, A.TOT_RUN_OFF_A				, A.TOT_NEW_LEND_A				, A.TOT_AVAILFROM (SEL 				 BASE.PERD_D				,BASE.SALE_GRUP_I				,BASE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN				,BASE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN				,BASE.RUN_OFF_A				,BASE.NEW_LEND_A				,COALESCE(BASE.TOT_REFIN,0) AS TOT_REFIN								,CASE    								WHEN (													BASE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN <> BASE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN 													AND CFIG_RO.INPT_COLM_1 IS NOT NULL 													AND CFIG_NL.INPT_COLM_1 IS NOT NULL 												 )								THEN BASE.TOT_AVAIL - SUM( CASE   WHEN BASE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN <> BASE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN 																														THEN   COALESCE(REFIN.TOT_REFIN, 0) 																														END ) 																							OVER (PARTITION BY BASE.PERD_D, BASE.SALE_GRUP_I ORDER BY BASE.PERD_D, BASE.SALE_GRUP_I, BASE.RUN_OFF_A DESC ROWS UNBOUNDED PRECEDING)  									ELSE 0					END AS TOT_PD_SWITCH												,BASE.TOT_RUN_OFF_A				,BASE.TOT_NEW_LEND_A				,BASE.TOT_AVAILFROM B_D17_V_INP_001_STD_0.TX_300_2_PDCTSWCHREFN_STG0  BASELEFT JOIN			(SELECT INPT_COLM_1,INPT_COLM_3 ,INPT_COLM_4,OPUT_COLM_1,OPUT_COLM_2  ,			(SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE  WHERE STREAM_KEY = 1346) AS BUSINESS_DATE                 				FROM B_D17_V_REF_001_STD_0.R_CFIG_MAP   				WHERE MAP_TYPE_M = 'WBM_PD_SWITCH_SG'  				AND BUSINESS_DATE BETWEEN EFFT_D AND EXPY_D				GROUP BY 1,2 ,3,4,5 )  CFIG_RO			ON  CFIG_RO.INPT_COLM_1 = BASE.RUNOFF_MGMT_INFO_PDCT_HIER_IDNN			LEFT JOIN 			(SELECT INPT_COLM_1,INPT_COLM_3    ,INPT_COLM_4,OPUT_COLM_1 ,OPUT_COLM_2 ,						(SELECT BUSINESS_DATE FROM B_D00_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE  WHERE STREAM_KEY = 1346) AS BUSINESS_DATE                                   				FROM B_D17_V_REF_001_STD_0.R_CFIG_MAP   				WHERE MAP_TYPE_M = 'WBM_PD_SWITCH_SG' 				AND BUSINESS_DATE BETWEEN EFFT_D AND EXPY_D								GROUP BY 1,2 ,3,4,5 )  CFIG_NL			ON  CFIG_NL.INPT_COLM_1 = BASE.NEWLEND_MGMT_INFO_PDCT_HIER_IDNN			AND CFIG_NL.OPUT_COLM_1 = CFIG_RO.OPUT_COLM_1			AND CFIG_NL.OPUT_COLM_2 = CFIG_RO.OPUT_COLM_2						AND BASE.NL_GL_SRCE_IDNN_BK  = CASE WHEN CFIG_NL.INPT_COLM_4  = 'ALL' THEN BASE.NL_GL_SRCE_IDNN_BK  ELSE CFIG_NL.INPT_COLM_4  END			LEFT JOIN  		( SEL PERD_D, SALE_GRUP_I, SUM(TOT_REFIN) AS TOT_REFIN 			FROM B_D17_V_INP_001_STD_0.TX_300_2_PDCTSWCHREFN_STG0   REFIN 			GROUP BY 1,2  ) REFIN			ON REFIN.PERD_D = BASE.PERD_D			AND REFIN.SALE_GRUP_I = BASE.SALE_GRUP_I    ) A GROUP BY 1,2,3,4,5,6,7,8,9,10,11	);","NULL","0","0","0","N ","NULL","NULL","2018-01-17 10:35:40","KOSTKAMA","2018-01-17 10:35:40","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_PVTECH","MAP_SAP_INVL_PDCT","1","V ","F ","NN  ","perumabh"," REPLACE VIEW K_PVTECH.MAP_SAP_INVL_PDCT(        PDCT,        PDCT_C,        EFFT_D,        EXPY_D)        AS LOCKING TABLE K_STAR_CAD_PROD_DATA.MAP_SAP_INVL_PDCT FOR ACCESSSELECT        PDCT,        PDCT_C,        EFFT_D,        EXPY_D  FROM        K_STAR_CAD_PROD_DATA.MAP_SAP_INVL_PDCT;","NULL","0","0","0","N ","NULL","NULL","2025-08-22 11:37:04","perumabh","2025-08-22 11:37:04","NULL","1","2025-08-22 11:37:04","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"karsa","TX_165_40_1_HL_SUBM_APPT_FHC_COMT_SNAP_D","1","V ","F ","NN  ","karsa","REPLACE VIEW KARSA.TX_165_40_1_HL_SUBM_APPT_FHC_COMT_SNAP_D ASLOCKING ROW FOR ACCESS                                 SELECT CALR_D AS SNAP_DFROM B_D42_V_BAL_001_STD_0.DIMN_DATE DDCROSS JOIN (                                SELECT DCA3.CALR_D AS TCF_START_D, TCF.BUSINESS_DATE as TCF_BUSN_D,  DCA3.CALR_NON_WORK_DAY_TYPE_C                                FROM B_D42_V_BAL_001_STD_0.DIMN_DATE  DCA3                                     CROSS JOIN B_D42_V_TCF_001_STD_0.CTLFW_STREAM_BUSDATE TCF                                WHERE CALR_D BETWEEN  TCF_BUSN_D - 7 AND TCF_BUSN_D                                AND TCF.STREAM_KEY = 1670                                AND CALR_NON_WORK_DAY_TYPE_C = 'BSDY'                                QUALIFY(ROW_NUMBER() OVER(PARTITION BY DCA3.CALR_NON_WORK_DAY_TYPE_C ORDER BY DCA3.CALR_D DESC ))=3) DT                                WHERE CALR_D BETWEEN DT.TCF_START_D AND DT.TCF_BUSN_DAND DD.CALR_NON_WORK_DAY_TYPE_C = 'BSDY'GROUP BY 1;","NULL","0","0","0","N ","NULL","NULL","2019-02-25 15:56:56","karsa","2019-02-25 15:56:56","NULL","NULL","NULL","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","0","NULL"
"K_STAR_CAD_PROD_DATA","ACCT_UNID_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.ACCT_UNID_PATY AS GDW2_RESTORE.ACCT_UNID_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:30","singhp80","2025-07-12 07:55:30","NULL","29","2025-08-13 13:12:12","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","DAR_ACCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.DAR_ACCT AS GDW2_RESTORE.DAR_ACCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:55:50","singhp80","2025-07-12 07:55:50","NULL","29","2025-08-13 14:03:11","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_CRIS_PDCT","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_CRIS_PDCT AS GDW2_RESTORE.MAP_CSE_CRIS_PDCT WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:55","singhp80","2025-07-12 07:56:55","NULL","29","2025-08-13 16:10:22","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"KHANA15","test_MVC_Clauses","1","T ","F ","NN  ","KHANA15","CREATE TABLE khana15.test_MVC_Clauses( db VARCHAR(128) NOT NULL, tb VARCHAR(128) NOT NULL, colm VARCHAR(128) NOT NULL, pending_flag CHAR(1) NOT NULL, cmpr_val_cnt SMALLINT NOT NULL, tot_cmpr_row_cnt DECIMAL(18,0) NOT NULL, total_row_cnt DECIMAL(18,0) NOT NULL, pct_row_cmpr DECIMAL(18,4) NOT NULL, datatype CHAR(2) NOT NULL, colm_width INTEGER NOT NULL, est_cmpr_savings DECIMAL(18,0) NOT NULL, cmpr_clause VARCHAR(10000) CHARACTER SET UNICODE NOT NULL) UNIQUE PRIMARY INDEX ( db ,tb ,colm );","NULL","0","0","0","N ","NULL","NULL","2017-05-26 17:47:38","KHANA15","2017-05-26 17:47:38","NULL","NULL","NULL","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","3","0","NULL","NULL","NULL","NULL","0","0","NULL","NULL","NULL","NULL","DEFAULT","NULL","NULL","0 ","0","TD_Map1","NULL","NULL","NULL","0","NULL"
"K_PVDSTG","GRD_GNRC_MAP_DERV_UNID_PATY","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.GRD_GNRC_MAP_DERV_UNID_PATYAS LOCK TABLE K_PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATYFOR ACCESS SELECT * FROM K_PDDSTG.GRD_GNRC_MAP_DERV_UNID_PATY;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:06:01","perumabh","2025-07-14 22:06:01","NULL","1","2025-07-14 22:06:01","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","INT_GRUP_UNID_PATY","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.INT_GRUP_UNID_PATY AS GDW2_RESTORE.INT_GRUP_UNID_PATY WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:43","singhp80","2025-07-12 07:56:43","NULL","29","2025-08-13 15:31:30","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PVDSTG","DERV_ACCT_PATY_CURR","1","V ","F ","NN  ","perumabh","REPLACE VIEW K_PVDSTG.DERV_ACCT_PATY_CURRAS LOCK TABLE K_PDDSTG.DERV_ACCT_PATY_CURRFOR ACCESS SELECT * FROM K_PDDSTG.DERV_ACCT_PATY_CURR;","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:05:57","perumabh","2025-07-14 22:05:57","NULL","1","2025-07-14 22:05:57","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","BUSN_EVNT_V2019","1","V ","F ","NN  ","KUCB2220","create view K_STAR_CAD_PROD_DATA.BUSN_EVNT_V2019 ASSELECT * FROM K_STAR_CAD_PROD_DATA.BUSN_EVNTWHERE trunc(""EFFT_D"", 'D') BETWEEN '2019-01-02' and '2020-01-01'","NULL","0","0","0","N ","NULL","NULL","2025-08-06 18:19:27","KUCB2220","2025-08-06 18:19:27","NULL","1","2025-08-06 18:19:27","NULL","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","0","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","NULL","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PDCT_PATY_ROLE","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PDCT_PATY_ROLE AS GDW2_RESTORE.MAP_CSE_APPT_PDCT_PATY_ROLE WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:00","singhp80","2025-07-12 07:57:00","NULL","29","2025-08-13 15:52:08","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDGRD","GRD_DEPT_FLAT_CURR","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDGRD.GRD_DEPT_FLAT_CURR AS GDW2_RESTORE.GRD_DEPT_FLAT_CURR WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:35","singhp80","2025-07-12 07:56:35","NULL","30","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_ORIG_APPT_SRCE_HM","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_ORIG_APPT_SRCE_HM AS GDW2_RESTORE.MAP_CSE_ORIG_APPT_SRCE_HM WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:58","singhp80","2025-07-12 07:56:58","NULL","29","2025-08-14 12:13:38","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","DERV_PRTF_ACCT_PATY_STAG","1","T ","F ","NN  ","perumabh","CREATE SET TABLE K_PDDSTG.DERV_PRTF_ACCT_PATY_STAG,NO FALLBACK ,     NO BEFORE JOURNAL,     NO AFTER JOURNAL,     CHECKSUM = DEFAULT     (ACCT_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Identifier',       PATY_I VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Identifier',      ACCT_PRTF_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Account Portfolio Code',      PATY_PRTF_C VARCHAR(255) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'Party Portfolio Code',   PATY_ACCT_REL_C CHAR(6)  TITLE 'Paty Account Relationship', /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder  Change  */            RANK_I INTEGER  TITLE 'RANK'     /* C2039849 _IM1317265_ Revenue_Attribution_to_Fund_Holder  Change  */             )PRIMARY INDEX ( ACCT_I );","NULL","0","0","0","N ","NULL","NULL","2025-07-14 22:04:49","perumabh","2025-07-14 22:04:49","NULL","19","2025-08-04 10:58:23","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_COND","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_COND AS GDW2_RESTORE.MAP_CSE_APPT_COND WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:04","singhp80","2025-07-12 07:57:04","NULL","29","2025-08-13 15:41:57","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_PDDSTG","WRK_APPT_PDCT_FEAT_PL_FEE_MARG","1","T ","F ","NN  ","singhp80","CREATE TABLE K_PDDSTG.WRK_APPT_PDCT_FEAT_PL_FEE_MARG AS GDW2_RESTORE.WRK_APPT_PDCT_FEAT_PL_FEE_MARG WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:56:38","singhp80","2025-07-12 07:56:38","NULL","3","2025-07-12 06:02:10","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","0","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
"K_STAR_CAD_PROD_DATA","MAP_CSE_APPT_PURP_CLAS_CL","1","T ","F ","NN  ","singhp80","CREATE TABLE K_STAR_CAD_PROD_DATA.MAP_CSE_APPT_PURP_CLAS_CL AS GDW2_RESTORE.MAP_CSE_APPT_PURP_CLAS_CL WITH DATA AND STATS;","NULL","0","0","0","N ","NULL","NULL","2025-07-12 07:57:06","singhp80","2025-07-12 07:57:06","NULL","29","2025-08-13 15:55:47","1","N ","N ","Y ","N ","N ","NULL","NULL","N ","NULL","NULL","1","0","NULL","NULL","NULL","NULL","NULL","NULL","NULL","NULL","60","NULL","DEFAULT","DEFAULT","DEFAULT","0 ","0","TD_Map1","NULL","NULL","NULL","NULL","NULL"
