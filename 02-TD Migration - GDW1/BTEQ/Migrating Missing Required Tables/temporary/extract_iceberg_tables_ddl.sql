-- =====================================================================
-- Extract Iceberg Table DDL Statements
-- Generated from call procs.sql TARGET_TABLE_CATALOG and TARGET_TABLE_SCHEMA
-- Target Database: NPD_D12_DMN_GDWMIG_IBRG
-- =====================================================================

-- Set context to target database
USE DATABASE NPD_D12_DMN_GDWMIG_IBRG;

-- Table 1: PDCBODS.ACCT_MSTR_CYT_DATA
SELECT GET_DDL('TABLE', 'PDCBODS.ACCT_MSTR_CYT_DATA') AS DDL_STATEMENT;

-- Table 2: PDCBODS.BUSN_PTNR
SELECT GET_DDL('TABLE', 'PDCBODS.BUSN_PTNR') AS DDL_STATEMENT;

-- Table 3: PDCBODS.CBA_FNCL_SERV_GL_DATA
SELECT GET_DDL('TABLE', 'PDCBODS.CBA_FNCL_SERV_GL_DATA') AS DDL_STATEMENT;

-- Table 4: PDCBODS.MSTR_CNCT_BALN_TRNF_PRTP
SELECT GET_DDL('TABLE', 'PDCBODS.MSTR_CNCT_BALN_TRNF_PRTP') AS DDL_STATEMENT;

-- Table 5: PDCBODS.MSTR_CNCT_MSTR_DATA_GENL
SELECT GET_DDL('TABLE', 'PDCBODS.MSTR_CNCT_MSTR_DATA_GENL') AS DDL_STATEMENT;

-- Table 6: PDCBODS.MSTR_CNCT_PRXY_ACCT
SELECT GET_DDL('TABLE', 'PDCBODS.MSTR_CNCT_PRXY_ACCT') AS DDL_STATEMENT;

-- Table 7: PDSECURITY.ROW_LEVL_SECU_USER_PRFL
SELECT GET_DDL('TABLE', 'PDSECURITY.ROW_LEVL_SECU_USER_PRFL') AS DDL_STATEMENT;

-- Table 8: STARCADPRODDATA.DERV_PRTF_PATY_PSST
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.DERV_PRTF_PATY_PSST') AS DDL_STATEMENT;

-- Table 9: PDGRD.GRD_RPRT_CALR_FNYR
SELECT GET_DDL('TABLE', 'PDGRD.GRD_RPRT_CALR_FNYR') AS DDL_STATEMENT;

-- Table 10: STARCADPRODDATA.MAP_SAP_INVL_PDCT
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.MAP_SAP_INVL_PDCT') AS DDL_STATEMENT;

-- Table 11: STARCADPRODDATA.DERV_PRTF_ACCT_REL
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.DERV_PRTF_ACCT_REL') AS DDL_STATEMENT;

-- Table 12: STARCADPRODDATA.ACCT_PDCT
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.ACCT_PDCT') AS DDL_STATEMENT;

-- Table 13: PDPATY.ACCT_PATY
SELECT GET_DDL('TABLE', 'PDPATY.ACCT_PATY') AS DDL_STATEMENT;

-- Table 14: STARCADPRODDATA.ACCT_OFFR
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.ACCT_OFFR') AS DDL_STATEMENT;

-- Table 15: STARCADPRODDATA.ACCT_BASE
SELECT GET_DDL('TABLE', 'STARCADPRODDATA.ACCT_BASE') AS DDL_STATEMENT;

-- =====================================================================
-- Alternative: Get all DDL statements in one result set
-- =====================================================================

SELECT 
    ROW_NUMBER() OVER (ORDER BY table_order) AS SEQUENCE,
    CONCAT('-- Table ', ROW_NUMBER() OVER (ORDER BY table_order), ': ', schema_name, '.', table_name) AS COMMENT_HEADER,
    GET_DDL('TABLE', CONCAT(schema_name, '.', table_name)) AS DDL_STATEMENT,
    schema_name,
    table_name
FROM (
    SELECT 1 as table_order, 'PDCBODS' as schema_name, 'ACCT_MSTR_CYT_DATA' as table_name
    UNION ALL SELECT 2, 'PDCBODS', 'BUSN_PTNR'
    UNION ALL SELECT 3, 'PDCBODS', 'CBA_FNCL_SERV_GL_DATA'
    UNION ALL SELECT 4, 'PDCBODS', 'MSTR_CNCT_BALN_TRNF_PRTP'
    UNION ALL SELECT 5, 'PDCBODS', 'MSTR_CNCT_MSTR_DATA_GENL'
    UNION ALL SELECT 6, 'PDCBODS', 'MSTR_CNCT_PRXY_ACCT'
    UNION ALL SELECT 7, 'PDSECURITY', 'ROW_LEVL_SECU_USER_PRFL'
    UNION ALL SELECT 8, 'STARCADPRODDATA', 'DERV_PRTF_PATY_PSST'
    UNION ALL SELECT 9, 'PDGRD', 'GRD_RPRT_CALR_FNYR'
    UNION ALL SELECT 10, 'STARCADPRODDATA', 'MAP_SAP_INVL_PDCT'
    UNION ALL SELECT 11, 'STARCADPRODDATA', 'DERV_PRTF_ACCT_REL'
    UNION ALL SELECT 12, 'STARCADPRODDATA', 'ACCT_PDCT'
    UNION ALL SELECT 13, 'PDPATY', 'ACCT_PATY'
    UNION ALL SELECT 14, 'STARCADPRODDATA', 'ACCT_OFFR'
    UNION ALL SELECT 15, 'STARCADPRODDATA', 'ACCT_BASE'
) tables
ORDER BY table_order;

-- =====================================================================
-- Alternative: Generate complete migration script format
-- =====================================================================

SELECT 
    CONCAT(
        '/* <iceberg-table> ', schema_name, '.', table_name, ' </iceberg-table> */',
        CHR(10),
        GET_DDL('TABLE', CONCAT(schema_name, '.', table_name)),
        ';',
        CHR(10), CHR(10)
    ) AS COMPLETE_DDL_SCRIPT
FROM (
    SELECT 1 as table_order, 'PDCBODS' as schema_name, 'ACCT_MSTR_CYT_DATA' as table_name
    UNION ALL SELECT 2, 'PDCBODS', 'BUSN_PTNR'
    UNION ALL SELECT 3, 'PDCBODS', 'CBA_FNCL_SERV_GL_DATA'
    UNION ALL SELECT 4, 'PDCBODS', 'MSTR_CNCT_BALN_TRNF_PRTP'
    UNION ALL SELECT 5, 'PDCBODS', 'MSTR_CNCT_MSTR_DATA_GENL'
    UNION ALL SELECT 6, 'PDCBODS', 'MSTR_CNCT_PRXY_ACCT'
    UNION ALL SELECT 7, 'PDSECURITY', 'ROW_LEVL_SECU_USER_PRFL'
    UNION ALL SELECT 8, 'STARCADPRODDATA', 'DERV_PRTF_PATY_PSST'
    UNION ALL SELECT 9, 'PDGRD', 'GRD_RPRT_CALR_FNYR'
    UNION ALL SELECT 10, 'STARCADPRODDATA', 'MAP_SAP_INVL_PDCT'
    UNION ALL SELECT 11, 'STARCADPRODDATA', 'DERV_PRTF_ACCT_REL'
    UNION ALL SELECT 12, 'STARCADPRODDATA', 'ACCT_PDCT'
    UNION ALL SELECT 13, 'PDPATY', 'ACCT_PATY'
    UNION ALL SELECT 14, 'STARCADPRODDATA', 'ACCT_OFFR'
    UNION ALL SELECT 15, 'STARCADPRODDATA', 'ACCT_BASE'
) tables
ORDER BY table_order;

-- =====================================================================
-- Validation: Check which tables are actually Iceberg tables
-- =====================================================================

SELECT 
    TABLE_SCHEMA,
    TABLE_NAME,
    IS_ICEBERG,
    ICEBERG_CATALOG,
    ICEBERG_EXTERNAL_VOLUME,
    ICEBERG_BASE_LOCATION,
    CASE 
        WHEN IS_ICEBERG = 'YES' THEN '✅ ICEBERG'
        ELSE '❌ NOT ICEBERG'
    END as TABLE_TYPE_STATUS
FROM INFORMATION_SCHEMA.TABLES 
WHERE (TABLE_SCHEMA, TABLE_NAME) IN (
    ('PDCBODS', 'ACCT_MSTR_CYT_DATA'),
    ('PDCBODS', 'BUSN_PTNR'),
    ('PDCBODS', 'CBA_FNCL_SERV_GL_DATA'),
    ('PDCBODS', 'MSTR_CNCT_BALN_TRNF_PRTP'),
    ('PDCBODS', 'MSTR_CNCT_MSTR_DATA_GENL'),
    ('PDCBODS', 'MSTR_CNCT_PRXY_ACCT'),
    ('PDSECURITY', 'ROW_LEVL_SECU_USER_PRFL'),
    ('STARCADPRODDATA', 'DERV_PRTF_PATY_PSST'),
    ('PDGRD', 'GRD_RPRT_CALR_FNYR'),
    ('STARCADPRODDATA', 'MAP_SAP_INVL_PDCT'),
    ('STARCADPRODDATA', 'DERV_PRTF_ACCT_REL'),
    ('STARCADPRODDATA', 'ACCT_PDCT'),
    ('PDPATY', 'ACCT_PATY'),
    ('STARCADPRODDATA', 'ACCT_OFFR'),
    ('STARCADPRODDATA', 'ACCT_BASE')
)
ORDER BY TABLE_SCHEMA, TABLE_NAME; 