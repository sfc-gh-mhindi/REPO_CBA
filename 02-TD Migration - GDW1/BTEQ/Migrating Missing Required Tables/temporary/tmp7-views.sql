-- DDL for PVTECH.ACCT_BALN view
-- Extracted from CBA_GDW_DDL_Extracts

/* <sc-view> PVTECH.ACCT_BALN </sc-view> */



 
REPLACE VIEW PVTECH.ACCT_BALN
(
        ACCT_I,
  BALN_TYPE_C,
  CALC_FUNC_C,
  TIME_PERD_C,
  EFFT_D,
  EXPY_D,
  BALN_A,
  CALC_F,
  PROS_KEY_EFFT_I,
  PROS_KEY_EXPY_I,
  EROR_SEQN_I,
  CNCY_C,
  SRCE_SYST_C,
  ROW_SECU_ACCS_C
)
AS LOCKING TABLE STAR_CAD_PROD_DATA.ACCT_BALN FOR ACCESS
SELECT
        ACCT_I,
  BALN_TYPE_C,
  CALC_FUNC_C,
  TIME_PERD_C,
  EFFT_D,
  EXPY_D,
  CASE WHEN (SRCE_SYST_C in ('SAP', 'WSS') AND (CNCY_C = 'AUD' OR CNCY_C IS NULL)) OR (COALESCE(SRCE_SYST_C,'') NOT in ('SAP', 'WSS'))
              THEN CAST(BALN_A AS DECIMAL (15,2)) 
              END AS BALN_A,
  CALC_F,
  PROS_KEY_EFFT_I,
  PROS_KEY_EXPY_I,
  EROR_SEQN_I,
  CNCY_C,
  SRCE_SYST_C,
  ROW_SECU_ACCS_C
  FROM
        STAR_CAD_PROD_DATA.ACCT_BALN
 WHERE ( (SRCE_SYST_C in ('SAP', 'WSS') AND (CNCY_C = 'AUD' OR CNCY_C IS NULL)) 
  OR (COALESCE(SRCE_SYST_C,'') NOT in ('SAP', 'WSS') )  )
                                          
 AND ( 
(
/* Start - RLS */
COALESCE(ROW_SECU_ACCS_C,0) = 0 OR
TD_SYSFNLIB.GETBIT( (SELECT ROW_SECU_PRFL_C
FROM PVSECURITY.ROW_LEVL_SECU_USER_PRFL
WHERE USERNAME = USER
),ROW_SECU_ACCS_C
) =1
/* End - RLS */
)
    );

--
/* <sc-view> D_D04_V_USR_TEC_0.BV_CSE_DGPS_ELGL </sc-view> */
REPLACE VIEW  D_D04_V_USR_TEC_0.BV_CSE_DGPS_ELGL
 (

                APPT_IDNN_HK,
APPT_IDNN_BK,
APPT_N,
PREV_PEXA_F,
CURR_PEXA_F,
TRIG_ACTV_C,
MOD_USER_I,
MODF_S,
AUDT_S,
RECD_ISRT_DTTM,
MSTR_SRCE_SYST_C,
EFFT_D,
EXPY_D,
RECORD_DELETED_FLAG,
CTL_ID,
PROCESS_NAME,
PROCESS_ID,
UPDATE_PROCESS_NAME,
UPDATE_PROCESS_ID,
EFFT_TS,
EXPY_TS

   )AS LOCKING ROW FOR ACCESS
                         
                      SELECT
                      
               APPT_IDNN_HK,
APPT_IDNN_BK,
APPT_N,
PREV_PEXA_F,
CURR_PEXA_F,
TRIG_ACTV_C,
MOD_USER_I,
MODF_S,
AUDT_S,
RECD_ISRT_DTTM,
MSTR_SRCE_SYST_C,
EFFT_D,
EXPY_D,
RECORD_DELETED_FLAG,
CTL_ID,
PROCESS_NAME,
PROCESS_ID,
UPDATE_PROCESS_NAME,
UPDATE_PROCESS_ID,
EFFT_TS,
EXPY_TS
 FROM 
                      
                      P_V_USR_TEC_0.BV_CSE_DGPS_ELGL
                       
                      WHERE RECORD_DELETED_FLAG = 0  ;

--
/* <sc-view> P_P01_V_USR_TEC_0.MAP_MRKT_NBCV_DIRC </sc-view> */



REPLACE VIEW P_P01_V_USR_TEC_0.MAP_MRKT_NBCV_DIRC
(
  NBCV_DIRC_X                   
, NBCV_DIRC_C                   
, BUSN_STRT_D                   
, BUSN_END_D                    
, MSTR_SRCE_SYST_C              
, EFFT_D                        
, EXPY_D                                    
, EFFT_TS                       
, EXPY_TS                       
, RECD_ISRT_DTTM                

)
AS LOCKING ROW FOR ACCESS
SELECT
  NBCV_DIRC_X                   
, NBCV_DIRC_C                   
, BUSN_STRT_D                   
, BUSN_END_D                    
, MSTR_SRCE_SYST_C              
, EFFT_D                        
, EXPY_D                                    
, EFFT_TS                       
, EXPY_TS                       
, RECD_ISRT_DTTM                      
FROM
P_P01_V_REF_001_STD_0.MAP_MRKT_NBCV_DIRC;

--
/* <sc-view> P_V_STG_001_STD_0.ST_171_112_EXTD_SETL_TRAK_DATA_ZCN_EXT1 </sc-view> */
REPLACE VIEW P_V_STG_001_STD_0.ST_171_112_EXTD_SETL_TRAK_DATA_ZCN_EXT1 AS 
LOCKING ROW FOR ACCESS 
SELECT
   ACCT_IDNN_HK
  ,CTLFW_DELTA_ACTION_CODE
  ,TB_ACCOUNT
  ,BIC_ZXS_TRACK
  ,VALIDFROM
  ,VALIDTO
  ,TB_CHGUSER
  ,BIC_ZXS_TRNAM
  ,BIC_ZXSTLPST
  ,BIC_ZINCALDAY
  ,TB_PERDID
  ,MSTR_SRCE_SYST_C
  ,START_DATE
  ,END_DATE
  ,RECORD_DELETED_FLAG
  ,CTL_ID
  ,FILE_ID
  ,PROCESS_NAME
  ,PROCESS_ID
  ,UPDATE_PROCESS_NAME
  ,UPDATE_PROCESS_ID
  ,START_TS
  ,END_TS
FROM P_D_STG_001_STD_0.ST_171_112_EXTD_SETL_TRAK_DATA_ZCN_EXT1;

--
/* <sc-view> P_V_INP_001_STD_0.DT_101_01_R_FRL_CPLN_SENT_CODE </sc-view> */
REPLACE VIEW P_V_INP_001_STD_0.DT_101_01_R_FRL_CPLN_SENT_CODE
(
    CPLN_SENT_C
   ,CODE_ACTV_F
   ,CPLN_SENT_X
   ,RECD_DTTS_S
   ,IS_ACTV_F
   ,UPDT_S
   ,UPDT_BY_M
   ,ENTY_BIT_MASK
   ,MSTR_SRCE_SYST_C
   ,ROW_SECU_ACCS_C
) AS
LOCKING ROW FOR ACCESS
SELECT
    COALESCE(CPLN_SENT_C,'') AS CPLN_SENT_C
   ,CODE_ACTV_F AS CODE_ACTV_F
   ,CPLN_SENT_X AS CPLN_SENT_X
   ,RECD_DTTS_S AS RECD_DTTS_S
   ,IS_ACTV_F AS IS_ACTV_F
   ,CASE WHEN COALESCE(PFTCF.CHKTIMESTAMP(UPDT_S,0),1)=1 THEN CAST(UPDT_S AS TIMESTAMP(0)) ELSE TIMESTAMP'1111-11-11 00:00:00' END AS UPDT_S
   ,UPDT_BY_M AS UPDT_BY_M
   ,CASE WHEN COALESCE(PFTCF.CHKINTEGER(ENTY_BIT_MASK),1)=1 THEN CAST(ENTY_BIT_MASK AS INTEGER) ELSE 0 END AS ENTY_BIT_MASK
   ,COALESCE(MSTR_SRCE_SYST_C,'') AS MSTR_SRCE_SYST_C
   ,CASE WHEN COALESCE(PFTCF.CHKINTEGER(ROW_SECU_ACCS_C),0)=1 THEN CAST(ROW_SECU_ACCS_C AS INTEGER) ELSE 0 END AS ROW_SECU_ACCS_C
FROM P_V_STG_001_STD_0.ST_101_25_CPLN_SENT
WHERE CPLN_SENT_C IS NOT NULL
;
