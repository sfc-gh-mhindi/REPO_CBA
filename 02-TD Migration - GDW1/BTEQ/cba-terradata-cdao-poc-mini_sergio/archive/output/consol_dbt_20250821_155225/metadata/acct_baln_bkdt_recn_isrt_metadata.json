{
  "success": false,
  "quality_score": 1.0,
  "model_sql": "{%- set process_name = 'ACCT_BALN_BKDT_RECN_ISRT' -%}\n{%- set stream_name = 'CAD_X01_ACCT_BALN_BKDT_RECN' -%}\n\n{{\n  config(\n    materialized='table',\n    database=var('cad_prod_data_db'),\n    schema=var('cad_prod_data_schema'),\n    tags=['reconciliation', 'account_balance', 'backdate'],\n    pre_hook=[\n        \"DELETE FROM {{ this }} WHERE 1=1\",\n        \"{{ log_dcf_exec_msg('ACCT_BALN_BKDT_RECN process started') }}\"\n    ],\n    post_hook=[\n        \"{{ log_dcf_exec_msg('ACCT_BALN_BKDT_RECN process ended') }}\"\n    ]\n  )\n}}\n\n/*\n    Model: ACCT_BALN_BKDT_RECN\n    Purpose: Reconciliation process for account balance backdate records\n    Business Logic: Identifies discrepancies between staging and production balance data\n    Dependencies: ACCT_BALN_BKDT_STG2, ACCT_BALN, ACCT_BALN_BKDT\n*/\n\nWITH qualifying_accounts AS (\n    SELECT DISTINCT ACCT_I\n    FROM {{ ref('acct_baln_bkdt_stg2') }}\n),\n\ncurrent_balances AS (\n    SELECT \n        B.ACCT_I,\n        B.BALN_A\n    FROM qualifying_accounts A\n    INNER JOIN {{ source('vtech', 'acct_baln') }} B\n        ON A.ACCT_I = B.ACCT_I\n    WHERE B.BALN_TYPE_C = 'BALN'\n        AND B.CALC_FUNC_C = 'SPOT' \n        AND B.TIME_PERD_C = 'E' \n        AND CURRENT_DATE BETWEEN B.EFFT_D AND B.EXPY_D\n),\n\nstaging_bdcl_records AS (\n    SELECT \n        A.ACCT_I,\n        A.BKDT_EFFT_D,\n        A.BKDT_EXPY_D,\n        A.BALN_A\n    FROM {{ ref('acct_baln_bkdt_stg2') }} A\n    WHERE A.BALN_TYPE_C = 'BDCL'\n        AND A.CALC_FUNC_C = 'SPOT' \n        AND A.TIME_PERD_C = 'E' \n        AND CURRENT_DATE BETWEEN A.BKDT_EFFT_D AND A.BKDT_EXPY_D\n),\n\nproduction_bdcl_records AS (\n    SELECT \n        B.ACCT_I,\n        B.BKDT_EFFT_D,\n        B.BKDT_EXPY_D,\n        B.BALN_A\n    FROM qualifying_accounts A\n    INNER JOIN {{ source('vtech', 'acct_baln_bkdt') }} B\n        ON A.ACCT_I = B.ACCT_I\n    WHERE B.BALN_TYPE_C = 'BDCL'\n        AND B.CALC_FUNC_C = 'SPOT' \n        AND B.TIME_PERD_C = 'E' \n        AND CURRENT_DATE BETWEEN B.BKDT_EFFT_D AND B.BKDT_EXPY_D\n),\n\nstaging_vs_production_bdcl AS (\n    SELECT \n        STG.ACCT_I,\n        CASE WHEN STG.BKDT_EFFT_D > BKDT.BKDT_EFFT_D  \n             THEN STG.BALN_A \n             ELSE BKDT.BALN_A \n        END AS BALN_A\n    FROM staging_bdcl_records STG\n    INNER JOIN production_bdcl_records BKDT\n        ON STG.ACCT_I = BKDT.ACCT_I\n),\n\nfirst_insert_data AS (\n    SELECT \n        DT.ACCT_I,\n        BAL.EFFT_D,\n        BAL.EXPY_D,\n        DT.BALN_A,\n        NULL AS PROS_KEY_EFFT_I\n    FROM (\n        SELECT ACCT_I, BALN_A FROM current_balances\n        EXCEPT\n        SELECT ACCT_I, BALN_A FROM staging_vs_production_bdcl\n    ) DT\n    INNER JOIN {{ source('vtech', 'acct_baln') }} BAL\n        ON DT.ACCT_I = BAL.ACCT_I\n    WHERE BAL.BALN_TYPE_C = 'BDCL'\n        AND BAL.CALC_FUNC_C = 'SPOT' \n        AND BAL.TIME_PERD_C = 'E' \n        AND CURRENT_DATE BETWEEN BAL.EFFT_D AND BAL.EXPY_D\n),\n\nsecond_insert_data AS (\n    SELECT \n        DT1.ACCT_I,\n        STG.BKDT_EFFT_D AS EFFT_D,\n        STG.BKDT_EXPY_D AS EXPY_D,\n        STG.BALN_A,\n        NULL AS PROS_KEY_EFFT_I\n    FROM (\n        SELECT \n            ACCT_I, \n            BALN_A,\n            NULL AS PROS_KEY_EFFT_I\n        FROM staging_vs_production_bdcl\n        EXCEPT\n        SELECT \n            B.ACCT_I,\n            B.BALN_A,\n            NULL AS PROS_KEY_EFFT_I\n        FROM qualifying_accounts A\n        INNER JOIN {{ source('vtech', 'acct_baln') }} B\n            ON A.ACCT_I = B.ACCT_I\n        WHERE B.BALN_TYPE_C = 'BALN'\n            AND B.CALC_FUNC_C = 'SPOT' \n            AND B.TIME_PERD_C = 'E' \n            AND CURRENT_DATE BETWEEN B.EFFT_D AND B.EXPY_D\n    ) DT1\n    INNER JOIN {{ ref('acct_baln_bkdt_stg2') }} STG\n        ON DT1.ACCT_I = STG.ACCT_I\n    WHERE CURRENT_DATE BETWEEN STG.BKDT_EFFT_D AND STG.BKDT_EXPY_D\n),\n\nfinal AS (\n    SELECT * FROM first_insert_data\n    UNION ALL\n    SELECT * FROM second_insert_data\n)\n\nSELECT * FROM final",
  "metadata": {
    "models_used": [
      "claude-4-sonnet",
      "snowflake-llama-3.3-70b"
    ],
    "preferred_model": "claude-4-sonnet",
    "quality_score": 1.0,
    "dbt_features": [
      "config",
      "variables",
      "references",
      "sources",
      "macros",
      "jinja_variables",
      "pre_hooks",
      "post_hooks",
      "tags"
    ],
    "total_time_ms": 44892,
    "comparison_notes": [
      "Selected claude-4-sonnet as preferred model",
      "claude-4-sonnet: Quality=1.000, Features=9, Time=21894ms",
      "snowflake-llama-3.3-70b: Quality=0.910, Features=8, Time=22985ms"
    ],
    "migration_notes": [
      "Organized logic using CTEs for better readability",
      "Added DBT configuration for materialization and metadata",
      "Used DBT variables for environment-specific configuration",
      "Converted from procedural BTEQ to declarative DBT model"
    ]
  },
  "warnings": [
    "Uses SELECT * - consider explicit column selection"
  ],
  "execution_time_ms": 44892
}