{
  "success": false,
  "quality_score": 1.0,
  "model_sql": "{%- set process_name = 'ACCT_BALN_BKDT_AUDT_ISRT' -%}\n{%- set stream_name = 'CAD_X01_ACCT_BALN_BKDT_AUDT' -%}\n\n{{\n  config(\n    materialized='table',\n    database=var('cad_prod_data_db'),\n    schema='cad_prod_data',\n    tags=['audit', 'account_balance', 'backdate'],\n    pre_hook=[\n        \"{{ log_dcf_exec_msg('ACCT_BALN_BKDT_AUDT_ISRT Process started') }}\"\n    ],\n    post_hook=[\n        \"{{ log_dcf_exec_msg('ACCT_BALN_BKDT_AUDT_ISRT Process ended') }}\",\n        \"UPDATE {{ var('vtech_db') }}.UTIL_PROS_ISAC \n         SET COMT_F = 'Y', SUCC_F = 'Y', COMT_S = CURRENT_TIMESTAMP(), \n             SYST_INS_Q = (SELECT COUNT(*) FROM {{ ref('acct_baln_bkdt_stg1') }})\n         WHERE PROS_KEY_I = (SELECT MAX(PROS_KEY_I) FROM {{ var('vtech_db') }}.UTIL_PROS_ISAC \n                             WHERE CONV_M = 'CAD_X01_ACCT_BALN_BKDT_AUDT')\"\n    ]\n  )\n}}\n\n/*\n    Model: ACCT_BALN_BKDT_AUDT\n    Purpose: Populate the AUDT table for future reference as the records \n             are going to be deleted from ACCT BALN BKDT and this acts as a driver for the \n             ADJ RULE view\n    Business Logic: Loading records from ACCT_BALN_BKDT_STG1 to ACCT_BALN_BKDT_AUDT.\n                   This table holds data that is going to be deleted from ACCT_BALN_BKDT.\n    Dependencies: acct_baln_bkdt_stg1, acct_baln_bkdt_adj_rule, acct_baln_bkdt_stg2\n*/\n\nWITH stg1_data AS (\n    SELECT \n        ACCT_I,\n        BALN_TYPE_C,\n        CALC_FUNC_C,\n        TIME_PERD_C,\n        BALN_A,\n        CALC_F,\n        SRCE_SYST_C,\n        ORIG_SRCE_SYST_C,\n        LOAD_D,\n        BKDT_EFFT_D,\n        BKDT_EXPY_D,\n        PROS_KEY_EFFT_I,\n        PROS_KEY_EXPY_I\n    FROM {{ ref('acct_baln_bkdt_stg1') }}\n),\n\n-- Capturing the maximum pros_key_efft_i in the event of multiple pros keys for one account \n-- and populating for Auditing purposes\nadj_max_pros_key AS (\n    SELECT \n        ACCT_I, \n        MAX(PROS_KEY_EFFT_I) AS PROS_KEY_EFFT_I \n    FROM {{ ref('acct_baln_bkdt_adj_rule') }}\n    GROUP BY ACCT_I\n),\n\n-- Capture the latest pros key from the parent process and update the audt table\nstg2_max_bkdt_pros_key AS (\n    SELECT MAX(BKDT_PROS_KEY_I) AS BKDT_PROS_KEY_I\n    FROM {{ ref('acct_baln_bkdt_stg2') }}\n),\n\n-- Capture the latest pros key from the Auditing process and update the audt table\nutil_max_pros_key AS (\n    SELECT MAX(PROS_KEY_I) AS PROS_KEY_EFFT_I\n    FROM {{ var('vtech_db') }}.UTIL_PROS_ISAC \n    WHERE CONV_M = 'CAD_X01_ACCT_BALN_BKDT_AUDT'\n),\n\nfinal AS (\n    SELECT \n        STG1.ACCT_I,                        \n        STG1.BALN_TYPE_C,\n        STG1.CALC_FUNC_C,                  \n        STG1.TIME_PERD_C,                  \n        STG1.BALN_A,\n        STG1.CALC_F,\n        STG1.SRCE_SYST_C,\n        STG1.ORIG_SRCE_SYST_C,\n        STG1.LOAD_D,\n        STG1.BKDT_EFFT_D,\n        STG1.BKDT_EXPY_D,\n        PKEY.PROS_KEY_EFFT_I,\n        STG1.PROS_KEY_EFFT_I AS ABAL_PROS_KEY_EFFT_I,\n        STG1.PROS_KEY_EXPY_I AS ABAL_PROS_KEY_EXPY_I,\n        STG2.BKDT_PROS_KEY_I AS ABAL_BKDT_PROS_KEY_I,\n        ADJ.PROS_KEY_EFFT_I AS ADJ_PROS_KEY_EFFT_I\n    FROM stg1_data STG1\n    INNER JOIN adj_max_pros_key ADJ\n        ON STG1.ACCT_I = ADJ.ACCT_I\n    CROSS JOIN stg2_max_bkdt_pros_key STG2\n    CROSS JOIN util_max_pros_key PKEY\n)\n\nSELECT * FROM final",
  "metadata": {
    "models_used": [
      "claude-4-sonnet",
      "snowflake-llama-3.3-70b"
    ],
    "preferred_model": "claude-4-sonnet",
    "quality_score": 1.0,
    "dbt_features": [
      "config",
      "variables",
      "references",
      "macros",
      "jinja_variables",
      "pre_hooks",
      "post_hooks",
      "tags",
      "tests"
    ],
    "total_time_ms": 44080,
    "comparison_notes": [
      "Selected claude-4-sonnet as preferred model",
      "claude-4-sonnet: Quality=1.000, Features=9, Time=33008ms",
      "snowflake-llama-3.3-70b: Quality=0.910, Features=9, Time=11058ms"
    ],
    "migration_notes": [
      "Organized logic using CTEs for better readability",
      "Added DBT configuration for materialization and metadata",
      "Used DBT variables for environment-specific configuration",
      "Converted from procedural BTEQ to declarative DBT model"
    ]
  },
  "warnings": [
    "Uses SELECT * - consider explicit column selection"
  ],
  "execution_time_ms": 44080
}