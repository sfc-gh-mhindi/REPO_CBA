create or replace  temporary view PRD_P01_DMN_FRAUMD.LCL.DIGT_ALRT_DETC_MICR_BTCH_EVNT_STG__dbt_tmp

  
   as (
    -- step 5: Merge Alert to NPP/Mon/Non Mon events/UV (df1+df2)


/** PERFORMANCE OPTIMIZED VERSION - 20/06/2025 **/

/** SQL LOGIC FOR BASE DATA FRAME, 
    SOURCING FROM NPP, DIGT MON, DIGT NON MON EVENTS DATA
    CONSTRUCT MISSING EVENTS FROM UV AS OF PILOT (E.G. M100/2WYES/2WNO ETC.) **/

WITH NPP_BASE_LAST_30_DAYS AS ( 
    /** FETCH LAST 30 DAYS NPP EVENTS DATA **/
    SELECT
        'LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT' AS SRC_DATA,
        CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
        DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
        CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
        SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
        TTS_TRAN_DATE_ALT,
        TTS_TRAN_TIME_ALT,
        CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
        CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
        CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
        DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
        DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
        DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
        DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
        DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
        DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
        DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
        DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
        DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
        DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
        DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
        DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
        DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
        DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
        DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
        DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
        DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
        DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
        DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
        DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
        DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
        DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
        DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
        DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
        DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
        DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
        DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
        DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
        DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
        DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
        DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
        DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
        DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
        DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
        TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
        HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
        HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
        RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
        RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
        SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
        TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
        TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
        TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
        TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
        TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
        TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
        TGX_NAME::VARCHAR AS TGX_NAME,
        TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
        NULL AS DTL_NM_SUB_TRAN_TYPE
    FROM 
        LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_TIMESTAMP() - INTERVAL '30 DAY', 'YYYYMMDDHH:MI:SS.FF2') -- Compare based on transaction date -- UPDATE
),
DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS AS (
    /** FETCH LAST 30 DAYS DIGITAL NON MON EVENTS DATA - FOR BOTH NON MON EVENTS AND UV DERIVED EVENTS (E.G. M100/2WMON ETC.)  **/
    SELECT
        'LCL.FDP_DIGT_NMON_TRAN_SBST' AS SRC_DATA, --Fix change it to LCL.FDP_DIGT_NMON_TRAN_SBST
        CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
        DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
        CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
        SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
        TTS_TRAN_DATE_ALT,
        TTS_TRAN_TIME_ALT,
        CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
        CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
        CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
        DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
        DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
        DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
        DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
        DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
        DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
        DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
        DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
        DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
        DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
        DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
        DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
        DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
        DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
        DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
        DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
        DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
        DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
        DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
        DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
        DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
        DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
        DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
        DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
        DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
        DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
        DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
        DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
        DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
        DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
        DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
        DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
        DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
        DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
        TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
        HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
        HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
        RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
        RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
        SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
        TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
        TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
        TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
        TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
        TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
        TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
        TGX_NAME::VARCHAR AS TGX_NAME,
        TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
        MID_EVENT_TS,
        DATEADD(SECOND, _A_TRAVEL_DT, '1960-01-01 00:00:00') AS _A_TRAVEL_DT,
        DATEADD(SECOND, _A_HCE_ADD_CARD_DT, '1960-01-01 00:00:00') AS _A_HCE_ADD_CARD_DT,
        DATEADD(SECOND, _A_HCE_REMOVE_CARD_DT, '1960-01-01 00:00:00') AS _A_HCE_REMOVE_CARD_DT,
        DATEADD(SECOND, _A_DIGI_WALLET_ADD_CARD_DT, '1960-01-01 00:00:00') AS _A_DIGI_WALLET_ADD_CARD_DT,
        DATEADD(SECOND, _N_CLIENT_QA_RESET, '1960-01-01 00:00:00') AS _N_CLIENT_QA_RESET,
        DATEADD(SECOND, _N_CLIENT_PASSWORD_TEMP, '1960-01-01 00:00:00') AS _N_CLIENT_PASSWORD_TEMP,
        DATEADD(SECOND, _N_CLIENT_PW_FORGOT, '1960-01-01 00:00:00') AS _N_CLIENT_PW_FORGOT,
        DATEADD(SECOND, _N_CLIENT_QA_CHG, '1960-01-01 00:00:00') AS _N_CLIENT_QA_CHG,
        DATEADD(SECOND, _A_CLIENT_PORT_DATE_1, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_1,
        DATEADD(SECOND, _A_CLIENT_PORT_DATE_2, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_2,
        DATEADD(SECOND, _A_CLIENT_PORT_DATE_3, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_3,
        DATEADD(SECOND, _A_TELSTRA_API_EVENT_DT, '1960-01-01 00:00:00') AS _A_TELSTRA_API_EVENT_DT,
        _A_TELSTRA_ACTIVE_CALL,
        _A_TELSTRA_CALL_DURATION,
        _N_5_RCNT_M100S_1,
        DATEADD(SECOND, _N_5_RCNT_M100_DTS_1, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_1,
        _N_5_RCNT_M100S_2,
        DATEADD(SECOND, _N_5_RCNT_M100_DTS_2, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_2,
        _N_5_RCNT_M100S_3,
        DATEADD(SECOND, _N_5_RCNT_M100_DTS_3, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_3,
        _N_5_RCNT_M100S_4,
        DATEADD(SECOND, _N_5_RCNT_M100_DTS_4, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_4,
        _N_5_RCNT_M100S_5,
        DATEADD(SECOND, _N_5_RCNT_M100_DTS_5, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_5,
        DATEADD(SECOND, _A_2WAY_CUST_GEN_RESP_DT, '1960-01-01 00:00:00') AS _A_2WAY_CUST_GEN_RESP_DT,
        DATEADD(SECOND, _A_2WAY_CUST_FRD_RESP_DT, '1960-01-01 00:00:00') AS _A_2WAY_CUST_FRD_RESP_DT,
        DATEADD(SECOND, _N_2WNM_CL_GEN_DT, '1960-01-01 00:00:00') AS _N_2WNM_CL_GEN_DT,
        DATEADD(SECOND, _N_2WNM_RAS_GEN_DT, '1960-01-01 00:00:00') AS _N_2WNM_RAS_GEN_DT,
        DATEADD(SECOND, _N_2WNM_CL_FRD_DT, '1960-01-01 00:00:00') AS _N_2WNM_CL_FRD_DT,
        DATEADD(SECOND, _N_2WNM_RAS_FRD_DT, '1960-01-01 00:00:00') AS _N_2WNM_RAS_FRD_DT,
        NULL AS DTL_NM_SUB_TRAN_TYPE
    FROM 
        LCL.FDP_DIGT_NMON_TRAN_SBST -- Fix change it to LCL.FDP_DIGT_NMON_TRAN_SBST
    WHERE MID_EVENT_TS >= TO_CHAR(CURRENT_TIMESTAMP() - INTERVAL '30 DAY', 'YYYYMMDDHH24MISSFF6') -- FETCH ALL EVENTS BASED ON MID_EVENT_TS (KAFAKA RECORD INSERT TS) SO TO CONSTRUCT FOR BASE + UV EVENTS -- UPDATE
),
DIGT_NONMON_BASE_LAST_30_DAYS AS (
     /** FETCH LAST 30 DAYS DIGITAL NON MON EVENTS DATA **/
    SELECT
        SRC_DATA,
        UNIQUE_EVENT_ID,
        DTL_EX_1_5S_01,
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        TTS_TRAN_DATE_ALT,
        TTS_TRAN_TIME_ALT,
        CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
        TTS_TRAN_DATETIME_ALT,
        CHL_OB_IP_ISP,
        DTL_EX_0_10S_004,
        DTL_EX_0_20S_004,
        DTL_EX_0_30S_001,
        DTL_EX_0_30S_002,
        DTL_EX_0_80S_002,
        DTL_EX_3_N_002,
        DTL_EX_0_4S_001,
        DTL_EX_0_I_002,
        DTL_EX_0_I_003,
        DTL_EX_0_I_004,
        DTL_EX_0_I_005,
        DTL_EX_0_I_006,
        DTL_EX_0_I_009,
        DTL_EX_0_N_001,
        DTL_EX_0_N_004,
        DTL_EX_0_N_006,
        DTL_EX_0_N_009,
        DTL_EX_0_N_011,
        DTL_EX_0_N_012,
        DTL_EX_0_N_013,
        DTL_EX_0_N_014,
        DTL_EX_0_N_015,
        DTL_EX_0_N_016,
        DTL_EX_0_N_017,
        DTL_EX_0_N_019,
        DTL_EX_0_N_021,
        DTL_EX_0_N_029,
        DTL_EX_0_N_034,
        DTL_EX_0_N_040,
        DTL_EX_0_N_041,
        DTL_EX_0_N_056,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066,
        DTL_EX_1_DATE_01,
        HDR_ACCT_TYPE,
        HDR_ACTIVITY_TYPE,
        RSP_ACTION_CODE,
        RSP_EX_2_30S_001,
        SSX_CUST_BIRTH_DT,
        TGX_ACCT_NUM,
        TGX_BANK_NAME,
        TGX_BANK_NUM,
        TGX_BRANCH_ID,
        TGX_CNTRY_CODE,
        TGX_DESCRIPTION,
        TGX_NAME,
        TGX_TRAN_AMT,
        DTL_NM_SUB_TRAN_TYPE
    FROM 
        DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS
    WHERE TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_DATE() - 30,'YYYYMMDD') -- Compare based on transaction date
),
DIGT_NONMON_UV_LTST_EVENTS AS (
    /** FETCH THE LATEST NON-MON EVENTS FROM LAST 30 DAYS TO DERIVE UV **/
    SELECT * FROM DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS
    QUALIFY ROW_NUMBER() OVER ( PARTITION BY CHL_ID_OB_USERID ORDER BY MID_EVENT_TS DESC ) = 1
),
DIGT_MON_BASE_LAST_30_DAYS AS (
    /** FETCH LAST 30 DAYS DIGITAL MON EVENTS DATA **/
    SELECT
        'LCL.FDP_DIGITAL_MONETARY_TRANSACTIONS_SEND_FLAT' AS SRC_DATA,
        CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
        DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
        CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
        SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
        TTS_TRAN_DATE_ALT,
        TTS_TRAN_TIME_ALT,
        CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
        CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
        CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
        DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
        DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
        DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
        DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
        DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
        DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
        DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
        DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
        DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
        DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
        DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
        DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
        DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
        DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
        DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
        DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
        DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
        DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
        DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
        DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
        DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
        DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
        DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
        DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
        DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
        DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
        DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
        DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
        DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
        DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
        DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
        DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
        DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
        DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
        TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
        HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
        HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
        RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
        RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
        SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
        TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
        TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
        TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
        TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
        TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
        TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
        TGX_NAME::VARCHAR AS TGX_NAME,
        TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
        NULL AS DTL_NM_SUB_TRAN_TYPE
    FROM 
        LCL.FDP_DIGITAL_MONETARY_TRANSACTIONS_SEND_FLAT
    WHERE TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_DATE() - 30,'YYYYMMDD') -- Compare based on transaction date UPDATE
),
TRANSFORMED_DATA_UV AS (
    /** CONSTRUCT MISSING EVENTS(E.G. M100/2WMON/CROSS CHANNELS ETC.) FROM UV IN MVP PHASE 
     ** NOTE: THERE COULD BE CHANCE THAT THE ACTUAL UV EVENT DATETIME GOT REVERTED BACK. 
     ** BUSINESS CONFIRMED THIS COULD HAPPEND AND AGREED TO DISREGARD THOSE EVENTS AS THOSE EVENTS ARE NO LONGER RELEVANT **/
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'TD01' AS DTL_EX_1_5S_01,
        _A_TRAVEL_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_TRAVEL_DT IS NOT NULL AND TO_DATE(_A_TRAVEL_DT) >= DATEADD(DAY,-30, CURRENT_DATE) -- PICK IF THE LATEST EVENT HAPPENED IN LAST 30 DAYS

    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'U944' AS DTL_EX_1_5S_01,
        _A_HCE_ADD_CARD_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_HCE_ADD_CARD_DT IS NOT NULL AND TO_DATE(_A_HCE_ADD_CARD_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'U945' AS DTL_EX_1_5S_01,
        _A_HCE_REMOVE_CARD_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_HCE_REMOVE_CARD_DT IS NOT NULL AND TO_DATE(_A_HCE_REMOVE_CARD_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'U965' AS DTL_EX_1_5S_01,
        _A_DIGI_WALLET_ADD_CARD_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_DIGI_WALLET_ADD_CARD_DT IS NOT NULL AND TO_DATE(_A_DIGI_WALLET_ADD_CARD_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '420' AS DTL_EX_1_5S_01,
        _N_CLIENT_QA_RESET AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_CLIENT_QA_RESET IS NOT NULL AND TO_DATE(_N_CLIENT_QA_RESET) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '33' AS DTL_EX_1_5S_01,
        _N_CLIENT_PASSWORD_TEMP AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_CLIENT_PASSWORD_TEMP IS NOT NULL AND TO_DATE(_N_CLIENT_PASSWORD_TEMP)  >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'F499' AS DTL_EX_1_5S_01,
        _N_CLIENT_PW_FORGOT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_CLIENT_PW_FORGOT IS NOT NULL AND TO_DATE(_N_CLIENT_PW_FORGOT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '450' AS DTL_EX_1_5S_01,
        _N_CLIENT_QA_CHG AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_CLIENT_QA_CHG IS NOT NULL AND TO_DATE(_N_CLIENT_QA_CHG) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'PORT' AS DTL_EX_1_5S_01,
        _A_CLIENT_PORT_DATE_1 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_CLIENT_PORT_DATE_1 IS NOT NULL AND TO_DATE(_A_CLIENT_PORT_DATE_1) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'PORT' AS DTL_EX_1_5S_01,
        _A_CLIENT_PORT_DATE_2 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_CLIENT_PORT_DATE_2 IS NOT NULL AND TO_DATE(_A_CLIENT_PORT_DATE_2) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'PORT' AS DTL_EX_1_5S_01,
        _A_CLIENT_PORT_DATE_3 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_CLIENT_PORT_DATE_3 IS NOT NULL AND TO_DATE(_A_CLIENT_PORT_DATE_3) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WNM' AS DTL_EX_1_5S_01,
        _N_2WNM_CL_FRD_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WNO' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_2WNM_CL_FRD_DT IS NOT NULL AND TO_DATE(_N_2WNM_CL_FRD_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WNM' AS DTL_EX_1_5S_01,
        _N_2WNM_RAS_FRD_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WNO' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_2WNM_RAS_FRD_DT IS NOT NULL AND TO_DATE(_N_2WNM_RAS_FRD_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WNM' AS DTL_EX_1_5S_01,
        _N_2WNM_CL_GEN_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WYES' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_2WNM_CL_GEN_DT IS NOT NULL AND TO_DATE(_N_2WNM_CL_GEN_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WNM' AS DTL_EX_1_5S_01,
        _N_2WNM_RAS_GEN_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WYES' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_2WNM_RAS_GEN_DT IS NOT NULL AND TO_DATE(_N_2WNM_RAS_GEN_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WMON' AS DTL_EX_1_5S_01,
        _A_2WAY_CUST_FRD_RESP_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WNO' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_2WAY_CUST_FRD_RESP_DT IS NOT NULL AND TO_DATE(_A_2WAY_CUST_FRD_RESP_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        '2WMON' AS DTL_EX_1_5S_01,
        _A_2WAY_CUST_GEN_RESP_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        '2WYES' AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_2WAY_CUST_GEN_RESP_DT IS NOT NULL AND TO_DATE(_A_2WAY_CUST_GEN_RESP_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'M100' AS DTL_EX_1_5S_01,
        _N_5_RCNT_M100_DTS_1 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        _N_5_RCNT_M100S_1 AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_5_RCNT_M100_DTS_1 IS NOT NULL AND TO_DATE(_N_5_RCNT_M100_DTS_1) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'M100' AS DTL_EX_1_5S_01,
        _N_5_RCNT_M100_DTS_2 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        _N_5_RCNT_M100S_2 AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_5_RCNT_M100_DTS_2 IS NOT NULL AND TO_DATE(_N_5_RCNT_M100_DTS_2) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'M100' AS DTL_EX_1_5S_01,
        _N_5_RCNT_M100_DTS_3 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        _N_5_RCNT_M100S_3 AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_5_RCNT_M100_DTS_3 IS NOT NULL AND TO_DATE(_N_5_RCNT_M100_DTS_3) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'M100' AS DTL_EX_1_5S_01,
        _N_5_RCNT_M100_DTS_4 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        _N_5_RCNT_M100S_4 AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_5_RCNT_M100_DTS_4 IS NOT NULL AND TO_DATE(_N_5_RCNT_M100_DTS_4) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'M100' AS DTL_EX_1_5S_01,
        _N_5_RCNT_M100_DTS_5 AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        _N_5_RCNT_M100S_5 AS DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_I_003,
        NULL AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _N_5_RCNT_M100_DTS_5 IS NOT NULL AND TO_DATE(_N_5_RCNT_M100_DTS_5) >= DATEADD(DAY,-30, CURRENT_DATE)
    UNION ALL
    SELECT
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        'T0101' AS DTL_EX_1_5S_01,
        _A_TELSTRA_API_EVENT_DT AS EVENT_DT,
        NULL AS DTL_EX_0_N_017,
        NULL AS DTL_NM_SUB_TRAN_TYPE,
        NULL AS DTL_EX_0_20S_004,
        CASE WHEN _A_TELSTRA_ACTIVE_CALL IS NOT NULL THEN '1' ELSE NULL END AS DTL_EX_0_I_003,
        CASE
            WHEN _A_TELSTRA_ACTIVE_CALL IS NOT NULL THEN
                (CASE WHEN _A_TELSTRA_ACTIVE_CALL = 'I' THEN 'INB CALL ' ELSE 'OUTB CALL ' END) ||
                (CASE WHEN _A_TELSTRA_CALL_DURATION < '60' THEN
                    CAST(_A_TELSTRA_CALL_DURATION AS VARCHAR) || ' SEC'
                ELSE
                    CAST(_A_TELSTRA_CALL_DURATION / '60' AS VARCHAR) || ' MIN'
                END)
            ELSE NULL
        END AS RSP_EX_2_30S_001,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066
    FROM DIGT_NONMON_UV_LTST_EVENTS WHERE _A_TELSTRA_API_EVENT_DT IS NOT NULL AND TO_DATE(_A_TELSTRA_API_EVENT_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
),
UV_EVENTS_BASE_LAST_30_DAYS AS (
    /** CONSTRUCT THE UV EVENTS IN SAME FORMAT AS BASE DATA FRAME **/
    SELECT
        'DERIVED_UV_FROM_LCL.FDP_DIGT_NMON_TRAN_SBST' AS SRC_DATA, --Fix: Change it to FDP_DIGT_NMON_TRAN_SBST
        CONCAT(DTL_EX_0_N_064,DTL_EX_0_N_065,DTL_EX_0_N_066) AS UNIQUE_EVENT_ID,
        DTL_EX_1_5S_01,
        CHL_ID_OB_USERID,
        SSX_CUST_NUM,
        TO_DATE(EVENT_DT)::VARCHAR AS TTS_TRAN_DATE_ALT,
        TO_TIME(EVENT_DT)::VARCHAR AS TTS_TRAN_TIME_ALT,
        CONCAT(TO_DATE(EVENT_DT)::VARCHAR,' ', TO_TIME(EVENT_DT)::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
        NULL AS CHL_OB_IP_ISP,
        NULL AS DTL_EX_0_10S_004,
        DTL_EX_0_20S_004,
        NULL AS DTL_EX_0_30S_001,
        NULL AS DTL_EX_0_30S_002,
        NULL AS DTL_EX_0_80S_002,
        NULL AS DTL_EX_3_N_002,
        NULL AS DTL_EX_0_4S_001,
        NULL AS DTL_EX_0_I_002,
        DTL_EX_0_I_003,
        NULL AS DTL_EX_0_I_004,
        NULL AS DTL_EX_0_I_005,
        NULL AS DTL_EX_0_I_006,
        NULL AS DTL_EX_0_I_009,
        NULL AS DTL_EX_0_N_001,
        NULL AS DTL_EX_0_N_004,
        NULL AS DTL_EX_0_N_006,
        NULL AS DTL_EX_0_N_009,
        NULL AS DTL_EX_0_N_011,
        NULL AS DTL_EX_0_N_012,
        NULL AS DTL_EX_0_N_013,
        NULL AS DTL_EX_0_N_014,
        NULL AS DTL_EX_0_N_015,
        NULL AS DTL_EX_0_N_016,
        DTL_EX_0_N_017,
        NULL AS DTL_EX_0_N_019,
        NULL AS DTL_EX_0_N_021,
        NULL AS DTL_EX_0_N_029,
        NULL AS DTL_EX_0_N_034,
        NULL AS DTL_EX_0_N_040,
        NULL AS DTL_EX_0_N_041,
        NULL AS DTL_EX_0_N_056,
        DTL_EX_0_N_064,
        DTL_EX_0_N_065,
        DTL_EX_0_N_066,
        NULL AS DTL_EX_1_DATE_01,
        NULL AS HDR_ACCT_TYPE,
        NULL AS HDR_ACTIVITY_TYPE,
        NULL AS RSP_ACTION_CODE,
        RSP_EX_2_30S_001,
        NULL AS SSX_CUST_BIRTH_DT,
        NULL AS TGX_ACCT_NUM,
        NULL AS TGX_BANK_NAME,
        NULL AS TGX_BANK_NUM,
        NULL AS TGX_BRANCH_ID,
        NULL AS TGX_CNTRY_CODE,
        NULL AS TGX_DESCRIPTION,
        NULL AS TGX_NAME,
        NULL AS TGX_TRAN_AMT,
        DTL_NM_SUB_TRAN_TYPE
    FROM 
        TRANSFORMED_DATA_UV
)
    /** UNION ALL EVENTS FROM SOURCES.
        RENAME COLUMNS TO BE THE NAMES USED IN PYTHON SCRIPT
     *  CONVERT ALL BLANK VALUES TO NULL FOR LATER PROCESSING
     **/
    SELECT
        AE.SRC_DATA,
        A.ALERT_ID AS DETECTED_ALERT,
        A.ALERT_TYPE,
        A.ALERT_VALUE,
        A.STRATEGY_NAME, -- THIS FIELD IS USED FOR FILTERING ON DIGITAL AND SCAMS ALERT
        A.ALERT_LAST_TRANSACTION_TIMESTAMP AS CASEACTIONDATETIME,
        A.ALERT_CREATE_TIMESTAMP AS CASECREATEDATETIME,
        A.BUSINESS_UNIT_NAME, -- THIS FIELD IS USED FOR FILTERING ON DIGITAL AND SCAMS ALERT
        A.ALERT_TYPE_NAME,
        A.RULE_NAME AS DETECTED_ALERT_STRATEGY_NAME, -- THIS FIELD IS USED IN RECOMMENDATION PROMPT FOR BLACKLIST RULE FILTERING
        NULLIF(TRIM(AE.SSX_CUST_BIRTH_DT),'') AS XQO_CUST_BIRTH_DT,
        NULLIF(TRIM(AE.TGX_ACCT_NUM),'') AS TPP_ACCT_NUM,
        NULLIF(TRIM(AE.TGX_BANK_NAME),'') AS TPP_BANK_NAME,
        NULLIF(TRIM(AE.TGX_BANK_NUM),'') AS TPP_BANK_NUM,
        NULLIF(TRIM(AE.TGX_BRANCH_ID),'') AS TPP_BRANCH_ID,
        NULLIF(TRIM(AE.TGX_CNTRY_CODE),'') AS TPP_CNTRY_CODE,
        NULLIF(TRIM(AE.TGX_DESCRIPTION),'') AS TPP_DESCRIPTION,
        NULLIF(TRIM(AE.TGX_NAME),'') AS TPP_NAME,
        NULLIF(TRIM(AE.TGX_TRAN_AMT),'') AS TPP_TRAN_AMT,
        NULLIF(TRIM(AE.UNIQUE_EVENT_ID),'') AS CMX_TRAN_ID,
        NULLIF(TRIM(AE.DTL_EX_1_5S_01),'') AS DMX_5BYTE_STRING_01,
        NULLIF(TRIM(B.TASKID_DESC),'') AS TASKID_DESCRIPTION,
        NULLIF(TRIM(AE.CHL_ID_OB_USERID),'') AS HQO_OB_USERID,
        NULLIF(TRIM(AE.SSX_CUST_NUM),'') AS XQO_CUST_NUM,
        NULLIF(TRIM(AE.TTS_TRAN_DATE_ALT),'') AS TRANSACTIONDATE,
        NULLIF(TRIM(AE.TTS_TRAN_TIME_ALT),'') AS TRANSACTIONTIME,
        NULLIF(TRIM(AE.TTS_TRAN_DATETIME_ALT),'') AS TRANSACTIONDATETIME,
        NULLIF(TRIM(AE.CHL_OB_IP_ISP),'') AS HOB_IP_ISP,
        NULLIF(TRIM(AE.DTL_EX_0_10S_004),'') AS DEVICE_FAMILY,
        NULLIF(TRIM(AE.DTL_EX_0_20S_004),'') AS RUA_20BYTE_STRING_004,
        NULLIF(TRIM(AE.DTL_EX_0_30S_001),'') AS BIOCATCH_POLICY,
        NULLIF(TRIM(AE.DTL_EX_0_30S_002),'') AS IP_CITY,
        NULLIF(TRIM(AE.DTL_EX_0_80S_002),'') AS RUA_80BYTE_NLS_STRING_002,
        NULLIF(TRIM(AE.DTL_EX_3_N_002),'') AS DTL_EX_3_N_002,
        CASE 
            WHEN AE.DTL_EX_3_N_002 = 3 THEN 'High'
            WHEN AE.DTL_EX_3_N_002 = 2 THEN 'Medium'
            WHEN AE.DTL_EX_3_N_002 = 1 THEN 'Low'
            WHEN AE.DTL_EX_3_N_002 = 0 THEN 'Not Available'
            ELSE 'Not Available' 
            END AS WISDOM_CONFIDENCE, -- Derived column from DTL_EX_3_N_002. Will be used in Recommendation Prompt
        NULLIF(TRIM(AE.DTL_EX_0_4S_001),'') AS RUA_4BYTE_STRING_001,
        NULLIF(TRIM(AE.DTL_EX_0_I_002),'') AS RUA_IND_002,
        NULLIF(TRIM(AE.DTL_EX_0_I_003),'') AS RUA_IND_003,
        NULLIF(TRIM(AE.DTL_EX_0_I_004),'') AS IS_MLW,
        NULLIF(TRIM(AE.DTL_EX_0_I_005),'') AS IS_RAT,
        NULLIF(TRIM(AE.DTL_EX_0_I_006),'') AS RUA_IND_006,
        NULLIF(TRIM(AE.DTL_EX_0_I_009),'') AS IS_MOB_RAT,
        NULLIF(TRIM(AE.DTL_EX_0_I_009),'') AS RUA_IND_009, -- SAME FIELD IS USED FOR DATA FROM DIFFERENT SOURCE SYSTEM (RUA_4BYTE_STRING_001)
        NULLIF(TRIM(AE.DTL_EX_0_N_004),'') AS MAX_30D_SCORE,
        NULLIF(TRIM(AE.DTL_EX_0_N_001),'') AS BC_SCORE, -- FIX FOR CORRECT BIOCATCH SCORE
        NULLIF(TRIM(AE.DTL_EX_0_N_009),'') AS CUSTOMER_AGE,
        NULLIF(TRIM(AE.DTL_EX_0_N_011),'') AS VOICE_SCAM,
        NULLIF(TRIM(AE.DTL_EX_0_N_012),'') AS DTL_EX_0_N_012,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_012,12,1)),'') AS IS_SOC_ENG_RAT, -- These numeric fields start with Placeholder_0 & is set to 9 by default (Sample:90101000100100). Hence, if it's Placeholder_1 -> Means the 2nd digit from the string
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_012,15,1)),'') AS IS_ACTIVE_CALL,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_012,5,1)),'') AS CONCURRENT_SESS,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_013,2,1)),'') AS RAT_IN_SESS,
        NULLIF(TRIM(AE.DTL_EX_0_N_013),'') AS DTL_EX_0_N_013,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_013,11,1)),'') AS NEW_DEV,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_013,12,1)),'') AS NEW_DEV_CON_IP,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_013,3,1)),'') AS NEW_USER,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_013,10,1)),'') AS DEV_CHANGE_ANOM,
        NULLIF(TRIM(AE.DTL_EX_0_N_014),'') AS DTL_EX_0_N_014,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,2,1)),'') AS RCNT_PROF_SETTINGS_CH,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,11,1)),'') AS TZONE_MISMATCH,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,12,1)),'') AS FAST_TRAVELER,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,15,1)),'') AS NEW_IP,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,9,1)),'') AS RISKY_IP,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_014,10,1)),'') AS RISKY_ISP,
        NULLIF(TRIM(AE.DTL_EX_0_N_015),'') AS DTL_EX_0_N_015,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,11,1)),'') AS NEW_MOB_APP_USER,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,12,1)),'') AS NEW_DESKTOP_USER,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,13,1)),'') AS NEW_MOB_BROWSER_USER,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,14,1)),'') AS FT_RAT_APP_INST,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,7,1)),'') AS IS_LONG_SESS,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_015,8,1)),'') AS OS_CH_ANOMALY,
        NULLIF(TRIM(AE.DTL_EX_0_N_016),'') AS DTL_EX_0_N_016,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_016,13,1)),'') AS RARE_SCRN_SZ,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_016,14,1)),'') AS LRG_DIST_KNOWN_LOC,
        NULLIF(TRIM(AE.DTL_EX_0_N_017),'') AS DTL_EX_0_N_017,
        NULLIF(TRIM(AE.DTL_NM_SUB_TRAN_TYPE),'') AS TNG_SUB_TRAN_TYPE, -- 2WYES AND 2WNO EVENTS ARE POPULATED INTO THIS FIELD FROM UV. SUBSEQUENT PYTHON FUNCTIONS WILL REFERENCE AS TNG_SUB_TRAN_TYPE
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_017,4,1)),'') AS ACCM_AMT_ANOM,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_017,7,1)),'') AS PMT_VLOC_ANOM,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_017,10,1)),'') AS SCREEN_BROADCAST,
        NULLIF(TRIM(AE.DTL_EX_0_N_019),'') AS DTL_EX_0_N_019,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_019,2,1)),'') AS G_CON_IP,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_019,6,1)),'') AS G_CON_DEV,
        NULLIF(TRIM(AE.DTL_EX_0_N_021),'') AS DTL_EX_0_N_021,
        NULLIF(TRIM(AE.DTL_EX_0_N_021),'') AS WISDOMFIRSTDATE,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,2,1)),'') AS CBALOWAPPCOUNT,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,3,1)),'') AS CBAVERYLOWAPPCOUNT,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,4,1)),'') AS CBALAZYRATNEWDEVICE,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,5,1)),'') AS CBALAZYRATEXISTINGDEVICE,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,6,1)),'') AS CBAIPWHITELIST,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,7,1)),'') AS CBAZEROTOUCHCOUNT,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,8,1)),'') AS CBAZEROTOUCHAREA,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_021,9,1)),'') AS CBAFLATPHONE,
        NULLIF(TRIM(AE.DTL_EX_0_N_029),'') AS RUA_NUMERIC_029,
        NULLIF(TRIM(AE.DTL_EX_0_N_034),'') AS RUA_NUMERIC_034,
        NULLIF(TRIM(AE.DTL_EX_0_N_040),'') AS DTL_EX_0_N_040,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_040,2,3)),'') AS ISP_AGE, -- 3 digits ranged from 0 to 999. Represent the number of days this ISP is seen
        NULLIF(TRIM(AE.DTL_EX_0_N_041),'') AS DTL_EX_0_N_041,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_041,2,3)),'') AS UID_AGE, -- 3 digits ranged from 0 to 999. Represent the number of days this userid is seen
        NULLIF(TRIM(AE.DTL_EX_0_N_056),'') AS DTL_EX_0_N_056,
        NULLIF(TRIM(SUBSTR(AE.DTL_EX_0_N_056,5,3)),'') AS USER_MUID_AGE, -- 3 digits ranged from 0 to 999. Represent the number of days this user device id is seen
        NULLIF(TRIM(AE.DTL_EX_0_N_064),'') AS DTL_EX_0_N_064,
        NULLIF(TRIM(AE.DTL_EX_0_N_065),'') AS DTL_EX_0_N_065,
        NULLIF(TRIM(AE.DTL_EX_0_N_066),'') AS DTL_EX_0_N_066,
        NULLIF(TRIM(AE.DTL_EX_1_DATE_01),'') AS DMX_DATE_01,
        NULLIF(TRIM(AE.HDR_ACCT_TYPE),'') AS SMH_ACCT_TYPE,
        NULLIF(TRIM(AE.HDR_ACTIVITY_TYPE),'') AS SMH_ACTIVITY_TYPE,
        NULLIF(TRIM(AE.RSP_ACTION_CODE),'') AS RRR_ACTION_CODE,
        NULLIF(TRIM(AE.RSP_EX_2_30S_001),'') AS RUR_30BYTE_STRING_001
     FROM (
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM NPP_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM DIGT_NONMON_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM DIGT_MON_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * FROM UV_EVENTS_BASE_LAST_30_DAYS
    ) AE 
    INNER JOIN LCL.DIGT_ALRT_DETC_MICR_BTCH_RAW_DEDUP_STG A -- Pick from dedup alert table
        ON A.NETBANK_ID = AE.CHL_ID_OB_USERID OR A.CUSTOMER_ID = AE.SSX_CUST_NUM -- JOIN BASE EVENTS WITH ALERTS ON NETBANK_ID OR CUSTOMER_ID
    LEFT JOIN LCL.FDP_TASK_DESC_REF B -- LEFT JOIN ON REFERENCE TABLE TO GET TASK_ID_DESCRIPTION
        ON AE.DTL_EX_1_5S_01 = B.DTL_EX_1_5S_01 AND current_date between b.EFFT_D and b.EXPY_D
  );