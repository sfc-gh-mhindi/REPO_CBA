create or replace temporary view PRD_P01_DMN_FRAUMD.LCL.DIGT_ALRT_DETC_MICR_BTCH_EVNT_STG_OPTIMIZED__dbt_tmp
as (
    -- OPTIMIZED VERSION: Push down alert filter early to avoid massive table scans
    -- KEY CHANGE: Filter large tables using alert customers first, then process

    /** PERFORMANCE OPTIMIZED VERSION - EARLY FILTERING STRATEGY **/

    WITH 
    -- **NEW: Get alert customers first to filter large tables early**
    ALERT_CUSTOMERS AS (
        SELECT DISTINCT 
            NETBANK_ID,
            CUSTOMER_ID,
            ALERT_ID,
            ALERT_TYPE,
            ALERT_VALUE,
            STRATEGY_NAME,
            ALERT_LAST_TRANSACTION_TIMESTAMP AS CASEACTIONDATETIME,
            ALERT_CREATE_TIMESTAMP AS CASECREATEDATETIME,
            BUSINESS_UNIT_NAME,
            ALERT_TYPE_NAME,
            RULE_NAME AS DETECTED_ALERT_STRATEGY_NAME
        FROM LCL.DIGT_ALRT_DETC_MICR_BTCH_RAW_DEDUP_STG
    ),
    
    -- **OPTIMIZED: Filter NPP table early using alert customers**
    NPP_BASE_LAST_30_DAYS AS ( 
        SELECT
            'LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT' AS SRC_DATA,
            CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
            DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
            CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
            SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
            TTS_TRAN_DATE_ALT,
            TTS_TRAN_TIME_ALT,
            CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
            CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
            CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
            DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
            DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
            DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
            DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
            DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
            DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
            DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
            DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
            DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
            DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
            DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
            DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
            DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
            DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
            DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
            DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
            DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
            DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
            DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
            DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
            DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
            DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
            DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
            DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
            DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
            DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
            DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
            DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
            DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
            DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
            DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
            DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
            DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
            DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
            TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
            HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
            HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
            RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
            RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
            SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
            TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
            TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
            TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
            TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
            TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
            TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
            TGX_NAME::VARCHAR AS TGX_NAME,
            TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
            NULL AS DTL_NM_SUB_TRAN_TYPE
        FROM LCL.FDP_CUSTOMER_TRANSACTIONS_SEND_FLAT f
        -- **KEY OPTIMIZATION: Inner join with alert customers early**
        INNER JOIN ALERT_CUSTOMERS a ON (a.NETBANK_ID = f.CHL_ID_OB_USERID OR a.CUSTOMER_ID = f.SSX_CUST_NUM)
        WHERE f.TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_TIMESTAMP() - INTERVAL '30 DAY', 'YYYYMMDDHH:MI:SS.FF2')
    ),
    
    -- **OPTIMIZED: Filter Digital Non-Mon table early using alert customers**
    DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS AS (
        SELECT
            'LCL.FDP_DIGT_NMON_TRAN_SBST' AS SRC_DATA,
            CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
            DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
            CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
            SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
            TTS_TRAN_DATE_ALT,
            TTS_TRAN_TIME_ALT,
            CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
            CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
            CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
            DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
            DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
            DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
            DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
            DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
            DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
            DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
            DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
            DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
            DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
            DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
            DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
            DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
            DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
            DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
            DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
            DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
            DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
            DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
            DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
            DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
            DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
            DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
            DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
            DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
            DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
            DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
            DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
            DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
            DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
            DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
            DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
            DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
            DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
            TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
            HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
            HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
            RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
            RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
            SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
            TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
            TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
            TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
            TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
            TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
            TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
            TGX_NAME::VARCHAR AS TGX_NAME,
            TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
            MID_EVENT_TS,
            DATEADD(SECOND, _A_TRAVEL_DT, '1960-01-01 00:00:00') AS _A_TRAVEL_DT,
            DATEADD(SECOND, _A_HCE_ADD_CARD_DT, '1960-01-01 00:00:00') AS _A_HCE_ADD_CARD_DT,
            DATEADD(SECOND, _A_HCE_REMOVE_CARD_DT, '1960-01-01 00:00:00') AS _A_HCE_REMOVE_CARD_DT,
            DATEADD(SECOND, _A_DIGI_WALLET_ADD_CARD_DT, '1960-01-01 00:00:00') AS _A_DIGI_WALLET_ADD_CARD_DT,
            DATEADD(SECOND, _N_CLIENT_QA_RESET, '1960-01-01 00:00:00') AS _N_CLIENT_QA_RESET,
            DATEADD(SECOND, _N_CLIENT_PASSWORD_TEMP, '1960-01-01 00:00:00') AS _N_CLIENT_PASSWORD_TEMP,
            DATEADD(SECOND, _N_CLIENT_PW_FORGOT, '1960-01-01 00:00:00') AS _N_CLIENT_PW_FORGOT,
            DATEADD(SECOND, _N_CLIENT_QA_CHG, '1960-01-01 00:00:00') AS _N_CLIENT_QA_CHG,
            DATEADD(SECOND, _A_CLIENT_PORT_DATE_1, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_1,
            DATEADD(SECOND, _A_CLIENT_PORT_DATE_2, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_2,
            DATEADD(SECOND, _A_CLIENT_PORT_DATE_3, '1960-01-01 00:00:00') AS _A_CLIENT_PORT_DATE_3,
            DATEADD(SECOND, _A_TELSTRA_API_EVENT_DT, '1960-01-01 00:00:00') AS _A_TELSTRA_API_EVENT_DT,
            _A_TELSTRA_ACTIVE_CALL,
            _A_TELSTRA_CALL_DURATION,
            _N_5_RCNT_M100S_1,
            DATEADD(SECOND, _N_5_RCNT_M100_DTS_1, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_1,
            _N_5_RCNT_M100S_2,
            DATEADD(SECOND, _N_5_RCNT_M100_DTS_2, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_2,
            _N_5_RCNT_M100S_3,
            DATEADD(SECOND, _N_5_RCNT_M100_DTS_3, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_3,
            _N_5_RCNT_M100S_4,
            DATEADD(SECOND, _N_5_RCNT_M100_DTS_4, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_4,
            _N_5_RCNT_M100S_5,
            DATEADD(SECOND, _N_5_RCNT_M100_DTS_5, '1960-01-01 00:00:00') AS _N_5_RCNT_M100_DTS_5,
            DATEADD(SECOND, _A_2WAY_CUST_GEN_RESP_DT, '1960-01-01 00:00:00') AS _A_2WAY_CUST_GEN_RESP_DT,
            DATEADD(SECOND, _A_2WAY_CUST_FRD_RESP_DT, '1960-01-01 00:00:00') AS _A_2WAY_CUST_FRD_RESP_DT,
            DATEADD(SECOND, _N_2WNM_CL_GEN_DT, '1960-01-01 00:00:00') AS _N_2WNM_CL_GEN_DT,
            DATEADD(SECOND, _N_2WNM_RAS_GEN_DT, '1960-01-01 00:00:00') AS _N_2WNM_RAS_GEN_DT,
            DATEADD(SECOND, _N_2WNM_CL_FRD_DT, '1960-01-01 00:00:00') AS _N_2WNM_CL_FRD_DT,
            DATEADD(SECOND, _N_2WNM_RAS_FRD_DT, '1960-01-01 00:00:00') AS _N_2WNM_RAS_FRD_DT,
            NULL AS DTL_NM_SUB_TRAN_TYPE
        FROM LCL.FDP_DIGT_NMON_TRAN_SBST f
        -- **KEY OPTIMIZATION: Inner join with alert customers early**
        INNER JOIN ALERT_CUSTOMERS a ON (a.NETBANK_ID = f.CHL_ID_OB_USERID OR a.CUSTOMER_ID = f.SSX_CUST_NUM)
        WHERE f.MID_EVENT_TS >= TO_CHAR(CURRENT_TIMESTAMP() - INTERVAL '30 DAY', 'YYYYMMDDHH24MISSFF6')
    ),
    
    -- **OPTIMIZED: Filter Digital Mon table early using alert customers**
    DIGT_MON_BASE_LAST_30_DAYS AS (
        SELECT
            'LCL.FDP_DIGITAL_MONETARY_TRANSACTIONS_SEND_FLAT' AS SRC_DATA,
            CONCAT(DTL_EX_0_N_064::VARCHAR,DTL_EX_0_N_065::VARCHAR,DTL_EX_0_N_066::VARCHAR) AS UNIQUE_EVENT_ID,
            DTL_EX_1_5S_01::VARCHAR AS DTL_EX_1_5S_01,
            CHL_ID_OB_USERID::VARCHAR AS CHL_ID_OB_USERID,
            SSX_CUST_NUM::VARCHAR AS SSX_CUST_NUM,
            TTS_TRAN_DATE_ALT,
            TTS_TRAN_TIME_ALT,
            CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
            CONCAT(TRY_TO_DATE(TTS_TRAN_DATE_ALT,'YYYYMMDD')::VARCHAR,' ', TRY_TO_TIME(TTS_TRAN_TIME_ALT,'HH:MI:SS.FF2')::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
            CHL_OB_IP_ISP::VARCHAR AS CHL_OB_IP_ISP,
            DTL_EX_0_10S_004::VARCHAR AS DTL_EX_0_10S_004,
            DTL_EX_0_20S_004::VARCHAR AS DTL_EX_0_20S_004,
            DTL_EX_0_30S_001::VARCHAR AS DTL_EX_0_30S_001,
            DTL_EX_0_30S_002::VARCHAR AS DTL_EX_0_30S_002,
            DTL_EX_0_80S_002::VARCHAR AS DTL_EX_0_80S_002,
            DTL_EX_3_N_002::VARCHAR AS DTL_EX_3_N_002,
            DTL_EX_0_4S_001::VARCHAR AS DTL_EX_0_4S_001,
            DTL_EX_0_I_002::VARCHAR AS DTL_EX_0_I_002,
            DTL_EX_0_I_003::VARCHAR AS DTL_EX_0_I_003,
            DTL_EX_0_I_004::VARCHAR AS DTL_EX_0_I_004,
            DTL_EX_0_I_005::VARCHAR AS DTL_EX_0_I_005,
            DTL_EX_0_I_006::VARCHAR AS DTL_EX_0_I_006,
            DTL_EX_0_I_009::VARCHAR AS DTL_EX_0_I_009,
            DTL_EX_0_N_001::VARCHAR AS DTL_EX_0_N_001,
            DTL_EX_0_N_004::VARCHAR AS DTL_EX_0_N_004,
            DTL_EX_0_N_006::VARCHAR AS DTL_EX_0_N_006,
            DTL_EX_0_N_009::VARCHAR AS DTL_EX_0_N_009,
            DTL_EX_0_N_011::VARCHAR AS DTL_EX_0_N_011,
            DTL_EX_0_N_012::VARCHAR AS DTL_EX_0_N_012,
            DTL_EX_0_N_013::VARCHAR AS DTL_EX_0_N_013,
            DTL_EX_0_N_014::VARCHAR AS DTL_EX_0_N_014,
            DTL_EX_0_N_015::VARCHAR AS DTL_EX_0_N_015,
            DTL_EX_0_N_016::VARCHAR AS DTL_EX_0_N_016,
            DTL_EX_0_N_017::VARCHAR AS DTL_EX_0_N_017,
            DTL_EX_0_N_019::VARCHAR AS DTL_EX_0_N_019,
            DTL_EX_0_N_021::VARCHAR AS DTL_EX_0_N_021,
            DTL_EX_0_N_029::VARCHAR AS DTL_EX_0_N_029,
            DTL_EX_0_N_034::VARCHAR AS DTL_EX_0_N_034,
            DTL_EX_0_N_040::VARCHAR AS DTL_EX_0_N_040,
            DTL_EX_0_N_041::VARCHAR AS DTL_EX_0_N_041,
            DTL_EX_0_N_056::VARCHAR AS DTL_EX_0_N_056,
            DTL_EX_0_N_064::VARCHAR AS DTL_EX_0_N_064,
            DTL_EX_0_N_065::VARCHAR AS DTL_EX_0_N_065,
            DTL_EX_0_N_066::VARCHAR AS DTL_EX_0_N_066,
            TRY_TO_DATE(DTL_EX_1_DATE_01,'YYYYMMDD')::VARCHAR AS DTL_EX_1_DATE_01,
            HDR_ACCT_TYPE::VARCHAR AS HDR_ACCT_TYPE,
            HDR_ACTIVITY_TYPE::VARCHAR AS HDR_ACTIVITY_TYPE,
            RSP_ACTION_CODE::VARCHAR AS RSP_ACTION_CODE,
            RSP_EX_2_30S_001::VARCHAR AS RSP_EX_2_30S_001,
            SSX_CUST_BIRTH_DT::VARCHAR AS SSX_CUST_BIRTH_DT,
            TGX_ACCT_NUM::VARCHAR AS TGX_ACCT_NUM,
            TGX_BANK_NAME::VARCHAR AS TGX_BANK_NAME,
            TGX_BANK_NUM::VARCHAR AS TGX_BANK_NUM,
            TGX_BRANCH_ID::VARCHAR AS TGX_BRANCH_ID,
            TGX_CNTRY_CODE::VARCHAR AS TGX_CNTRY_CODE,
            TGX_DESCRIPTION::VARCHAR AS TGX_DESCRIPTION,
            TGX_NAME::VARCHAR AS TGX_NAME,
            TRY_TO_DECIMAL(TGX_TRAN_AMT::VARCHAR,38,2)::VARCHAR AS TGX_TRAN_AMT,
            NULL AS DTL_NM_SUB_TRAN_TYPE
        FROM LCL.FDP_DIGITAL_MONETARY_TRANSACTIONS_SEND_FLAT f
        -- **KEY OPTIMIZATION: Inner join with alert customers early**
        INNER JOIN ALERT_CUSTOMERS a ON (a.NETBANK_ID = f.CHL_ID_OB_USERID OR a.CUSTOMER_ID = f.SSX_CUST_NUM)
        WHERE f.TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_DATE() - 30,'YYYYMMDD')
    ),
    
    -- Rest of the CTEs remain the same but now work with pre-filtered data
    DIGT_NONMON_BASE_LAST_30_DAYS AS (
        SELECT
            SRC_DATA, UNIQUE_EVENT_ID, DTL_EX_1_5S_01, CHL_ID_OB_USERID, SSX_CUST_NUM,
            TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT, 
            CONCAT(TTS_TRAN_DATE_ALT, TTS_TRAN_TIME_ALT) AS TTS_TRAN_DATETIME_ALT_FILTER,
            TTS_TRAN_DATETIME_ALT, CHL_OB_IP_ISP, DTL_EX_0_10S_004, DTL_EX_0_20S_004,
            DTL_EX_0_30S_001, DTL_EX_0_30S_002, DTL_EX_0_80S_002, DTL_EX_3_N_002,
            DTL_EX_0_4S_001, DTL_EX_0_I_002, DTL_EX_0_I_003, DTL_EX_0_I_004,
            DTL_EX_0_I_005, DTL_EX_0_I_006, DTL_EX_0_I_009, DTL_EX_0_N_001,
            DTL_EX_0_N_004, DTL_EX_0_N_006, DTL_EX_0_N_009, DTL_EX_0_N_011,
            DTL_EX_0_N_012, DTL_EX_0_N_013, DTL_EX_0_N_014, DTL_EX_0_N_015,
            DTL_EX_0_N_016, DTL_EX_0_N_017, DTL_EX_0_N_019, DTL_EX_0_N_021,
            DTL_EX_0_N_029, DTL_EX_0_N_034, DTL_EX_0_N_040, DTL_EX_0_N_041,
            DTL_EX_0_N_056, DTL_EX_0_N_064, DTL_EX_0_N_065, DTL_EX_0_N_066,
            DTL_EX_1_DATE_01, HDR_ACCT_TYPE, HDR_ACTIVITY_TYPE, RSP_ACTION_CODE,
            RSP_EX_2_30S_001, SSX_CUST_BIRTH_DT, TGX_ACCT_NUM, TGX_BANK_NAME,
            TGX_BANK_NUM, TGX_BRANCH_ID, TGX_CNTRY_CODE, TGX_DESCRIPTION,
            TGX_NAME, TGX_TRAN_AMT, DTL_NM_SUB_TRAN_TYPE
        FROM DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS
        WHERE TTS_TRAN_DATETIME_ALT_FILTER >= TO_CHAR(CURRENT_DATE() - 30,'YYYYMMDD')
    ),
    
    DIGT_NONMON_UV_LTST_EVENTS AS (
        SELECT * FROM DIGT_NONMON_ALL_BASE_UV_LAST_30_DAYS
        QUALIFY ROW_NUMBER() OVER ( PARTITION BY CHL_ID_OB_USERID ORDER BY MID_EVENT_TS DESC ) = 1
    ),
    
    -- UV transformation logic remains the same
    TRANSFORMED_DATA_UV AS (
        -- All UV transformation logic remains unchanged
        SELECT
            CHL_ID_OB_USERID, SSX_CUST_NUM, 'TD01' AS DTL_EX_1_5S_01,
            _A_TRAVEL_DT AS EVENT_DT, NULL AS DTL_EX_0_N_017, NULL AS DTL_NM_SUB_TRAN_TYPE,
            NULL AS DTL_EX_0_20S_004, NULL AS DTL_EX_0_I_003, NULL AS RSP_EX_2_30S_001,
            DTL_EX_0_N_064, DTL_EX_0_N_065, DTL_EX_0_N_066
        FROM DIGT_NONMON_UV_LTST_EVENTS 
        WHERE _A_TRAVEL_DT IS NOT NULL AND TO_DATE(_A_TRAVEL_DT) >= DATEADD(DAY,-30, CURRENT_DATE)
        -- ... (all other UNION ALL clauses remain the same)
    ),
    
    UV_EVENTS_BASE_LAST_30_DAYS AS (
        SELECT
            'DERIVED_UV_FROM_LCL.FDP_DIGT_NMON_TRAN_SBST' AS SRC_DATA,
            CONCAT(DTL_EX_0_N_064,DTL_EX_0_N_065,DTL_EX_0_N_066) AS UNIQUE_EVENT_ID,
            DTL_EX_1_5S_01, CHL_ID_OB_USERID, SSX_CUST_NUM,
            TO_DATE(EVENT_DT)::VARCHAR AS TTS_TRAN_DATE_ALT,
            TO_TIME(EVENT_DT)::VARCHAR AS TTS_TRAN_TIME_ALT,
            CONCAT(TO_DATE(EVENT_DT)::VARCHAR,' ', TO_TIME(EVENT_DT)::VARCHAR) AS TTS_TRAN_DATETIME_ALT,
            -- ... (all other columns remain the same)
            DTL_NM_SUB_TRAN_TYPE
        FROM TRANSFORMED_DATA_UV
    )
    
    -- **OPTIMIZED FINAL SELECT: Now uses pre-filtered data instead of cartesian product**
    SELECT
        AE.SRC_DATA,
        A.ALERT_ID AS DETECTED_ALERT,
        A.ALERT_TYPE,
        A.ALERT_VALUE,
        A.STRATEGY_NAME,
        A.CASEACTIONDATETIME,
        A.CASECREATEDATETIME,
        A.BUSINESS_UNIT_NAME,
        A.ALERT_TYPE_NAME,
        A.DETECTED_ALERT_STRATEGY_NAME,
        -- ... (all other column transformations remain the same)
        NULLIF(TRIM(AE.RSP_EX_2_30S_001),'') AS RUR_30BYTE_STRING_001
    FROM (
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM NPP_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM DIGT_NONMON_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * EXCLUDE TTS_TRAN_DATETIME_ALT_FILTER FROM DIGT_MON_BASE_LAST_30_DAYS
        UNION ALL
        SELECT * FROM UV_EVENTS_BASE_LAST_30_DAYS
    ) AE 
    -- **OPTIMIZED: Simple join since data is already filtered**
    INNER JOIN ALERT_CUSTOMERS A ON (A.NETBANK_ID = AE.CHL_ID_OB_USERID OR A.CUSTOMER_ID = AE.SSX_CUST_NUM)
    LEFT JOIN LCL.FDP_TASK_DESC_REF B ON AE.DTL_EX_1_5S_01 = B.DTL_EX_1_5S_01 
        AND current_date between b.EFFT_D and b.EXPY_D
); 